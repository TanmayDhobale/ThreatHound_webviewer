[
  {
    "title": "Mimikatz Use",
    "id": 1,
    "status": "test",
    "description": "This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)",
    "references": [
      "https://tools.thehacker.recipes/mimikatz/modules"
    ],
    "author": "Florian Roth (Nextron Systems), David ANDRE (additional keywords)",
    "date": "2017/01/10",
    "modified": "2022/01/05",
    "tags": [
      "attack.s0002",
      "attack.lateral_movement",
      "attack.credential_access",
      "car.2013-07-001",
      "car.2019-04-004",
      "attack.t1003.002",
      "attack.t1003.004",
      "attack.t1003.001",
      "attack.t1003.006"
    ],
    "logsource": {
      "product": "windows"
    },
    "detection": {
      "keywords": [
        "dpapi::masterkey",
        "eo.oe.kiwi",
        "event::clear",
        "event::drop",
        "gentilkiwi.com",
        "kerberos::golden",
        "kerberos::ptc",
        "kerberos::ptt",
        "kerberos::tgt",
        "Kiwi Legit Printer",
        "lsadump::",
        "mimidrv.sys",
        "\\mimilib.dll",
        "misc::printnightmare",
        "misc::shadowcopies",
        "misc::skeleton",
        "privilege::backup",
        "privilege::debug",
        "privilege::driver",
        "sekurlsa::"
      ],
      "filter": {
        "EventID": 15
      },
      "condition": "keywords and not filter"
    },
    "falsepositives": [
      "Naughty administrators",
      "AV Signature updates",
      "Files with Mimikatz in their filename"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CACTUSTORCH Remote Thread Creation",
    "id": 2,
    "status": "test",
    "description": "Detects remote thread creation from CACTUSTORCH as described in references.",
    "references": [
      "https://twitter.com/SBousseaden/status/1090588499517079552",
      "https://github.com/mdsecactivebreach/CACTUSTORCH"
    ],
    "author": "@SBousseaden (detection), Thomas Patzke (rule)",
    "date": "2019/02/01",
    "modified": "2023/05/05",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1055.012",
      "attack.t1059.005",
      "attack.t1059.007",
      "attack.t1218.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": [
          "\\System32\\cscript.exe",
          "\\System32\\wscript.exe",
          "\\System32\\mshta.exe",
          "\\winword.exe",
          "\\excel.exe"
        ],
        "TargetImage|contains": "\\SysWOW64\\",
        "StartModule": null
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Potential CobaltStrike Process Injection",
    "id": 3,
    "status": "test",
    "description": "Detects a potential remote threat creation with certain characteristics which are typical for Cobalt Strike beacons",
    "references": [
      "https://medium.com/@olafhartong/cobalt-strike-remote-threads-detection-206372d11d0f",
      "https://blog.cobaltstrike.com/2018/04/09/cobalt-strike-3-11-the-snake-that-eats-its-tail/"
    ],
    "author": "Olaf Hartong, Florian Roth (Nextron Systems), Aleksey Potapov, oscd.community",
    "date": "2018/11/30",
    "modified": "2023/05/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "StartAddress|endswith": [
          "0B80",
          "0C7C",
          "0C88"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Thread Created In KeePass.EXE",
    "id": 4,
    "status": "experimental",
    "description": "Detects remote thread creation in \"KeePass.exe\" which could indicates potential password dumping activity",
    "references": [
      "https://www.cisa.gov/uscert/ncas/alerts/aa20-259a",
      "https://github.com/denandz/KeeFarce",
      "https://github.com/GhostPack/KeeThief"
    ],
    "author": "Timon Hackenjos",
    "date": "2022/04/22",
    "modified": "2023/05/05",
    "tags": [
      "attack.credential_access",
      "attack.t1555.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\KeePass.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Thread Creation In Mstsc.Exe From Suspicious Location",
    "id": 5,
    "status": "experimental",
    "description": "Detects remote thread creation in the \"mstsc.exe\" process by a process located in a potentially suspicious location.\nThis technique is often used by attackers in order to hook some APIs used by DLLs loaded by \"mstsc.exe\" during RDP authentications in order to steal credentials.\n",
    "references": [
      "https://github.com/S12cybersecurity/RDPCredentialStealer/blob/1b8947cdd065a06c1b62e80967d3c7af895fcfed/APIHookInjectorBin/APIHookInjectorBin/Inject.h#L25"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/28",
    "modified": "2024/01/22",
    "tags": [
      "attack.credential_access"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\mstsc.exe",
        "SourceImage|contains": [
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\PerfLogs\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Attempt Via PowerShell Remote Thread",
    "id": 6,
    "related": [
      {
        "id": "3f07b9d1-2082-4c56-9277-613a621983cc",
        "type": "obsoletes"
      },
      {
        "id": "0f920ebe-7aea-4c54-b202-9aa0c609cfe5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects remote thread creation by PowerShell processes into \"lsass.exe\"",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
    ],
    "author": "oscd.community, Natalia Shornikova",
    "date": "2020/10/06",
    "modified": "2022/12/18",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetImage|endswith": "\\lsass.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Thread Creation Via PowerShell In Uncommon Target",
    "id": 7,
    "related": [
      {
        "id": "eeb2e3dc-c1f4-40dd-9bd5-149ee465ad50",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of a remote thread from a Powershell process in an uncommon target process",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2018/06/bring-your-own-land-novel-red-teaming-technique.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/06/25",
    "modified": "2023/11/10",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218.011",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetImage|endswith": [
          "\\rundll32.exe",
          "\\regsvr32.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Password Dumper Remote Thread in LSASS",
    "id": 8,
    "status": "stable",
    "description": "Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage.\nThe process in field Process is the malicious program. A single execution can lead to hundreds of events.\n",
    "references": [
      "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/WCE.htm"
    ],
    "author": "Thomas Patzke",
    "date": "2017/02/19",
    "modified": "2021/06/21",
    "tags": [
      "attack.credential_access",
      "attack.s0005",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "StartModule": ""
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Antivirus products"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Rare Remote Thread Creation By Uncommon Source Image",
    "id": 9,
    "related": [
      {
        "id": "66d31e5f-52d6-40a4-9615-002d3789a119",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects uncommon processes creating remote threads.",
    "references": [
      "Personal research, statistical analysis",
      "https://lolbas-project.github.io"
    ],
    "author": "Perez Diego (@darkquassar), oscd.community",
    "date": "2019/10/27",
    "modified": "2024/01/17",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": [
          "\\bash.exe",
          "\\cscript.exe",
          "\\cvtres.exe",
          "\\defrag.exe",
          "\\dnx.exe",
          "\\esentutl.exe",
          "\\excel.exe",
          "\\expand.exe",
          "\\find.exe",
          "\\findstr.exe",
          "\\forfiles.exe",
          "\\gpupdate.exe",
          "\\hh.exe",
          "\\installutil.exe",
          "\\lync.exe",
          "\\makecab.exe",
          "\\mDNSResponder.exe",
          "\\monitoringhost.exe",
          "\\msbuild.exe",
          "\\mshta.exe",
          "\\mspaint.exe",
          "\\outlook.exe",
          "\\ping.exe",
          "\\provtool.exe",
          "\\python.exe",
          "\\regsvr32.exe",
          "\\robocopy.exe",
          "\\runonce.exe",
          "\\sapcimc.exe",
          "\\smartscreen.exe",
          "\\spoolsv.exe",
          "\\tstheme.exe",
          "\\userinit.exe",
          "\\vssadmin.exe",
          "\\vssvc.exe",
          "\\w3wp.exe",
          "\\winscp.exe",
          "\\winword.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "This rule is best put in testing first in order to create a baseline that reflects the data in your environment."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Thread Creation By Uncommon Source Image",
    "id": 10,
    "related": [
      {
        "id": "02d1d718-dd13-41af-989d-ea85c7fab93f",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects uncommon processes creating remote threads.",
    "references": [
      "Personal research, statistical analysis",
      "https://lolbas-project.github.io"
    ],
    "author": "Perez Diego (@darkquassar), oscd.community",
    "date": "2019/10/27",
    "modified": "2024/01/17",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": [
          "\\explorer.exe",
          "\\iexplore.exe",
          "\\msiexec.exe",
          "\\powerpnt.exe",
          "\\schtasks.exe",
          "\\winlogon.exe"
        ]
      },
      "filter_main_winlogon_1": {
        "SourceImage|endswith": ":\\Windows\\System32\\winlogon.exe",
        "TargetImage|endswith": [
          ":\\Windows\\System32\\services.exe",
          ":\\Windows\\System32\\wininit.exe",
          ":\\Windows\\System32\\csrss.exe",
          ":\\Windows\\System32\\LogonUI.exe"
        ]
      },
      "filter_main_winlogon_2": {
        "SourceImage|contains": ":\\Windows\\System32\\winlogon.exe",
        "TargetParentProcessId": 4
      },
      "filter_main_schtasks_conhost": {
        "SourceImage|endswith": [
          ":\\Windows\\System32\\schtasks.exe",
          ":\\Windows\\SysWOW64\\schtasks.exe"
        ],
        "TargetImage|endswith": ":\\Windows\\System32\\conhost.exe"
      },
      "filter_main_explorer": {
        "SourceImage|endswith": ":\\Windows\\explorer.exe",
        "TargetImage|endswith": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "filter_main_system": {
        "TargetImage": "System"
      },
      "filter_main_msiexec": {
        "SourceImage|endswith": "\\msiexec.exe",
        "TargetImage|contains": [
          "\\AppData\\Local\\",
          ":\\Program Files (x86)\\",
          ":\\Program Files\\"
        ]
      },
      "filter_optional_aurora_smartconsole1": {
        "SourceImage|contains": ":\\Program Files\\internet explorer\\iexplore.exe",
        "SourceCommandLine|contains|all": [
          "https://",
          ".checkpoint.com/documents/",
          "SmartConsole_OLH/",
          "default.htm#cshid="
        ]
      },
      "filter_optional_aurora_smartconsole2": {
        "SourceImage|contains": ":\\Program Files\\internet explorer\\iexplore.exe",
        "SourceParentImage|contains|all": [
          ":\\Program Files",
          "\\CheckPoint\\SmartConsole\\",
          "\\SmartConsole.exe"
        ]
      },
      "filter_optional_powerpnt": {
        "SourceImage|contains": "\\Microsoft Office\\",
        "SourceImage|endswith": "\\POWERPNT.EXE",
        "TargetImage|endswith": ":\\Windows\\System32\\csrss.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "This rule is best put in testing first in order to create a baseline that reflects the data in your environment."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Thread Creation In Uncommon Target Image",
    "id": 11,
    "related": [
      {
        "id": "f016c716-754a-467f-a39e-63c06f773987",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects uncommon target processes for remote thread creation",
    "references": [
      "https://blog.redbluepurple.io/offensive-research/bypassing-injection-detection"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/16",
    "modified": "2024/01/22",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": [
          "\\calc.exe",
          "\\calculator.exe",
          "\\mspaint.exe",
          "\\notepad.exe",
          "\\ping.exe",
          "\\sethc.exe",
          "\\spoolsv.exe",
          "\\wordpad.exe",
          "\\write.exe"
        ]
      },
      "filter_main_csrss": {
        "SourceImage|endswith": ":\\Windows\\System32\\csrss.exe"
      },
      "filter_optional_aurora_1": {
        "StartFunction": "EtwpNotificationThread"
      },
      "filter_optional_aurora_2": {
        "SourceImage|contains": "unknown process"
      },
      "filter_optional_vmtoolsd": {
        "SourceImage|endswith": ":\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe",
        "StartFunction": "GetCommandLineW",
        "TargetImage|endswith": [
          ":\\Windows\\System32\\notepad.exe",
          ":\\Windows\\System32\\spoolsv.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Thread Creation Ttdinject.exe Proxy",
    "id": 12,
    "status": "test",
    "description": "Detects a remote thread creation of Ttdinject.exe used as proxy",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ttdinject/"
    ],
    "author": "frack113",
    "date": "2022/05/16",
    "modified": "2022/06/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_remote_thread"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": "\\ttdinject.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Hidden Executable In NTFS Alternate Data Stream",
    "id": 13,
    "status": "test",
    "description": "Detects the creation of an ADS (Alternate Data Stream) that contains an executable by looking at a non-empty Imphash",
    "references": [
      "https://twitter.com/0xrawsec/status/1002478725605273600?s=21"
    ],
    "author": "Florian Roth (Nextron Systems), @0xrawsec",
    "date": "2018/06/03",
    "modified": "2023/02/10",
    "tags": [
      "attack.defense_evasion",
      "attack.s0139",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash",
      "definition": "Requirements: Sysmon or equivalent configured with Imphash logging"
    },
    "detection": {
      "selection": {
        "Hash|contains": "IMPHASH="
      },
      "filter_main_null": {
        "Hash|contains": "IMPHASH=00000000000000000000000000000000"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "This rule isn't looking for any particular binary characteristics. As legitimate installers and programs were seen embedding hidden binaries in their ADS. Some false positives are expected from browser processes and similar."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Creation Of a Suspicious ADS File Outside a Browser Download",
    "id": 14,
    "status": "experimental",
    "description": "Detects the creation of a suspicious ADS (Alternate Data Stream) file by software other than browsers",
    "references": [
      "https://www.bleepingcomputer.com/news/security/exploited-windows-zero-day-lets-javascript-files-bypass-security-warnings/"
    ],
    "author": "frack113",
    "date": "2022/10/22",
    "modified": "2023/06/12",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection": {
        "Contents|startswith": "[ZoneTransfer]  ZoneId=3",
        "TargetFilename|endswith": ":Zone.Identifier",
        "TargetFilename|contains": [
          ".exe",
          ".scr",
          ".bat",
          ".cmd",
          ".docx",
          ".hta",
          ".jse",
          ".lnk",
          ".pptx",
          ".ps",
          ".reg",
          ".sct",
          ".vb",
          ".wsc",
          ".wsf",
          ".xlsx"
        ]
      },
      "filter_optional_brave": {
        "Image|endswith": "\\brave.exe"
      },
      "filter_optional_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_optional_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_optional_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_optional_maxthon": {
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_optional_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_optional_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_optional_opera": {
        "Image|endswith": "\\opera.exe"
      },
      "filter_optional_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_optional_seamonkey": {
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_optional_vivaldi": {
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_optional_whale": {
        "Image|endswith": "\\whale.exe"
      },
      "filter_optional_snipping_tool": {
        "Image|startswith": "C:\\Program Files\\WindowsApps\\Microsoft.ScreenSketch_",
        "Image|endswith": "\\SnippingTool\\SnippingTool.exe",
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|contains|all": [
          "\\AppData\\Local\\Packages\\Microsoft.ScreenSketch_",
          "\\TempState\\Screenshot "
        ],
        "TargetFilename|endswith": ".png:Zone.Identifier"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Other legitimate browsers not currently included in the filter (please add them)",
      "Legitimate downloads via scripting or command-line tools (Investigate to determine if it's legitimate)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Download From File Sharing Websites",
    "id": 15,
    "related": [
      {
        "id": "ae02ed70-11aa-4a22-b397-c0d0e8f6ea99",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the download of suspicious file type from a well-known file and paste sharing domain",
    "references": [
      "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=90015",
      "https://www.cisa.gov/uscert/ncas/alerts/aa22-321a",
      "https://fabian-voith.de/2020/06/25/sysmon-v11-1-reads-alternate-data-streams/",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.s0139",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection_domain": {
        "Contents|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "selection_extension": {
        "TargetFilename|contains": [
          ".exe:Zone",
          ".vbs:Zone",
          ".vbe:Zone",
          ".dll:Zone",
          ".one:Zone",
          ".hta:Zone",
          ".lnk:Zone",
          ".xll:Zone",
          ".cpl:Zone"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Some false positives might occur with binaries download via Github"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Unusual File Download From File Sharing Websites",
    "id": 16,
    "related": [
      {
        "id": "52182dfb-afb7-41db-b4bc-5336cb29b464",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the download of suspicious file type from a well-known file and paste sharing domain",
    "references": [
      "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=90015",
      "https://www.cisa.gov/uscert/ncas/alerts/aa22-321a",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.s0139",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection_domain": {
        "Contents|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "selection_extension": {
        "TargetFilename|contains": [
          ".ps1:Zone",
          ".bat:Zone",
          ".cmd:Zone"
        ]
      },
      "condition": "all of selection*"
    },
    "fields": [
      "TargetFilename",
      "Image"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "HackTool Named File Stream Created",
    "id": 17,
    "status": "experimental",
    "description": "Detects the creation of a named file stream with the imphash of a well-known hack tool",
    "references": [
      "https://github.com/gentilkiwi/mimikatz",
      "https://github.com/topotam/PetitPotam",
      "https://github.com/ohpe/juicy-potato",
      "https://github.com/antonioCoco/RoguePotato",
      "https://www.tarasco.org/security/pwdump_7/",
      "https://github.com/fortra/nanodump",
      "https://github.com/codewhitesec/HandleKatz",
      "https://github.com/xuanxuan0/DripLoader",
      "https://github.com/hfiref0x/UACME",
      "https://github.com/outflanknl/Dumpert",
      "https://github.com/wavestone-cdt/EDRSandblast"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2024/01/02",
    "tags": [
      "attack.defense_evasion",
      "attack.s0139",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash",
      "definition": "Requirements: Sysmon config with Imphash logging activated"
    },
    "detection": {
      "selection": [
        {
          "Imphash": [
            "bcca3c247b619dcd13c8cdff5f123932",
            "3a19059bd7688cb88e70005f18efc439",
            "bf6223a49e45d99094406777eb6004ba",
            "0c106686a31bfe2ba931ae1cf6e9dbc6",
            "0d1447d4b3259b3c2a1d4cfb7ece13c3",
            "1b0369a1e06271833f78ffa70ffb4eaf",
            "4c1b52a19748428e51b14c278d0f58e3",
            "4d927a711f77d62cebd4f322cb57ec6f",
            "66ee036df5fc1004d9ed5e9a94a1086a",
            "672b13f4a0b6f27d29065123fe882dfc",
            "6bbd59cea665c4afcc2814c1327ec91f",
            "725bb81dc24214f6ecacc0cfb36ad30d",
            "9528a0e91e28fbb88ad433feabca2456",
            "9da6d5d77be11712527dcab86df449a3",
            "a6e01bc1ab89f8d91d9eab72032aae88",
            "b24c5eddaea4fe50c6a96a2a133521e4",
            "d21bbc50dcc169d7b4d0f01962793154",
            "fcc251cceae90d22c392215cc9a2d5d6",
            "23867a89c2b8fc733be6cf5ef902f2d1",
            "a37ff327f8d48e8a4d2f757e1b6e70bc",
            "f9a28c458284584a93b14216308d31bd",
            "6118619783fc175bc7ebecff0769b46e",
            "959a83047e80ab68b368fdb3f4c6e4ea",
            "563233bfa169acc7892451f71ad5850a",
            "87575cb7a0e0700eb37f2e3668671a08",
            "13f08707f759af6003837a150a371ba1",
            "1781f06048a7e58b323f0b9259be798b",
            "233f85f2d4bc9d6521a6caae11a1e7f5",
            "24af2584cbf4d60bbe5c6d1b31b3be6d",
            "632969ddf6dbf4e0f53424b75e4b91f2",
            "713c29b396b907ed71a72482759ed757",
            "749a7bb1f0b4c4455949c0b2bf7f9e9f",
            "8628b2608957a6b0c6330ac3de28ce2e",
            "8b114550386e31895dfab371e741123d",
            "94cb940a1a6b65bed4d5a8f849ce9793",
            "9d68781980370e00e0bd939ee5e6c141",
            "b18a1401ff8f444056d29450fbc0a6ce",
            "cb567f9498452721d77a451374955f5f",
            "730073214094cd328547bf1f72289752",
            "17b461a082950fc6332228572138b80c",
            "dc25ee78e2ef4d36faa0badf1e7461c9",
            "819b19d53ca6736448f9325a85736792",
            "829da329ce140d873b4a8bde2cbfaa7e",
            "c547f2e66061a8dffb6f5a3ff63c0a74",
            "0588081ab0e63ba785938467e1b10cca",
            "0d9ec08bac6c07d9987dfd0f1506587c",
            "bc129092b71c89b4d4c8cdf8ea590b29",
            "4da924cf622d039d58bce71cdf05d242",
            "e7a3a5c377e2d29324093377d7db1c66",
            "9a9dbec5c62f0380b4fa5fd31deffedf",
            "af8a3976ad71e5d5fdfb67ddb8dadfce",
            "0c477898bbf137bbd6f2a54e3b805ff4",
            "0ca9f02b537bcea20d4ea5eb1a9fe338",
            "3ab3655e5a14d4eefc547f4781bf7f9e",
            "e6f9d5152da699934b30daab206471f6",
            "3ad59991ccf1d67339b319b15a41b35d",
            "ffdd59e0318b85a3e480874d9796d872",
            "0cf479628d7cc1ea25ec7998a92f5051",
            "07a2d4dcbd6cb2c6a45e6b101f0b6d51",
            "d6d0f80386e1380d05cb78e871bc72b1",
            "38d9e015591bbfd4929e0d0f47fa0055",
            "0e2216679ca6e1094d63322e3412d650",
            "ada161bf41b8e5e9132858cb54cab5fb",
            "2a1bc4913cd5ecb0434df07cb675b798",
            "11083e75553baae21dc89ce8f9a195e4",
            "a23d29c9e566f2fa8ffbb79267f5df80",
            "4a07f944a83e8a7c2525efa35dd30e2f",
            "767637c23bb42cd5d7397cf58b0be688",
            "14c4e4c72ba075e9069ee67f39188ad8",
            "3c782813d4afce07bbfc5a9772acdbdc",
            "7d010c6bb6a3726f327f7e239166d127",
            "89159ba4dd04e4ce5559f132a9964eb3",
            "6f33f4a5fc42b8cec7314947bd13f30f",
            "5834ed4291bdeb928270428ebbaf7604",
            "5a8a8a43f25485e7ee1b201edcbc7a38",
            "dc7d30b90b2d8abf664fbed2b1b59894",
            "41923ea1f824fe63ea5beb84db7a3e74",
            "3de09703c8e79ed2ca3f01074719906b",
            "a53a02b997935fd8eedcb5f7abab9b9f",
            "e96a73c7bf33a464c510ede582318bf2",
            "32089b8851bbf8bc2d014e9f37288c83",
            "09D278F9DE118EF09163C6140255C690",
            "03866661686829d806989e2fc5a72606",
            "e57401fbdadcd4571ff385ab82bd5d6d",
            "84B763C45C0E4A3E7CA5548C710DB4EE",
            "19584675d94829987952432e018d5056",
            "330768a4f172e10acb6287b87289d83b",
            "885c99ccfbe77d1cbfcb9c4e7c1a3313",
            "22a22bc9e4e0d2f189f1ea01748816ac",
            "7fa30e6bb7e8e8a69155636e50bf1b28",
            "96df3a3731912449521f6f8d183279b1",
            "7e6cf3ff4576581271ac8a313b2aab46",
            "51791678f351c03a0eb4e2a7b05c6e17",
            "25ce42b079282632708fc846129e98a5",
            "021bcca20ba3381b11bdde26b4e62f20",
            "59223b5f52d8799d38e0754855cbdf42",
            "81e75d8f1d276c156653d3d8813e4a43",
            "17244e8b6b8227e57fe709ccad421420",
            "5b76da3acdedc8a5cdf23a798b5936b4",
            "cb2b65bb77d995cc1c0e5df1c860133c",
            "40445337761d80cf465136fafb1f63e6",
            "8a790f401b29fa87bc1e56f7272b3aa6"
          ]
        },
        {
          "Hash|contains": [
            "IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932",
            "IMPHASH=3A19059BD7688CB88E70005F18EFC439",
            "IMPHASH=bf6223a49e45d99094406777eb6004ba",
            "IMPHASH=0C106686A31BFE2BA931AE1CF6E9DBC6",
            "IMPHASH=0D1447D4B3259B3C2A1D4CFB7ECE13C3",
            "IMPHASH=1B0369A1E06271833F78FFA70FFB4EAF",
            "IMPHASH=4C1B52A19748428E51B14C278D0F58E3",
            "IMPHASH=4D927A711F77D62CEBD4F322CB57EC6F",
            "IMPHASH=66EE036DF5FC1004D9ED5E9A94A1086A",
            "IMPHASH=672B13F4A0B6F27D29065123FE882DFC",
            "IMPHASH=6BBD59CEA665C4AFCC2814C1327EC91F",
            "IMPHASH=725BB81DC24214F6ECACC0CFB36AD30D",
            "IMPHASH=9528A0E91E28FBB88AD433FEABCA2456",
            "IMPHASH=9DA6D5D77BE11712527DCAB86DF449A3",
            "IMPHASH=A6E01BC1AB89F8D91D9EAB72032AAE88",
            "IMPHASH=B24C5EDDAEA4FE50C6A96A2A133521E4",
            "IMPHASH=D21BBC50DCC169D7B4D0F01962793154",
            "IMPHASH=FCC251CCEAE90D22C392215CC9A2D5D6",
            "IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1",
            "IMPHASH=A37FF327F8D48E8A4D2F757E1B6E70BC",
            "IMPHASH=F9A28C458284584A93B14216308D31BD",
            "IMPHASH=6118619783FC175BC7EBECFF0769B46E",
            "IMPHASH=959A83047E80AB68B368FDB3F4C6E4EA",
            "IMPHASH=563233BFA169ACC7892451F71AD5850A",
            "IMPHASH=87575CB7A0E0700EB37F2E3668671A08",
            "IMPHASH=13F08707F759AF6003837A150A371BA1",
            "IMPHASH=1781F06048A7E58B323F0B9259BE798B",
            "IMPHASH=233F85F2D4BC9D6521A6CAAE11A1E7F5",
            "IMPHASH=24AF2584CBF4D60BBE5C6D1B31B3BE6D",
            "IMPHASH=632969DDF6DBF4E0F53424B75E4B91F2",
            "IMPHASH=713C29B396B907ED71A72482759ED757",
            "IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F",
            "IMPHASH=8628B2608957A6B0C6330AC3DE28CE2E",
            "IMPHASH=8B114550386E31895DFAB371E741123D",
            "IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793",
            "IMPHASH=9D68781980370E00E0BD939EE5E6C141",
            "IMPHASH=B18A1401FF8F444056D29450FBC0A6CE",
            "IMPHASH=CB567F9498452721D77A451374955F5F",
            "IMPHASH=730073214094CD328547BF1F72289752",
            "IMPHASH=17B461A082950FC6332228572138B80C",
            "IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9",
            "IMPHASH=819B19D53CA6736448F9325A85736792",
            "IMPHASH=829DA329CE140D873B4A8BDE2CBFAA7E",
            "IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74",
            "IMPHASH=0588081AB0E63BA785938467E1B10CCA",
            "IMPHASH=0D9EC08BAC6C07D9987DFD0F1506587C",
            "IMPHASH=BC129092B71C89B4D4C8CDF8EA590B29",
            "IMPHASH=4DA924CF622D039D58BCE71CDF05D242",
            "IMPHASH=E7A3A5C377E2D29324093377D7DB1C66",
            "IMPHASH=9A9DBEC5C62F0380B4FA5FD31DEFFEDF",
            "IMPHASH=AF8A3976AD71E5D5FDFB67DDB8DADFCE",
            "IMPHASH=0C477898BBF137BBD6F2A54E3B805FF4",
            "IMPHASH=0CA9F02B537BCEA20D4EA5EB1A9FE338",
            "IMPHASH=3AB3655E5A14D4EEFC547F4781BF7F9E",
            "IMPHASH=E6F9D5152DA699934B30DAAB206471F6",
            "IMPHASH=3AD59991CCF1D67339B319B15A41B35D",
            "IMPHASH=FFDD59E0318B85A3E480874D9796D872",
            "IMPHASH=0CF479628D7CC1EA25EC7998A92F5051",
            "IMPHASH=07A2D4DCBD6CB2C6A45E6B101F0B6D51",
            "IMPHASH=D6D0F80386E1380D05CB78E871BC72B1",
            "IMPHASH=38D9E015591BBFD4929E0D0F47FA0055",
            "IMPHASH=0E2216679CA6E1094D63322E3412D650",
            "IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB",
            "IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798",
            "IMPHASH=11083E75553BAAE21DC89CE8F9A195E4",
            "IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80",
            "IMPHASH=4A07F944A83E8A7C2525EFA35DD30E2F",
            "IMPHASH=767637C23BB42CD5D7397CF58B0BE688",
            "IMPHASH=14C4E4C72BA075E9069EE67F39188AD8",
            "IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC",
            "IMPHASH=7D010C6BB6A3726F327F7E239166D127",
            "IMPHASH=89159BA4DD04E4CE5559F132A9964EB3",
            "IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F",
            "IMPHASH=5834ED4291BDEB928270428EBBAF7604",
            "IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38",
            "IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894",
            "IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74",
            "IMPHASH=3DE09703C8E79ED2CA3F01074719906B",
            "IMPHASH=A53A02B997935FD8EEDCB5F7ABAB9B9F",
            "IMPHASH=E96A73C7BF33A464C510EDE582318BF2",
            "IMPHASH=32089B8851BBF8BC2D014E9F37288C83",
            "IMPHASH=09D278F9DE118EF09163C6140255C690",
            "IMPHASH=03866661686829d806989e2fc5a72606",
            "IMPHASH=e57401fbdadcd4571ff385ab82bd5d6d",
            "IMPHASH=84B763C45C0E4A3E7CA5548C710DB4EE",
            "IMPHASH=19584675D94829987952432E018D5056",
            "IMPHASH=330768A4F172E10ACB6287B87289D83B",
            "IMPHASH=885C99CCFBE77D1CBFCB9C4E7C1A3313",
            "IMPHASH=22A22BC9E4E0D2F189F1EA01748816AC",
            "IMPHASH=7FA30E6BB7E8E8A69155636E50BF1B28",
            "IMPHASH=96DF3A3731912449521F6F8D183279B1",
            "IMPHASH=7E6CF3FF4576581271AC8A313B2AAB46",
            "IMPHASH=51791678F351C03A0EB4E2A7B05C6E17",
            "IMPHASH=25CE42B079282632708FC846129E98A5",
            "IMPHASH=021BCCA20BA3381B11BDDE26B4E62F20",
            "IMPHASH=59223B5F52D8799D38E0754855CBDF42",
            "IMPHASH=81E75D8F1D276C156653D3D8813E4A43",
            "IMPHASH=17244E8B6B8227E57FE709CCAD421420",
            "IMPHASH=5B76DA3ACDEDC8A5CDF23A798B5936B4",
            "IMPHASH=CB2B65BB77D995CC1C0E5DF1C860133C",
            "IMPHASH=40445337761D80CF465136FAFB1F63E6",
            "IMPHASH=8A790F401B29FA87BC1E56F7272B3AA6"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Exports Registry Key To an Alternate Data Stream",
    "id": 18,
    "status": "test",
    "description": "Exports the target Registry key and hides it in the specified alternate data stream.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regedit/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Oddvar Moe, Sander Wiebing, oscd.community",
    "date": "2020/10/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\regedit.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "TargetFilename"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Unusual File Download from Direct IP Address",
    "id": 19,
    "status": "test",
    "description": "Detects the download of suspicious file type from URLs with IP",
    "references": [
      "https://github.com/trustedsec/SysmonCommunityGuide/blob/adcdfee20999f422b974c8d4149bf4c361237db7/chapters/file-stream-creation-hash.md",
      "https://labs.withsecure.com/publications/detecting-onenote-abuse"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2022/09/07",
    "modified": "2023/02/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection": {
        "Contents|re": "http[s]?://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}",
        "TargetFilename|contains": [
          ".ps1:Zone",
          ".bat:Zone",
          ".exe:Zone",
          ".vbe:Zone",
          ".vbs:Zone",
          ".dll:Zone",
          ".one:Zone",
          ".cmd:Zone",
          ".hta:Zone",
          ".xll:Zone",
          ".lnk:Zone"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Suspicious Winget Package Installation",
    "id": 20,
    "status": "experimental",
    "description": "Detects potential suspicious winget package installation from a suspicious source.",
    "references": [
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/18",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection": {
        "Contents|startswith": "[ZoneTransfer]  ZoneId=3",
        "Contents|contains": [
          "://1",
          "://2",
          "://3",
          "://4",
          "://5",
          "://6",
          "://7",
          "://8",
          "://9"
        ],
        "TargetFilename|endswith": ":Zone.Identifier",
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\WinGet\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious File Download From ZIP TLD",
    "id": 21,
    "status": "experimental",
    "description": "Detects the download of a file with a potentially suspicious extension from a .zip top level domain.",
    "references": [
      "https://twitter.com/cyb3rops/status/1659175181695287297",
      "https://fabian-voith.de/2020/06/25/sysmon-v11-1-reads-alternate-data-streams/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/05/18",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "create_stream_hash"
    },
    "detection": {
      "selection": {
        "Contents|contains": ".zip/",
        "TargetFilename|contains": [
          ".bat:Zone",
          ".dat:Zone",
          ".dll:Zone",
          ".doc:Zone",
          ".docm:Zone",
          ".exe:Zone",
          ".hta:Zone",
          ".pptm:Zone",
          ".ps1:Zone",
          ".rar:Zone",
          ".rtf:Zone",
          ".sct:Zone",
          ".vbe:Zone",
          ".vbs:Zone",
          ".ws:Zone",
          ".wsf:Zone",
          ".xll:Zone",
          ".xls:Zone",
          ".xlsm:Zone",
          ".zip:Zone"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate file downloads from a websites and web services that uses the \".zip\" top level domain."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DNS Query for Anonfiles.com Domain - Sysmon",
    "id": 22,
    "related": [
      {
        "id": "29f171d7-aa47-42c7-9c7b-3c87938164d9",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects DNS queries for \"anonfiles.com\", which is an anonymous file upload platform often used for malicious purposes",
    "references": [
      "https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-blackbyte"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2022/07/15",
    "modified": "2023/01/16",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|contains": ".anonfiles.com"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate access to anonfiles.com"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AppX Package Installation Attempts Via AppInstaller.EXE",
    "id": 23,
    "related": [
      {
        "id": "180c7c5c-d64b-4a63-86e9-68910451bc8b",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects DNS queries made by \"AppInstaller.EXE\". The AppInstaller is the default handler for the \"ms-appinstaller\" URI. It attempts to load/install a package from the referenced URL\n",
    "references": [
      "https://twitter.com/notwhickey/status/1333900137232523264",
      "https://lolbas-project.github.io/lolbas/Binaries/AppInstaller/"
    ],
    "author": "frack113",
    "date": "2021/11/24",
    "modified": "2023/11/09",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "Image|startswith": "C:\\Program Files\\WindowsApps\\Microsoft.DesktopAppInstaller_",
        "Image|endswith": "\\AppInstaller.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Cloudflared Tunnels Related DNS Requests",
    "id": 24,
    "status": "experimental",
    "description": "Detects DNS query requests to Cloudflared tunnels domains.",
    "references": [
      "https://www.guidepointsecurity.com/blog/tunnel-vision-cloudflared-abused-in-the-wild/",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/12/20",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "dns_query",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "QueryName|endswith": [
          ".v2.argotunnel.com",
          "protocol-v2.argotunnel.com",
          "trycloudflare.com",
          "update.argotunnel.com"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of cloudflare tunnels will also trigger this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS Query To Devtunnels Domain",
    "id": 25,
    "related": [
      {
        "id": "9501f8e6-8e3d-48fc-a8a6-1089dd5d7ef4",
        "type": "similar"
      },
      {
        "id": "4b657234-038e-4ad5-997c-4be42340bce4",
        "type": "similar"
      },
      {
        "id": "b3e6418f-7c7a-4fad-993a-93b65027a9f1",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects DNS query requests to Devtunnels domains. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.\n",
    "references": [
      "https://blueteamops.medium.com/detecting-dev-tunnels-16f0994dc3e2",
      "https://learn.microsoft.com/en-us/azure/developer/dev-tunnels/security",
      "https://cydefops.com/devtunnels-unleashed"
    ],
    "author": "citron_ninja",
    "date": "2023/10/25",
    "modified": "2023/11/20",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "dns_query",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "QueryName|endswith": ".devtunnels.ms"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Devtunnels will also trigger this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS Server Discovery Via LDAP Query",
    "id": 26,
    "status": "experimental",
    "description": "Detects DNS server discovery via LDAP query requests from uncommon applications",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/980f3f83fd81f37c1ca9c02dccfd1c3d9f9d0841/atomics/T1016/T1016.md#atomic-test-9---dns-server-discovery-using-nslookup",
      "https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/7fcdce70-5205-44d6-9c3a-260e616a2f04"
    ],
    "author": "frack113",
    "date": "2022/08/20",
    "modified": "2023/09/18",
    "tags": [
      "attack.discovery",
      "attack.t1482"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|startswith": "_ldap."
      },
      "filter_main_generic": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\",
          ":\\Windows\\"
        ]
      },
      "filter_main_defender": {
        "Image|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
        "Image|endswith": "\\MsMpEng.exe"
      },
      "filter_main_unknown": {
        "Image": "<unknown process>"
      },
      "filter_optional_azure": {
        "Image|startswith": "C:\\WindowsAzure\\GuestAgent"
      },
      "filter_main_null": {
        "Image": null
      },
      "filter_optional_browsers": {
        "Image|endswith": [
          "\\chrome.exe",
          "\\firefox.exe",
          "\\opera.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "DNS HybridConnectionManager Service Bus",
    "id": 27,
    "status": "test",
    "description": "Detects Azure Hybrid Connection Manager services querying the Azure service bus service",
    "references": [
      "https://twitter.com/Cyb3rWard0g/status/1381642789369286662"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2021/04/12",
    "modified": "2023/01/16",
    "tags": [
      "attack.persistence",
      "attack.t1554"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|contains": "servicebus.windows.net",
        "Image|contains": "HybridConnectionManager"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Azure Hybrid Connection Manager and the Azure Service Bus service"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Cobalt Strike DNS Beaconing - Sysmon",
    "id": 28,
    "related": [
      {
        "id": "0d18728b-f5bf-4381-9dcf-915539fff6c2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a program that invoked suspicious DNS queries known from Cobalt Strike beacons",
    "references": [
      "https://www.icebrg.io/blog/footprints-of-fin7-tracking-actor-patterns",
      "https://www.sekoia.io/en/hunting-and-detecting-cobalt-strike/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/11/09",
    "modified": "2023/01/16",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection1": {
        "QueryName|startswith": [
          "aaa.stage.",
          "post.1"
        ]
      },
      "selection2": {
        "QueryName|contains": ".stage.123456."
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "fields": [
      "Image",
      "CommandLine"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "DNS Query To MEGA Hosting Website",
    "id": 29,
    "related": [
      {
        "id": "66474410-b883-415f-9f8d-75345a0a66a6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects DNS queries for subdomains related to MEGA sharing website",
    "references": [
      "https://research.nccgroup.com/2021/05/27/detecting-rclone-an-effective-tool-for-exfiltration/"
    ],
    "author": "Aaron Greetham (@beardofbinary) - NCC Group",
    "date": "2021/05/26",
    "modified": "2023/09/18",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|contains": "userstorage.mega.co.nz"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate DNS queries and usage of Mega"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS Query Request To OneLaunch Update Service",
    "id": 30,
    "status": "experimental",
    "description": "Detects DNS query requests to \"update.onelaunch.com\". This domain is associated with the OneLaunch adware application.\nWhen the OneLaunch application is installed it will attempt to get updates from this domain.\n",
    "references": [
      "https://www.malwarebytes.com/blog/detections/pup-optional-onelaunch-silentcf",
      "https://www.myantispyware.com/2020/12/14/how-to-uninstall-onelaunch-browser-removal-guide/",
      "https://malware.guide/browser-hijacker/remove-onelaunch-virus/"
    ],
    "author": "Josh Nickels",
    "date": "2024/02/26",
    "tags": [
      "attack.collection",
      "attack.t1056"
    ],
    "logsource": {
      "category": "dns_query",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "QueryName": "update.onelaunch.com",
        "Image|endswith": "\\OneLaunch.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "DNS Query Request By Regsvr32.EXE",
    "id": 31,
    "related": [
      {
        "id": "c7e91a02-d771-4a6d-a700-42587e0b1095",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects DNS queries initiated by \"Regsvr32.exe\"",
    "references": [
      "https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32/",
      "https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/"
    ],
    "author": "Dmitriy Lifanov, oscd.community",
    "date": "2019/10/25",
    "modified": "2023/09/18",
    "tags": [
      "attack.execution",
      "attack.t1559.001",
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "dns_query",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\regsvr32.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS Query To Remote Access Software Domain From Non-Browser App",
    "id": 32,
    "related": [
      {
        "id": "71ba22cb-8a01-42e2-a6dd-5bf9b547498f",
        "type": "obsoletes"
      },
      {
        "id": "7c4cf8e0-1362-48b2-a512-b606d2065d7d",
        "type": "obsoletes"
      },
      {
        "id": "ed785237-70fa-46f3-83b6-d264d1dc6eb4",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-4---gotoassist-files-detected-test-on-windows",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-3---logmein-files-detected-test-on-windows",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-6---ammyy-admin-software-execution",
      "https://redcanary.com/blog/misbehaving-rats/",
      "https://techcommunity.microsoft.com/t5/microsoft-sentinel-blog/hunting-for-omi-vulnerability-exploitation-with-azure-sentinel/ba-p/2764093"
    ],
    "author": "frack113, Connor Martin",
    "date": "2022/07/11",
    "modified": "2023/09/12",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection_generic": {
        "QueryName|endswith": [
          "agent.jumpcloud.com",
          "agentreporting.atera.com",
          "ammyy.com",
          "api.parsec.app",
          "api.playanext.com",
          "api.splashtop.com",
          "app.atera.com",
          "assist.zoho.com",
          "authentication.logmeininc.com",
          "beyondtrustcloud.com",
          "cdn.kaseya.net",
          "client.teamviewer.com",
          "comserver.corporate.beanywhere.com",
          "control.connectwise.com",
          "downloads.zohocdn.com",
          "dwservice.net",
          "express.gotoassist.com",
          "getgo.com",
          "integratedchat.teamviewer.com",
          "join.zoho.com",
          "kickstart.jumpcloud.com",
          "license.bomgar.com",
          "logmein-gateway.com",
          "logmein.com",
          "logmeincdn.http.internapcdn.net",
          "n-able.com",
          "net.anydesk.com",
          "netsupportsoftware.com",
          "parsecusercontent.com",
          "pubsub.atera.com",
          "relay.kaseya.net",
          "relay.screenconnect.com",
          "relay.splashtop.com",
          "remotedesktop-pa.googleapis.com",
          "remoteutilities.com",
          "secure.logmeinrescue.com",
          "services.vnc.com",
          "static.remotepc.com",
          "swi-rc.com",
          "swi-tc.com",
          "telemetry.servers.qetqo.com",
          "tmate.io",
          "zohoassist.com"
        ]
      },
      "selection_rustdesk": {
        "QueryName|endswith": ".rustdesk.com",
        "QueryName|startswith": "rs-"
      },
      "filter_optional_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_optional_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_optional_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_optional_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_optional_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_optional_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_optional_defender": {
        "Image|endswith": [
          "\\MsMpEng.exe",
          "\\MsSense.exe"
        ]
      },
      "filter_optional_brave": {
        "Image|endswith": "\\brave.exe",
        "Image|startswith": "C:\\Program Files\\BraveSoftware\\"
      },
      "filter_optional_maxthon": {
        "Image|contains": "\\AppData\\Local\\Maxthon\\",
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_optional_opera": {
        "Image|contains": "\\AppData\\Local\\Programs\\Opera\\",
        "Image|endswith": "\\opera.exe"
      },
      "filter_optional_seamonkey": {
        "Image|startswith": [
          "C:\\Program Files\\SeaMonkey\\",
          "C:\\Program Files (x86)\\SeaMonkey\\"
        ],
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_optional_vivaldi": {
        "Image|contains": "\\AppData\\Local\\Vivaldi\\",
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_optional_whale": {
        "Image|startswith": [
          "C:\\Program Files\\Naver\\Naver Whale\\",
          "C:\\Program Files (x86)\\Naver\\Naver Whale\\"
        ],
        "Image|endswith": "\\whale.exe"
      },
      "filter_optional_tor": {
        "Image|contains": "\\Tor Browser\\"
      },
      "filter_optional_whaterfox": {
        "Image|startswith": [
          "C:\\Program Files\\Waterfox\\",
          "C:\\Program Files (x86)\\Waterfox\\"
        ],
        "Image|endswith": "\\Waterfox.exe"
      },
      "filter_optional_midori": {
        "Image|contains": "\\AppData\\Local\\Programs\\midori-ng\\",
        "Image|endswith": "\\Midori Next Generation.exe"
      },
      "filter_optional_slimbrowser": {
        "Image|startswith": [
          "C:\\Program Files\\SlimBrowser\\",
          "C:\\Program Files (x86)\\SlimBrowser\\"
        ],
        "Image|endswith": "\\slimbrowser.exe"
      },
      "filter_optional_flock": {
        "Image|contains": "\\AppData\\Local\\Flock\\",
        "Image|endswith": "\\Flock.exe"
      },
      "filter_optional_phoebe": {
        "Image|contains": "\\AppData\\Local\\Phoebe\\",
        "Image|endswith": "\\Phoebe.exe"
      },
      "filter_optional_falkon": {
        "Image|startswith": [
          "C:\\Program Files\\Falkon\\",
          "C:\\Program Files (x86)\\Falkon\\"
        ],
        "Image|endswith": "\\falkon.exe"
      },
      "filter_optional_avant": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Avant Browser\\",
          "C:\\Program Files\\Avant Browser\\"
        ],
        "Image|endswith": "\\avant.exe"
      },
      "condition": "1 of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Likely with other browser software. Apply additional filters for any other browsers you might use."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious DNS Query for IP Lookup Service APIs",
    "id": 33,
    "status": "test",
    "description": "Detects DNS queries for IP lookup services such as \"api.ipify.org\" originating from a non browser process.",
    "references": [
      "https://www.binarydefense.com/analysis-of-hancitor-when-boring-begets-beacon",
      "https://twitter.com/neonprimetime/status/1436376497980428318",
      "https://www.trendmicro.com/en_us/research/23/e/managed-xdr-investigation-of-ducktail-in-trend-micro-vision-one.html"
    ],
    "author": "Brandon George (blog post), Thomas Patzke",
    "date": "2021/07/08",
    "modified": "2024/02/08",
    "tags": [
      "attack.reconnaissance",
      "attack.t1590"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|contains": [
          "api.2ip.ua",
          "api.bigdatacloud.net",
          "api.ipify.org",
          "bot.whatismyipaddress.com",
          "canireachthe.net",
          "checkip.amazonaws.com",
          "checkip.dyndns.org",
          "curlmyip.com",
          "db-ip.com",
          "edns.ip-api.com",
          "eth0.me",
          "freegeoip.app",
          "geoipy.com",
          "getip.pro",
          "icanhazip.com",
          "ident.me",
          "ifconfig.io",
          "ifconfig.me",
          "ip-api.com",
          "ip.anysrc.net",
          "ip.tyk.nu",
          "ipaddressworld.com",
          "ipapi.co",
          "ipconfig.io",
          "ipecho.net",
          "ipinfo.io",
          "ipof.in",
          "ipv4.icanhazip.com",
          "ipv4bot.whatismyipaddress.com",
          "ipwho.is",
          "l2.io",
          "myexternalip.com",
          "wgetip.com",
          "whatismyip.akamai.com",
          "wtfismyip.com"
        ]
      },
      "filter_optional_brave": {
        "Image|endswith": "\\brave.exe"
      },
      "filter_optional_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_optional_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_optional_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_optional_maxthon": {
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_optional_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_optional_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_optional_opera": {
        "Image|endswith": "\\opera.exe"
      },
      "filter_optional_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_optional_seamonkey": {
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_optional_vivaldi": {
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_optional_whale": {
        "Image|endswith": "\\whale.exe"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate usage of IP lookup services such as ipify API"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "TeamViewer Domain Query By Non-TeamViewer Application",
    "id": 34,
    "status": "test",
    "description": "Detects DNS queries to a TeamViewer domain only resolved by a TeamViewer client by an image that isn't named TeamViewer (sometimes used by threat actors for obfuscation)",
    "references": [
      "https://www.teamviewer.com/en-us/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/30",
    "modified": "2023/09/18",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName": [
          "taf.teamviewer.com",
          "udp.ping.teamviewer.com"
        ]
      },
      "filter_main_teamviewer": {
        "Image|contains": "TeamViewer"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown binary names of TeamViewer",
      "Depending on the environment the rule might require some initial tuning before usage to avoid FP with third party applications"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS Query Tor .Onion Address - Sysmon",
    "id": 35,
    "related": [
      {
        "id": "8384bd26-bde6-4da9-8e5d-4174a7a47ca2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects DNS queries to an \".onion\" address related to Tor routing networks",
    "references": [
      "https://www.logpoint.com/en/blog/detecting-tor-use-with-logpoint/"
    ],
    "author": "frack113",
    "date": "2022/02/20",
    "modified": "2023/09/18",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|contains": ".onion"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DNS Query To Ufile.io",
    "id": 36,
    "related": [
      {
        "id": "090ffaad-c01a-4879-850c-6d57da98452d",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects DNS queries to \"ufile.io\", which was seen abused by malware and threat actors as a method for data exfiltration",
    "references": [
      "https://thedfirreport.com/2021/12/13/diavol-ransomware/"
    ],
    "author": "yatinwad, TheDFIRReport",
    "date": "2022/06/23",
    "modified": "2023/09/18",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "dns_query"
    },
    "detection": {
      "selection": {
        "QueryName|contains": "ufile.io"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "DNS queries for \"ufile\" are not malicious by nature necessarily. Investigate the source to determine the necessary actions to take"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "DNS Query To Visual Studio Code Tunnels Domain",
    "id": 37,
    "related": [
      {
        "id": "9501f8e6-8e3d-48fc-a8a6-1089dd5d7ef4",
        "type": "similar"
      },
      {
        "id": "4b657234-038e-4ad5-997c-4be42340bce4",
        "type": "similar"
      },
      {
        "id": "1cb0c6ce-3d00-44fc-ab9c-6d6d577bf20b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects DNS query requests to Visual Studio Code tunnel domains. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.\n",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html",
      "https://cydefops.com/vscode-data-exfiltration"
    ],
    "author": "citron_ninja",
    "date": "2023/10/25",
    "modified": "2023/11/20",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "dns_query",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "QueryName|endswith": ".tunnels.api.visualstudio.com"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Visual Studio Code tunnel will also trigger this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Malicious Driver Load",
    "id": 38,
    "status": "experimental",
    "description": "Detects loading of known malicious drivers via their hash.",
    "references": [
      "https://loldrivers.io/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/18",
    "modified": "2023/12/02",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543.003",
      "attack.t1068"
    ],
    "logsource": {
      "product": "windows",
      "category": "driver_load"
    },
    "detection": {
      "selection": {
        "Hashes|contains": [
          "MD5=5be61a24f50eb4c94d98b8a82ef58dcf",
          "MD5=d70a80fc73dd43469934a7b1cc623c76",
          "MD5=3b71eab204a5f7ed77811e41fed73105",
          "MD5=528ce5ce19eb34f401ef024de7ddf222",
          "MD5=ae548418b491cd3f31618eb9e5730973",
          "MD5=72f53f55898548767e0276c472be41e8",
          "MD5=508faa4647f305a97ed7167abc4d1330",
          "MD5=ed2b653d55c03f0bffa250372d682b75",
          "MD5=0d2ba47286f1c68e87622b3a16bf9d92",
          "MD5=3164bd6c12dd0fe1bdf3b833d56323b9",
          "MD5=70fd7209ce5c013a1f9e699b5cc86cdc",
          "MD5=c71be7b112059d2dc84c0f952e04e6cc",
          "MD5=acac842a46f3501fe407b1db1b247a0b",
          "MD5=01c2e4d8234258451083d6ce4e8910b7",
          "MD5=c8541a9cef64589593e999968a0385b9",
          "MD5=e172a38ade3aa0a2bc1bf9604a54a3b5",
          "MD5=6fcf56f6ca3210ec397e55f727353c4a",
          "MD5=2b80be31fbb11d4c1ef6d6a80b2e0c16",
          "MD5=07056573d464b0f5284f7e3acedd4a3f",
          "MD5=c7b7f1edb9bbef174e6506885561d85d",
          "MD5=d5918d735a23f746f0e83f724c4f26e5",
          "MD5=84763d8ca9fe5c3bff9667b2adf667de",
          "MD5=fb593b1f1f80d20fc7f4b818065c64b6",
          "MD5=909f3fc221acbe999483c87d9ead024a",
          "MD5=e29f6311ae87542b3d693c1f38e4e3ad",
          "MD5=aeb0801f22d71c7494e884d914446751",
          "MD5=3f11a94f1ac5efdd19767c6976da9ba4",
          "MD5=be6318413160e589080df02bb3ca6e6a",
          "MD5=0b311af53d2f4f77d30f1aed709db257",
          "MD5=d075d56dfce6b9b13484152b1ef40f93",
          "MD5=27384ec4c634701012a2962c30badad2",
          "MD5=5eb2c576597dd21a6b44557c237cf896",
          "MD5=f56db4eba3829c0918413b5c0b42f00f",
          "MD5=e27b2486aa5c256b662812b465b6036c",
          "MD5=db86dfd7aefbb5be6728a63461b0f5f3",
          "MD5=04a88f5974caa621cee18f34300fc08a",
          "MD5=5129d8fd53d6a4aba81657ab2aa5d243",
          "MD5=cd2c641788d5d125c316ed739c69bb59",
          "MD5=7073cd0085fcba1cd7d3568f9e6d652c",
          "MD5=24f0f2b4b3cdae11de1b81c537df41c7",
          "MD5=88bea56ae9257b40063785cf47546024",
          "MD5=63060b756377fce2ce4ab9d079ca732f",
          "MD5=50b39072d0ee9af5ef4824eca34be6e3",
          "MD5=57c18a8f5d1ba6d015e4d5bc698e3624",
          "MD5=7d26985a5048bad57d9c223362f3d55c",
          "MD5=ba54a0dbe2685e66e21d41b4529b3528",
          "MD5=4ad8fd9e83d7200bd7f8d0d4a9abfb11",
          "MD5=b52f51bbe6b49d0b475d943c29c4d4cb",
          "MD5=a837302307dace2a00d07202b661bce2",
          "MD5=78a122d926ccc371d60c861600c310f3",
          "MD5=bdb305aa0806f8b38b7ce43c927fe919",
          "MD5=27053e964667318e1b370150cbca9138",
          "MD5=6a4fbcfb44717eae2145c761c1c99b6a",
          "MD5=d13c1b76b4a1ca3ff5ab63678b51df6d",
          "MD5=6a066d2be83cf83f343d0550b0b8f206",
          "MD5=7108b0d4021af4c41de2c223319cd4c1",
          "MD5=1cd158a64f3d886357535382a6fdad75",
          "MD5=e939448b28a4edc81f1f974cebf6e7d2",
          "MD5=4198d3db44d7c4b3ba9072d258a4fc2d",
          "MD5=4a27a2bdc6fbe39eeec6455fb1e0ef20",
          "MD5=30ca3cc19f001a8f12c619daa8c6b6e3",
          "MD5=fe9004353b25640f6a879e57f07122d7",
          "MD5=06c7fcf3523235cf52b3eee083ec07b2",
          "MD5=364605ad21b9275681cffef607fac273",
          "MD5=968ddb06af90ef83c5f20fbdd4eee62e",
          "MD5=ba50bd645d7c81416bb26a9d39998296",
          "MD5=29e03f4811b64969e48a99300978f58c",
          "MD5=b0770094c3c64250167b55e4db850c04",
          "MD5=40b968ecdbe9e967d92c5da51c390eee",
          "MD5=b6b530dd25c5eb66499968ec82e8791e",
          "MD5=f209cb0e468ca0b76d879859d5c8c54e",
          "MD5=76f8607fc4fb9e828d613a7214436b66",
          "MD5=4b058945c9f2b8d8ebc485add1101ba5",
          "MD5=faae7f5f69fde12303dd1c0c816b72b7",
          "MD5=89d294ef7fefcdf1a6ca0ab96a856f57",
          "MD5=ef0e1725aaf0c6c972593f860531a2ea",
          "MD5=bbdbffebfc753b11897de2da7c9912a5",
          "MD5=5ebfc0af031130ba9de1d5d3275734b3",
          "MD5=22949977ce5cd96ba674b403a9c81285",
          "MD5=77cfd3943cc34d9f5279c330cd8940bc",
          "MD5=311de109df18e485d4a626b5dbe19bc6",
          "MD5=2730cc25ad385acc7213a1261b21c12d",
          "MD5=87dc81ebe85f20c1a7970e495a778e60",
          "MD5=154b45f072fe844676e6970612fd39c7",
          "MD5=5a4fe297c7d42539303137b6d75b150d",
          "MD5=d6a1dd7b2c06f058b408b3613c13d413",
          "MD5=a6e9d6505f6d2326a8a9214667c61c67",
          "MD5=7fad9f2ef803496f482ce4728578a57a",
          "MD5=5076fba3d90e346fd17f78db0a4aa12c",
          "MD5=79df0eabbf2895e4e2dae15a4772868c",
          "MD5=14580bd59c55185115fd3abe73b016a2",
          "MD5=1f2888e57fdd6aee466962c25ba7d62d",
          "MD5=5e9231e85cecfc6141e3644fda12a734",
          "MD5=dc564bac7258e16627b9de0ce39fae25",
          "MD5=4e4c068c06331130334f23957fca9e3c",
          "MD5=1ee9f6326649cd23381eb9d7dfdeddf7",
          "MD5=4e1f656001af3677856f664e96282a6f",
          "MD5=36f44643178c505ea0384e0fb241e904",
          "MD5=6b480fac7caca2f85be9a0cfe79aedfc",
          "MD5=c1ab425977d467b64f437a6c5ad82b44",
          "MD5=fe508caa54ffeb2285d9f00df547fe4a",
          "MD5=d3af70287de8757cebc6f8d45bb21a20",
          "MD5=990b949894b7dc82a8cf1131b063cb1a",
          "MD5=c62209b8a5daf3f32ad876ad6cefda1b",
          "MD5=c159fb0f345a8771e56aab8e16927361",
          "MD5=19b15eeccab0752c6793f782ca665a45",
          "MD5=1d51029dfbd616bf121b40a0d1efeb10",
          "MD5=157a22689629ec876337f5f9409918d5",
          "MD5=3dd829fb27353622eff34be1eabb8f18",
          "MD5=8636fe3724f2bcba9399daffd6ef3c7e",
          "MD5=3d0b3e19262099ade884b75ba86ca7e8",
          "MD5=97539c78d6e2b5356ce79e40bcd4d570",
          "MD5=0308b6888e0f197db6704ca20203eee4",
          "MD5=091a6bd4880048514c5dd3bede15eba5",
          "MD5=7e92f98b809430622b04e88441b2eb04",
          "MD5=bb5bda8889d8d27ef984dbd6ad82c946",
          "MD5=b76aee508f68b5b6dccd6e1f66f4cf8b",
          "MD5=a822b9e6eedf69211013e192967bf523",
          "MD5=df52f8a85eb64bc69039243d9680d8e4",
          "MD5=bfbdea0589fb77c7a7095cf5cd6e8b7a",
          "MD5=44857ca402a15ab51dc5afe47abdfa44",
          "MD5=f9844524fb0009e5b784c21c7bad4220",
          "MD5=d34b218c386bfe8b1f9c941e374418d7",
          "MD5=0ca010a32a9b0aeae1e46d666b83b659",
          "MD5=93496a436c5546156a69deb255a9fed0",
          "MD5=1cd5e231064e03c596e819b6ff48daf9",
          "MD5=70a71fe86df717ac59dbf856d7ac5789",
          "MD5=a33089d4e50f7d2ea8b52ca95d26ebf3",
          "MD5=e0cc9b415d884f85c45be145872892b8",
          "MD5=a42249a046182aaaf3a7a7db98bfa69d",
          "MD5=c5ae6ca044bd03c3506c132b033be1dc",
          "MD5=7ebe606acd81abf1f8cb0767c974164b",
          "MD5=b5dcc869a91efcc6e8ea0c3c07605d63",
          "MD5=62c18d61ed324088f963510bae43b831",
          "MD5=093a2a635c3a27aac50efd6463f4efa1",
          "MD5=28102acca39ad0199f262ba9958be3f4",
          "MD5=650ef9dd70cb192027e536754d6e0f63",
          "MD5=32eb3d2bf2c5b3da2d2a1f20fffbac44",
          "MD5=6771b13a53b9c7449d4891e427735ea2",
          "MD5=072ba2309b825ce1dba37d8d924ea8ed",
          "MD5=2d37d2fb9b9f8ac52bc02cba4487e3cb",
          "MD5=1325ec39e98225e487b40043faee8052",
          "MD5=4484f4007de2c3ee4581a2cff77ca3b4",
          "MD5=a236e7d654cd932b7d11cb604629a2d0",
          "MD5=17509f0a98dc5c5d52c3f9ac1428a21b",
          "MD5=840a5edf2534dd23a082cf7b28cbfc4d",
          "MD5=77a7ed4798d02ef6636cd0fd07fc382a",
          "MD5=a9df5964635ef8bd567ae487c3d214c4",
          "MD5=8b75047199825c8e62fdcc1c915db8bd",
          "MD5=d416494232c4197cb36a914df2e17677",
          "MD5=4cf14a96485a1270fed97bb8000e4f86",
          "MD5=35e512f9bedc89dca5ce81f35820714c",
          "MD5=40f35792e7565aa047796758a3ce1b77",
          "MD5=f7f31bccc9b7b2964ac85106831022b1",
          "MD5=26aedc10d4215ba997495d3a68355f4a",
          "MD5=10f3679384a03cb487bda9621ceb5f90",
          "MD5=80219fb6b5954c33e16bac5ecdac651b",
          "MD5=cee36b5c6362993fa921435979bfbe4a",
          "MD5=e37a08f516b8a7ca64163f5d9e68fe5a",
          "MD5=49518f7375a5f995ebe9423d8f19cfe4",
          "MD5=920df6e42cf91bbe19707f5a86e3c5c5",
          "MD5=2ec877e425bd7eddb663627216e3491e",
          "MD5=550b7991d93534bc510bc4f237155a7a",
          "MD5=98d53f6b3bec0a3417a04fbb9e17fa06",
          "MD5=13a57a4ef721440c7c9208b51f7c05de",
          "MD5=c5fc3605194e033bdf3781ff2adaeb61",
          "MD5=6e625ec04c20a9dbd48c7060efbf5e92",
          "MD5=0b9b78d1281c7d4ab50497cf6ea7452a",
          "MD5=4e906fcb13e2793c98f47291fd69391b",
          "MD5=2bb353891d65c9e267eb98a3a2b694c3",
          "MD5=7d86cdda7f49f91fdb69901a002b34e7",
          "MD5=f69b06ca7c34d16f26ea1c6861edf62a",
          "MD5=ee6b1a79cb6641aa44c762ee90786fe0",
          "MD5=1fc7aeeff3ab19004d2e53eae8160ab1",
          "MD5=24d3ea54f25e32832ac20335a1ce1062",
          "MD5=c94f405c5929cfcccc8ad00b42c95083",
          "MD5=b164daf106566f444dfb280d743bc2f7",
          "MD5=93130909e562925597110a617f05e2a9",
          "MD5=f589d4bf547c140b6ec8a511ea47c658",
          "MD5=bf445ac375977ecf551bc2a912c58e8a",
          "MD5=629ee55e4b5a225d048fbcd5f0a1d18b",
          "MD5=0023ca0ca16a62d93ef51f3df98b2f94",
          "MD5=a3d69c7e24300389b56782aa63b0e357",
          "MD5=cbd8d370462503508e44dba023bdf9bc",
          "MD5=67daa04716803a15fc11c9e353d77c2f",
          "MD5=c9d4214c850e0cedf033dc8f0cd3aace",
          "MD5=bd5b0514f3b40f139d8079138d01b5f6",
          "MD5=19bdd9b799e3c2c54c0d7fff68b31c20",
          "MD5=f242cffd9926c0ccf94af3bf16b6e527",
          "MD5=5aeab9427d85951def146b4c0a44fc63",
          "MD5=40170485cca576adb5266cf5b0d3b0bd",
          "MD5=c277c4386a78fae1b7e17eaecf4f472b",
          "MD5=58c37866cbc3d1338e4fc58ada924ffe",
          "MD5=0f16a43f7989034641fd2de3eb268bf1",
          "MD5=0ae30291c6cbfa7be39320badd6e8de0",
          "MD5=05dd59bd4f175304480affd8f1305c37",
          "MD5=f838f4eb36f1e7036238776c7a70f0b0",
          "MD5=85093bb9f027027c2c61aee50796de30",
          "MD5=ae338d91d1b05a72559b7f6ed717362d",
          "MD5=bd91787b5dcb2189b856804e85dfa1d9",
          "MD5=6b3c1511e12f4d27a4ea3b18020d7b84",
          "MD5=97264fd62d4907bdac917917a07b3b7a",
          "MD5=6ececf26ff8b03ed7ffbddadec9a9dab",
          "MD5=47e6ac52431ca47da17248d80bf71389",
          "MD5=eb57f03b7603f0b235af62e8cd5be8c2",
          "MD5=e1a9aa4c14669b1fb1f67a7266f87e82",
          "MD5=29047f0b7790e524b09a06852d31a117",
          "MD5=4dd6250eb2d368f500949952eb013964",
          "MD5=fb7c61ef427f9b2fdff3574ee6b1819b",
          "MD5=844af8c877f5da723c1b82cf6e213fc1",
          "MD5=e39152eadd76751b1d7485231b280948",
          "MD5=ac6e29f535b2c42999c50d2fc32f2c9c",
          "MD5=2406ea37152d2154be3fef6d69ada2c6",
          "MD5=0ea8389589c603a8b05146bd06020597",
          "MD5=754e21482baf18b8b0ed0f4be462ba03",
          "MD5=c4a517a02ba9f6eac5cf06e3629cc076",
          "MD5=32282e07db321e8d7849f2287bb6a14f",
          "MD5=32b67a6cd6dd998b9f563ed13d54a8bc",
          "MD5=3359e1d4244a7d724949c63e89689ef8",
          "MD5=5917e415a5bf30b3fcbcbcb8a4f20ee0",
          "MD5=0bdd51cc33e88b5265dfb7d88c5dc8d6",
          "MD5=a90236e4962620949b720f647a91f101",
          "MD5=ccde8c94439f9fc9c42761e4b9a23d97",
          "MD5=68caf620ef8deaf06819cf8c80d3367b",
          "MD5=5fec28e8f4f76e5ede24beb32a32b9d7",
          "MD5=e8eac6642b882a6196555539149c73f2",
          "MD5=aa98b95f5cbae8260122de06a215ee10",
          "MD5=a5bcaa2fc87b42e2e5d62a2e5dfcbc80",
          "MD5=abc168fdca7169bf9dc40cec9761018d",
          "MD5=7f9309f5e4defec132b622fadbcad511",
          "MD5=4748696211bd56c2d93c21cab91e82a5",
          "MD5=48394dce30bb8da5ae089cb8f41b86dc",
          "MD5=65f800e1112864bf41eb815649f428d5",
          "MD5=bd25be845c151370ff177509d95d5add",
          "MD5=a37ed7663073319d02f2513575a22995",
          "MD5=2c39f6172fbc967844cac12d7ab2fa55",
          "MD5=491aec2249ad8e2020f9f9b559ab68a8",
          "MD5=1e0eb80347e723fa31fce2abb0301d44",
          "MD5=a26363e7b02b13f2b8d697abb90cd5c3",
          "MD5=4118b86e490aed091b1a219dba45f332",
          "MD5=6d131a7462e568213b44ef69156f10a5",
          "MD5=10c2ea775c9e76e7774ab89e38f38287",
          "SHA1=994e3f5dd082f5d82f9cc84108a60d359910ba79",
          "SHA1=4f7989ad92b8c47c004d3731b7602ce0934d7a23",
          "SHA1=f2fe02e28cf418d935ec63168caf4dff6a9fbdfe",
          "SHA1=af42afda54d150810a60baa7987f9f09d49d1317",
          "SHA1=09375f13521fc0cacf2cf0a28b2a9248f71498d7",
          "SHA1=c75e8fceed74a4024d38ca7002d42e1ecf982462",
          "SHA1=03e82eae4d8b155e22ffdafe7ba0c4ab74e8c1a7",
          "SHA1=e730eb971ecb493b69de2308b6412836303f733a",
          "SHA1=6a95860594cd8b7e3636bafa8f812e05359a64ca",
          "SHA1=5fef884a901e81ac173d63ade3f5c51694decf74",
          "SHA1=a8ddb7565b61bc021cd2543a137e00627f999dcc",
          "SHA1=6451522b1fb428e549976d0742df5034f8124b17",
          "SHA1=8ad0919629731b9a8062f7d3d4a727b28f22e81a",
          "SHA1=cc65bf60600b64feece5575f21ab89e03a728332",
          "SHA1=bbc8bd714c917bb1033f37e4808b4b002cd04166",
          "SHA1=4f2d9a70ea24121ae01df8a76ffba1f9cc0fde4a",
          "SHA1=f6a18fc9c4abe4a82c1ab28abc0a7259df8de7a3",
          "SHA1=c42178977bd7bbefe084da0129ed808cb7266204",
          "SHA1=766949d4599fbf8f45e888c9d6fedf21e04fb333",
          "SHA1=b7ff8536553cb236ea2607941e634b23aadb59ee",
          "SHA1=76789196eebfd4203f477a5a6c75eefc12d9a837",
          "SHA1=e5566684a9e0c1afadae80c3a8be6636f6cad7cf",
          "SHA1=7638c048af5beae44352764390deea597cc3e7b1",
          "SHA1=6a6fe0d69e0ea34d695c3b525e6db639f9ad6ac5",
          "SHA1=08dd35dde6187af579a1210e00eadbcea29e66d2",
          "SHA1=9ee31f1f25f675a12b7bad386244a9fbfa786a87",
          "SHA1=3ef30c95e40a854cc4ded94fc503d0c3dc3e620e",
          "SHA1=a804ebec7e341b4d98d9e94f6e4860a55ea1638d",
          "SHA1=505546d82aab56889a923004654b9afdec54efe6",
          "SHA1=0fe2d22bd2e6b7874f4f2b6279e2ca05edd1222a",
          "SHA1=8aa0e832e5ca2eb79dafabadbe9948a191008383",
          "SHA1=844d7bcd1a928d340255ff42971cca6244a459bf",
          "SHA1=9e2ebc489c50b6bbae3b08473e007baa65ff208f",
          "SHA1=7e836dadc2e149a0b758c7e22c989cbfcce18684",
          "SHA1=2480549ec8564cd37519a419ab2380cf3e8bab9e",
          "SHA1=8b9dd4c001f17e7835fdaf0d87a2f3e026557e84",
          "SHA1=d3f6c3ea2ef7124403c0fb6e7e3a0558729b5285",
          "SHA1=40df7a55c200371853cc3fd3cc03b5ac932f5cd6",
          "SHA1=607387cc90b93d58d6c9a432340261fde846b1d9",
          "SHA1=2779c54ccd1c008cd80e88c2b454d76f4fa18c07",
          "SHA1=46c9a474a1a62c25a05bc7661b75a80b471616e6",
          "SHA1=a2fe7de67b3f7d4b1def88ce4ba080f473c0fbc6",
          "SHA1=b8b123a413b7bccfa8433deba4f88669c969b543",
          "SHA1=bf2f8ada4e80aed4710993cedf4c5d32c95cd509",
          "SHA1=e3a1e7ce9e9452966885371e4c7fb48a2efdef22",
          "SHA1=c7f0423ac5569f13d2b195e02741ad7eed839c6d",
          "SHA1=a111dc6ae5575977feba71ee69b790e056846a02",
          "SHA1=ac4ace1c21c5cb72c6edf6f2f0cc3513d7c942c3",
          "SHA1=d4304bc75c2cb9917bb10a1dc630b75af194f7b2",
          "SHA1=0de86ec7d7f16a3680df89256548301eed970393",
          "SHA1=b2fb5036b29b12bcec04c3152b65b67ca14d61f2",
          "SHA1=0883a9c54e8442a551994989db6fc694f1086d41",
          "SHA1=01cf1fe3937fb6585ffb468b116a3af8ddf9ef16",
          "SHA1=98c4406fede34c3704afd8cf536ec20d93df9a10",
          "SHA1=1048f641adf3988d882a159bf1332eeb6d6a7f09",
          "SHA1=867652e062eb6bd1b9fc29e74dea3edd611ef40c",
          "SHA1=78fd06c82d3ba765c38bad8f48d1821a06280e39",
          "SHA1=6debce728bcff73d9d1d334df0c6b1c3735e295c",
          "SHA1=fdbcebb6cafda927d384d7be2e8063a4377d884f",
          "SHA1=994dc79255aeb662a672a1814280de73d405617a",
          "SHA1=6abc7979ba044f31884517827afb7b4bdaa0dcc1",
          "SHA1=1768f9c780fe7cf66928cfceaef8ed7d985e18f5",
          "SHA1=5fa527e679d25a15ecc913ce6a8d0218e2ff174b",
          "SHA1=f11188c540eada726766e0b0b2f9dd3ae2679c61",
          "SHA1=8416ee8fd88c3d069fbba90e959507c69a0ee3e9",
          "SHA1=ab4399647ebd16c02728c702534a30eb0b7ccbe7",
          "SHA1=98588b1d1b63747fa6ee406983bf50ad48a2208b",
          "SHA1=86e6669dbbce8228e94b2a9f86efdf528f0714fd",
          "SHA1=c9e9198d52d94771cb14711a5f6aaf8d82b602a2",
          "SHA1=17fa047c1f979b180644906fe9265f21af5b0509",
          "SHA1=1b526cbcba09b8d663e82004cf24ef44343030d3",
          "SHA1=4e0f5576804dab14abb29a29edb9616a1dbe280a",
          "SHA1=eb76de59ebc5b2258cff0567577ff8c9d0042048",
          "SHA1=d4f5323da704ff2f25d6b97f38763c147f2a0e6f",
          "SHA1=6802e2d2d4e6ee38aa513dafd6840e864310513b",
          "SHA1=ac18c7847c32957abe8155bcbe71c1f35753b527",
          "SHA1=beed6fb6a96996e9b016fa7f2cf7702a49c8f130",
          "SHA1=7d453dccb25bf36c411c92e2744c24f9b801225d",
          "SHA1=9648ad90ec683c63cc02a99111a002f9b00478d1",
          "SHA1=31cc8718894d6e6ce8c132f68b8caaba39b5ba7a",
          "SHA1=31fac347aa26e92db4d8c9e1ba37a7c7a2234f08",
          "SHA1=fde0fff1c3e4c053148748504d4b9e0cc97f37ec",
          "SHA1=73bac306292b4e9107147db94d0d836fdb071e33",
          "SHA1=9382981b05b1fb950245313992444bfa0db5f881",
          "SHA1=acb8e45ebd1252313ece94198df47edf9294e7d3",
          "SHA1=9c36600c2640007d3410dea8017573a113374873",
          "SHA1=53f776d9a183c42b93960b270dddeafba74eb3fb",
          "SHA1=1fdb2474908bdd2ee1e9bd3f224626f9361caab7",
          "SHA1=3533d0a54c7ccd83afd6be24f6582b30e4ca0aab",
          "SHA1=cb25a5125fb353496b59b910263209f273f3552d",
          "SHA1=a5f1b56615bdaabf803219613f43671233f2001c",
          "SHA1=6c7663de88a0fba1f63a984f926c6ef449059e38",
          "SHA1=e514dfadbeb4d2305988c3281bf105d252dee3a7",
          "SHA1=632c80a3c95cf589b03812539dea59594eaefae0",
          "SHA1=e6966e360038be3b9d8c9b2582eba4e263796084",
          "SHA1=675cc00de7c1ef508ccd0c91770c82342c0ad4ab",
          "SHA1=6ae26bde7ec27bd0fa971de6c7500eee34ee9b51",
          "SHA1=80e4808a7fe752cac444676dbbee174367fa2083",
          "SHA1=77b4f0c0b06e3dc2474d5e250b772dacaac14dd0",
          "SHA1=7277d965b9de91b4d8ea5eb8ae7fa3899eef63a2",
          "SHA1=3825ebb0b0664b5f0789371240f65231693be37d",
          "SHA1=de9469a5d01fb84afd41d176f363a66e410d46da",
          "SHA1=91568d7a82cc7677f6b13f11bea5c40cf12d281b",
          "SHA1=4b882748faf2c6c360884c6812dd5bcbce75ebff",
          "SHA1=599de57a5c05e27bb72c7b8a677e531d8e4bf8b5",
          "SHA1=1d373361d3129d11bc43f9b6dfa81d06e5ca8358",
          "SHA1=c5bd9f2b3a51ba0da08d7c84bab1f2d03a95e405",
          "SHA1=89165bbb761d6742ac2a6f5efbffc80c17990bd8",
          "SHA1=97812f334a077c40e8e642bb9872ac2c49ddb9a2",
          "SHA1=d417c0be261b0c6f44afdec3d5432100e420c3ed",
          "SHA1=37e6450c7cd6999d080da94b867ba23faa8c32fe",
          "SHA1=9481cd590c69544c197b4ee055056302978a7191",
          "SHA1=ff3e19cd461ddf67529a765cbec9cb81d84dc7da",
          "SHA1=6972314b6d6b0109b9d0a951eb06041f531f589b",
          "SHA1=dd94a2436994ac35db91e0ec9438b95e438d38c5",
          "SHA1=dcc852461895311b56e3ae774c8e90782a79c0b4",
          "SHA1=3489ed43bdd11ccbfc892baaeae8102ff7d22f25",
          "SHA1=e38e1efd98cd8a3cdb327d386db8df79ea08dccc",
          "SHA1=d4cf9296271a9c5c40b0fa34f69b6125c2d14457",
          "SHA1=10fb4ba6b2585ea02e7afb53ff34bf184eeb1a5d",
          "SHA1=f6793243ad20359d8be40d3accac168a15a327fb",
          "SHA1=b34a012887ddab761b2298f882858fa1ff4d99f1",
          "SHA1=71469dce9c2f38d0e0243a289f915131bf6dd2a8",
          "SHA1=10115219e3595b93204c70eec6db3e68a93f3144",
          "SHA1=161bae224cf184ed6c09c77fae866d42412c6d25",
          "SHA1=07f78a47f447e4d8a72ad4bc6a26427b9577ec82",
          "SHA1=2929de0b5b5e1ba1cce1908e9d800aa21f448b3d",
          "SHA1=745335bcdf02fb42df7d890a24858e16094f48fd",
          "SHA1=2a202830db58d5e942e4f6609228b14095ed2cab",
          "SHA1=0167259abd9231c29bec32e6106ca93a13999f90",
          "SHA1=c23eeb6f18f626ce1fd840227f351fa7543bb167",
          "SHA1=613a9df389ad612a5187632d679da11d60f6046a",
          "SHA1=1ce17c54c6884b0319d5aabbe7f96221f4838514",
          "SHA1=025c4e1a9c58bf10be99f6562476b7a0166c6b86",
          "SHA1=c3aafe8f67c6738489377031cb5a1197e99b202d",
          "SHA1=50c6b3cafc35462009d02c10f2e79373936dd7bb",
          "SHA1=6df35a0c2f6d7d39d24277137ea840078dafb812",
          "SHA1=f92faed3ef92fa5bc88ebc1725221be5d7425528",
          "SHA1=3bd1a88cc7dae701bc7085639e1c26ded3f8ccb3",
          "SHA1=a3ed5cbfbc17b58243289f3cf575bf04be49591d",
          "SHA1=552730553a1dea0290710465fb8189bdd0eaad42",
          "SHA1=0291d0457acaf0fe8ed5c3137302390469ce8b35",
          "SHA1=07f282db28771838d0e75d6618f70d76acfe6082",
          "SHA1=e6765d8866cad6193df1507c18f31fa7f723ca3e",
          "SHA1=22c9da04847c26188226c3a345e2126ef00aa19e",
          "SHA1=43501832ce50ccaba2706be852813d51de5a900f",
          "SHA1=cb3f30809b05cf02bc29d4a7796fb0650271e542",
          "SHA1=ed86bb62893e6ffcdfd2ecae2dea77fdf6bf9bde",
          "SHA1=3b6b35bca1b05fafbfc883a844df6d52af44ccdc",
          "SHA1=928b5971a0f7525209d599e2ef15c31717047022",
          "SHA1=b5696e2183d9387776820ef3afa388200f08f5a6",
          "SHA1=ebd8b7e964b8c692eea4a8c406b9cd0be621ebe2",
          "SHA1=fe18c58fbd0a83d67920e037d522c176704d2ca3",
          "SHA1=9c1c9032aa1e33461f35dbf79b6f2d061bfc6774",
          "SHA1=8e126f4f35e228fdd3aa78d533225db7122d8945",
          "SHA1=064de88dbbea67c149e779aac05228e5405985c7",
          "SHA1=30a80f560f18609c1123636a8a1a1ef567fa67a7",
          "SHA1=98130128685c8640a8a8391cb4718e98dd8fe542",
          "SHA1=a5914161f8a885702427cf75443fb08d28d904f0",
          "SHA1=48f03a13b0f6d3d929a86514ce48a9352ffef5ad",
          "SHA1=fff4f28287677caabc60c8ab36786c370226588d",
          "SHA1=bb5b17cff0b9e15f1648b4136e95bd20d899aef5",
          "SHA1=b2f5d3318aab69e6e0ca8da4a4733849e3f1cee2",
          "SHA1=635a39ff5066e1ac7c1c5995d476d8c233966dda",
          "SHA1=5ed22c0033aed380aa154e672e8db3a2d4c195c4",
          "SHA1=87e20486e804bfff393cc9ad9659858e130402a2",
          "SHA1=4dd86ff6f7180abebcb92e556a486abe7132754c",
          "SHA1=39169c9b79502251ca2155c8f1cd7e63fd9a42e9",
          "SHA1=7f7d144cc80129d0db3159ea5d4294c34b79b20a",
          "SHA1=8692274681e8d10c26ddf2b993f31974b04f5bf0",
          "SHA1=ea4a405445bb6e58c16b81f6d5d2c9a9edde419b",
          "SHA1=da970a01cecff33a99c217a42297cec4d1fe66d6",
          "SHA1=1f3799fed3cf43254fe30dcdfdb8dc02d82e662b",
          "SHA1=3d2309f7c937bfcae86097d716a8ef66c1337a3c",
          "SHA1=02a9314109e47c5ce52fa553ea57070bf0f8186a",
          "SHA1=91f832f46e4c38ecc9335460d46f6f71352cffed",
          "SHA1=76568d987f8603339b8d1958f76de2b957811f66",
          "SHA1=e841c8494b715b27b33be6f800ca290628507aba",
          "SHA1=b555aad38df7605985462f3899572931ee126259",
          "SHA1=115edd175c346fd3fbc9f113ee5ccd03b5511ee1",
          "SHA1=3d27013557b5e68e7212a2f78dfe60c5a2a46327",
          "SHA1=bb6ef5518df35d9508673d5011138add8c30fc27",
          "SHA1=9086e670e3a4518c0bcdf0da131748d4085ef42b",
          "SHA1=f6728821eddd14a21a9536e0f138c6d71cbd9307",
          "SHA1=34b677fba9dcab9a9016332b3332ce57f5796860",
          "SHA1=a63e9ecdebaf4ef9c9ec3362ff110b8859cc396d",
          "SHA1=8cd9df52b20b8f792ac53f57763dc147d7782b1e",
          "SHA1=fcae2ea5990189f6f230b51e398e3000b71897f2",
          "SHA1=27371f45f42383029c3c2e6d64a22e35dc772a72",
          "SHA1=b6eb40ea52b47f03edb8f45e2e431b5f666df8c5",
          "SHA1=9f27987c32321f8da099efc1dc60a73f8f629d3a",
          "SHA1=40372b4de2db020ce2659e1de806d4338fd7ebef",
          "SHA1=18693de1487c55e374b46a7728b5bf43300d4f69",
          "SHA1=b2f955b3e6107f831ebe67997f8586d4fe9f3e98",
          "SHA1=005754dab657ddc6dae28eee313ca2cc6a0c375c",
          "SHA1=0bec69c1b22603e9a385495fbe94700ac36b28e5",
          "SHA1=bd39ef9c758e2d9d6037e067fbb2c1f2ac7feac8",
          "SHA1=23f562f8d5650b2fb92382d228013f2e36e35d6c",
          "SHA1=a48aa80942fc8e0699f518de4fd6512e341d4196",
          "SHA1=e42bd2f585c00a1d6557df405246081f89542d15",
          "SHA1=bf5515fcf120c2548355d607cfd57e9b3e0af6e9",
          "SHA1=89a74d0e9fd03129082c5b868f5ad62558ca34fd",
          "SHA1=948368fe309652e8d88088d23e1df39e9c2b6649",
          "SHA1=a14cd928c60495777629be283c1d5b8ebbab8c0d",
          "SHA1=1f25f54e9b289f76604e81e98483309612c5a471",
          "SHA1=25bf4e30a94df9b8f8ab900d1a43fd056d285c9d",
          "SHA1=d1fb740210c1fa2a52f6748b0588ae77de590b9d",
          "SHA1=dac68b8ee002d5bb61be3d59908a61a26efb7c09",
          "SHA1=a56598e841ae694ac78c37bf4f8c09f9eaf3271f",
          "SHA1=465abe9634c199a5f80f8a4f77ec3118c0d69652",
          "SHA1=a0cefb5b55f7a7a145b549613e26b6805515a1ad",
          "SHA1=36dca91fb4595de38418dffc3506dc78d7388c2c",
          "SHA1=92138cfc14f9e2271f641547e031d5d63c6de19a",
          "SHA1=fcf9978cf1af2e9b1e2eaf509513664dfcc1847b",
          "SHA1=d02403f85be6f243054395a873b41ef8a17ea279",
          "SHA1=4da007dd298723f920e194501bb49bab769dfb14",
          "SHA1=85076aa3bffb40339021286b73d72dd5a8e4396a",
          "SHA1=221717a48ee8e2d19470579c987674f661869e17",
          "SHA1=a249278a668d4df30af9f5d67ebb7d2cd160beaa",
          "SHA1=6b5aa51f4717d123a468e9e9d3d154e20ca39d56",
          "SHA1=b5a8e2104d76dbb04cd9ffe86784113585822375",
          "SHA1=02534b5b510d978bac823461a39f76b4f0ac5aa3",
          "SHA1=538bb45f30035f39d41bd13818fe0c0061182cfe",
          "SHA1=6d09d826581baa1817be6fbd44426db9b05f1909",
          "SHA1=197811ec137e9916e6692fc5c28f6d6609ffc20e",
          "SHA1=c3ca396b5af2064c6f7d05fa0fb697e68d0b9631",
          "SHA1=cf9baf57e16b73d7a4a99dd0c092870deba1a997",
          "SHA1=0320534df24a37a245a0b09679a5adb27018fb5f",
          "SHA1=4c8349c6345c8d6101fb896ea0a74d0484c56df0",
          "SHA1=9b2ef5f7429d62342163e001c7c13fb866dbe1ef",
          "SHA1=6abbc3003c7aa69ce79cbbcd2e3210b07f21d202",
          "SHA1=062457182ab08594c631a3f897aeb03c6097eb77",
          "SHA1=947c76c8c8ba969797f56afd1fa1d1c4a1e3ed25",
          "SHA1=d6de8211dba7074d92b5830618176a3eb8eb6670",
          "SHA1=8302802b709ad242a81b939b6c90b3230e1a1f1e",
          "SHA1=492e40b01a9a6cec593691db4838f20b3eaeacc5",
          "SHA1=83506de48bd0c50ea00c9e889fe980f56e6c6e1b",
          "SHA1=fe54a1acc5438883e5c1bba87b78bb7322e2c739",
          "SHA1=020580278d74d0fe741b0f786d8dca7554359997",
          "SHA1=3c1c3f5f5081127229ba0019fbf0efc2a9c1d677",
          "SHA1=e2d98e0e178880f10434059096f936b2c06ed8f4",
          "SHA1=03506a2f87d1523e844fba22e7617ab2a218b4b7",
          "SHA1=fee00dde8080c278a4c4a6d85a5601edc85a1b3d",
          "SHA1=ba430f3c77e58a4dc1a9a9619457d1c45a19617f",
          "SHA1=c257aa4094539719a3c7b7950598ef872dbf9518",
          "SHA1=bc62fe2b38008f154fc9ea65d851947581b52f49",
          "SHA1=fe237869b2b496deb52c0bc718ada47b36fc052e",
          "SHA1=0a62c574603158d2d0c3be2a43c6bb0074ed297c",
          "SHA1=86f34eaea117f629297218a4d196b5729e72d7b9",
          "SHA1=e0b263f2d9c08f27c6edf5a25aa67a65c88692b0",
          "SHA256=9dc7beb60a0a6e7238fc8589b6c2665331be1e807b4d2b3ddd1c258dbbd3e2f7",
          "SHA256=06ddf49ac8e06e6b83fccba1141c90ea01b65b7db592c54ffe8aa6d30a75c0b8",
          "SHA256=822982c568b6f44b610f8dc4ab5d94795c33ae08a6a608050941264975c1ecdb",
          "SHA256=082a79311da64b6adc3655e79aa090a9262acaac3b917a363b9571f520a17f6a",
          "SHA256=618b15970671700188f4102e5d0638184e2723e8f57f7e917fa49792daebdadb",
          "SHA256=5b932eab6c67f62f097a3249477ac46d80ddccdc52654f8674060b4ddf638e5d",
          "SHA256=82ac05fefaa8c7ee622d11d1a378f1d255b647ab2f3200fd323cc374818a83f2",
          "SHA256=29d765e29d2f06eb511ee88b2e514c9df1a9020a768ddd3d2278d9045e9cdb4a",
          "SHA256=f461414a2596555cece5cfee65a3c22648db0082ca211f6238af8230e41b3212",
          "SHA256=beef40f1b4ce0ff2ee5c264955e6b2a0de6fe4089307510378adc83fad77228b",
          "SHA256=9a42fa1870472c38a56c0a70f62e57a3cdc0f5bc142f3a400d897b85d65800ac",
          "SHA256=f03f0fb3a26bb83e8f8fa426744cf06f2e6e29f5220663b1d64265952b8de1a1",
          "SHA256=50819a1add4c81c0d53203592d6803f022443440935ff8260ff3b6d5253c0c76",
          "SHA256=6b5cf41512255237064e9274ca8f8a3fef820c45aa6067c9c6a0e6f5751a0421",
          "SHA256=575e58b62afab094c20c296604dc3b7dd2e1a50f5978d8ee24b7dca028e97316",
          "SHA256=26bea3b3ab2001d91202f289b7e41499d810474607db7a0893ceab74f5532f47",
          "SHA256=b169a5f643524d59330fafe6e3e328e2179fc5116ee6fae5d39581467d53ac03",
          "SHA256=b8807e365be2813b7eccd2e4c49afb0d1e131086715638b7a6307cd7d7e9556c",
          "SHA256=28f5aa194a384680a08c0467e94a8fc40f8b0f3f2ac5deb42e0f51a80d27b553",
          "SHA256=9bb09752cf3a464455422909edef518ac18fe63cf5e1e8d9d6c2e68db62e0c87",
          "SHA256=8578bff36e3b02cc71495b647db88c67c3c5ca710b5a2bd539148550595d0330",
          "SHA256=a32dc2218fb1f538fba33701dfd9ca34267fda3181e82eb58b971ae8b78f0852",
          "SHA256=2c14bea0d85c9cad5c5f5c8d0e5442f6deb9e93fe3ad8ea5e8e147821c6f9304",
          "SHA256=23e89fd30a1c7db37f3ea81b779ce9acf8a4294397cbb54cff350d54afcfd931",
          "SHA256=f6c316e2385f2694d47e936b0ac4bc9b55e279d530dd5e805f0d963cb47c3c0d",
          "SHA256=b0a27ac1a8173413de13860d2b2e34cb6bc4d1149f94b62d319042e11d8b004c",
          "SHA256=897f2bbe81fc3b1ae488114b93f3eb0133a85678d061c7a6f718507971f33736",
          "SHA256=497a836693be1b330993e2be64f6c71bf290c127faca1c056abd0dc374654830",
          "SHA256=8e035beb02a411f8a9e92d4cf184ad34f52bbd0a81a50c222cdd4706e4e45104",
          "SHA256=f9f2091fccb289bcf6a945f6b38676ec71dedb32f3674262928ccaf840ca131a",
          "SHA256=40556dd9b79b755cc0b48d3d024ceb15bd2c0e04960062ab2a85cd7d4d1b724a",
          "SHA256=ac5fb90e88d8870cd5569e661bea98cf6b001d83ab7c65a5196ea3743146939a",
          "SHA256=12b0000698b79ea3c8178b9e87801cc34bad096a151a8779559519deafd4e3f0",
          "SHA256=9e56e96df36237e65b3d7dbc490afdc826215158f6278cd579c576c4b455b392",
          "SHA256=ec96b15ce218f97ec1d8f07f13b052d274c4c8438f31daf246ccfaaee5e1bebd",
          "SHA256=da70fa44290f949e9b3e0fcfe0503de46e82e0472e8e3c360da3fd2bfa364eee",
          "SHA256=accb1a6604efb1b3ce9345c9fd62fe717a84c3e089e09c638e461df89193ef01",
          "SHA256=083f821d90e607ed93221e71d4742673e74f573d0755a96ad17d1403f65a2254",
          "SHA256=c7bccc6f38403def4690e00a0b31eda05973d82be8953a3379e331658c51b231",
          "SHA256=0740359baef32cbb0b14a9d1bd3499ea2e770ff9b1c85898cfac8fd9aca4fa39",
          "SHA256=32882949ea084434a376451ff8364243a50485a3b4af2f2240bb5f20c164543d",
          "SHA256=3ca5d47d076e99c312578ef6499e1fa7b9db88551cfc0f138da11105aca7c5e1",
          "SHA256=f8236fc01d4efaa48f032e301be2ebba4036b2cd945982a29046eca03944d2ae",
          "SHA256=05b146a48a69dd62a02759487e769bd30d39f16374bc76c86453b4ae59e7ffa4",
          "SHA256=8922be14c657e603179f1dd94dc32de7c99d2268ac92d429c4fdda7396c32e50",
          "SHA256=aafa642ca3d906138150059eeddb6f6b4fe9ad90c6174386cfe13a13e8be47d9",
          "SHA256=087270d57f1626f29ba9c25750ca19838a869b73a1f71af50bdf37d6ff776212",
          "SHA256=008fa89822b7a1f91e5843169083202ea580f7b06eb6d5cae091ba844d035f25",
          "SHA256=b2486f9359c94d7473ad8331b87a9c17ca9ba6e4109fd26ce92dff01969eaa09",
          "SHA256=dfc80e0d468a2c115a902aa332a97e3d279b1fc3d32083e8cf9a4aadf3f54ad1",
          "SHA256=0d10c4b2f56364b475b60bd2933273c8b1ed2176353e59e65f968c61e93b7d99",
          "SHA256=5bc3994612624da168750455b363f2964e1861dba4f1c305df01b970ac02a7ae",
          "SHA256=36c65aeb255c06898ffe32e301030e0b74c8bca6fe7be593584b8fdaacd4e475",
          "SHA256=30e083cd7616b1b969a92fd18cf03097735596cce7fcf3254b2ca344e526acc2",
          "SHA256=15cf366f7b3ee526db7ce2b5253ffebcbfaa4f33a82b459237c049f854a97c0c",
          "SHA256=be70be9d84ae14ea1fa5ec68e2a61f6acfe576d965fe51c6bac78fba01a744fb",
          "SHA256=7b846b0a717665e4d9fb313f25d1f6a5b782e495387aea45cf87ad3c049ac0db",
          "SHA256=85b9d7344bf847349b5d58ebe4d44fd63679a36164505271593ef1076aa163b2",
          "SHA256=749b0e8c8c8b7dda8c2063c708047cfe95afa0a4d86886b31a12f3018396e67c",
          "SHA256=4999541c47abd4a7f2a002c180ae8d31c19804ce538b85870b8db53d3652862b",
          "SHA256=56066ed07bad3b5c1474e8fae5ee2543d17d7977369b34450bd0775517e3b25c",
          "SHA256=e6a7b0bc01a627a7d0ffb07faddb3a4dd96b6f5208ac26107bdaeb3ab1ec8217",
          "SHA256=0f58e09651d48d2b1bcec7b9f7bb85a2d1a7b65f7a51db281fe0c4f058a48597",
          "SHA256=cf9451c9ccc5509b9912965f79c2b95eb89d805b2a186d7521d3a262cf5a7a37",
          "SHA256=2456a7921fa8ab7b9779e5665e6b42fccc019feb9e49a9a28a33ec0a4bb323c4",
          "SHA256=7a7e8df7173387aec593e4fe2b45520ea3156c5f810d2bb1b2784efd1c922376",
          "SHA256=eab9b5b7e5fab1c2d7d44cd28f13ae8bb083d9362d2b930d43354a3dfd38e05a",
          "SHA256=c7cd14c71bcac5420872c3d825ff6d4be6a86f3d6a8a584f1a756541efff858e",
          "SHA256=ece76b79feafb38ae4371e104b6dcbb4253ff3b2acbe5bd14ce6e47525c24f4a",
          "SHA256=42b22faa489b5de936db33f12184f6233198bdf851a18264d31210207827ba25",
          "SHA256=d7aa8abdda8a68b8418e86bef50c19ef2f34bc66e7b139e43c2a99ab48c933be",
          "SHA256=4af8192870afe18c77381dfaf8478f8914fa32906812bb53073da284a49ae4c7",
          "SHA256=21617210249d2a35016e8ca6bd7a1edda25a12702a2294d56010ee8148637f5a",
          "SHA256=c0d88db11d0f529754d290ed5f4c34b4dba8c4f2e5c4148866daabeab0d25f9c",
          "SHA256=19dfacea1b9f19c0379f89b2424ceb028f2ce59b0db991ba83ae460027584987",
          "SHA256=4136f1eb11cc463a858393ea733d5f1c220a3187537626f7f5d63eccf7c5a03f",
          "SHA256=f6157e033a12520c73dcedf8e49cd42d103e5874c34d6527bb9de25a5d26e5ad",
          "SHA256=e7af7bcb86bd6bab1835f610671c3921441965a839673ac34444cf0ce7b2164e",
          "SHA256=f9b01406864ab081aa77eef4ad15cb2dd2f830d1ef54f52622a59ff1aeb05ba5",
          "SHA256=a2d32c28eb5945b85872697d7cfbe87813c09a0e1be28611563755f68b9cb88b",
          "SHA256=569fe70bedd0df8585689b0e88ad8bd0544fdf88b9dbfc2076f4bdbcf89c28aa",
          "SHA256=a78c9871da09fab21aec9b88a4e880f81ecb1ed0fa941f31cc2f041067e8e972",
          "SHA256=b8c71e1844e987cd6f9c2baf28d9520d4ccdd8593ce7051bb1b3c9bf1d97076a",
          "SHA256=af7ca247bf229950fb48674b21712761ac650d33f13a4dca44f61c59f4c9ac46",
          "SHA256=6908ebf52eb19c6719a0b508d1e2128f198d10441551cbfb9f4031d382f5229f",
          "SHA256=06a0ec9a316eb89cb041b1907918e3ad3b03842ec65f004f6fa74d57955573a4",
          "SHA256=fd223833abffa9cd6cc1848d77599673643585925a7ee51259d67c44d361cce8",
          "SHA256=31b66a57fae0cc28a6a236d72a35c8b6244f997e700f9464f9cbf800dbf8bee6",
          "SHA256=2fd43a749b5040ebfafd7cdbd088e27ef44341d121f313515ebde460bf3aaa21",
          "SHA256=773b4a1efb9932dd5116c93d06681990759343dfe13c0858d09245bc610d5894",
          "SHA256=52f3905bbd97dcd2dbd22890e5e8413b9487088f1ee2fa828030a6a45b3975fd",
          "SHA256=86047bb1969d1db455493955fd450d18c62a3f36294d0a6c3732c88dfbcc4f62",
          "SHA256=aaf04d89fd15bc61265e545f8e1da80e20f59f90058ed343c62ee24358e3af9e",
          "SHA256=e5ddfa39540d4e7ada56cdc1ebd2eb8c85a408ec078337488a81d1c3f2aaa4ff",
          "SHA256=8b30b2dc36d5e8f1ffc7281352923773fb821cdf66eb6516f82c697a524b599b",
          "SHA256=469713c76c7a887826611b8c7180209a8bb6250f91d0f1eb84ac4d450ef15870",
          "SHA256=a906251667a103a484a6888dca3e9c8c81f513b8f037b98dfc11440802b0d640",
          "SHA256=49c827cf48efb122a9d6fd87b426482b7496ccd4a2dbca31ebbf6b2b80c98530",
          "SHA256=bcca03ce1dd040e67eb71a7be0b75576316f0b6587b2058786fda8b6f0a5adfd",
          "SHA256=0aab2deae90717a8876d46d257401d265cf90a5db4c57706e4003c19eee33550",
          "SHA256=406b844f4b5c82caf26056c67f9815ad8ecf1e6e5b07d446b456e5ff4a1476f9",
          "SHA256=10ad50fcb360dcab8539ea322aaf2270565dc835b7535790937348523d723d6b",
          "SHA256=c4f041de66ec8cc5ab4a03bbc46f99e073157a4e915a9ab4069162de834ffc5c",
          "SHA256=139f8412a7c6fdc43dcfbbcdba256ee55654eb36a40f338249d5162a1f69b988",
          "SHA256=793b78e70b3ae3bb400c5a8bc4d2d89183f1d7fc70954aed43df7287248b6875",
          "SHA256=492113a223d6a3fc110059fe46a180d82bb8e002ef2cd76cbf0c1d1eb8243263",
          "SHA256=b34e2d9f3d4ef59cf7af18e17133a6a06509373e69e33c8eecb2e30501d0d9e4",
          "SHA256=f936ec4c8164cbd31add659b61c16cb3a717eac90e74d89c47afb96b60120280",
          "SHA256=60ee78a2b070c830fabb54c6bde0d095dff8fad7f72aa719758b3c41c72c2aa9",
          "SHA256=c8ae217860f793fce3ad0239d7b357dba562824dd7177c9d723ca4d4a7f99a12",
          "SHA256=29348ebe12d872c5f40e316a0043f7e5babe583374487345a79bad0ba93fbdfe",
          "SHA256=5f6fec8f7890d032461b127332759c88a1b7360aa10c6bd38482572f59d2ba8b",
          "SHA256=e8ec06b1fa780f577ff0e8c713e0fd9688a48e0329c8188320f9eb62dfc0667f",
          "SHA256=770f33259d6fb10f4a32d8a57d0d12953e8455c72bb7b60cb39ce505c507013a",
          "SHA256=b0b80a11802b4a8ca69c818a03e76e7ef57c2e293de456439401e8e6073f8719",
          "SHA256=bc49cb96f3136c3e552bf29f808883abb9e651040415484c1736261b52756908",
          "SHA256=4c89c907b7525b39409af1ad11cc7d2400263601edafc41c935715ef5bd145de",
          "SHA256=0440ef40c46fdd2b5d86e7feef8577a8591de862cfd7928cdbcc8f47b8fa3ffc",
          "SHA256=200f98655d1f46d2599c2c8605ebb7e335fee3883a32135ca1a81e09819bc64a",
          "SHA256=b0eb4d999e4e0e7c2e33ff081e847c87b49940eb24a9e0794c6aa9516832c427",
          "SHA256=673bbc7fa4154f7d99af333014e888599c27ead02710f7bc7199184b30b38653",
          "SHA256=4b97d63ebdeda6941bb8cef5e94741c6cca75237ca830561f2262034805f0919",
          "SHA256=d50cb5f4b28c6c26f17b9d44211e515c3c0cc2c0c4bf24cd8f9ed073238053ad",
          "SHA256=62764ddc2dce74f2620cd2efd97a2950f50c8ac5a1f2c1af00dc5912d52f6920",
          "SHA256=6994b32e3f3357f4a1d0abe81e8b62dd54e36b17816f2f1a80018584200a1b77",
          "SHA256=751e9376cb7cb9de63e1808d43579d787d3f6d659173038fe44a2d7fdb4fd17e",
          "SHA256=87565ff08a93a8ff41ea932bf55dec8e0c7e79aba036507ea45df9d81cb36105",
          "SHA256=2da2b883e48e929f5365480d487590957d9e6582cc6da2c0b42699ba85e54fe2",
          "SHA256=627e13da6a45006fff4711b14754f9ccfac9a5854d275da798a22f3a68dd1eaa",
          "SHA256=94ba4bcbdb55d6faf9f33642d0072109510f5c57e8c963d1a3eb4f9111f30112",
          "SHA256=704c6ffe786bc83a73fbdcd2edd50f47c3b5053da7da6aa4c10324d389a31db4",
          "SHA256=d41e39215c2c1286e4cd3b1dc0948adefb161f22bc3a78756a027d41614ee4ff",
          "SHA256=0f7bfa10075bf5c193345866333d415509433dbfe5a7d45664b88d72216ff7c3",
          "SHA256=14b89298134696f2fd1b1df0961d36fa6354721ea92498a349dc421e79447925",
          "SHA256=3b2cd65a4fbdd784a6466e5196bc614c17d1dbaed3fd991d242e3be3e9249da6",
          "SHA256=2ce4f8089b02017cbe86a5f25d6bc69dd8b6f5060c918a64a4123a5f3be1e878",
          "SHA256=e99580e25f419b5ad90669e0c274cf63d30efa08065d064a863e655bdf77fb59",
          "SHA256=a74e8f94d2c140646a8bb12e3e322c49a97bd1b8a2e4327863d3623f43d65c66",
          "SHA256=47356707e610cfd0be97595fbe55246b96a69141e1da579e6f662ddda6dc5280",
          "SHA256=18c909a2b8c5e16821d6ef908f56881aa0ecceeaccb5fa1e54995935fcfd12f7",
          "SHA256=95e5b5500e63c31c6561161a82f7f9373f99b5b1f54b018c4866df4f2a879167",
          "SHA256=5c1585b1a1c956c7755429544f3596515dfdf928373620c51b0606a520c6245a",
          "SHA256=82b7fa34ad07dbf9afa63b2f6ed37973a1b4fe35dee90b3cf5c788c15c9f08f7",
          "SHA256=a85d3fd59bb492a290552e5124bfe3f9e26a3086d69d42ccc44737b5a66673ec",
          "SHA256=ea50f22daade04d3ca06dedb497b905215cba31aae7b4cab4b533fda0c5be620",
          "SHA256=d032001eab6cad4fbef19aab418650ded00152143bd14507e17d62748297c23f",
          "SHA256=4d42678df3917c37f44a1506307f1677b9a689efcf350b1acce7e6f64b514905",
          "SHA256=30061ef383e18e74bb067fbca69544f1a7544e8dc017d4e7633d8379aff4c3c3",
          "SHA256=7433f14b40c674c5e87b6210c330d5bcaf2f6f52d632ae29e9b7cf3ca405665b",
          "SHA256=818787057fc60ac8b957aa37d750aa4bace8e6a07d3d28b070022ee6dcd603ab",
          "SHA256=c4fb31e3f24e40742a1b9855a2d67048fe64b26d8d2dbcec77d2d5deeded2bcc",
          "SHA256=5295080de37d4838e15dec4e3682545033d479d3d9ac28d74747c086559fb968",
          "SHA256=7824931e55249a501074a258b4f65cd66157ee35672ba17d1c0209f5b0384a28",
          "SHA256=07759750fbb93c77b5c3957c642a9498fcff3946a5c69317db8d6be24098a4a0",
          "SHA256=51805bb537befaac8ce28f2221624cb4d9cefdc0260bc1afd5e0bc97bf1f9f93",
          "SHA256=e6f764c3b5580cd1675cbf184938ad5a201a8c096607857869bd7c3399df0d12",
          "SHA256=2faf95a3405578d0e613c8d88d534aa7233da0a6217ce8475890140ab8fb33c8",
          "SHA256=af4f42197f5ce2d11993434725c81ecb6f54025110dedf56be8ffc0e775d9895",
          "SHA256=baf7fbc4743a81eb5e4511023692b2dfdc32ba670ba3e4ed8c09db7a19bd82d3",
          "SHA256=a42f4ae69b8755a957256b57eb3d319678eab81705f0ffea0d649ace7321108f",
          "SHA256=4bca0a401b364a5cc1581a184116c5bafa224e13782df13272bc1b748173d1be",
          "SHA256=e4b2c0aa28aac5e197312a061b05363e2e0387338b28b23272b5b6659d29b1d8",
          "SHA256=69866557566c59772f203c11f5fba30271448e231b65806a66e48f41e3804d7f",
          "SHA256=93aa3066ae831cdf81505e1bc5035227dc0e8f06ebbbb777832a17920c6a02fe",
          "SHA256=bed4285d0f8d18f17ddaa53a98a475c87c04c4d167499e24c770da788e5d45f4",
          "SHA256=fa9abb3e7e06f857be191a1e049dd37642ec41fb2520c105df2227fcac3de5d5",
          "SHA256=07beac65e28ee124f1da354293a3d6ad7250ed1ce29b8342acfd22252548a5af",
          "SHA256=9a67626fb468d3f114c23ac73fd8057f43d06393d3eca04da1d6676f89da2d40",
          "SHA256=7f4555a940ce1156c9bcea9a2a0b801f9a5e44ec9400b61b14a7b1a6404ffdf6",
          "SHA256=7a84703552ae032a0d1699a081e422ed6c958bbe56d5b41839c8bfa6395bee1d",
          "SHA256=ddf427ce55b36db522f638ba38e34cd7b96a04cb3c47849b91e7554bfd09a69a",
          "SHA256=64d4370843a07e25d4ceb68816015efcaeca9429bb5bb692a88e615b48c7da96",
          "SHA256=c8f9e1ad7b8cce62fba349a00bc168c849d42cfb2ca5b2c6cc4b51d054e0c497",
          "SHA256=fefc070a5f6a9c0415e1c6f44512a33e8d163024174b30a61423d00d1e8f9bf2",
          "SHA256=8d9a2363b757d3f127b9c6ed8f7b8b018e652369bc070aa3500b3a978feaa6ce",
          "SHA256=d43520128871c83b904f3136542ea46644ac81a62d51ae9d3c3a3f32405aad96",
          "SHA256=efa56907b9d0ec4430a5d581f490b6b9052b1e979da4dab6a110ab92e17d4576",
          "SHA256=1d23ab46ad547e7eef409b40756aae9246fbdf545d13946f770643f19c715e80",
          "SHA256=62036cdf3663097534adf3252b921eed06b73c2562655eae36b126c7d3d83266",
          "SHA256=6661320f779337b95bbbe1943ee64afb2101c92f92f3d1571c1bf4201c38c724",
          "SHA256=3033ff03e6f523726638b43d954bc666cdd26483fa5abcf98307952ff88f80ee",
          "SHA256=6964a5d85639baee288555797992861232e75817f93028b50b8c6d34aa38b05b",
          "SHA256=06c5ebd0371342d18bc81a96f5e5ce28de64101e3c2fd0161d0b54d8368d2f1f",
          "SHA256=1485c0ed3e875cbdfc6786a5bd26d18ea9d31727deb8df290a1c00c780419a4e",
          "SHA256=6839fcae985774427c65fe38e773aa96ec451a412caa5354ad9e2b9b54ffe6c1",
          "SHA256=deade507504d385d8cae11365a2ac9b5e2773ff9b61624d75ffa882d6bb28952",
          "SHA256=c42c1e5c3c04163bf61c3b86b04a5ec7d302af7e254990cef359ac80474299da",
          "SHA256=8dafe5f3d0527b66f6857559e3c81872699003e0f2ffda9202a1b5e29db2002e",
          "SHA256=88076e98d45ed3adf0c5355411fe8ca793eb7cec1a1c61f5e1ec337eae267463",
          "SHA256=b0f1fbadc1d7a77557d3d836f7698bd986a3ec9fc5d534ad3403970f071176f7",
          "SHA256=bcb774b6f6ff504d2db58096601bc5cb419c169bfbeaa3af852417e87d9b2aa0",
          "SHA256=4dc24fd07f8fb854e685bc540359c59f177de5b91231cc44d6231e33c9e932b1",
          "SHA256=82b0e1d7a27b67f0e6dc39dc41e880bdaef5d1f69fcec38e08da2ed78e805ef9",
          "SHA256=ad938d15ecfd70083c474e1642a88b078c3cea02cdbddf66d4fb1c01b9b29d9a",
          "SHA256=443c0ba980d4db9213b654a45248fd855855c1cc81d18812cae9d16729ff9a85",
          "SHA256=f3ec3f22639d45b3c865bb1ed7622db32e04e1dbc456298be02bf1f3875c3aac",
          "SHA256=0181d60506b1f3609217487c2c737621d637e1232f243f68c662d045f44d4873",
          "SHA256=c13f5bc4edfbe8f1884320c5d76ca129d00de41a1e61d45195738f125dfe60a7",
          "SHA256=8684aec77b4c3cafc1a6594de7e95695fa698625d4206a6c4b201875f76a5b38",
          "SHA256=c4c9c84b211899ceb0d18a839afa497537a7c7c01ab481965a09788a9e16590c",
          "SHA256=d37996abc8efb29f1ccbb4335ce9ba9158bec86cc4775f0177112e87e4e3be5c",
          "SHA256=1a5c08d40a5e73b9fe63ea5761eaec8f41d916ca3da2acbc4e6e799b06af5524",
          "SHA256=9c2f3e9811f7d0c7463eaa1ee6f39c23f902f3797b80891590b43bbe0fdf0e51",
          "SHA256=bb2422e96ea993007f25c71d55b2eddfa1e940c89e895abb50dd07d7c17ca1df",
          "SHA256=94c71954ac0b1fd9fa2bd5c506a16302100ba75d9f84f39ee9b333546c714601",
          "SHA256=6d68d8a71a11458ddf0cbb73c0f145bee46ef29ce03ad7ece6bd6aa9d31db9b7",
          "SHA256=80e4c83cfa9d675a6746ab846fa5da76d79e87a9297e94e595a2d781e02673b3",
          "SHA256=e858de280bd72d7538386a73e579580a6d5edba87b66b3671dc180229368be19",
          "SHA256=ee7b8eb150df2788bb9d5fe468327899d9f60d6731c379fd75143730a83b1c55",
          "SHA256=8206ce9c42582ac980ff5d64f8e3e310bc2baa42d1a206dd831c6ab397fbd8fe",
          "SHA256=4f02aed3750bc6a924c75e774404f259f721d8f4081ed68aa01cf73ca5430f85",
          "SHA256=81c7bb39100d358f8286da5e9aa838606c98dfcc263e9a82ed91cd438cb130d1",
          "SHA256=0f98492c92e35042b09032e3d9aedc357e4df94fc840217fa1091046f9248a06",
          "SHA256=9b1b15a3aacb0e786a608726c3abfc94968915cedcbd239ddf903c4a54bfcf0c",
          "SHA256=b9dad0131c51e2645e761b74a71ebad2bf175645fa9f42a4ab0e6921b83306e3",
          "SHA256=26ef7b27d1afb685e0c136205a92d29b1091e3dcf6b7b39a4ec03fbbdb57cb55",
          "SHA256=a1e6b431534258954db07039117b3159e889c6b9e757329bbd4126383c60c778",
          "SHA256=d25b5e4d07f594c640dcd93cfc8ab3f0a38348150bd0bfae89f404fbb0d811c6",
          "SHA256=1ef7afea0cf2ef246ade6606ef8b7195de9cd7a3cd7570bff90ba1e2422276f6",
          "SHA256=083a311875173f8c4653e9bbbabb689d14aa86b852e7fa9f5512fc60e0fd2c43",
          "SHA256=89698cad598a56f9e45efffd15d1841e494a2409cc12279150a03842cd6bb7f3",
          "SHA256=a7a665a695ec3c0f862a0d762ad55aff6ce6014359647e7c7f7e3c4dc3be81b7",
          "SHA256=02ebf848fa618eba27065db366b15ee6629d98f551d20612ac38b9f655f37715",
          "SHA256=8b32fc8b15363915605c127ccbf5cbe71778f8dfbf821a25455496e969a01434",
          "SHA256=ee525b90053bb30908b5d7bf4c5e9b8b9d6b7b5c9091a26fa25d30d3ad8ef5d0",
          "SHA256=41ad660820c41fc8b1860b13dc1fea8bc8cb2faceb36ed3e29d40d28079d2b1f",
          "SHA256=42ff11ddb46dfe5fa895e7babf88ee27790cde53a9139fc384346a89e802a327",
          "SHA256=36f45a42ebf2de6962db92aaf8845d7f9fd6895bedc31422adcf31c59a79602d",
          "SHA256=4bd4715d2a7af627da11513e32fab925c872babebdb7ff5675a75815fbf95021",
          "SHA256=4734a0a5d88f44a4939b8d812364cab6ca5f611b9b8ceebe27df6c1ed3a6d8a4",
          "SHA256=e8743094f002239a8a9d6d7852c7852e0bb63cd411b007bd8c194bcba159ef15",
          "SHA256=f0474e76cfd36e37e32cfe5c0a9e05ddee17dd5014d7aa8817ea3634a3540a3f",
          "SHA256=a0931e16cf7b18d15579e36e0a69edad1717b07527b5407f2c105a2f554224b2",
          "SHA256=52d5c35325ce701516f8b04380c9fbdb78ec6bcc13b444f758fdb03d545b0677",
          "SHA256=e1cb86386757b947b39086cc8639da988f6e8018ca9995dd669bdc03c8d39d7d",
          "SHA256=7662187c236003308a7951c2f49c0768636c492f8935292d02f69e59b01d236d",
          "SHA256=24c900024d213549502301c366d18c318887630f04c96bf0a3d6ba74e0df164f",
          "SHA256=b7956e31c2fcc0a84bcedf30e5f8115f4e74eed58916253a0c05c8be47283c57",
          "SHA256=96bf3ee7c6673b69c6aa173bb44e21fa636b1c2c73f4356a7599c121284a51cc",
          "SHA256=d7c81b0f3c14844f6424e8bdd31a128e773cb96cccef6d05cbff473f0ccb9f9c",
          "SHA256=0d676baac43d9e2d05b577d5e0c516fba250391ab0cb11232a4b17fd97a51e35",
          "SHA256=888491196bd8ff528b773a3e453eae49063ad31fb4ca0f9f2e433f8d35445440",
          "IMPHASH=8d070a93a45ed8ba6dba6bfbe0d084e7",
          "IMPHASH=7641a0c227f0a3a45b80bb8af43cd152",
          "IMPHASH=7df0d3ee663fc0e7c72a95e44ba4c82c",
          "IMPHASH=70e1caa5a322b56fd7951f1b2caacb0d",
          "IMPHASH=beceab354c66949088c9e5ed1f1ff2a4",
          "IMPHASH=caa08a0ba5f679b1e5bbae747cb9d626",
          "IMPHASH=420625b024fba72a24025defdf95b303",
          "IMPHASH=65ccc2c578a984c31880b6c5e65257d3",
          "IMPHASH=e717abe060bc5c34925fe3120ac22f45",
          "IMPHASH=41113a3a832353963112b94f4635a383",
          "IMPHASH=3866dd9fe63de457bdbf893bf7050ddf",
          "IMPHASH=3fd33d5b3b52e2db91983ac4b1d7a3c4",
          "IMPHASH=a998fe47a44bfbf2399968e21cfdf7ca",
          "IMPHASH=c9a6e83d931286d1604d1add8403e1e5",
          "IMPHASH=cf0eb2dce2ba2c9ff5dd0da794b8b372",
          "IMPHASH=ea37e43ffc7cfcba181c5cff37a9be1f",
          "IMPHASH=8e35c9460537092672b3c7c14bccc7e0",
          "IMPHASH=7bf14377888c429897eb10a85f70266c",
          "IMPHASH=b351627263648b1d220bb488e7ec7202",
          "IMPHASH=ce10082e1aa4c1c2bd953b4a7208e56a",
          "IMPHASH=a7bd820fa5b895fab06f20739c9f24b8",
          "IMPHASH=be0dd8b8e045356d600ee55a64d9d197",
          "IMPHASH=63fd1582ac2edee50f7ec7eedde38ee8",
          "IMPHASH=6c8d5c79a850eecc2fb0291cebda618d",
          "IMPHASH=c32d9a9af7f702814e1368c689877f3a",
          "IMPHASH=6b387c029257f024a43a73f38afb2629",
          "IMPHASH=df43355c636583e56e92142dcc69cc58",
          "IMPHASH=e3ee9131742bf9c9d43cb9a425e497dd",
          "IMPHASH=c214aac08575c139e48d04f5aee21585",
          "IMPHASH=3c5d2ffd06074f1b09c89465cc8bfbf7",
          "IMPHASH=059c6bd84285f4960e767f032b33f19b",
          "IMPHASH=a09170ef09c55cdca9472c02cb1f2647",
          "IMPHASH=fca0f3c7b6d79f494034b9d2a1f5921a",
          "IMPHASH=0262d4147f21d681f8519ab2af79283f",
          "IMPHASH=832219eb71b8bdb771f1d29d27b0acf4",
          "IMPHASH=514298d18002920ee5a917fc34426417",
          "IMPHASH=26ceec6572c630bdad60c984e51b7da4",
          "IMPHASH=dbf09dd3e675f15c7cc9b4d2b8e6cd90",
          "IMPHASH=4b47f6031c558106eee17655f8f8a32f",
          "IMPHASH=a6c4a7369500900fc172f9557cff22cf",
          "IMPHASH=3b49942ec6cef1898e97f741b2b5df8a",
          "IMPHASH=28dc68bb6d6bf4f6b2db8dd7588b2511",
          "IMPHASH=27f6dc8a247a22308dd1beba5086b302",
          "IMPHASH=7d017945bf90936a6c40f73f91ed02c2",
          "IMPHASH=d51f0f6034eb5e45f0ed4e9b7bbc9c97",
          "IMPHASH=0ad7da35304c75ccf859bc29fe9ed09e",
          "IMPHASH=bf9d32a6ab9effcd2fd6a734e5be98f9",
          "IMPHASH=87fd2b54ed568e2294300e164b8c46f7",
          "IMPHASH=2de3451f3e7b02970582bb8f9fd8c73a",
          "IMPHASH=e97dc162f416bf06745bf9ffdf78a0ff",
          "IMPHASH=2a008187d4a73284ddcc43f1b727b513",
          "IMPHASH=f8e4844312e81dbdb4e8e95e2ad2c127",
          "IMPHASH=4c7cc13a110ccdbb932bb9d7d42efdf4",
          "IMPHASH=45bfe170e0cd654bc1e2ae3fca3ac3f4",
          "IMPHASH=3db9de43d5d530c10d0cd2d43c7a0771"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Malicious Driver Load By Name",
    "id": 39,
    "status": "experimental",
    "description": "Detects loading of known malicious drivers via the file name of the drivers.",
    "references": [
      "https://loldrivers.io/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/03",
    "modified": "2023/12/02",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543.003",
      "attack.t1068"
    ],
    "logsource": {
      "product": "windows",
      "category": "driver_load"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\wfshbr64.sys",
          "\\ktmutil7odm.sys",
          "\\ktes.sys",
          "\\a26363e7b02b13f2b8d697abb90cd5c3.sys",
          "\\kt2.sys",
          "\\4748696211bd56c2d93c21cab91e82a5.sys",
          "\\malicious.sys",
          "\\a236e7d654cd932b7d11cb604629a2d0.sys",
          "\\spwizimgvt.sys",
          "\\c94f405c5929cfcccc8ad00b42c95083.sys",
          "\\fur.sys",
          "\\wantd.sys",
          "\\windbg.sys",
          "\\4118b86e490aed091b1a219dba45f332.sys",
          "\\gmer64.sys",
          "\\1fc7aeeff3ab19004d2e53eae8160ab1.sys",
          "\\poortry2.sys",
          "\\wintapix.sys",
          "\\daxin_blank6.sys",
          "\\6771b13a53b9c7449d4891e427735ea2.sys",
          "\\blacklotus_driver.sys",
          "\\air_system10.sys",
          "\\dkrtk.sys",
          "\\7.sys",
          "\\sense5ext.sys",
          "\\ktgn.sys",
          "\\ndislan.sys",
          "\\nlslexicons0024uvn.sys",
          "\\be6318413160e589080df02bb3ca6e6a.sys",
          "\\4.sys",
          "\\wantd_2.sys",
          "\\e29f6311ae87542b3d693c1f38e4e3ad.sys",
          "\\daxin_blank3.sys",
          "\\gftkyj64.sys",
          "\\daxin_blank2.sys",
          "\\wantd_4.sys",
          "\\reddriver.sys",
          "\\834761775.sys",
          "\\mlgbbiicaihflrnh.sys",
          "\\mjj0ge.sys",
          "\\daxin_blank.sys",
          "\\daxin_blank5.sys",
          "\\poortry1.sys",
          "\\msqpq.sys",
          "\\mimidrv.sys",
          "\\e939448b28a4edc81f1f974cebf6e7d2.sys",
          "\\prokiller64.sys",
          "\\nodedriver.sys",
          "\\wantd_3.sys",
          "\\lctka.sys",
          "\\kapchelper_x64.sys",
          "\\daxin_blank4.sys",
          "\\a9df5964635ef8bd567ae487c3d214c4.sys",
          "\\wantd_6.sys",
          "\\ntbios.sys",
          "\\wantd_5.sys",
          "\\pciecubed.sys",
          "\\mimikatz.sys",
          "\\nqrmq.sys",
          "\\2.sys",
          "\\poortry.sys",
          "\\ntbios_2.sys",
          "\\fgme.sys",
          "\\telephonuafy.sys",
          "\\typelibde.sys",
          "\\daxin_blank1.sys",
          "\\ef0e1725aaf0c6c972593f860531a2ea.sys",
          "\\5a4fe297c7d42539303137b6d75b150d.sys"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives may occur if one of the vulnerable driver names mentioned above didn't change its name between versions. So always make sure that the driver being loaded is the legitimate one and the non vulnerable version.",
      "If you experience a lot of FP you could comment the driver name or its exact known legitimate location (when possible)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Process Hacker Driver Load",
    "id": 40,
    "related": [
      {
        "id": "10cb6535-b31d-4512-9962-513dcbc42cc1",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects driver load of the Process Hacker tool",
    "references": [
      "https://processhacker.sourceforge.io/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/11/16",
    "modified": "2023/05/08",
    "tags": [
      "attack.privilege_escalation",
      "cve.2021.21551",
      "attack.t1543"
    ],
    "logsource": {
      "category": "driver_load",
      "product": "windows"
    },
    "detection": {
      "selection_image": {
        "ImageLoaded|endswith": "\\kprocesshacker.sys"
      },
      "selection_processhack_sysmon": {
        "Hashes|contains": [
          "IMPHASH=821D74031D3F625BCBD0DF08B70F1E77",
          "IMPHASH=F86759BB4DE4320918615DC06E998A39",
          "IMPHASH=0A64EEB85419257D0CE32BD5D55C3A18",
          "IMPHASH=6E7B34DFC017700B1517B230DF6FF0D0"
        ]
      },
      "selection_processhack_hashes": {
        "Imphash": [
          "821D74031D3F625BCBD0DF08B70F1E77",
          "F86759BB4DE4320918615DC06E998A39",
          "0A64EEB85419257D0CE32BD5D55C3A18",
          "6E7B34DFC017700B1517B230DF6FF0D0"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use of process hacker or system informer by developers or system administrators"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - System Informer Driver Load",
    "id": 41,
    "related": [
      {
        "id": "67add051-9ee7-4ad3-93ba-42935615ae8d",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects driver load of the System Informer tool",
    "references": [
      "https://systeminformer.sourceforge.io/",
      "https://github.com/winsiderss/systeminformer"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/05/08",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543"
    ],
    "logsource": {
      "category": "driver_load",
      "product": "windows"
    },
    "detection": {
      "selection_image": {
        "ImageLoaded|endswith": "\\SystemInformer.sys"
      },
      "selection_systeminformer_sysmon": {
        "Hashes|contains": [
          "SHA256=8B9AD98944AC9886EA4CB07700E71B78BE4A2740934BB7E46CA3B56A7C59AD24",
          "SHA256=A41348BEC147CA4D9EA2869817527EB5CEA2E20202AF599D2B30625433BCF454",
          "SHA256=38EE0A88AF8535A11EFE8D8DA9C6812AA07067B75A64D99705A742589BDD846D",
          "SHA256=A773891ACF203A7EB0C0D30942FB1347648F1CD918AE2BFD9A4857B4DCF5081B",
          "SHA256=4C3B81AC88A987BBDF7D41FA0AECC2CEDF5B9BD2F45E7A21F376D05345FC211D",
          "SHA256=3241BC14BEC51CE6A691B9A3562E5C1D52E9D057D27A3D67FD0B245C350B6D34",
          "SHA256=047C42E9BBA28366868847C7DAFC1E043FB038C796422D37220493517D68EE89",
          "SHA256=18931DC81E95D0020466FA091E16869DBE824E543A4C2C8FE644FA71A0F44FEB",
          "SHA256=B4C2EF76C204273132FDE38F0DED641C2C5EE767652E64E4C4071A4A973B6C1B",
          "SHA256=640954AFC268565F7DAA6E6F81A8EE05311E33E34332B501A3C3FE5B22ADEA97",
          "SHA256=251BE949F662C838718F8AA0A5F8211FB90346D02BD63FF91E6B224E0E01B656",
          "SHA256=E2606F272F7BA054DF16BE464FDA57211EF0D14A0D959F9C8DCB0575DF1186E4",
          "SHA256=3A9E1D17BEEB514F1B9B3BACAEE7420285DE5CBDCE89C5319A992C6CBD1DE138"
        ]
      },
      "selection_systeminformer_hashes": {
        "sha256": [
          "8b9ad98944ac9886ea4cb07700e71b78be4a2740934bb7e46ca3b56a7c59ad24",
          "a41348bec147ca4d9ea2869817527eb5cea2e20202af599d2b30625433bcf454",
          "38ee0a88af8535a11efe8d8da9c6812aa07067b75a64d99705a742589bdd846d",
          "a773891acf203a7eb0c0d30942fb1347648f1cd918ae2bfd9a4857b4dcf5081b",
          "4c3b81ac88a987bbdf7d41fa0aecc2cedf5b9bd2f45e7a21f376d05345fc211d",
          "3241bc14bec51ce6a691b9a3562e5c1d52e9d057d27a3d67fd0b245c350b6d34",
          "047c42e9bba28366868847c7dafc1e043fb038c796422d37220493517d68ee89",
          "18931dc81e95d0020466fa091e16869dbe824e543a4c2c8fe644fa71a0f44feb",
          "b4c2ef76c204273132fde38f0ded641c2c5ee767652e64e4c4071a4a973b6c1b",
          "640954afc268565f7daa6e6f81a8ee05311e33e34332b501a3c3fe5b22adea97",
          "251be949f662c838718f8aa0a5f8211fb90346d02bd63ff91e6b224e0e01b656",
          "e2606f272f7ba054df16be464fda57211ef0d14a0d959f9c8dcb0575df1186e4",
          "3a9e1d17beeb514f1b9b3bacaee7420285de5cbdce89c5319a992c6cbd1de138"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "System Informer is regularly used legitimately by system administrators or developers. Apply additional filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Driver Load From A Temporary Directory",
    "id": 42,
    "status": "test",
    "description": "Detects a driver load from a temporary directory",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/02/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "driver_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|contains": "\\Temp\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "There is a relevant set of false positives depending on applications in the environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Vulnerable Driver Load",
    "id": 43,
    "status": "experimental",
    "description": "Detects loading of known vulnerable drivers via their hash.",
    "references": [
      "https://loldrivers.io/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/18",
    "modified": "2023/12/02",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543.003",
      "attack.t1068"
    ],
    "logsource": {
      "product": "windows",
      "category": "driver_load"
    },
    "detection": {
      "selection": {
        "Hashes|contains": [
          "MD5=c996d7971c49252c582171d9380360f2",
          "MD5=da7e98b23b49b7293ee06713032c74f6",
          "MD5=9496585198d726000ea505abc39dbfe9",
          "MD5=649ff59b8e571c1fc6535b31662407aa",
          "MD5=4429f85e2415742c7cf8c9f54905c4b9",
          "MD5=a610cd4c762b5af8575285dafb9baa8f",
          "MD5=d5e76d125d624f8025d534f49e3c4162",
          "MD5=9c8fffef24fc480917236f9a20b80a47",
          "MD5=65b979bcab915c3922578fe77953d789",
          "MD5=598f8fb2317350e5f90b7bd16baf5738",
          "MD5=6691e873354f1914692df104718eebad",
          "MD5=4814205270caa80d35569eee8081838e",
          "MD5=7f9128654c3def08c28e0e13efff0fee",
          "MD5=ce952204558ea66ec1a9632dcbdde8bd",
          "MD5=0c0195c48b6b8582fa6f6373032118da",
          "MD5=370a4ca29a7cf1d6bc0744afc12b236c",
          "MD5=67e03f83c503c3f11843942df32efe5a",
          "MD5=8a70921638ff82bb924456deadcd20e6",
          "MD5=8a212a246b3c41f3ddce5888aaaaacd6",
          "MD5=a346417e9ae2c17a8fbf73302eeb611d",
          "MD5=d4f7c14e92b36c341c41ae93159407dd",
          "MD5=748cf64b95ca83abc35762ad2c25458f",
          "MD5=79ab228766c76cfdf42a64722821711e",
          "MD5=ce67e51b8c0370d1bfe421b79fa8b656",
          "MD5=25190f667f31318dd9a2e36383d5709f",
          "MD5=1f263a57c5ef46c8577744ecb32c9548",
          "MD5=c6cfa2d6e4c443e673c2c12417ea3001",
          "MD5=cceb3a7e3bd0203c807168b393a65a74",
          "MD5=56b54823a79a53747cbe11f8c4db7b1e",
          "MD5=988dabdcf990b134b0ac1e00512c30c4",
          "MD5=09e77d71d626574e6142894caca6e6dd",
          "MD5=c832a4313ff082258240b61b88efa025",
          "MD5=44499d3cab387aa78a4a6eca2ac181fb",
          "MD5=6ff59faea912903af0ba8e80e58612bc",
          "MD5=7461f0f9b931044a9d5f1d44eb4e8e09",
          "MD5=08bac71557df8a9b1381c8c165f64520",
          "MD5=fea9319d67177ed6f36438d2bd9392fb",
          "MD5=6dd82d91f981893be57ff90101a7f7f1",
          "MD5=d4119a5cb07ce945c6549eae74e39731",
          "MD5=cf1113723e3c1c71af80d228f040c198",
          "MD5=0e625b7a7c3f75524e307b160f8db337",
          "MD5=6e1faeee0ebfcb384208772410fe1e86",
          "MD5=58a92520dda53166e322118ee0503364",
          "MD5=916ba55fc004b85939ee0cc86a5191c5",
          "MD5=f16b44cca74d3c3645e4c0a6bb5c0cb9",
          "MD5=db2fc89098ac722dabe3c37ed23de340",
          "MD5=6f5cf7feb9bb8108b68f169b8e625ffe",
          "MD5=d2588631d8aae2a3e54410eaf54f0679",
          "MD5=72acbdd8fac58b71b301980eab3ebfc8",
          "MD5=9cc757a18b86408efc1ce3ed20cbcdac",
          "MD5=230fd3749904ca045ea5ec0aa14006e9",
          "MD5=79329e2917623181888605bc5b302711",
          "MD5=3e4a1384a27013ab7b767a88b8a1bd34",
          "MD5=bafd6bad121e42f940a0b8abc587eadf",
          "MD5=02a1d77ef13bd41cad04abcce896d0b9",
          "MD5=de331f863627dc489f547725d7292bbd",
          "MD5=29122f970a9e766ef01a73e0616d68b3",
          "MD5=2b8814cff6351c2b775387770053bdec",
          "MD5=332db70d2c5c332768ab063ba6ac8433",
          "MD5=40f39a98fb513411dacdfc5b2d972206",
          "MD5=644d687c9f96c82ea2974ccacd8cd549",
          "MD5=825703c494e0d270f797f1ecf070f698",
          "MD5=afae2a21e36158f5cf4f76f896649c75",
          "MD5=dd050e79c515e4a6d1ae36cac5545025",
          "MD5=6133e1008f8c6fc32d4b1a60941bab85",
          "MD5=0e2fc7e7f85c980eb698b9e468c20366",
          "MD5=94c80490b02cc655d2d80597c3aef08f",
          "MD5=4d487f77be4471900d6ccbc47242cc25",
          "MD5=2e3dbb01b282a526bdc3031e0663c41c",
          "MD5=93a23503e26773c27ed1da06bb79e7a4",
          "MD5=ffd0c87d9bf894af26823fbde94c71b6",
          "MD5=a86150f2e29b35369afa2cafd7aa9764",
          "MD5=6126065af2fc2639473d12ee3c0c198e",
          "MD5=c1d3a6bb423739a5e781f7eee04c9cfd",
          "MD5=f0db5af13c457a299a64cf524c64b042",
          "MD5=e5e8ecb20bc5630414707295327d755e",
          "MD5=659a59d7e26b7730361244e12201378e",
          "MD5=8f47af49c330c9fcf3451ad2252b9e04",
          "MD5=dd9596c18818288845423c68f3f39800",
          "MD5=a7d3ebfb3843ee28d9ca18b496bd0eb2",
          "MD5=20125794b807116617d43f02b616e092",
          "MD5=46cae59443ae41f4dbb42e050a9b501a",
          "MD5=21e13f2cb269defeae5e1d09887d47bb",
          "MD5=5bab40019419a2713298a5c9173e5d30",
          "MD5=7314c2bc19c6608d511ef36e17a12c98",
          "MD5=24061b0958874c1cb2a5a8e9d25482d4",
          "MD5=31a4631d77b2357ac9618e2a60021f11",
          "MD5=130c5aec46bdec8d534df7222d160fdb",
          "MD5=592065b29131af32aa18a9e546be9617",
          "MD5=2d64d681d79e0d26650928259530c075",
          "MD5=1ce19950e23c975f677b80ff59d04fae",
          "MD5=318e309e11199ec69d8928c46a4d901b",
          "MD5=d78a29306f42d42cd48ad6bc6c6a7602",
          "MD5=6a094d8e4b00dd1d93eb494099e98478",
          "MD5=0be80db5d9368fdb29fe9d9bfdd02e7c",
          "MD5=ba23266992ad964eff6d358d946b76bd",
          "MD5=560069dc51d3cc7f9cf1f4e940f93cae",
          "MD5=a785b3bc4309d2eb111911c1b55e793f",
          "MD5=ac591a3b4df82a589edbb236263ec70a",
          "MD5=a664904f69756834049e9e272abb6fea",
          "MD5=19f32bf24b725f103f49dc3fa2f4f0bd",
          "MD5=2509a71a02296aa65a3428ddfac22180",
          "MD5=9988fc825675d4d3e2298537fc78e303",
          "MD5=dab9142dc12480bb39f25c9911df6c6c",
          "MD5=2c47725db0c5eb5c2ecc32ff208bceb6",
          "MD5=bdfe1f0346c066971e1f3d96f7fdaa2c",
          "MD5=7644bed8b74dc294ac77bf406df8ad77",
          "MD5=9ade14e58996a6abbfe2409d6cddba6a",
          "MD5=5212e0957468d3f94d90fa7a0f06b58f",
          "MD5=96e10a2904fff9491762a4fb549ad580",
          "MD5=0c55128c301921ce71991a6d546756ad",
          "MD5=97e90c869b5b0f493b833710931c39ed",
          "MD5=f36b8094c2fbf57f99870bfaeeacb25c",
          "MD5=b3d6378185356326fd8ee4329b0b7698",
          "MD5=9321a61a25c7961d9f36852ecaa86f55",
          "MD5=f758e7d53184faab5bc51f751937fa36",
          "MD5=1f7b2a00fe0c55d17d1b04c5e0507970",
          "MD5=239224202ccdea1f09813a70be8413ee",
          "MD5=996ded363410dfd38af50c76bd5b4fbc",
          "MD5=0fc2653b1c45f08ca0abd1eb7772e3c0",
          "MD5=79b8119b012352d255961e76605567d6",
          "MD5=2e1f8a2a80221deb93496a861693c565",
          "MD5=697bbd86ee1d386ae1e99759b1e38919",
          "MD5=ddc2ffe0ab3fcd48db898ab13c38d88d",
          "MD5=2971d4ee95f640d2818e38d8877c8984",
          "MD5=962a33a191dbe56915fd196e3a868cf0",
          "MD5=7575b35fee4ec8dbd0a61dbca3b972e3",
          "MD5=2d7f1c02b94d6f0f3e10107e5ea8e141",
          "MD5=057ec65bac5e786affeb97c0a0d1db15",
          "MD5=483abeee17e4e30a760ec8c0d6d31d6d",
          "MD5=f23b2adcfab58e33872e5c2d0041ad88",
          "MD5=2601cf769ad6ffee727997679693f774",
          "MD5=b4598c05d5440250633e25933fff42b0",
          "MD5=2e5f016ff9378be41fe98fa62f99b12d",
          "MD5=75d6c3469347de1cdfa3b1b9f1544208",
          "MD5=828bb9cb1dd449cd65a29b18ec46055f",
          "MD5=1bd38ac06ef8709ad23af666622609c9",
          "MD5=e747f164fc89566f934f9ec5627cd8c3",
          "MD5=a01c412699b6f21645b2885c2bae4454",
          "MD5=a216803d691d92acc44ac77d981aa767",
          "MD5=112b4a6d8c205c1287c66ad0009c3226",
          "MD5=68dde686d6999ad2e5d182b20403240b",
          "MD5=2d854c6772f0daa8d1fde4168d26c36b",
          "MD5=9a9dbf5107848c254381be67a4c1b1dd",
          "MD5=3ecd3ca61ffc54b0d93f8b19161b83da",
          "MD5=1ad400766530669d14a077514599e7f3",
          "MD5=4f27c09cc8680e06b04d6a9c34ca1e08",
          "MD5=eaea9ccb40c82af8f3867cd0f4dd5e9d",
          "MD5=043d5a1fc66662a3f91b8a9c027f9be9",
          "MD5=a0e2223868b6133c5712ba5ed20c3e8a",
          "MD5=2b3e0db4f00d4b3d0b4d178234b02e72",
          "MD5=1610342659cb8eb4a0361dbc047a2221",
          "MD5=c842827d4704a5ef53a809463254e1cc",
          "MD5=bf2a954160cb155df0df433929e9102b",
          "MD5=81b72492d45982cd7a4a138676329fd6",
          "MD5=2a2867e1f323320fdeef40c1da578a9a",
          "MD5=b3f132ce34207b7be899f4978276b66d",
          "MD5=3247014ba35d406475311a2eab0c4657",
          "MD5=88d5fc86f0dd3a8b42463f8d5503a570",
          "MD5=0be5c6476dd58072c93af4fca62ee4b3",
          "MD5=3cf7a55ec897cc938aebb8161cb8e74f",
          "MD5=931d4f01b5a88027ef86437f1b862000",
          "MD5=d253c19194a18030296ae62a10821640",
          "MD5=c5f5d109f11aadebae94c77b27cb026f",
          "MD5=15dd3ef7df34f9b464e9b38c2deb0793",
          "MD5=e913a51f66e380837ffe8da6707d4cc4",
          "MD5=c552dae8eaadd708a38704e8d62cf64d",
          "MD5=1f8a9619ab644728ce4cf86f3ad879ea",
          "MD5=f7edd110de10f9a50c2922f1450819aa",
          "MD5=be17a598e0f5314748ade0871ad343e7",
          "MD5=aa1ed3917928f04d97d8a217fe9b5cb1",
          "MD5=880686bceaf66bfde3c80569eb1ebfa7",
          "MD5=bc1eeb4993a601e6f7776233028ac095",
          "MD5=9ab9f3b75a2eb87fafb1b7361be9dfb3",
          "MD5=3a1ba5cd653a9ddce30c58e7c8ae28ae",
          "MD5=5054083cf29649a76c94658ba7ff5bce",
          "MD5=dedd07993780d973c22c93e77ab69fa3",
          "MD5=3aacaa62758fa6d178043d78ba89bebc",
          "MD5=f1a203406a680cc7e4017844b129dcbf",
          "MD5=2399e6f7f868d05623be03a616b4811e",
          "MD5=0d5774527af6e30905317839686b449d",
          "MD5=5bbe4e52bd33f1cdd4cf38c7c65f80ae",
          "MD5=047c06d4d38ea443c9af23a501c4480d",
          "MD5=a72e10ecea2fdeb8b9d4f45d0294086b",
          "MD5=c9c25778efe890baa4087e32937016a0",
          "MD5=0ba6afe0ea182236f98365bd977adfdf",
          "MD5=e626956c883c7ff3aeb0414570135a58",
          "MD5=3e796eb95aca7e620d6a0c2118d6871b",
          "MD5=f3f5c518bc3715492cb0b7c59e94c357",
          "MD5=4e92f1c677e08fd09b57032c5b47ca46",
          "MD5=f22740ba54a400fd2be7690bb204aa08",
          "MD5=3467b0d996251dc56a72fc51a536dd6b",
          "MD5=198b723e13a270bb664dcb9fb6ed42e6",
          "MD5=bdc3b6b83dde7111d5d6b9a2aadf233f",
          "MD5=3651a6990fe38711ebb285143f867a43",
          "MD5=7db75077d53a63531ef2742d98ca6acc",
          "MD5=55c36d43dd930069148008902f431ea5",
          "MD5=f026460a7a720d0b8394f28a1f9203dc",
          "MD5=cb22776d06f1e81cc87faeb0245acde8",
          "MD5=b994110f069d197222508a724d8afdac",
          "MD5=e6eaee1b3e41f404c289e22df66ef66b",
          "MD5=29872c7376c42e2a64fa838dad98aa11",
          "MD5=d21fba3d09e5b060bd08796916166218",
          "MD5=880611326b768c4922e9da8a8effc582",
          "MD5=9c3c250646e11052b1e38500ee0e467b",
          "MD5=178cc9403816c082d22a1d47fa1f9c85",
          "MD5=2c1045bb133b7c9f5115e7f2b20c267a",
          "MD5=707ab1170389eba44ffd4cfad01b5969",
          "MD5=ddf2655068467d981242ea96e3b88614",
          "MD5=7907e14f9bcf3a4689c9a74a1a873cb6",
          "MD5=b3424a229d845a88340045c29327c529",
          "MD5=0b0447072ada1636a14087574a512c82",
          "MD5=0be4a11bc261f3cd8b4dbfebee88c209",
          "MD5=7dd538bcaa98d6c063ead8606066333f",
          "MD5=8a108158431e9a7d08e330fd7a46d175",
          "MD5=e6ea0e8d2edcc6cad3c414a889d17ac4",
          "MD5=288471f132c7249f598032d03575f083",
          "MD5=11fb599312cb1cf43ca5e879ed6fb71e",
          "MD5=2348508499406dec3b508f349949cb51",
          "MD5=fe820a5f99b092c3660762c6fc6c64e0",
          "MD5=c508d28487121828c3a1c2b57acb05be",
          "MD5=91755cc5c3ccf97313dc2bece813b4d9",
          "MD5=2f8653034a35526df88ea0c62b035a42",
          "MD5=3dbf69f935ea48571ea6b0f5a2878896",
          "MD5=7e3a6f880486a4782b896e6dbd9cc26f",
          "MD5=2850608430dd089f24386f3336c84729",
          "MD5=a711e6ab17802fabf2e69e0cd57c54cd",
          "MD5=2eec12c17d6b8deeeac485f47131d150",
          "MD5=e7ab83a655b0cd934a19d94ac81e4eec",
          "MD5=a91a1bc393971a662a3210dac8c17dfd",
          "MD5=2fed983ec44d1e7cffb0d516407746f2",
          "MD5=18439fe2aaeddfd355ef88091cb6c15f",
          "MD5=592756f68ab8ae590662b0c4212a3bb9",
          "MD5=d63c9c1a427a134461258b7b8742858f",
          "MD5=6e25148bb384469f3d5386dc5217548a",
          "MD5=700d6a0331befd4ed9cfbb3234b335e7",
          "MD5=e68972cd9f28f0be0f9df7207aba9d1d",
          "MD5=b2a9ac0600b12ec9819e049d7a6a0b75",
          "MD5=c796a92a66ec725b7b7febbdc13dc69b",
          "MD5=5b6c21e8366220f7511e6904ffeeced9",
          "MD5=8741e6df191c805028b92cec44b1ba88",
          "MD5=b47dee29b5e6e1939567a926c7a3e6a4",
          "MD5=dff6c75c9754a6be61a47a273364cdf7",
          "MD5=d86269ba823c9ecf49a145540cd0b3df",
          "MD5=3c55092900343d3d28564e2d34e7be2c",
          "MD5=fef9dd9ea587f8886ade43c1befbdafe",
          "MD5=96c5900331bd17344f338d006888bae5",
          "MD5=7e7e3f5532b6af24dcc252ac4b240311",
          "MD5=c6f8983dd3d75640c072a8459b8fa55a",
          "MD5=1caf5070493459ba029d988dbb2c7422",
          "MD5=2b653950483196f0d175ba6bc35f1125",
          "MD5=15814b675e9d08953f2c64e4e5ccb4f4",
          "MD5=de4001f89ed139d1ed6ae5586d48997a",
          "MD5=dc943bf367ae77016ae399df8e71d38a",
          "MD5=524cd77f4c100cf20af4004f740b0268",
          "MD5=e5f8fcdfb52155ed4dffd8a205b3d091",
          "MD5=925ee3f3227c3b63e141ba16bd83f024",
          "MD5=fbf729350ca08a7673b115ce9c9eb7e5",
          "MD5=eb0a8eeb444033ebf9b4b304f114f2c8",
          "MD5=c7a57cd4bea07dadba2e2fb914379910",
          "MD5=384370c812acb7181f972d57dc77c324",
          "MD5=d43dcba796b40234267ad2862fa52600",
          "MD5=b0954711c133d284a171dd560c8f492a",
          "MD5=262969a3fab32b9e17e63e2d17a57744",
          "MD5=05a6f843c43d75fbce8e885bb8656aa4",
          "MD5=992ded5b623be3c228f32edb4ca3f2d2",
          "MD5=13a0d3f9d5f39adaca0a8d3bb327eb31",
          "MD5=f5051c756035ef5de9c4c48bacb0612b",
          "MD5=1276f735d22cf04676a719edc6b0df18",
          "MD5=d4a299c595d35264b5cfd12490a138dc",
          "MD5=f4e1997192d5a95a38965c9e15c687fc",
          "MD5=05369fa594a033e48b7921018b3263fb",
          "MD5=ed07f1a8038596574184e09211dfc30f",
          "MD5=e1ebc6c5257a277115a7e61ee3e5e42f",
          "MD5=821adf5ba68fd8cc7f4f1bc915fe47de",
          "MD5=b12d1630fd50b2a21fd91e45d522ba3a",
          "MD5=729dd4df669dc96e74f4180c6ee2a64b",
          "MD5=c6b5a3ae07b165a6e5fff7e31ff91016",
          "MD5=e36f6f7401ae11e11f69d744703914db",
          "MD5=9ba7c30177d2897bb3f7b3dc2f95ae0a",
          "MD5=b5326548762bfaae7a42d5b0898dfeac",
          "MD5=f2f728d2f69765f5dfda913d407783d2",
          "MD5=637cf50b06bc53deae846b252d56bbdc",
          "MD5=c37b575c3a96b9788c26cefcf43f3542",
          "MD5=e4266262a77fffdea2584283f6c4f51d",
          "MD5=054299e09cea38df2b84e6b29348b418",
          "MD5=4cc3ddd5ae268d9a154a426af2c23ef9",
          "MD5=d717f8de642b65f029829c34fbd13a45",
          "MD5=e79c91c27df3eaf82fb7bd1280172517",
          "MD5=fd7de498a72b2daf89f321d23948c3c4",
          "MD5=6682176866d6bd6b4ea3c8e398bd3aae",
          "MD5=eb525d99a31eb4fff09814e83593a494",
          "MD5=e323413de3caec7f7730b43c551f26a0",
          "MD5=353e5d424668d785f13c904fde3bac84",
          "MD5=3b9698a9ee85f0b4edf150deef790ccd",
          "MD5=3f8cdaf7413000d34d6a1a1d5341a11b",
          "MD5=dcd966874b4c8c952662d2d16ddb4d7c",
          "MD5=3fda3d414c31ad73efd8ccceeaa3bdc2",
          "MD5=ca6931fcbc1492d7283aa9dc0149032e",
          "MD5=084bd27e151fef55b5d80025c3114d35",
          "MD5=7c887f2b1a56b84d86828529604957db",
          "MD5=c24800c382b38707e556af957e9e94fd",
          "MD5=f84da507b3067f019c340b737cd68d32",
          "MD5=d3026938514218766cb6d3b36ccfa322",
          "MD5=6917ef5d483ed30be14f8085eaef521b",
          "MD5=945ef111161bae49075107e5bc11a23f",
          "MD5=44a3b9cc0a8e89c11544932b295ea113",
          "MD5=6cc3c3be2de12310a35a6ab2aed141d6",
          "MD5=085d3423f3c12a17119920f1a293ab4d",
          "MD5=547971da89a47b6ad6459cd7d7854e12",
          "MD5=aa5dd4beca6f67733e04d9d050ecd523",
          "MD5=903c149851e9929ec45daefc544fcd99",
          "MD5=ba5f0f6347780c2ed911bbf888e75bef",
          "MD5=1873a2ce2df273d409c47094bc269285",
          "MD5=97e3a44ec4ae58c8cc38eefc613e950e",
          "MD5=1cb26adeca26aefb5a61065e990402da",
          "MD5=17fe96af33f1fe475957689aeb5f816e",
          "MD5=c5b8e612360277ac70aa328432a99fd6",
          "MD5=62f8d7f884366df6100c7e892e3d70bf",
          "MD5=a5deee418b7b580ca89db8a871dc1645",
          "MD5=5f44a01ccc530b34051b9d0ccb5bb842",
          "MD5=25ede0fd525a30d31998ea62876961ec",
          "MD5=1c61eb82f1269d8d6be8de2411133811",
          "MD5=338a98e1c27bc76f09331fcd7ae413a5",
          "MD5=f66b96aa7ae430b56289409241645099",
          "MD5=8ea94766cd7890483449dc193d267993",
          "MD5=75fa19142531cbf490770c2988a7db64",
          "MD5=ee3b74cdfed959782dff84153e3d5a6e",
          "MD5=fdf975524d4cdb4f127d79aac571ae9e",
          "MD5=688a10e87af9bcf0e40277d927923a00",
          "MD5=62792c30836ae7861c3ca2409cd35c02",
          "MD5=b62e2371158a082e239f5883bd6000d1",
          "MD5=1f01257d9730f805b2a1d69099ef891d",
          "MD5=b934322c68c30dceca96c0274a51f7b0",
          "MD5=76355d5eafdfa3e9b7580b9153de1f30",
          "MD5=9fdcd543574a712a80d62da8bfd8331c",
          "MD5=1440c0da81c700bd61142bc569477d81",
          "MD5=4c76554d9a72653c6156ca0024d21a8e",
          "MD5=148bd10da8c8d64928a213c7bf1f2fca",
          "MD5=95e4c7b0384da89dce8ea6f31c3613d9",
          "MD5=e6cb1728c50bd020e531d19a14904e1c",
          "MD5=62f02339fe267dc7438f603bfb5431a1",
          "MD5=0a4e6bd5cc2e9172e461408be47c3149",
          "MD5=28cb0b64134ad62c2acf77db8501a619",
          "MD5=4ecfb46fcdce95623f994bd29bbe59cb",
          "MD5=7ee0c884e7d282958c5b3a9e47f23e13",
          "MD5=dbc415304403be25ac83047c170b0ec2",
          "MD5=0c7f66cd219817eaab41f36d4bc0d4cd",
          "MD5=3c9c537167923723429c86ab38743e7d",
          "MD5=a57b47489febc552515778dd0fd1e51c",
          "MD5=680dcb5c39c1ec40ac3897bb3e9f27b9",
          "MD5=5f9785e7535f8f602cb294a54962c9e7",
          "MD5=e4ea7ebfa142d20a92fbe468a77eafa6",
          "MD5=32365e3e64d28cc94756ac9a09b67f06",
          "MD5=be9eeea2a8cac5f6cd92c97f234e2fe1",
          "MD5=5bd30b502168013c9ea03a5c2f1c9776",
          "MD5=ba21bfa3d05661ba216873a9ef66a6e2",
          "MD5=dad8f40626ed4702e0e8502562d93d7c",
          "MD5=8fbb1ffc6f13f9d5ee8480b36baffc52",
          "MD5=bedc99bbcedaf89e2ee1aa574c5a2fa4",
          "MD5=9dd414590e695ea208139c23db8a5aa3",
          "MD5=270052c61f4de95ebfbf3a49fb39235f",
          "MD5=19c0c18384d6a6d65462be891692df9c",
          "MD5=a26e600652c33dd054731b4693bf5b01",
          "MD5=8b779fe1d71839ad361226f66f1b3fe5",
          "MD5=8ad9dfc971df71cd43788ade6acf8e7d",
          "MD5=2dbc09c853c4bf2e058d29aaa21fa803",
          "MD5=13ee349c15ee5d6cf640b3d0111ffc0e",
          "MD5=fef60a37301e1f5a3020fa3487fb2cd7",
          "MD5=4353b713487a2945b823423bbbf709bd",
          "MD5=875c44411674b75feb07592aeffa09c1",
          "MD5=b971b79bdca77e8755e615909a1c7a9f",
          "MD5=ad03f225247b58a57584b40a4d1746d3",
          "MD5=2229d5a9a92b62df4df9cf51f48436f7",
          "MD5=5bb840db439eb281927588dbce5f5418",
          "MD5=fd80c3d38669b302de4b4b736941c0d1",
          "MD5=d1440503d1528c55fdc569678a663667",
          "MD5=d1e57c74bafa56e8e2641290d153f4d2",
          "MD5=c9b046a6961957cc6c93a5192d3e61e3",
          "MD5=ff795e4f387c3e22291083b7d6b92ffb",
          "MD5=782f165b1d2db23f78e82fee0127cc14",
          "MD5=002a58b90a589913a07012253662c98c",
          "MD5=0211ab46b73a2623b86c1cfcb30579ab",
          "MD5=d0a5b98788e480c12afc65ad3e6d4478",
          "MD5=d6cc5709aca6a6b868962a6506d48abc",
          "MD5=08001b0cdb0946433366032827d7a187",
          "MD5=8fc6cafd4e63a3271edf6a1897a892ae",
          "MD5=0e207ef80361b3d047a2358d0e2206b4",
          "MD5=b10b210c5944965d0dc85e70a0b19a42",
          "MD5=006d9d615cdcc105f642ab599b66f94e",
          "MD5=b32497762d916dba6c827e31205b67dd",
          "MD5=f766a9bb7cd46ba8c871484058f908f0",
          "MD5=546db985012d988e4482acfae4a935a8",
          "MD5=700e9902b0a28979724582f116288bad",
          "MD5=0395b4e0eb21693590ad1cfdf7044b8b",
          "MD5=d95c9a241e52b4f967fa4cdb7b99fc80",
          "MD5=ee91da973bebe6442527b3d1abcc3c80",
          "MD5=1a234f4643f5658bab07bfa611282267",
          "MD5=1898ceda3247213c084f43637ef163b3",
          "MD5=1b5c3c458e31bede55145d0644e88d75",
          "MD5=42132c7a755064f94314b01afb80e73c",
          "MD5=1b76363059fef4f7da752eb0dfb0c1e1",
          "MD5=cc8855fe30a9cdef895177a4cf1a3dad",
          "MD5=6d4159694e1754f262e326b52a3b305a",
          "MD5=b7ca4c32c844df9b61634052ae276387",
          "MD5=361a598d8bb92c13b18abb7cac850b01",
          "MD5=27bcbeec8a466178a6057b64bef66512",
          "MD5=f310b453ac562f2c53d30aa6e35506bb",
          "MD5=14add4f16d80595e6e816abf038141e5",
          "MD5=ab53d07f18a9697139ddc825b466f696",
          "MD5=278761b706276f9b49e1e2fd21b9cb07",
          "MD5=60e84516c6ec6dfdae7b422d1f7cab06",
          "MD5=20afd54ca260e2bf6589fac72935fecf",
          "MD5=3ad7b36a584504b3c70b5f552ba33015",
          "MD5=9f3b5de6fe46429bed794813c6ae8421",
          "MD5=7b9717c608a5f5a1c816128a609e9575",
          "MD5=798de15f187c1f013095bbbeb6fb6197",
          "MD5=66066d9852bc65988fb4777f0ff3fbb4",
          "MD5=13dda15ef67eb265869fc371c72d6ef0",
          "MD5=63e333d64a8716e1ae59f914cb686ae8",
          "MD5=3411fdf098aa20193eee5ffa36ba43b2",
          "MD5=ad6d5177656dfc5b43def5d13d32f9f6",
          "MD5=97221e16e7a99a00592ca278c49ffbfc",
          "MD5=010c0e5ac584e3ab97a2daf84cf436f5",
          "MD5=29b1ddc69e89b160cc3722e5e0738fd8",
          "MD5=aad4fb47cb39a9ab4159662a29e1ee88",
          "MD5=4e093256b034925ecd6b29473ff16858",
          "MD5=51c233297c3aa16c4222e35ded1139b6",
          "MD5=9945823e9846724c70d2f8d66a403300",
          "MD5=aa2ef08d48b66bd814280976614468a7",
          "MD5=33fc573c0e8bedfe3614e17219273429",
          "MD5=c08063f052308b6f5882482615387f30",
          "MD5=c8c6fadcb7cb85f197ab77e6a7b67aa9",
          "MD5=3f29f651a3c4ff5ce16d61deccf46618",
          "MD5=08c1bce6627764c9f8c79439555c5636",
          "MD5=1da1cfe6aa15325c9ecf8f8c9b2cd12d",
          "MD5=c1d063c9422a19944cdaa6714623f2ec",
          "MD5=b0809d8adc254c52f9d06362489ce474",
          "MD5=a22626febc924eb219a953f1ee2b9600",
          "MD5=5a615f4641287e5e88968f5455627d45",
          "MD5=de2aac9468158c73880e31509924d7e0",
          "MD5=dd38cc344d2a0da1c03e92eb4b89a193",
          "MD5=c1fce7aac4e9dd7a730997e2979fa1e2",
          "MD5=0634299fc837b47b531e4762d946b2ae",
          "MD5=e4ff4edce076f21f5f8d082a62c9db8b",
          "MD5=43ed1d08c19626688db34f63e55114fb",
          "MD5=6c28461e78f8d908ca9a66bad2e212f7",
          "MD5=8aa9d47ec9a0713c56b6dec3d601d105",
          "MD5=c9390a8f3ca511c1306a039ca5d80997",
          "MD5=c60a4bc4fec820d88113afb1da6e4db3",
          "MD5=6b3abe55c4d39e305a11b4d1091dfaac",
          "MD5=f4a31e08f89e5f002ef3cf7b1224af5f",
          "MD5=d7cf689e6c63d37bc071499f687300dd",
          "MD5=7c0b186d1912686cfcb8cd9cdebabe58",
          "MD5=8cb2ffb8bb0bbf8cd0dd685611854637",
          "MD5=9b359b722ac80c4e0a5235264e1e0156",
          "MD5=09927915aba84c8acd91efdaac674b86",
          "MD5=e4b50e44d1f12a47e18259b41074f126",
          "MD5=0ec361f2fba49c73260af351c39ff9cb",
          "MD5=65ad6a7c43f8d566afd5676f9447b6c1",
          "MD5=ddb7da975d90b2a9c9c58e1af55f0285",
          "MD5=8291dcbcbccc2ce28195d04ac616a1b5",
          "MD5=2da269863ed99be7b6b8ec2adc710648",
          "MD5=2ab9f5a66d75adb01171bb04ab4380f2",
          "MD5=3a7c69293fcd5688cc398691093ec06a",
          "MD5=13a2b915f6d93e52505656773d53096f",
          "MD5=7bd840ff7f15df79a9a71fec7db1243e",
          "MD5=0a6a1c9a7f80a2a5dcced5c4c0473765",
          "MD5=a1547e8b2ca0516d0d9191a55b8536c0",
          "MD5=e04ff937f6fd273b774f23aed5dd8c13",
          "MD5=fac8eb49e2fd541b81fcbdeb98a199cb",
          "MD5=cb31f1b637056a3d374e22865c41e6d9",
          "MD5=c69c292e0b76b25a5fa0e16136770e11",
          "MD5=cebf532d1e3c109418687cb9207516ad",
          "MD5=eeb8e039f6d942538eb4b0252117899a",
          "MD5=4d99d02f49e027332a0a9c31c674e13b",
          "MD5=e9a30edef1105b8a64218f892b2e56ed",
          "MD5=dd04cd3de0c19bede84e9c95a86b3ca8",
          "MD5=70196d88c03f2ea557281b24dad85de5",
          "MD5=708ac9f7b12b6ca4553fd8d0c7299296",
          "MD5=cafbf85b902f189ba35f3d7823aad195",
          "MD5=d48f681f70e19d2fa521df63bc72ab9e",
          "MD5=6ae9d25e02b54367a4e93c2492b8b02e",
          "MD5=f14359ceb3705d77353b244bb795b552",
          "MD5=0d992b69029d1f23a872ff5a3352fb5b",
          "MD5=9993a2a45c745bb0139bf3e8decd626c",
          "MD5=6d67da13cf84f15f6797ed929dd8cf5d",
          "MD5=c2eb4539a4f6ab6edd01bdc191619975",
          "MD5=349fa788a4a7b57e37e426aca9b736d5",
          "MD5=4c016fd76ed5c05e84ca8cab77993961",
          "MD5=ea14899d1bfba397bc731770765768d1",
          "MD5=4ec08e0bcdf3e880e7f5a7d78a73440c",
          "MD5=e65fa439efa9e5ad1d2c9aee40c7238e",
          "MD5=0898af0888d8f7a9544ef56e5e16354e",
          "MD5=10e681ce84afdd642e59ddfdb28284e9",
          "MD5=b5f96dd5cc7d14a9860ab99d161bf171",
          "MD5=37c3a9fef349d13685ec9c2acaaeafce",
          "MD5=027e10a5048b135862d638b9085d1402",
          "MD5=b0baac4d6cbac384a633c71858b35a2e",
          "MD5=d0a5f9ace1f0c459cef714156db1de02",
          "MD5=b34361d151c793415ef92ee5d368c053",
          "MD5=f0fdfdf3303e2f7c141aa3a24d523af1",
          "MD5=d424f369f7e010249619f0ecbe5f3805",
          "MD5=639252292bb40b3f10f8a6842aee3cd4",
          "MD5=7e6e2ed880c7ab115fca68136051f9ce",
          "MD5=f8dce1eb0f9fcaf07f68fe290aa629e4",
          "MD5=fa222bed731713904320723b9c085b11",
          "MD5=aa69b4255e786d968adbd75ba5cf3e93",
          "MD5=06ffbb2cbf5ac9ef95773b4f5c4c896a",
          "MD5=00685003005b0b437af929f0499545e4",
          "MD5=85e606523ce390f7fcd8370d5f4b812a",
          "MD5=23cf3da010497eb2bf39a5c5a57e437c",
          "MD5=dc9be271f403e2278071d6ece408ff28",
          "MD5=6b16512bffe88146a7915f749bd81641",
          "MD5=c2585e2696e21e25c05122e37e75a947",
          "MD5=165178829b5587a628977bfca6fd6900",
          "MD5=24156523b923fd9dcfdd0ac684dcdb20",
          "MD5=750d1f07ea9d10b38a33636036c30cca",
          "MD5=fc90bcc43daa48882be359a17b71abf7",
          "MD5=09672532194b4bff5e0f7a7d782c7bf2",
          "MD5=212bfd1ef00e199a365aeb74a8182609",
          "MD5=e3d290406de40c32095bd76dc88179fb",
          "MD5=715572dfe6fb10b16f980bfa242f3fa5",
          "MD5=c8f88ca47b393da6acf87fa190e81333",
          "MD5=d0c2caa17c7b6d2200e1b5aa9d07135e",
          "MD5=16a8e8437b94d6207af2f25fd4801b6d",
          "MD5=7bdf418a65ec33ec8ff47e7de705a4e1",
          "MD5=31f34de4374a6ed0e70a022a0efa2570",
          "MD5=cfad9185ffcf5850b5810c28b24d5fc8",
          "MD5=6ba221afb17342a3c81245a4958516a2",
          "MD5=f44f6ec546850ceb796a2cb528928a91",
          "MD5=34a7fab63a4ed5a0b61eb204828e08e5",
          "MD5=a92bf3c219a5fa82087b6c31bdf36ff3",
          "MD5=fa0d1fca7c5b44ce3b799389434fcaa5",
          "MD5=affe4764d880e78b2afb2643b15b8d41",
          "MD5=f80ceb0dbb889663f0bee058b109ce0e",
          "MD5=25ebe6f757129adbe78ec312a5f1800b",
          "MD5=7f7b8cde26c4943c9465e412adbb790f",
          "MD5=bfe96411cf67edb3cee2b9894b910cd5",
          "MD5=6e2178dc5f9e37e6b4b6cbdaef1b12b1",
          "MD5=0420fa6704fd0590c5ce7176fdada650",
          "MD5=7ed6030f14e66e743241f2c1fa783e69",
          "MD5=61e8367fb57297a949c9a80c2e0e5a38",
          "MD5=7951fa3096c99295d681acb0742506bf",
          "MD5=bcd60bf152fdec05cd40562b466be252",
          "MD5=376b1e8957227a3639ec1482900d9b97",
          "MD5=7331720a5522d5cd972623326cf87a3f",
          "MD5=8e78ab9b9709bafb11695a0a6eddeff9",
          "MD5=8abbb12e61045984eda19e2dc77b235e",
          "MD5=0199a59af05d9986842ecbdee3884f0c",
          "MD5=729afa54490443da66c2685bd77cb1f0",
          "MD5=95c88d25e211a4d52a82c53e5d93e634",
          "MD5=aa55dd14064cb808613d09195e3ba749",
          "MD5=ef1afb3a5ddad6795721f824690b4a69",
          "MD5=db46c56849bbce9a55a03283efc8c280",
          "MD5=991230087394738976dbd44f92516cae",
          "MD5=3af19d325f9dcdf360276ae5e7c136ea",
          "MD5=98763a3dee3cf03de334f00f95fc071a",
          "MD5=4b194021d6bd6650cbd1aed9370b2329",
          "MD5=517d484bdbad4637188ec7a908335b86",
          "MD5=2ddd3c0e23bc0fd63702910c597298b4",
          "MD5=120b5bbb9d2eb35ff4f62d79507ea63a",
          "MD5=6bada94085b6709694f8327c211d12e1",
          "MD5=5c5f1c2dc6c2479bafec7c010c41c6ec",
          "MD5=ab81264493c218a0e875a0d50104ac9f",
          "MD5=ea2ff60fcce3b9ffe0bd77658b88512d",
          "MD5=76d1d4d285f74059f32b8ad19a146d0c",
          "MD5=b9cf3294c13cdea624ab95ca3e2e483f",
          "MD5=0cd0fe9d16b62415b116686a2f414f8c",
          "MD5=2503c4cf31588f0b011eb992ca3ee7ff",
          "MD5=f0470f82ba58bc4309f83a0f2aefa4d5",
          "MD5=db72def618cbc3c5f9aa82f091b54250",
          "MD5=2ff629de3667fcd606a0693951f1c1a9",
          "MD5=119f0656ab4bb872f79ee5d421e2b9f9",
          "MD5=55a7c51dc2aa959c41e391db8f6b8b4f",
          "MD5=009876ab9cf3a3d4e3fc3afe13ae839e",
          "MD5=f8a13d4413a93dd005fad116cbd6b6f7",
          "MD5=5093f38d597532d59d4df9018056f0d1",
          "MD5=00f887e74faad40e6e97d9d0e9c71370",
          "MD5=0215d0681979987fe908fb19dab83399",
          "MD5=7962d91b1f53ce55c7338788bd4eb378",
          "MD5=1bca427ab8e67a9db833eb8f0ff92196",
          "MD5=a730b97ab977aa444fa261902822a905",
          "MD5=a453083b8f4ca7cb60cac327e97edbe2",
          "MD5=afc2448b4080f695e76e059a96958cab",
          "MD5=4f963d716a60737e5b59299f00daf285",
          "MD5=ee59b64ae296a87bf7a6aee38ad09617",
          "MD5=1c9d2a993e99054050b596d88b307d95",
          "MD5=5cd0ec261c8c2a39d9105fbbcad4e5b9",
          "MD5=4c6d311e0b13c4f469f717db4ab4d0e7",
          "MD5=84fb76ee319073e77fb364bbbbff5461",
          "MD5=d660fc7255646d5014d45c3bca9c6e20",
          "MD5=ecccbf1e7c727f923c9d709707800e6c",
          "MD5=94ccef76fda12ab0b8270f9b2980552b",
          "MD5=f853abe0dc162601e66e4a346faed854",
          "MD5=154fd286c96665946d55a7d49923ad7e",
          "MD5=a5afd20e34bcd634ebd25b3ab2ff3403",
          "MD5=c9c7113f5e15f70fcc576e835c859d56",
          "MD5=ad22a7b010de6f9c6f39c350a471a440",
          "MD5=7a6a6d6921cd1a4e1d61f9672a4560d6",
          "MD5=9af5ae780b6a9ea485fa15f28ddb20a7",
          "MD5=1f15a513abc039533ca996552ba27e51",
          "MD5=d1bac75205c389d6d5d6418f0457c29b",
          "MD5=36527fdb70ed6f74b70a98129f82ad62",
          "MD5=3d5164e85d740bce0391e2b81d49d308",
          "MD5=30550db8f400b1e11593dffd644abb67",
          "MD5=b17fb1ad5e880467cf7e61b1ee8e3448",
          "MD5=6f5d54ab483659ac78672440422ae3f1",
          "MD5=f042e8318cf20957c2339d96690c3186",
          "MD5=5158f786afa19945d19bee9179065e4d",
          "MD5=328a2cb2da464b0c2beb898ff9ae9f3a",
          "MD5=e7273e17ac85dc4272c4c4400091a19e",
          "MD5=d74d202646e5a6d0d2c4207e1f949826",
          "MD5=9ce1b0e5cfa8223cec3be1c7616e9f63",
          "MD5=55cd6b46ac25bbe01245f2270a0d6cb8",
          "MD5=b8b6686324f7aa77f570bc019ec214e6",
          "MD5=d104621c93213942b7b43d65b5d8d33e",
          "MD5=8cc5a4045a80a822cbc1e9eadff8e533",
          "MD5=ef18d594c862d6d3704b777fa3445ac2",
          "MD5=b941c8364308990ee4cc6eadf7214e0f",
          "MD5=2ca1044a04cb2f0ce5bd0a5832981e04",
          "MD5=f8fe655b7d63dbdc53b0983a0d143028",
          "MD5=cd9f0fcecf1664facb3671c0130dc8bb",
          "MD5=3e9ee8418f22a8ae0e2bf6ff293988fa",
          "MD5=3bf217f8ef018ca5ea20947bfdfc0a4d",
          "MD5=778b7feea3c750d44745d3bf294bd4ce",
          "MD5=4514a0e8bcab7de4cff55999cdf00cd1",
          "MD5=5228b7a738dc90a06ae4f4a7412cb1e9",
          "MD5=159f89d9870e208abd8b912c3d1d3ae9",
          "MD5=e425c66663c96d5a9f030b0ad4d219a8",
          "MD5=85b756463ab0c000f816260d49923cde",
          "MD5=acd221ff7cf10b6117fd609929cde395",
          "MD5=a87689b1067edacc48fddf90020dee23",
          "MD5=0d123be07e2dfd2b2ade49ad2a905a5b",
          "MD5=3ae11bde32cdbd8637124ada866a5a7e",
          "MD5=cc35379f0421b907004a9099611ee2cd",
          "MD5=23b807c09b9b6ea85ed5c508aab200b7",
          "MD5=26d973d6d9a0d133dfda7d8c1adc04b7",
          "MD5=eba6b88bc7bca21658bda9533f0bbff8",
          "MD5=9eb524c5f92e5b80374b8261292fdeb5",
          "MD5=4a23e0f2c6f926a41b28d574cbc6ac30",
          "MD5=c61876aaca6ce822be18adb9d9bd4260",
          "MD5=aae268c4b593156bdae25af5a2a4af21",
          "MD5=de711decdd763a73098372f752bf5a1c",
          "MD5=1b32c54b95121ab1683c7b83b2db4b96",
          "MD5=9aa7ed7809eec0d8bc6c545a1d18107a",
          "MD5=07493c774aa406478005e8fe52c788b2",
          "MD5=9b9d367cb53df0a2e0850760c840d016",
          "MD5=70c2c29643ee1edd3bbcd2ef1ffc9a73",
          "MD5=766f9ea38918827df59a6aed204d2b09",
          "MD5=f670d1570c75ab1d8e870c1c6e3baba1",
          "MD5=34edf3464c3f5605c1ca3a071f12e28c",
          "MD5=bae1f127c4ff21d8fe45e2bbfc59c180",
          "MD5=31469f1313871690e8dc2e8ee4799b22",
          "MD5=79483cb29a0c428e1362ec8642109eee",
          "MD5=c607c37af638fa4eac751976a6afbaa6",
          "MD5=fb7637cfe8562095937f4d6cff420784",
          "MD5=d98d2f80b94f70780b46d1f079a38d93",
          "MD5=35fbc4c04c31c1a40e666be6529c6321",
          "MD5=969f1d19449dc5c2535dd5786093f651",
          "MD5=986f083e5fd01eea4ec3b2575a110a95",
          "MD5=ccf523b951afaa0147f22e2a7aae4976",
          "MD5=978cd6d9666627842340ef774fd9e2ac",
          "MD5=9d8cb58b9a9e177ddd599791a58a654d",
          "MD5=e3fda6120dfa016a76d975fdab7954f6",
          "MD5=e99e86480d4206beb898dda82b71ca44",
          "MD5=a2be99e4904264baa5649c4d4cd13a17",
          "MD5=563b33cfc3c815feff659caaa94edc33",
          "MD5=18b4bbeae6b07d2e21729b8698bbd25a",
          "MD5=f51065667fb127cf6de984daea2f6b24",
          "MD5=35c8fdf881909fa28c92b1c2741ac60b",
          "MD5=477e02a8e31cde2e76a8fb020df095c2",
          "MD5=6b6dfb6d952a2e36efd4a387fdb94637",
          "MD5=f7d963c14a691a022301afa31de9ecef",
          "MD5=9638f265b1ddd5da6ecdf5c0619dcbe6",
          "MD5=2e48c3b8042fdcef0ed435562407bd21",
          "MD5=ada5f19423f91795c0372ff39d745acf",
          "MD5=702d5606cf2199e0edea6f0e0d27cd10",
          "MD5=0809f48fd30845d983d569b847fa83cf",
          "MD5=743c403d20a89db5ed84c874768b7119",
          "MD5=ed6348707f177629739df73b97ba1b6e",
          "MD5=f33c3f08536f988aac84d72d83b139a6",
          "MD5=34686a4b10f239d781772e9e94486c1a",
          "MD5=d77fb9fb256b0c2ec0258c39b80dc513",
          "MD5=b2e4e588ce7b993cc31c18a0721d904d",
          "MD5=eda6e97b453388bb51ce84b8a11d9d13",
          "MD5=d90cdd8f2826e5ea3faf8e258f20dc40",
          "MD5=736c4b85ce346ddf3b49b1e3abb4e72a",
          "MD5=b5ada7fd226d20ec6634fc24768f9e22",
          "MD5=843e39865b29bb3df825bd273f195a98",
          "MD5=7671bbf15b7a8c8f59a0c42a1765136a",
          "MD5=6c5e50ef2069896f408cdaaddd307893",
          "MD5=67b5b8607234bf63ce1e6a52b4a05f87",
          "MD5=24589081b827989b52d954dcd88035d0",
          "MD5=8fcf90cb5f9cb7205c075c662720f762",
          "MD5=812e960977116bf6d6c1ccf8b5dd351f",
          "MD5=a4fda97f452b8f8705695a729f5969f7",
          "MD5=6f7125540e5e90957ba5f8d755a8d570",
          "MD5=5a1ee9e6a177f305765f09b0ae6ac1c5",
          "MD5=4b42a7a6327827a8dbdecf367832c0cd",
          "MD5=663f2fb92608073824ee3106886120f3",
          "MD5=d6c4baecff632d6ad63c45fc39e04b2f",
          "MD5=4ae55080ec8aed49343e40d08370195c",
          "MD5=21be10f66bb65c1d406407faa0b9ba95",
          "MD5=e9ccb6bac8715918a2ac35d8f0b4e1e6",
          "MD5=a223f8584bcb978c003dd451b1439f8d",
          "MD5=f30db62d02a69c36ccb01ac9d41dc085",
          "MD5=d396332f9d7b71c10b3b83da030690f0",
          "MD5=715ac0756234a203cb7ce8524b6ddc0d",
          "MD5=b94ffce20e36b2930eb3ac72f72c00d6",
          "MD5=efb4ed2040b9b3d408aab8dc15df5a06",
          "MD5=8f1255efd2ed0d3b03a02c6b236c06d6",
          "MD5=530feb1e37831302f58b7c219be6b844",
          "MD5=2e219df70fccb79351f0452cba86623e",
          "MD5=99c131567c10c25589e741e69a8f8aa3",
          "MD5=6fb3d42a4f07d8115d59eb2ea6504de5",
          "MD5=839cbbc86453960e9eb6db814b776a40",
          "MD5=3c1f92a1386fa6cf1ba51bae5e9a98dd",
          "MD5=46edb648c1b5c3abd76bd5e912dac026",
          "MD5=bd067efb8cafd971142bc964b4f85df1",
          "MD5=3db2afc15e7cc78bd11f4c726060db5c",
          "MD5=01f092be2a36a5574005e25368426ad2",
          "MD5=65c069af3875494ec686afbb0c3da399",
          "MD5=ce65b7adcf954eb36df62ea3d4a628c7",
          "MD5=ae5eb2759305402821aeddc52ba9a6d6",
          "MD5=048549f7e9978aff602a24dea98ee48a",
          "MD5=da8437200af5f3f790e301b9958993d2",
          "MD5=590875a0b2eeb171403fc7d0f5110cb2",
          "MD5=bc71da7c055e3172226090ba5d8e2248",
          "MD5=d76b56b79b1c95e8dcd7ee88cb0d25ab",
          "MD5=14eead4d42728e9340ec8399a225c124",
          "MD5=1b2e3b7f2966f2f6e6a1bb89f97228e5",
          "MD5=5e9d5c59ba1f1060f53909c129df3355",
          "MD5=0ac31915ec9a6b7d4d4bba8fe6d60ff7",
          "MD5=6909b5e86e00b4033fedfca1775b0e33",
          "MD5=2b4e66fac6503494a2c6f32bb6ab3826",
          "MD5=a125390293d50091b643cfa096c2148c",
          "MD5=79bfbeb4e8cfdd0cb1d73612360bd811",
          "MD5=389823db299b350f2ee830d47376eeac",
          "MD5=a17c403c4b74d4fa920c3887066daeb2",
          "MD5=1793e1d4247b29313325d1462dec81e2",
          "MD5=c31610f4c383204a1fc105c54b7403c9",
          "MD5=0ec31f45e2e698a83131b4443f9a6dd7",
          "MD5=4885e1bf1971c8fa9e7686fd5199f500",
          "MD5=f83c61adbb154d46dd8f77923aa7e9c3",
          "MD5=5cc5c26fc99175997d84fe95c61ab2c2",
          "MD5=49832b4f726cdff825257bee33ad8451",
          "MD5=1493d342e7a36553c56b2adea150949e",
          "MD5=df9953fa93e1793456a8d428ba7e5700",
          "MD5=40bc58b7615d00eb55ad9ba700c340c1",
          "MD5=ba2c0fa201c74621cddd8638497b3c70",
          "MD5=3c9f9c1b802f66cf03cbe82dec2bd454",
          "MD5=7d84a4ed0fcca3d098881a3f3283724b",
          "MD5=0e14b69dcf67c20343f85f9fdb5b9300",
          "MD5=17b97fbe2e8834d7ad30211635e1b271",
          "MD5=7fbd3b4488a12eab56c54e7bb91516f3",
          "MD5=9007c94c9d91ccff8d7f5d4cdddcc403",
          "MD5=260eef181a9bf2849bfec54c1736613b",
          "MD5=dbde0572d702d0a05c0d509d5624a4d7",
          "MD5=5c5973d2caf86e96311f6399513ab8df",
          "MD5=0703c1e07186cb98837a2ae76f50d42e",
          "MD5=5970e8de1b337ca665114511b9d10806",
          "MD5=2580fb4131353ec417b0df59811f705c",
          "MD5=fa63a634189bd4d6570964e2161426b0",
          "MD5=ee57cbe6ec6a703678eaa6c59542ff57",
          "MD5=e140cb81bd27434fc4fd9080b7551922",
          "MD5=49fe3d1f3d5c2e50a0df0f6e8436d778",
          "MD5=a3af4a4fa6cba27284f8289436c2f074",
          "MD5=192519661fe6d132f233d0355c3f4a6d",
          "MD5=394e290aff9d4e78e504cedfb2d99350",
          "MD5=2e7d824a49d731da9fc96262a29c85ce",
          "MD5=f7cbbb5eb263ec9a35a1042f52e82ca4",
          "MD5=2d8e4f38b36c334d0a32a7324832501d",
          "MD5=443689645455987cb347154b391f734d",
          "MD5=9258e3cb20e24a93d4afdee9f5a0299c",
          "MD5=0067c788e1cb174f008c325ebde56c22",
          "MD5=79f7e6f98a5d3ab6601622be4471027f",
          "MD5=1c31d4e9ad2d2b5600ae9d0c0969fe59",
          "MD5=2f1ebc14bd8a29b89896737ca4076002",
          "MD5=43830326cd5fae66f5508e27cbec39a0",
          "MD5=df5f8e118a97d1b38833fcdf7127ab29",
          "MD5=8de7dcade65a1f51605a076c1d2b3456",
          "MD5=fadf9c1365981066c39489397840f848",
          "MD5=2c957aa79231fad8e221e035db6d0d81",
          "MD5=fd81af62964f5dd5eb4a828543a33dcf",
          "MD5=045ef7a39288ba1f4b8d6eca43def44f",
          "MD5=90f8c1b76f786814d03ef4c51d4abb6d",
          "MD5=17719a7f571d4cd08223f0b30f71b8b8",
          "MD5=bdd8dc8880dfbc19d729ca51071de288",
          "MD5=d79b8b7bed8d30387c22663b24e8c191",
          "MD5=57cd52ed992b634e74d2ddf9853a73b3",
          "MD5=1c294146fc77565030603878fd0106f9",
          "MD5=b7946feaeae34d51f045c4f986fa62ce",
          "MD5=86fd54c56dcafe2de918c36f8dfda67e",
          "MD5=adc1e141b57505fd011bc1efb1ae6967",
          "MD5=6822566b28be75b2a76446a57064369f",
          "MD5=d9ce18960c23f38706ae9c6584d9ac90",
          "MD5=935a7df222f19ac532e831e6bf9e8e45",
          "MD5=664ad9cf500916c94fc2c0020660ac4e",
          "MD5=356bda2bf0f6899a2c08b2da3ec69f13",
          "MD5=dacb62578b3ea191ea37486d15f4f83c",
          "MD5=89c7bd12495e29413038224cb61db02e",
          "MD5=f60a9b88c6ff07d4990d8653d0025683",
          "MD5=710b290a00598fbb1bcc49b30174b2c9",
          "MD5=5c9f240e0b83df758993837d18859cbe",
          "MD5=cb0c5d3639fcd810cde94b7b990aa51c",
          "MD5=4d17b32be70ef39eae5d5edeb5e89877",
          "MD5=0d4306983e694c1f34920bae12d887e6",
          "MD5=2751c7fd7f09479fa2b15168695adebc",
          "MD5=84ba7af6ada1b3ea5efb9871a0613fc6",
          "MD5=0a653d9d0594b152ca835d0b2593269f",
          "MD5=02198692732722681f246c1b33f7a9d9",
          "MD5=9d884ecd3b6c3f2509851ea15ffefbef",
          "MD5=3473faea65fba5d4fbe54c0898a3c044",
          "MD5=013719e840e955c2e4cd9d18c94a2625",
          "MD5=5e71c0814287763d529822d0a022e693",
          "MD5=9f94028cbcf6789103cb5bb6fcef355d",
          "MD5=0d8daf471d871deb90225d2953c0eb95",
          "MD5=ad612a7eb913b5f7d25703cd44953c35",
          "MD5=fe3fb6719e86481a3514ab9e00a55bcf",
          "MD5=3e87e3346441539d3a90278a120766df",
          "MD5=fa173832dca1b1faeba095e5c82a1559",
          "MD5=6ab7b8ef0c44e7d2d5909fdb58d37fa5",
          "MD5=803a371a78d528a44ef8777f67443b16",
          "MD5=257483d5d8b268d0d679956c7acdf02d",
          "MD5=02fc655279b8ea3ef37237c488b675cc",
          "MD5=94999245e9580c6228b22ac44c66044c",
          "MD5=88aada8325a3659736b3a7201c825664",
          "MD5=92927c47d6ff139c9b19674c9d0088f6",
          "MD5=05bf59560656c8a9a3191812b0e1235b",
          "MD5=c098f8aeb67eeb2262dbf681690a9306",
          "MD5=eb61616a7bc58e3f5b8cf855d04808c3",
          "MD5=e3aaa0c1c3a5e99eb9970ebe4b5a3183",
          "MD5=5efbbfcc6adac121c8e2fe76641ed329",
          "MD5=4eb4069c230a5dc40cd5d60d2cb3e0d0",
          "MD5=e0528f756bbb2ab83c60f9fd6f541e42",
          "MD5=eb4de413782193e824773723d790cfc4",
          "MD5=5ca1922ed5ee2b533b5f3dd9be20fd9a",
          "MD5=97580157f65612f765f39af594b86697",
          "MD5=21e72a43aedefcd70ca8999cc353b51b",
          "MD5=d6b259b2dfe80bdf4d026063accd752c",
          "MD5=ca7b41ce335051bf9dd7fa4a55581296",
          "MD5=084a13f18856d610d44d3109a9d2acde",
          "MD5=a5f637d61719d37a5b4868c385e363c0",
          "MD5=1392b92179b07b672720763d9b1028a5",
          "MD5=1a5a95d6bedbe29e5acf5eb6a727c634",
          "MD5=a71020c6d6d42c5000e9993425247e06",
          "MD5=a9f220b1507a3c9a327a99995ff99c82",
          "MD5=7c40ec9ed020cc9404de8fe3a5361a09",
          "MD5=fe937e1ed4c8f1d4eac12b065093ae63",
          "MD5=4ca0dba9e224473d664c25e411f5a3bd",
          "MD5=2a8662e91a51d8e04a94fa580c7d3828",
          "MD5=942c6a8332d5dd06d8f4b2a9cb386ff4",
          "MD5=0283b43c6bc965175a1c92b255d39556",
          "MD5=2d91d45cd09dfc3f8e89da1c261fd1ac",
          "MD5=187ddca26d119573223cf0a32ba55a61",
          "MD5=1549e6cbce408acaddeb4d24796f2eaf",
          "MD5=6beb1d8146f5a4aaa2f7b8c0c9bced30",
          "MD5=6cce5bb9c8c2a8293df2d3b1897941a2",
          "MD5=e0fb44aba5e7798f2dc637c6d1f6ca84",
          "MD5=de1cc5c266140bff9d964fab87a29421",
          "MD5=66e0db8a5b0425459d0430547ecbb3db",
          "MD5=03ca3b1cff154ab8855043abadd07956",
          "MD5=2a5fb925125af951bd76c00579d61666",
          "MD5=a2c5f994e9b4a74b2f5b51c7a44c4401",
          "MD5=5c55fcfe39336de769bfa258ab4c901d",
          "MD5=aa12c1cb47c443c6108bfe7fc1a34d98",
          "MD5=8407ddfab85ae664e507c30314090385",
          "MD5=be54aabf09c3fa4671b6efacafa389e3",
          "MD5=296bde4d0ed32c6069eb90c502187d0d",
          "MD5=1d768959aaa194d60e4524ce47708377",
          "MD5=dca1c62c793f84bb2d8e41ca50efbff1",
          "MD5=2a5ccd95292f03f0dd4899d18b55b428",
          "MD5=1f950cfd5ed8dd9de3de004f5416fe20",
          "MD5=35493772986f610753be29121cd68234",
          "MD5=6212832f13b296ddbc85b24e22edb5ec",
          "MD5=9b157f1261a8a42e4ef5ec23dd4cda9e",
          "MD5=b89b097b8b8aecb8341d05136f334ebb",
          "MD5=8942e9fa2459b1e179a6535ca16a2fb4",
          "MD5=64efbffaa153b0d53dc1bccda4279299",
          "MD5=70dcd07d38017b43f710061f37cb4a91",
          "MD5=537e2c3020b1d48b125da593e66508ec",
          "MD5=05b4463677e2566414ad53434ad9e7e5",
          "MD5=7be3a7a743f2013c3e90355219626c2c",
          "MD5=7f258c0161e9edca8e7f85ac0dd68e46",
          "MD5=81df475ab8d37343f0ad2a55b1397a8f",
          "MD5=f0aeb731d83f7ab6008c92c97faf6233",
          "MD5=507a649eb585d8d0447eab0532ef0c73",
          "MD5=5c5e3c7ca39d9472099ea81c329b7d75",
          "MD5=a31246180e61140ad7ff9dd7edf1f6a1",
          "MD5=9226339848e359f5e4cd519bef7dcd39",
          "MD5=f544f9925cab71786e57241c10e08633",
          "MD5=88d2143ae62878dada3aa0a6d8f7cea8",
          "MD5=c06dda757b92e79540551efd00b99d4b",
          "MD5=41ce6b172542a9a227e34a45881e1d2a",
          "MD5=9bcb97a1697a70f59405786759af63b8",
          "MD5=17c7bcae7ebabb95af2f7c91b19c361c",
          "MD5=aaa8999a169e39fb8b48ae49cd6ac30a",
          "MD5=9a5a35112c4f8016abcc6363b44d3385",
          "MD5=6b2df08bacf640cc2ac6f20c76af07ee",
          "MD5=ab4656d1ec4d4cc83c76f639a5340e84",
          "MD5=697f698b59f32f66cd8166e43a5c49c7",
          "MD5=4e90cd77509738d30d3181a4d0880bfa",
          "MD5=e3bdb307b32b13b8f7e621e8d5cc8cd3",
          "MD5=16472fca75ab4b5647c99de608949cde",
          "MD5=24fe18891c173a7c76426d08d2b0630e",
          "MD5=2faa725dd9bb22b2100e3010f8a72182",
          "MD5=251e1ce4e8e9b9418830ed3dc8edd5e3",
          "MD5=1f3522c5db7b9dcdd7729148f105018e",
          "MD5=d5a642329cce4df94b8dc1ba9660ae34",
          "MD5=b2600502a5b962b8cdfac2ead24b17b4",
          "MD5=c9cb486b4f652c9cfb8411803f8ed5f0",
          "MD5=73c98438ac64a68e88b7b0afd11ba140",
          "MD5=ab7b28b532beba6a6c0217bc406b80ee",
          "MD5=75dbd5db9892d7451d0429bec1aabe1a",
          "MD5=d4a10447fdaff7a001715191c1f914b6",
          "MD5=31eca8c0b32135850d5a50aee11fec87",
          "MD5=2cc65e805757cfc4f87889cdceb546cd",
          "MD5=96b463b6fa426ae42c414177af550ba2",
          "MD5=ef5ba21690c2f4ba7e62bf022b2df1f7",
          "MD5=f406c5536bcf9bacbeb7ce8a3c383bfa",
          "MD5=1ed043249c21ab201edccb37f1d40af9",
          "MD5=86635fdc8e28957e6c01fc483fe7b020",
          "MD5=520c18f50d3cb2ce162767c4c1998b86",
          "MD5=569676d3d45b0964ac6dd0815be8ff8c",
          "MD5=3f39f013168428c8e505a7b9e6cba8a2",
          "MD5=68726474c69b738eac3a62e06b33addc",
          "MD5=c04a5cdcb446dc708d9302be4e91e46d",
          "MD5=a179c4093d05a3e1ee73f6ff07f994aa",
          "MD5=1a22a85489a94db6ff68cd624ef43bad",
          "MD5=4ad30223df1361726ff64417f8515272",
          "MD5=4cee9945f9a3e8f2433f5aa8c58671fb",
          "MD5=f56f30ac68c35dd4680054cdfd8f3f00",
          "MD5=31a331a88c6280555859455518a95c35",
          "MD5=650f6531db6fb0ed25d7fc70be35a4da",
          "MD5=82854a57630059d1ce2870159dc2f86b",
          "MD5=d556cb79967e92b5cc69686d16c1d846",
          "MD5=5b1e1a9dade81f1e80fdc0a2d3f9006e",
          "MD5=d9e7e5bcc5b01915dbcef7762a7fc329",
          "MD5=a60c9173563b940203cf4ad38ccf2082",
          "MD5=95a95e28cf5ee4ece6ffbaf169358192",
          "MD5=397580c24c544d477688fcfca9c9b542",
          "MD5=c5d1f8ed329ebb86ddd01e414a6a1718",
          "MD5=ab4ee84e09b09012ac86d3a875af9d43",
          "MD5=c9a293762319d73c8ee84bcaaf81b7b3",
          "MD5=a641e3dccba765a10718c9cb0da7879e",
          "MD5=dd39a86852b498b891672ffbcd071c03",
          "MD5=715f8efab1d1c660e4188055c4b28eed",
          "MD5=c046ca4da48db1524ddf3a49a8d02b65",
          "MD5=f5e6ef0dcbb3d4a608e9e0bba4d80d0a",
          "MD5=bf581e9eb91bace0b02a2c5a54bf1419",
          "MD5=d6c2e061b21c32c585aca5f38335c21c",
          "MD5=7aa34cd9ea5649c24a814e292b270b6f",
          "MD5=5eabc87416f59e894adfde065d0405fa",
          "MD5=7ffdd78d63ca7307a96843cfe806799e",
          "MD5=bbbc9a6cc488cfb0f6c6934b193891eb",
          "MD5=113056ec5c679b6f74c9556339ebf962",
          "MD5=f7745b42882dec947f6629ab9b7c39b7",
          "MD5=4b60ef388071e0baf299496e3d6590ae",
          "MD5=c006d1844f20b91d0ea52bf32d611f30",
          "MD5=a0074303fe697a36d9397c0122e04973",
          "MD5=ff7b31fa6e9ab923bce8af31d1be5bb2",
          "MD5=2e887e52e45bba3c47ccd0e75fc5266f",
          "MD5=7eeb4c0cb786a409b94066986addf315",
          "MD5=e28ce623e3e5fa1d2fe16c721efad4c2",
          "MD5=0eb3dfeffb49d32310d96f3aa3e8ca61",
          "MD5=a15235fcec1c9b65d736661d4bec0d38",
          "MD5=0ad87bba19f0b71ccb2d32239abd49ec",
          "MD5=1c9001dcd34b4db414f0c54242fedf49",
          "MD5=490b1f404c4f31f4538b36736c990136",
          "MD5=1dc94a6a82697c62a04e461d7a94d0b0",
          "MD5=555446a3ca8d9237403471d4744e39f4",
          "MD5=100fe0bc0c183d16e1f08d1a2ad624a8",
          "MD5=37086ae5244442ba552803984a11d6cb",
          "MD5=5d4df0bac74e9ac62af6bc99440b050b",
          "MD5=94cdf2cf363be5a8749670bea4db65cd",
          "MD5=3a48f0e4297947663fbb11702aa1d728",
          "MD5=98583b2f2efe12d2a167217a3838c498",
          "MD5=7437d4070b5c018e05354c179f1d5e2a",
          "MD5=7d46d0ddaf8c7e1776a70c220bf47524",
          "MD5=3c4154866f3d483fdc9f4f64ef868888",
          "MD5=91203acddac81511d17a68a030d063a8",
          "MD5=7d87a9c54e49943bf18574c6f02788ee",
          "MD5=8d63e1a9ff4cafee1af179c0c544365c",
          "MD5=34069a15ae3aa0e879cd0d81708e4bcc",
          "MD5=e4788e5b3e5f0a0bbb318a9c426c2812",
          "MD5=1c591efa8660d4d36a75db9b82474174",
          "MD5=e9e786bdba458b8b4f9e93d034f73d00",
          "MD5=d5db81974ffda566fa821400419f59be",
          "MD5=a926b64be7c27ccb96e687a3924de298",
          "MD5=1c4acf27317a2b5eaedff3ce6094794d",
          "MD5=cd1c8a66e885b7a8b464094395566a46",
          "MD5=edfa69e9132a56778d6363cd41843893",
          "MD5=1ed08a6264c5c92099d6d1dae5e8f530",
          "MD5=f690bfc0799e51a626ba3931960c3173",
          "MD5=7c983b4e66c4697ad3ce7efc9166b505",
          "MD5=4a06bcd96ef0b90a1753a805b4235f28",
          "MD5=c28b4a60ebd4b8c12861829cc13aa6ff",
          "MD5=e700a820f117f65e813b216fccbf78c9",
          "MD5=515c75d77c64909690c18c08ef3fc310",
          "MD5=7056549baa6da18910151b08121e2c94",
          "MD5=61b068b10abfa0776f3b96a208d75bf9",
          "MD5=c901887f28bbb55a10eb934755b47227",
          "MD5=0761c357aed5f591142edaefdf0c89c8",
          "MD5=f141db170bb4c6e088f30ddc58404ad3",
          "MD5=6d97ee5b3300d0f7fa359f2712834c40",
          "MD5=53f103e490bc11624ef6a51a6d3bdc05",
          "MD5=3482acba11c71e45026747dbe366a7d9",
          "MD5=7475bfea6ea1cd54029208ed59b96c6b",
          "MD5=d011d5fecdc94754bf02014cb229d6bc",
          "MD5=42f7cc4be348c3efd98b0f1233cf2d69",
          "MD5=45c2d133d41d2732f3653ed615a745c8",
          "MD5=71fffc05cff351a6f26f78441cfebe26",
          "MD5=da6f7407c4656a2dbaf16a407aff1a38",
          "MD5=5dd25029499cd5656927e9c559955b07",
          "MD5=a82c01606dc27d05d9d3bfb6bb807e32",
          "MD5=8a973be665923e9708974e72228f9805",
          "MD5=312e31851e0fc2072dbf9a128557d6ef",
          "MD5=4ff880566f22919ed94ffae215d39da5",
          "MD5=fcc5de75c1837b631ed77ea4638704b9",
          "MD5=279f3b94c2b9ab5911515bc3e0ecf175",
          "MD5=61d6b1c71ad94f8485e966bebc36d092",
          "MD5=300c5b1795c9b6cc1bc4d7d55c7bbe85",
          "MD5=4a829b8cf1f8fdb69e1d58ae04e6106e",
          "MD5=e4d4a22cbf94e6b0a92fc36d46741f56",
          "MD5=e4a0bba88605d4c07b58a2cc3fac0fe9",
          "MD5=272446de15c63095940a3dad0b426f21",
          "MD5=f160ecce1500a5a5877c123584e86b17",
          "MD5=0a2ec9e3e236698185978a5fc76e74e6",
          "MD5=21ca6a013a75fcf6f930d4b08803973a",
          "MD5=e432956d19714c65723f9c407ffea0c5",
          "MD5=4e4b9bdcc6b8d97828ae1972d750a08d",
          "MD5=67e3b720cee8184c714585a85f8058a0",
          "MD5=03c9d5f24fd65ad57de2d8a2c7960a70",
          "MD5=f65e545771fd922693f0ec68b2141012",
          "MD5=7a16fca3d56c6038c692ec75b2bfee15",
          "MD5=5adebdb94abb4c76dad2b7ecb1384a9d",
          "MD5=003dc41d148ec3286dc7df404ba3f2aa",
          "MD5=0490f5961e0980792f5cb5aedf081dd7",
          "MD5=d3e40644a91327da2b1a7241606fe559",
          "MD5=49938383844ceec33dba794fb751c9a5",
          "MD5=f7393fb917aed182e4cbef25ce8af950",
          "MD5=549e5148be5e7be17f9d416d8a0e333e",
          "MD5=9a237fa07ce3ed06ea924a9bed4a6b99",
          "MD5=96fb2101f85fa81871256107bdd25169",
          "MD5=aa9adcf64008e13d7e68b56fdd307ead",
          "MD5=62eed4173c566a248531fb6f20a5900d",
          "MD5=87982977500b93330df08bf372435641",
          "MD5=9e0af1fe4d6dd2ca4721810ed1c930d6",
          "MD5=9b5533c4af38759d167d5399e83b475f",
          "MD5=bd5d4d07ae09e9f418d6b4ac6d9f2ed5",
          "MD5=22ca5fe8fb0e5e22e6fb0848108c03f4",
          "MD5=7b43dfd84de5e81162ebcfafb764b769",
          "MD5=ccb09eb78e047c931708149992c2e435",
          "MD5=8c1d181480796d7d3366a9381fd7782d",
          "MD5=b5192270857c1f17f7290acbaadf097d",
          "MD5=fe71c99a5830f94d77a8792741d6e6c7",
          "MD5=238769fd8379ec476c1114bd2bd28ca6",
          "MD5=cf7aeedd674417b648fc334d179c94ae",
          "MD5=52b7cd123f6d1b9ed76b08f2ee7d9433",
          "MD5=8d14b013fc2b555e404b1c3301150c34",
          "MD5=2e492f14a1087374368562d01cd609aa",
          "MD5=65e6718a547495c692e090d7887d247b",
          "MD5=51e7b58f6e9b776568ffbd4dd9972a60",
          "MD5=84c4d8ae023ca9bb60694fa467141247",
          "MD5=69ac6165912cb263a656497cc70155e6",
          "MD5=30efb7d485fc9c28fe82a97deac29626",
          "MD5=f4b2580cf0477493908b7ed81e4482f8",
          "MD5=fc6dadb97bd3b7a61d06f20d0d2e1bac",
          "MD5=595363661db3e50acc4de05b0215cc6f",
          "MD5=cec257dcac9e708cefb17f8984dd0a70",
          "MD5=0e51d96a3b878b396708535f49a6d7cb",
          "MD5=f34489c0f0d0a16b4db8a17281b57eba",
          "MD5=80b4041695810f98e1c71ff0cf420b6d",
          "MD5=7978d858168fadd05c17779da5f4695a",
          "MD5=557fd33ee99db6fe263cfcb82b7866b3",
          "MD5=7b9e1e5e8ff4f18f84108bb9f7b5d108",
          "MD5=9b91a44a488e4d539f2e55476b216024",
          "MD5=3b23808de1403961205352e94b8f2f9b",
          "MD5=13bd61916343d94ebefc9a7911d7bf88",
          "MD5=936729b8dc2282037bc1504c2680e3ad",
          "MD5=9f70cd5edcc4efc48ae21e04fb03be9d",
          "MD5=75e50ae2e0f783e0caf912f45e15248a",
          "MD5=444f538daa9f7b340cfd43974ed43690",
          "MD5=8b47c5580b130dd3f580af09323bc949",
          "MD5=daf11013cf4c879a54ed6a86a05bee3c",
          "MD5=eff3a9cc3e99ef3ddae57df72807f0c7",
          "MD5=9982da703f13140997e137b1e745a2e3",
          "MD5=f778489c7105a63e9e789a02412aaa5f",
          "MD5=723381977ce7df57ec623db52b84f426",
          "MD5=1db988eb9ac5f99756c33b91830a9cf6",
          "MD5=c02f70960fa934b8defa16a03d7f6556",
          "MD5=5e35c049bc8076406910da36edf9212d",
          "MD5=241a095631570a9cef4f126c87605c60",
          "MD5=bbe4f5f8b0c0f32f384a83ae31f49a00",
          "MD5=b418293e25632c5f377bf034bb450e57",
          "MD5=4f191abc652d8f7442ca2636725e1ed6",
          "MD5=34e55ccceec34a8567c8b95d662ba886",
          "MD5=4f5ca81806098204c4dea0927a8fec66",
          "MD5=8b287636041792f640f92e77e560725e",
          "MD5=56a515173b211832e20fbc64e5a0447c",
          "MD5=2315a8919cfb167e718d8c788ed3ceca",
          "MD5=2d465b4487dc81effaa84f122b71c24f",
          "MD5=29ccff428e5eb70ae429c3da8968e1ec",
          "MD5=28d6b138adc174a86c0f6248d8a88275",
          "MD5=9beecfb3146f19400880da61476ef940",
          "MD5=d5556c54c474cf0bff25804bfbe788d3",
          "MD5=f7a09ac4a91a6390f8d00bf09f53ae37",
          "MD5=0d6fef14f8e1ce5753424bd22c46b1ce",
          "MD5=06897b431c07886454e0681723dd53e6",
          "MD5=c533d6d64b474ffc3169a0e0fc0a701a",
          "MD5=c52dce2bee8ec88748411e470ff531f6",
          "MD5=71858fa117e6f3309606d5cdb57e6e09",
          "MD5=259381daae0357fbfefe1d92188c496a",
          "MD5=ceac1347acae9ad9496d4b0593256522",
          "MD5=4124de3cb72f5dfd7288389862b03f2a",
          "MD5=edbf206c27c3aa7d1890899dffcc03ec",
          "MD5=a5ff71e189b462d2b1f0e9e8c4668d79",
          "MD5=c49a1956a6a25ffc25ad97d6762b0989",
          "MD5=c475c7d0f2d934f150b6c32c01479134",
          "MD5=eb7f6d01c97783013115ad1a2833401a",
          "MD5=e98f4cc2cbf9ec23fd84da30c0625884",
          "MD5=bf74d0706f5ab9c34067192260f4efb0",
          "MD5=0752f113d983030939b4ab98b0812cf0",
          "MD5=7c22b7686c75a2bb7409b3c392cc791a",
          "MD5=07efb8259b42975d502a058db8a3fd21",
          "MD5=def0da6c95d14f7020e533028224250e",
          "MD5=d4a9f80ecb448da510e5bf82c4a699ee",
          "MD5=c5e7e8ca0d76a13a568901b6b304c3ba",
          "MD5=59f6320772a2e6b0b3587536be4cc022",
          "MD5=0cd2504a2e0a8ad81d9a3a6a1fad7306",
          "MD5=0ccc4e9396e0be9c4639faec53715831",
          "MD5=c15eb30e806ad5e771b23423fd2040b0",
          "MD5=f3d14fcdb86db8d75416ce173c6061af",
          "MD5=637f2708da54e792c27f1141d5bb09cd",
          "MD5=779af226b7b72ff9d78ce1f03d4a3389",
          "MD5=a17c58c0582ee560c72f60764ed63224",
          "MD5=c2c1b8c00b99e913d992a870ed478a24",
          "MD5=2b6a17ec50d3a21e030ed78f7acbd2af",
          "MD5=76bb1a4332666222a8e3e1339e267179",
          "MD5=0ef05030abd55ba6b02faa2c0970f67f",
          "MD5=56a9e9b5334f8698a0ede27c64140982",
          "MD5=9e0659d443a2b9d1afc75a160f500605",
          "MD5=bc6ff00fb3a14437c94b37ac9a2101d4",
          "MD5=2da209dde8188076a9579bd256dc90d0",
          "MD5=11dc5523bb559f8d2ce637f6a2b70dea",
          "MD5=12908c285b9d68ee1f39186110df0f1e",
          "MD5=73a40e29f61e5d142c8f42b28a351190",
          "MD5=0797bb21d7a0210fedf4f3533ee82494",
          "MD5=6846c2035b4c56b488d2ce2c69a57261",
          "MD5=dbf11f3fad1db3eb08e2ee24b5ebfb95",
          "MD5=41339c852c6e8e4c94323f500c87a79c",
          "MD5=ce57844fb185d0cdd9d3ce9e5b6a891d",
          "MD5=3ab94fba7196e84a97e83b15f7bcb270",
          "MD5=0291ced808eafe406d3d9b56d2fc0c26",
          "MD5=3836e2db9034543f63943cdbb52a691a",
          "MD5=0dff47f3b14fb1c1bad47cc517f0581a",
          "MD5=e8ebba56ea799e1e62748c59e1a4c586",
          "MD5=2c54859a67306e20bfdc8887b537de72",
          "MD5=4e67277648c63b79563360dac22b5492",
          "MD5=26ce59f9fc8639fd7fed53ce3b785015",
          "MD5=2927eac51c46944ab69ba81462fb9045",
          "MD5=1a6e12c2d11e208bdf72a8962120fae7",
          "MD5=daf800da15b33bf1a84ee7afc59f0656",
          "MD5=9cbdb5fb6dc63cb13f10b6333407cbb9",
          "MD5=9650db2ef0a44984845841ab24972ced",
          "MD5=96a8b535b5e14b582ca5679a3e2a5946",
          "MD5=33b3842172f21ba22982bfb6bffbda27",
          "MD5=2391fb461b061d0e5fccb050d4af7941",
          "MD5=8bf290b5eda99fc2697373a87f4e1927",
          "MD5=5fade7137c14a94b323f3b7886fba2a9",
          "MD5=a89ca92145fc330adced0dd005421183",
          "MD5=96421b56dbda73e9b965f027a3bda7ba",
          "MD5=d6e9f6c67d9b3d790d592557a7d57c3c",
          "MD5=6fa271b6816affaef640808fc51ac8af",
          "MD5=94d45bb36b13f4e936badb382fc133fe",
          "MD5=e027daa2f81961d09aef88093e107d93",
          "MD5=b1b8e6b85dd03c7f1290b1a071fc79c1",
          "MD5=07fc1e043654fdde56da98d93523635c",
          "MD5=118f3fdba730094d17aa1b259586aef6",
          "MD5=2714c93eb240375a2893ed7f8818004f",
          "MD5=641243746597fbd650e5000d95811ea3",
          "MD5=449bb1c656fa30de7702f17e35b11cd3",
          "MD5=96c850e53caca0469e1c4604e6c1aad1",
          "MD5=12cecc3c14160f32b21279c1a36b8338",
          "MD5=949ef0df929a71d6cc77494dfcb1ddeb",
          "MD5=8065a7659562005127673ac52898675f",
          "MD5=1033f0849180aac4b101a914bc8c53b4",
          "MD5=8f73c1c48ffddfca7d1a98faf83d18ff",
          "MD5=648adec580746afbbf59904c1e150c73",
          "MD5=e84605c8e290de6b92ce81d2f6a175d2",
          "MD5=300d6ac47a146eb8eb159f51bc13f7cf",
          "MD5=392d7180653b0ca77a78bdf15953d865",
          "MD5=f0e21ababe63668fb3fbd02e90cd1fa9",
          "MD5=e0bfbdf3793ea2742c03f5a82cb305a5",
          "MD5=00143c457c8885fd935fc5d5a6ba07a4",
          "MD5=c8d3784a3ab7a04ad34ea0aba32289ca",
          "MD5=9532893c1d358188d66b0d7b0784bb6b",
          "MD5=564d84a799db39b381a582a0b2f738c4",
          "MD5=fd3b7234419fafc9bdd533f48896ed73",
          "MD5=be5f46fd1056f02a7a241e052fa5888f",
          "MD5=2128e6c044ee86f822d952a261af0b48",
          "MD5=4b817d0e7714b9d43db43ae4a22a161e",
          "MD5=eaec88a63db9cf9cee53471263afe6fb",
          "MD5=ecdc79141b7002b246770d01606504f2",
          "MD5=ad866d83b4f0391aecceb4e507011831",
          "MD5=88a6d84f4f1cc188741271ac1999a4e9",
          "MD5=8580165a2803591e007380db9097bbcc",
          "MD5=5c4df33951d20253a98aa7b5e78e571a",
          "MD5=27d21eeff199ed555a29ca0ea4453cfb",
          "MD5=43bfc857406191963f4f3d9f1b76a7bf",
          "MD5=0fbf893691a376b168d8cdf427b89945",
          "MD5=1762105b28eb90d19e9ab3acde16ead6",
          "MD5=b41dcdb2e710dffba2d8ea1defb0f087",
          "MD5=c42caa9cdcc50c01cb2fed985a03fe23",
          "MD5=c516acb873c7f8c24a0431df8287756e",
          "MD5=343ada10d948db29251f2d9c809af204",
          "MD5=790ccca8341919bb8bb49262a21fca0e",
          "MD5=51207adb8dab983332d6b22c29fe8129",
          "MD5=f1e054333cc40f79cfa78e5fbf3b54c2",
          "MD5=7c4e513702a0322b0e3bce29dea9e3e9",
          "MD5=8ac6d458abbe4f5280996eb90235377c",
          "MD5=6a1ff4806c1a6e897208f48a1f5b062f",
          "MD5=a4531040276080441974d9e00d8d4cfa",
          "MD5=d1f9ffe5569642c8f8c10ed7ee5d9391",
          "MD5=09b3d078ffa3b4ed0ad2e477a2ee341f",
          "MD5=83601bbe5563d92c1fdb4e960d84dc77",
          "MD5=1414629b1ee93d2652ff49b2eb829940",
          "MD5=84b17daba8715089542641990c1ea3c2",
          "MD5=6ae4dec687ac6d1b635a4e351dddf73e",
          "MD5=9dfd73dadb2f1c7e9c9d2542981aaa63",
          "MD5=1e1a3d43bd598b231207ff3e70f78454",
          "MD5=07f83829e7429e60298440cd1e601a6a",
          "MD5=7c72a7e1d42b0790773efd8700e24952",
          "MD5=f41eea88057d3dd1a56027c4174eed22",
          "MD5=f53fa44c7b591a2be105344790543369",
          "MD5=08e06b839499cb4b752347399db41b57",
          "MD5=c3fea895fe95ea7a57d9f4d7abed5e71",
          "MD5=785045f8b25cd2e937ddc6b09debe01a",
          "MD5=53bb10742e10991af4ad280fcb134151",
          "MD5=76c643ab29d497317085e5db8c799960",
          "MD5=bce7f34912ff59a3926216b206deb09f",
          "MD5=c4f5619ce04d4bee38024d08513c77fd",
          "MD5=2a3ce41bb2a7894d939fbd1b20dae5a0",
          "MD5=86bec99cd121b0386a5acc1c368a9d49",
          "MD5=e076dadf37dd43a6b36aeed957abee9e",
          "MD5=4a85754636c694572ca9f440d254f5ce",
          "MD5=f4b7b84a6828d2f9205b55cf8cfc7742",
          "MD5=8f5b84350bfc4fe3a65d921b4bd0e737",
          "MD5=f9d04e99e4cab90973226a4555bc6d57",
          "MD5=bc5366760098dc14ec00ae36c359f42b",
          "MD5=b79475c4783efdd8122694c6b5669a79",
          "MD5=5f4a232d92480a1bebbe025ef64dc760",
          "MD5=1cff7b947f8c3dea1d34dc791fc78cdc",
          "MD5=69ba501a268f09f694ff0e8e208aa20e",
          "MD5=030c8432981e4d41b191624b3e07afe2",
          "MD5=c56a9ed0192c5a2b39691e54f2132a2f",
          "SHA1=38a863bcd37c9c56d53274753d5b0e614ba6c8bb",
          "SHA1=87d2b638e5dfab1e37961d27ca734b83ece02804",
          "SHA1=1a56614ea7d335c844b7fc6edd5feb59b8df7b55",
          "SHA1=f02af84393e9627ba808d4159841854a6601cf80",
          "SHA1=75649b228a22ce1e2a306844e0d48f714fb03f28",
          "SHA1=b242b0332b9c9e8e17ec27ef10d75503d20d97b6",
          "SHA1=eb93d2f564fea9b3dc350f386b45de2cd9a3e001",
          "SHA1=388068adc9ec46a0bbc8173bcb0d5f9cf8af6ea5",
          "SHA1=fce3a95b222c810c56e7ed5a3d7fb059eb693682",
          "SHA1=f4728f490d741b04b611164a7d997e34458e3a5e",
          "SHA1=4d516b1c9b7a81de2836ab24ba6b880c11807255",
          "SHA1=bda26e533ef971d501095950010081b772920afc",
          "SHA1=ec4cc6de4c779bb1ca1dd32ee3a03f7e8d633a9b",
          "SHA1=30a224b22592d952fbe2e6ad97eda4a8f2c734e0",
          "SHA1=b82c034e41d463f4e68b0a7d334f2d7611049bcb",
          "SHA1=8795df6494b724d9f279f007db33c24c27a91d08",
          "SHA1=b8d19cd28788ce4570623a5433b091a5fbd4c26d",
          "SHA1=10e15ba8ff8ed926ddd3636cec66a0f08c9860a4",
          "SHA1=72f16e6a18ba87248dd72f52445c916ad2e4edc2",
          "SHA1=c0568bcdf57db1fa43cdee5a2a12b768a0064622",
          "SHA1=ddbe809b731a0962e404a045ab9e65a0b64917ad",
          "SHA1=f1c8c3926d0370459a1b7f0cf3d17b22ff9d0c7f",
          "SHA1=0edf51a0fac3b90f6961c2b20bbaeb4ccfc1ea84",
          "SHA1=6102b73489e1d319c0db7b84cb2c426c5f680120",
          "SHA1=c16d7b2fbe69a28ccbcf87348903277f22805bf3",
          "SHA1=c21510569fd84a5fe04508aa28e3cf9c8cc45b7a",
          "SHA1=2207cdee7deaba1492ae2349392864f19eb4dfaf",
          "SHA1=2f86a4828ba86034f0c043db3e3db33aa2cf5da5",
          "SHA1=569f4605c65c2a217b28aefeb8570f9ea663e4b7",
          "SHA1=cd828ee0725f6185861fd0a9d3bd78f1d96e55bf",
          "SHA1=c8d87f3cd34c572870e63a696cf771580e6ea81b",
          "SHA1=af6e1f2cfb230907476e8b2d676129b6d6657124",
          "SHA1=7877bd7da617ec92a5c47f0da1f0abcf6484d905",
          "SHA1=3adea4a3a91504dc2e3c5e9247c6427cd5c73bab",
          "SHA1=55015f64783ddd148674a74d8137bcd6ccd6231d",
          "SHA1=f8d7369527cc6976283cc73cd761f93bd1cec49d",
          "SHA1=8fb149fc476cf5bf18dc575334edad7caf210996",
          "SHA1=091df975fa983e4ad44435ca092dbf84911f28a5",
          "SHA1=928d26cce64ad458e1f602cc2aea848e0b04eaaf",
          "SHA1=a7baff6666fc2d259c22f986b8a153c7b1d1d8be",
          "SHA1=90d73db752eac6ffc53555281fc5aa92297285ec",
          "SHA1=282bb241bda5c4c1b8eb9bf56d018896649ca0e1",
          "SHA1=a0bf00e4ef2b1a79ccf2361c6b303688641ed94c",
          "SHA1=4a2bb97d395634b67194856d79a1ee5209aa06a7",
          "SHA1=e0ee5ea6693c26f21b143ef9b133f53efe443b1e",
          "SHA1=c70989ed7a6ad9d7cd40ae970e90f3c3f2f84860",
          "SHA1=c9cbfdd0be7b35751a017ec59ff7237ffdc4df1f",
          "SHA1=c05df2e56e05b97e3ca8c6a61865cae722ed3066",
          "SHA1=dbf6e72c08824fe49c29b7660c9965c37d983e93",
          "SHA1=bed323603a33fa8b2fc7568149345184690f0390",
          "SHA1=2365a66c1eddfcf8385d9ff38ba8bd5f6f2e4fc2",
          "SHA1=59b0b8e3478f3d21213a8afda84181c4ed0a79a7",
          "SHA1=297fdf58e60d54bcddf2694c21ceb9da9ec17915",
          "SHA1=bfe55cacc7c56c9f7bd75bdb4b352c0b745d071b",
          "SHA1=adf9328e60c714ff0b98083bcf2f4ee2d58b960b",
          "SHA1=78834ff75e2ff8b7456e85114802e58bc9fda457",
          "SHA1=0a5ef5b72e621a639860c03f1cac499567082f39",
          "SHA1=aadaec4c31d661c249e4cf455ec752fffa3e5cfc",
          "SHA1=492a47426b04f00c0d5b711ad8c872aad3aa3a1d",
          "SHA1=064847af77afca8a879a9bf34cb87b64b5e69165",
          "SHA1=468cc011807704c04892ed209cf81d7896a12a0c",
          "SHA1=1013d5a0fd6074a8c40dbf3a88e3e06fbf3bcf41",
          "SHA1=fc62b746e0e726537bf848b48212f46db585af6d",
          "SHA1=dc0e97adb756c0f30b41840a59b85218cbdd198f",
          "SHA1=eceb51233f013e04406da11482324d45e70281c7",
          "SHA1=ff9887cfd695916a06319b3a96f7ab2e6343a20e",
          "SHA1=67e87ca093da64a23cf0fc0be2b35e03d1bf1543",
          "SHA1=b9807b8840327c6d7fbdde45fc27de921f1f1a82",
          "SHA1=62244c704b0f227444d3a515ea0dc1003418a028",
          "SHA1=4d6e532830058fadd861ff9eac16de8cfc6974ce",
          "SHA1=ebced350ea447df8e10ebb080e3a3e5b32aca348",
          "SHA1=6de3d5c2e33d91eef975a30bc07b0e53a68e77b8",
          "SHA1=d5fd9fe10405c4f90235e583526164cd0902ed86",
          "SHA1=0be77bb3720283c9a970a97dab25d2a312e86110",
          "SHA1=213ba055863d4226da26a759e8a254062ea77814",
          "SHA1=9099482b26e9ba8e1d303418afc9111a3bffd6b3",
          "SHA1=623cd2abef6c92255f79cbbd3309cb59176771da",
          "SHA1=f6b3577ea4b1a5641ae3421151a26268434c3db8",
          "SHA1=01a578a3a39697c4de8e3dab04dba55a4c35163e",
          "SHA1=461882bd59887617cadc1c7b2b22d0a45458c070",
          "SHA1=f6d826d73bf819dbc9a058f2b55c88d6d4b634e3",
          "SHA1=8278db134d3b505c735306393fdf104d014fb3bf",
          "SHA1=22c909898f5babe37cc421b4f5ed0522196f8127",
          "SHA1=e8311ba74bc6b35b1171b81056d0148913b1d61c",
          "SHA1=3eea0f5fb180c6f865fc83ac75ef3ad5b1376775",
          "SHA1=8e2511ae90643584ceb0d98f0f780cd6b7290604",
          "SHA1=8a922499f7a1b978555b46c30f90de1339760c74",
          "SHA1=2540205480ea3d59e4031de3c6632e3ce2596459",
          "SHA1=8edcd4b35f5ae88d14e83252390659c6fc79eae3",
          "SHA1=aaffdc89befa42e375f822366bbded8c245baf94",
          "SHA1=1d9fd846e12104ae31fd6f6040b93fc689abf047",
          "SHA1=3d3b42d7b0af68da01019274e341b03d7c54f752",
          "SHA1=88811e1a542f33431b9f8b74cb8bf27209b27f17",
          "SHA1=67b45c1e204d44824cd7858455e1acedbd7ffbb3",
          "SHA1=fff7ee0febb8c93539220ca49d4206616e15c666",
          "SHA1=205c69f078a563f54f4c0da2d02a25e284370251",
          "SHA1=d302ae7f016299af323a3542d840004888ab91ff",
          "SHA1=15d1a6a904c8409fb47a82aefa42f8c3c7d8c370",
          "SHA1=228b1ff5cd519faa15d9c2f8cfefd7e683bc3f2b",
          "SHA1=63cf021c8662fa23ce3e4075a4f849431e473058",
          "SHA1=ca4d2bd6022f71e1a48b08728c0ac83c68e91281",
          "SHA1=d43b2ac1221f2eaf2c170788280255cfef3edd72",
          "SHA1=db3ce886a47027c09bb668c7049362ab86c82ceb",
          "SHA1=e5114fd50904c7fb75d8c86367b9a2dd4f79dfb1",
          "SHA1=745bad097052134548fe159f158c04be5616afc2",
          "SHA1=a7d827a41b2c4b7638495cd1d77926f1ba902978",
          "SHA1=0e47bd9b67500a67ce18c24328d6d0db8ae2c493",
          "SHA1=ef95f500b60c49f40ed6ce3014ffdb294b301e95",
          "SHA1=2ee7b3f6bcc9e95a9ae60bcb9bbc483b0400077d",
          "SHA1=b3f5185d7824ea2c2d931c292f4d8f77903a4d2a",
          "SHA1=029c678674f482ababe8bbfdb93152392457109d",
          "SHA1=aadebbcbde0e7edd35e29d98871289a75e744aad",
          "SHA1=a88546fb61a2fa7dab978a9cb678469e8f0ed475",
          "SHA1=90abd7670c84c47e6ffc45c67d676db8c12b1939",
          "SHA1=4fe873544c34243826489997a5ff14ed39dd090d",
          "SHA1=d06d119579156b1ec732c50f0f64358762eb631a",
          "SHA1=27eab595ec403580236e04101172247c4f5d5426",
          "SHA1=d1670bd08cfd376fc2b70c6193f3099078f1d72f",
          "SHA1=7ee675f0106e36d9159c5507b96c3237fb9348cd",
          "SHA1=fde6ab389a6e0a9b2ef1713df9d43cca5f1f3da8",
          "SHA1=d61acd857242185a56e101642d15b9b5f0558c26",
          "SHA1=9d44260558807daff61a0cc0c6a8719c3adacd2d",
          "SHA1=3f17ff83dc8a5f875fb1b3a5d3b9fcbe407a99f0",
          "SHA1=4a235f0b84ff615e2879fa9e0ec0d745fcfdaa5c",
          "SHA1=a951953e3c1bb08653ed7b0daec38be7b0169c27",
          "SHA1=35f803d483af51762bee3ec130de6a03362ce920",
          "SHA1=ed3f11383a47710fa840e13a7a9286227fa1474c",
          "SHA1=004d9353f334e42c79a12c3a31785a96f330bbef",
          "SHA1=0b77242d4e920f2fcb2b506502cfe3985381defc",
          "SHA1=8146ed4a9c9a2f7e7aeae0a0539610c3c1cd3563",
          "SHA1=2261198385d62d2117f50f631652eded0ecc71db",
          "SHA1=947db58d6f36a8df9fa2a1057f3a7f653ccbc42e",
          "SHA1=ef0504dd90eb451f51d2c4f987fb7833c91c755b",
          "SHA1=34b2986f1ff5146f7145433f1ef5dfe6210131d0",
          "SHA1=472cc191937349a712aabcbc4d118c1c982ab7c9",
          "SHA1=7c43d43d95232e37aa09c5e2bcd3a7699d6b7479",
          "SHA1=de2c073c8b4db6ffd11a99784d307f880444e5d3",
          "SHA1=e88259de797573fa515603ad3354aed0bce572f1",
          "SHA1=f70eb454c0e9ea67a18c625faf7a666665801035",
          "SHA1=4a2e034d2702aba6bca5d9405ba533ed1274ff0c",
          "SHA1=8788f4b39cbf037270904bdb8118c8b037ee6562",
          "SHA1=d94f2fb3198e14bfe69b44fb9f00f2551f7248b2",
          "SHA1=ac600a2bc06b312d92e649b7b55e3e91e9d63451",
          "SHA1=4b009e91bae8d27b160dc195f10c095f8a2441e1",
          "SHA1=5b866f522bcdf80e6a9fda71b385f917317f6551",
          "SHA1=4a7d66874a0472a47087fabaa033a85d47413379",
          "SHA1=517504aaf8afc9748d6aec657d46a6f7bbc60c09",
          "SHA1=f0d6b0bcd5f47b41d3c3192e244314d99d1df409",
          "SHA1=3f43412c563889a5f5350f415f7040a71cc25221",
          "SHA1=8031ecbff95f299b53113ccd105582defad38d7b",
          "SHA1=a6fe4f30ca7cb94d74bc6d42cdd09a136056952e",
          "SHA1=55c64235d223baeb8577a2445fdaa6bedcde23db",
          "SHA1=12154f58b68902a40a7165035d37974128deb902",
          "SHA1=fa60a89980aad30db3a358fb1c1536a4d31dff6c",
          "SHA1=d0d39e1061f30946141b6ecfa0957f8cc3ddeb63",
          "SHA1=9310239b75394b75a963336fbd154038fc13c4e3",
          "SHA1=7673cebd15488cbbb4ca65209f92faab3f933205",
          "SHA1=3a3342f4ca8cc45c6b86f64b1a7d7659020b429f",
          "SHA1=190c20e130a9156442eebcf913746c69b9485eec",
          "SHA1=3c9c86c0b215ecbab0eeb4479c204dba65258b8e",
          "SHA1=8dc2097a90eb7e9d6ee31a7c7a95e7a0b2093b89",
          "SHA1=c00ad2a252b53cf2d0dc74b53d1af987982e1ad1",
          "SHA1=3f223581409492172a1e875f130f3485b90fbe5f",
          "SHA1=ea877092d57373cb466b44e7dbcad4ce9a547344",
          "SHA1=7cd4aea9c1f82111bf7f9d4934be95e9bb6f8ae0",
          "SHA1=d32408c3b79b1f007331d2a3c78b1a7e96f37f79",
          "SHA1=a6a71fb4f91080aff2a3a42811b4bd86fb22168d",
          "SHA1=a0c7c913d7b5724a46581b6e00dd72c26c37794d",
          "SHA1=6f8b0e1c7d7bd7beed853e0d51ca03f143e5b703",
          "SHA1=91ee32b464f6385fc8c44b867ca3dec665cbe886",
          "SHA1=976777d39d73034df6b113dfce1aa6e1d00ffcfd",
          "SHA1=75dd52e28c40cd22e38ae2a74b52eb0cddfcb2c4",
          "SHA1=14bf0eaa90e012169745b3e30c281a327751e316",
          "SHA1=f9cced7ccdc1f149ad8ad13a264c4425aee89b8e",
          "SHA1=4e826430a1389032f3fe06e2cc292f643fb0c417",
          "SHA1=e4e40032376279e29487afc18527804dce792883",
          "SHA1=bebf97411946749b9050989d9c40352dbe8269ea",
          "SHA1=cfcecf6207d16aeb0af29aac8a4a2f104483018e",
          "SHA1=b21cba198d721737aabd882ada6c91295a5975ed",
          "SHA1=8f540936f2484d020e270e41529624407b7e107e",
          "SHA1=32888d789edc91095da2e0a5d6c564c2aebcee68",
          "SHA1=10fc6933deb7de9813e07d864ce03334a4f489d9",
          "SHA1=09d3ff3c57f5154735e676f2c0a10b5e51336bb3",
          "SHA1=d022f5e3c1bba43871af254a16ab0e378ea66184",
          "SHA1=6c445ceb38d5b1212ce2e7498888dd9562a57875",
          "SHA1=cf9b4d606467108e4b845ecb8ede2f5865bd6c33",
          "SHA1=c4ce0bb8a939c4f4cff955d9b3cdd9eb52746cc9",
          "SHA1=8325e8d7fd2edc126dcf1089dee8da64e79fb12e",
          "SHA1=2bb68b195f66f53f90f17b364928929d5b2883b5",
          "SHA1=d3a6f86245212e1ef9e0e906818027ec14a239cb",
          "SHA1=5672e2212c3b427c1aef83fcd725b587a3d3f979",
          "SHA1=7cee31d3aaee8771c872626feedeeb5d09db008c",
          "SHA1=a00e444120449e35641d58e62ed64bb9c9f518d2",
          "SHA1=4f0d9122f57f4f8df41f3c3950359eb1284b9ab5",
          "SHA1=59c4960851af9240dded4173c4f823727af19512",
          "SHA1=ace6b9e34e3e2e73fe584f3bbdb4e4ec106e0a7d",
          "SHA1=9393698058ce1187eb87e8c148cfe4804761142d",
          "SHA1=ed219d966a6e74275895cc0b975b79397760ea9f",
          "SHA1=4dba2ac32ed58ead57dd36b18d1cb30cc1c7b9aa",
          "SHA1=d2be76e79741454b4611675b58446e10fc3d0c6c",
          "SHA1=e83458c4a6383223759cd8024e60c17be4e7c85f",
          "SHA1=6b54b8f7edca5fb25a8ef1a1d31e14b9738db579",
          "SHA1=52d9bbe41eea0b60507c469f7810d80343c03c2b",
          "SHA1=f7330a6a4d9df2f35ab93a28c8ee1eb14a74be6e",
          "SHA1=589a7d4df869395601ba7538a65afae8c4616385",
          "SHA1=61d44c9a1ef992bc29502f725d1672d551b9bc3f",
          "SHA1=da689e8e0e3fc4c7114b44d185eef4c768e15946",
          "SHA1=170a50139f95ad1ec94d51fdd94c1966dbed0e47",
          "SHA1=05c0c49e8bcf11b883d41441ce87a2ee7a3aba1d",
          "SHA1=bfff0073c936b9a7e2ad6848deb6f9bf03205488",
          "SHA1=1586f121d38cc42e5d04fe2f56091e91c6cdd8fa",
          "SHA1=96ec8c16f6a54b48e9a7f0d0416a529f4bf9ac11",
          "SHA1=bbc1e5fd826961d93b76abd161314cb3592c4436",
          "SHA1=4d4535c111c7b568cb8a3bece27a97d738512a6b",
          "SHA1=258f1cdc79bd20c2e6630a0865abfe60473b98d5",
          "SHA1=4789b910023a667bee70ff1f1a8f369cffb10fe8",
          "SHA1=2c2fc258871499b206963c0f933583cedcdf9ea2",
          "SHA1=6a2912c8e2aa4373852585bc1134b83c637bc9fd",
          "SHA1=9923c8f1e565a05b3c738d283cf5c0ed61a0b90f",
          "SHA1=1951ae94c6ee63fa801208771b5784f021c70c60",
          "SHA1=8b53284fb23d34ca144544b19f8fba63700830d8",
          "SHA1=6bfeac43be3ebd8d95a5eba963e18d97d76d2b05",
          "SHA1=2ae1456bb0fa5a016954b03967878fb6db4d81eb",
          "SHA1=63f9ee1e7aefd961cf36eeffd455977f1b940f6c",
          "SHA1=ac13941f436139b909d105ad55637e1308f49d9a",
          "SHA1=baa94f0f816d7a41a63e7f1aa9dd3d64a9450ed0",
          "SHA1=c52cef5b9e1d4a78431b7af56a6fdb6aa1bcad65",
          "SHA1=bff4c3696d81002c56f473a8ab353ef0e45854c0",
          "SHA1=64df813dc0774ef57d21141dcb38d08059fd8660",
          "SHA1=bdfb1a2b08d823009c912808425b357d22480ecc",
          "SHA1=470633a3a1e1b1f13c3f6c5192ce881efd206d7c",
          "SHA1=65f6a4a23846277914d90ba6c12742eecf1be22d",
          "SHA1=ed40c1f7da98634869b415530e250f4a665a8c48",
          "SHA1=1ab702c495cb7832d4cc1ff896277fa56ed8f30d",
          "SHA1=684786de4b3b3f53816eae9df5f943a22c89601f",
          "SHA1=b3b523504af5228c49060ec8dea9f8adce05e117",
          "SHA1=108575d8f0b98fed29514a54052f7bf5a8cb3ff0",
          "SHA1=8fafd70bae94bbc22786c9328ee9126fed54dbae",
          "SHA1=d3b23a0b70d6d279abd8db109f08a8b0721ce327",
          "SHA1=190ec384e6eb1dafca80df05055ead620b2502ba",
          "SHA1=6b25acbcb41a593aca6314885572fc22d16582a2",
          "SHA1=341225961c15a969c62de38b4ec1938f65fda178",
          "SHA1=faa870b0cb15c9ac2b9bba5d0470bd501ccd4326",
          "SHA1=5812387783d61c6ab5702213bb968590a18065e3",
          "SHA1=e700fcfae0582275dbaee740f4f44b081703d20d",
          "SHA1=a2167b723dfb24bf8565cbe2de0ecce77307fb9e",
          "SHA1=7cf7644e38746c9be4537b395285888d5572ae1b",
          "SHA1=3b8ddf860861cc4040dea2d2d09f80582547d105",
          "SHA1=1a17cc64e47d3db7085a4dc365049a2d4552dc8a",
          "SHA1=9b3f57693f0f69d3729762d59a10439e738b9031",
          "SHA1=63bb17160115f16b3fca1f028b13033af4e468c6",
          "SHA1=631fdd1ef2d6f2d98e36f8fc7adbf90fbfb0a1e8",
          "SHA1=06ec56736c2fc070066079bb628c17b089b58f6c",
          "SHA1=d1ba4c95697a25ec265a3908acbff269e29e760c",
          "SHA1=e40182c106f6f09fd79494686329b95477d6beb5",
          "SHA1=c74f6293be68533995e4b95469e6dddedd1c3905",
          "SHA1=ec457a53ea03287cbbd1edcd5f27835a518ef144",
          "SHA1=1a01f3bdbfae4f8111674068a001aaf3363f21ea",
          "SHA1=ce1d0ebaeaa4fe3ecb49242f1e80bc7a4e43fd8c",
          "SHA1=f77413ec3bd9ed3f31fc53a4c755dc4123e0068f",
          "SHA1=17614fdee3b89272e99758983b99111cbb1b312c",
          "SHA1=8b63eb0f5dbb844ee5f6682f0badef872ae569bf",
          "SHA1=c4d7fb9db3c3459f7e8c0e3d48c95c7c9c4cff60",
          "SHA1=c8674fe95460a37819e06d9df304254931033ca7",
          "SHA1=273634ac170d1a6abd32e0db597376a6f62eb59e",
          "SHA1=dd4cd182192b43d4105786ba87f55a036ec45ef2",
          "SHA1=f9eb4c942a89b4ba39d2bdbfd23716937ccb9925",
          "SHA1=94144619920bd086028bb5647b1649a35438028c",
          "SHA1=2871a631f36cd1ea2fd268036087d28070ef2c52",
          "SHA1=57cf65b024d9e2831729def42db2362d7c90dcfa",
          "SHA1=d3daa971580b9f94002f7257de44fcef13bb1673",
          "SHA1=8ac5703e67c3e6e0585cb8dbb86d196c5362f9bb",
          "SHA1=756fd2b82bf92538786b1bd283c6ef2f9794761e",
          "SHA1=c775ca665ed4858acc3f7e75e025cbbda1f8c687",
          "SHA1=a8be6203c5a87ecc3ae1c452b7b6dbdf3a9f82ae",
          "SHA1=085c0ea6980cb93a3afa076764b7866467ac987c",
          "SHA1=09f117d83f2f206ee37f1eb19eea576a0ac9bdcc",
          "SHA1=c41ff2067634a1cce6b8ec657cdfd87e7f6974e3",
          "SHA1=ddec18909571a9d5992f93636628756b7aa9b9a2",
          "SHA1=fbf8b0613a2f7039aeb9fa09bd3b40c8ff49ded2",
          "SHA1=06ec62c590ca0f1f2575300c151c84640d2523c0",
          "SHA1=f95b59cab63408343ecbdb0e71db34e83f75b503",
          "SHA1=1f7501e01d84a2297c85cb39880ec4e40ac3fe8a",
          "SHA1=9360774a37906e3b3c9fab39721cb9400dd31c46",
          "SHA1=2a6e6bd51c7062ad24c02a4d2c1b5e948908d131",
          "SHA1=dc393d30453daa1f853f47797e48c142ac77a37b",
          "SHA1=b70321d078f2e9c9826303bdc87ba9b7be290807",
          "SHA1=4cd5bf02edf6883a08dfed7702267612e21ed56e",
          "SHA1=910cb12aa49e9f35ecc4907e8304adf0dcca8cf1",
          "SHA1=296757d5663290f172e99e60b9059f989cba4c4e",
          "SHA1=0caf4e86b14aaab7e10815389fcd635988bc6637",
          "SHA1=449ff4f5ce2fdddac05a6c82e45a7e802b1c1305",
          "SHA1=2dfcb799b3c42ecb0472e27c19b24ac7532775ce",
          "SHA1=f5696fb352a3fbd14fb1a89ad21a71776027f9ab",
          "SHA1=4818d7517054d5cba38b679bdf7f8495fd152729",
          "SHA1=47df454cb030c1f4f7002d46b1308a32b03148e7",
          "SHA1=28fa0e9429af24197134306b6c7189263e939136",
          "SHA1=186b6523e8e2fa121d6d3b8cb106e9a5b918af4f",
          "SHA1=9dbd255ee29be0e552f7f5f30d6ffb97e6cd0b0d",
          "SHA1=76a756cc61653abcadd63db4a74c48d92607a861",
          "SHA1=15df139494d2c40a645fb010908551185c27f3c5",
          "SHA1=64879accdb4dbbaac55d91185c82f2b193f0c869",
          "SHA1=55777e18eb95b6c9c3e6df903f0ac36056fa83da",
          "SHA1=d7f7594ff084201c0d9fa2f4ef1626635b67bce5",
          "SHA1=135b261eb03e830c57b1729e3a4653f9c27c7522",
          "SHA1=deaf7d0c934cc428981ffa5bf528ca920bc692dc",
          "SHA1=309a799f1a00868ab05cdbb851b3297db34d9b0d",
          "SHA1=d5beca70469e0dcb099ba35979155e7c91876fd2",
          "SHA1=376d59d0b19905ebb9b89913a5bdfacde1bd5a1e",
          "SHA1=460008b1ffd31792a6deadfa6280fb2a30c8a5d2",
          "SHA1=dfd801b6c2715f5525f8ffb38e3396a5ad9b831d",
          "SHA1=92befb8b3d17bd3f510d09d464ec0131f8a43b8f",
          "SHA1=b671677079bf7c660579bee08b8875a48ff61896",
          "SHA1=0d6fb0cb9566b4e4ca4586f26fe0631ffa847f2c",
          "SHA1=bca4bbe4388ebeb834688e97fac281c09b0f3ac1",
          "SHA1=0b3836d5d98bc8862a380aae19caa3e77a2d93ef",
          "SHA1=b394f84e093cb144568e18aaf5b857dff77091fa",
          "SHA1=7329bb4a7ca98556fa6b05bd4f9b236186e845d1",
          "SHA1=0307d76750dd98d707c699aee3b626643afb6936",
          "SHA1=e22495d92ac3dcae5eeb1980549a9ead8155f98a",
          "SHA1=2740cd167a9ccb81c8e8719ce0d2ae31babc631c",
          "SHA1=77a011b5d5d5aaf421a543fcee22cb7979807c60",
          "SHA1=a197a02025946aca96d6e74746f84774df31249e",
          "SHA1=82ba5513c33e056c3f54152c8555abf555f3e745",
          "SHA1=c71597c89bd8e937886e3390bc8ac4f17cdeae7c",
          "SHA1=4a705af959af61bad48ef7579f839cb5ebd654d2",
          "SHA1=e71caa502d0fe3a7383ce26285a6022e63acda97",
          "SHA1=446130c61555e5c9224197963d32e108cd899ea0",
          "SHA1=218e4bbdd5ce810c48b938307d01501c442b75f4",
          "SHA1=57511ef5ff8162a9d793071b5bf7ebe8371759de",
          "SHA1=0cb14c1049c0e81c8655ab7ee7d698c11758ea06",
          "SHA1=f3c20ce4282587c920e9ff5da2150fac7858172e",
          "SHA1=dd49a71f158c879fb8d607cc558b507c7c8bc5b9",
          "SHA1=7d34bb240cb5dec51ffcc7bf062c8d613819ac30",
          "SHA1=0b01c4c1f18d72eb622be2553114f32edfe7b7aa",
          "SHA1=7d7c03e22049a725ace2a9812c72b53a66c2548b",
          "SHA1=4186ac693003f92fdf1efbd27fb8f6473a7cc53e",
          "SHA1=01b95ae502aa09aabc69a0482fcc8198f7765950",
          "SHA1=4c18754dca481f107f0923fb8ef5e149d128525d",
          "SHA1=55ab7e27412eca433d76513edc7e6e03bcdd7eda",
          "SHA1=c614ab686e844c7a7d2b20bc7061ab15290e2cfd",
          "SHA1=2cf75df00c69d907cfe683cb25077015d05be65d",
          "SHA1=f9feb60b23ca69072ce42264cd821fe588a186a6",
          "SHA1=a528cdeed550844ca7d31c9e231a700b4185d0da",
          "SHA1=8ec28d7da81cf202f03761842738d740c0bb2fed",
          "SHA1=e606282505af817698206672db632332e8c3d3ff",
          "SHA1=47830d6d3ee2d2a643abf46a72738d77f14114bc",
          "SHA1=57ea07ab767f11c81c6468b1f8a3d5f4618b800b",
          "SHA1=34b0f1b2038a1572ee6381022a24333357b033c4",
          "SHA1=2c5ff272bd345962ed41ab8869aef41da0dfe697",
          "SHA1=a14d96b65d3968181d57b57ee60c533cb621b707",
          "SHA1=cd248648eafca6ef77c1b76237a6482f449f13be",
          "SHA1=6100eb82a25d64a7a7702e94c2b21333bc15bd08",
          "SHA1=64ff172bafc33f14ca5f2e35f9753d41e239a5e4",
          "SHA1=74bf2ec32cb881424a79e99709071870148d242d",
          "SHA1=943593e880b4d340f2548548e6e673ef6f61eed3",
          "SHA1=3c81cdfd99d91c7c9de7921607be12233ed0dfd8",
          "SHA1=c1a5aacf05c00080e04d692a99c46ab445bf8b6e",
          "SHA1=1768fb2b4796f624fa52b95dfdfbfb922ac21019",
          "SHA1=5e6ddd2b39a3de0016385cbd7aa50e49451e376d",
          "SHA1=6df6d5b30d04b9adb9d2c99de18ed108b011d52b",
          "SHA1=8589a284f1a087ad5b548fb1a933289781b4cedc",
          "SHA1=0f780b7ada5dd8464d9f2cc537d973f5ac804e9c",
          "SHA1=ecb4d096a9c58643b02f328d2c7742a38e017cf0",
          "SHA1=f5bafebfbfb67a022452870289ac7849e9ee1f61",
          "SHA1=5965ca5462cd9f24c67a1a1c4ef277fab8ea81d3",
          "SHA1=804013a12f2f6ba2e55c4542cbdc50ca01761905",
          "SHA1=30c6e1da8745c3d53df696af407ef095a8398273",
          "SHA1=2fed7eddd63f10ed4649d9425b94f86140f91385",
          "SHA1=8626ab1da6bfbdf61bd327eb944b39fd9df33d1d",
          "SHA1=5ce273aa80ed3b0394e593a999059096682736ae",
          "SHA1=36397c6879978223ba52acd97da99e8067ab7f05",
          "SHA1=8a23735d9a143ad526bf73c6553e36e8a8d2e561",
          "SHA1=2f991435a6f58e25c103a657d24ed892b99690b8",
          "SHA1=f2ce790bf47b01a7e1ef5291d8fa341d5f66883a",
          "SHA1=f52c2d897fa00910d5566503dd5a297970f13dc6",
          "SHA1=256d285347acd715ed8920e41e5ec928ae9201a8",
          "SHA1=58fe23f1bb9d4bcc1b07b102222a7d776cc90f6c",
          "SHA1=55d84fd3e5db4bdbd3fb6c56a84b6b8a320c7c58",
          "SHA1=a71c17bfeefd76a9f89e74a52a2b6fdd3efbabe2",
          "SHA1=83b5e60943a92050fccb8acef7aa464c8f81d38e",
          "SHA1=152b6bb9ffd2ffec00cc46f5c6e29362d0e66e67",
          "SHA1=b4d014b5edd6e19ce0e8395a64faedf49688ecb5",
          "SHA1=9db1585c0fab6a9feb411c39267ac4ad29171696",
          "SHA1=2eddb10eecef740ec2f9158fa39410ec32262fc3",
          "SHA1=ad60e40a148accec0950d8d13bf7182c2bd5dfef",
          "SHA1=a21c84c6bf2e21d69fa06daaf19b4cc34b589347",
          "SHA1=5a7bcb1864d1e8ecde0b58d21b98518ca4b2f1f2",
          "SHA1=d6de8983dbd9c4c83f514f4edf1ac7be7f68632f",
          "SHA1=07f60b2b0e56cb15aad3ca8a96d9fe3a91491329",
          "SHA1=6b90a6eeef66bb9302665081e30bf9802ca956cc",
          "SHA1=634b1e9d0aafac1ec4373291cefb52c121e8d265",
          "SHA1=af50109b112995f8c82be8ef3a88be404510cdde",
          "SHA1=ec04d8c814f6884c009a7b51c452e73895794e64",
          "SHA1=fdf4a0af89f0c8276ad6d540c75beece380703ab",
          "SHA1=76046978d8e4409e53d8126a8dcfc3bf8602c37f",
          "SHA1=13df48ab4cd412651b2604829ce9b61d39a791bb",
          "SHA1=cb25d537f4e2872e5fcbd893da8ce3807137df80",
          "SHA1=2b4d0dead4c1a7cc95543748b3565cfa802e5256",
          "SHA1=34c85afe6d84cd3deec02c0a72e5abfa7a2886c3",
          "SHA1=c1fe7870e202733123715cacae9b02c29494d94d",
          "SHA1=9c256edd10823ca76c0443a330e523027b70522d",
          "SHA1=079627e0f5b1ad1fb3fe64038a09bc6e8b8d289d",
          "SHA1=e3c1dd569aa4758552566b0213ee4d1fe6382c4b",
          "SHA1=291b4a88ffd2ac1d6bf812ecaedc2d934dc503cb",
          "SHA1=3f338ab65bac9550b8749bb1208edb0f7d7bcb81",
          "SHA1=723fd9dd0957403ed131c72340e1996648f77a48",
          "SHA1=e0d83953a9efef81ba0fa9de1e3446b6f0a23cc6",
          "SHA1=1d5d2c5853619c25518ba0c55fd7477050e708fb",
          "SHA1=838823f25436cadc9a145ddac076dce3e0b84d96",
          "SHA1=64e4ac8b9ea2f050933b7ec76a55dd04e97773b4",
          "SHA1=363068731e87bcee19ad5cb802e14f9248465d31",
          "SHA1=02a8b74899591da7b7f49c0450328d39b939d7e4",
          "SHA1=0d8a832b9383fcdc23e83487b188ddd30963ca82",
          "SHA1=db6170ee2ee0a3292deceb2fc88ef26d938ebf2d",
          "SHA1=a9ea84ee976c66977bb7497aa374bba4f0dd2b27",
          "SHA1=7859e75580570e23a1ef7208b9a76f81738043d5",
          "SHA1=e067024ec42b556fb1e89ca52ef6719aa09cdf89",
          "SHA1=0ed0c4d6c3b6b478cbfd7fb0bd1e1b5457a757cc",
          "SHA1=54a4772212da2025bd8fb2dc913e1c4490e7a0cd",
          "SHA1=68ca9c27131aa35c7f433dc914da74f4b3d8793f",
          "SHA1=468e2e5505a3d924b14fedee4ddf240d09393776",
          "SHA1=cc3e5e45aca5b670035dfb008f0a88cecfd91cf7",
          "SHA1=8d676504c2680cf71c0c91afb18af40ea83b6c22",
          "SHA1=ba5b4eaa7cab012b71a8a973899eeee47a12becc",
          "SHA1=1901467b6f04a93b35d3ca0727c8a14f3ce3ed52",
          "SHA1=8f5cd4a56e6e15935491aa40adb1ecad61eafe7c",
          "SHA1=116679c4b2cca6ec69453309d9d85d3793cbe05f",
          "SHA1=b4d1554ec19504215d27de0758e13c35ddd6db3e",
          "SHA1=e702221d059b86d49ed11395adffa82ef32a1bce",
          "SHA1=dd085542683898a680311a0d1095ea2dffe865e2",
          "SHA1=69849d68d1857c83b09e1956a46fe879260d2aab",
          "SHA1=a23a0627297a71a4414193e12a8c074e7bbb8a2e",
          "SHA1=91530e1e1fb25a26f3e0d6587200ddbaecb45c74",
          "SHA1=247065af09fc6fd56b07d3f5c26f555a5ccbfda4",
          "SHA1=e840904ce12cc2f94eb1ec16b0b89e2822c24805",
          "SHA1=e5bfb18f63fcfb7dc09b0292602112ea7837ef7a",
          "SHA1=dc6e62dbde5869a6adc92253fff6326b6af5c8d4",
          "SHA1=f9519d033d75e1ab6b82b2e156eafe9607edbcfb",
          "SHA1=40dba13a059679401fcaf7d4dbe80db03c9d265c",
          "SHA1=acb5d7e182a108ee02c5cb879fc94e0d6db7dd68",
          "SHA1=543933cce83f2e75d1b6a8abdb41199ddef8406c",
          "SHA1=0f2fdfb249c260c892334e62ab77ac88fcb8b5e4",
          "SHA1=81a319685d0b6112edee4bc25d14d6236f4e12da",
          "SHA1=05ac1c64ca16ab0517fe85d4499d08199e63df26",
          "SHA1=488b20ed53c2060c41b9a0cac1efb39a888df7c5",
          "SHA1=e1069365cb580e3525090f2fa28efd4127223588",
          "SHA1=c1d5cf8c43e7679b782630e93f5e6420ca1749a7",
          "SHA1=67dfd415c729705396ce54166bd70faf09ac7f10",
          "SHA1=c8ec23066a50800d42913d5e439700c5cd6a2287",
          "SHA1=07f62d9b6321bed0008e106e9ce4240cb3f76da2",
          "SHA1=a57eefa0c653b49bd60b6f46d7c441a78063b682",
          "SHA1=a4ae87b7802c82dfb6a4d26ab52788410af98532",
          "SHA1=bc949bc040333fdc9140b897b0066ef125343ef6",
          "SHA1=d04e5db5b6c848a29732bfd52029001f23c3da75",
          "SHA1=6bb68e1894bfbc1ac86bcdc048f7fe7743de2f92",
          "SHA1=a54ae1793e9d77e61416e0d9fb81269a4bc8f8a2",
          "SHA1=51b60eaa228458dee605430aae1bc26f3fc62325",
          "SHA1=054a50293c7b4eea064c91ef59cf120d8100f237",
          "SHA1=844d2345bde50bf8ee7e86117cf7b8c6e6f00be4",
          "SHA1=4b8c0445075f09aeef542ab1c86e5de6b06e91a3",
          "SHA1=d0452363b41385f6a6778f970f3744dde4701d8f",
          "SHA1=d72de7e8f0118153dd5cf784f724e725865fc523",
          "SHA1=340ce5d8859f923222bea5917f40c4259cce1bbc",
          "SHA1=e1bf5dd17f84bce3b2891dffa855d81a21914418",
          "SHA1=e4cbb48aa1aff6cf4ea94ef3b7afb6c245ac47e8",
          "SHA1=0e1df95042081fa2408782f14ce483f0db19d5ab",
          "SHA1=d2fb46277c36498e87d0f47415b7980440d40e3d",
          "SHA1=351cbd352b3ec0d5f4f58c84af732a0bf41b4463",
          "SHA1=4a887ae6b773000864f9228800aab75e6ff34240",
          "SHA1=283c7dc5b029dbc41027df16716ec12761a53df8",
          "SHA1=dcdc9b2bc8e79d44846086d0d482cb7c589f09b8",
          "SHA1=ec8c0b2f49756b8784b3523e70cd8821b05b95eb",
          "SHA1=16c6bcef489f190a48e9d3b1f35972db89516479",
          "SHA1=ffabdf33635bdc1ed1714bc8bbfd7b73ef78a37c",
          "SHA1=7c625de858710d3673f6cb0cd8d0643d5422c688",
          "SHA1=faa61346430aedc952d820f7b16b973c9bf133c3",
          "SHA1=1e959d6ae22c4d9fa5613c3a9d3b6e1b472be05d",
          "SHA1=f18e669127c041431cde8f2d03b15cfc20696056",
          "SHA1=1de9f25d189faa294468517b15947a523538ce9d",
          "SHA1=d8e8dcc8531b8d07f8dabc9e79c19aac6eeca793",
          "SHA1=7ba19a701c8af76988006d616a5f77484c13cb0a",
          "SHA1=6c1bb3a72ebfb5359b9e22ca44d0a1ff825a68f2",
          "SHA1=4786253daac6c60ffc0d2871fdd68023ec93dfb3",
          "SHA1=ea58d72db03df85b04d1412a9b90d88ba68ab43d",
          "SHA1=48a09ca5fdbc214e675083c2259e051b0629457b",
          "SHA1=ea63567ea8d168cb6e9aae705b80a09f927b2f77",
          "SHA1=8347487b32b993da87275e3d44ff3683c8130d33",
          "SHA1=4471935df0e68fe149425703b66f1efca3d82168",
          "SHA1=eaddeefe13bca118369faf95eee85b0a2a553221",
          "SHA1=98600e919b8579d89e232a253d7277355b652750",
          "SHA1=444a2b778e2fc26067c49dde0aff0dcfb85f2b64",
          "SHA1=89cd760e8cb19d29ee08c430fb17a5fd4455c741",
          "SHA1=3ee2fd08137e9262d2e911158090e4a7c7427ea0",
          "SHA1=6210dabb908cc750379cc7563beb884b3895e046",
          "SHA1=22c08d67bf687bf7ddd57056e274cbbbdb647561",
          "SHA1=1a8b737dff81aa9e338b1fce0dc96ee7ee467bd5",
          "SHA1=a9b8d7afa2e4685280aebbeb162600cfce4e48c8",
          "SHA1=8800a33a37c640922ce6a2996cd822ed4603b8bb",
          "SHA1=4f94789cffb23c301f93d6913b594748684abf6a",
          "SHA1=511b06898770337609ee065547dbf14ce3de5a95",
          "SHA1=c32e6cddc7731408c747fd47af3d62861719fd7b",
          "SHA1=a93197c8c1897a95c4fb0367d7451019ae9f3054",
          "SHA1=7eec3a1edf3b021883a4b5da450db63f7c0afeeb",
          "SHA1=a59006308c4b5d33bb8f34ac6fb16701814fb8dc",
          "SHA1=3e917f0986802d47c0ffe4d6f5944998987c4160",
          "SHA1=b406920634361f4b7d7c1ec3b11bb40872d85105",
          "SHA1=9ec6f54c74bcc48e355226c26513a7240fd9462d",
          "SHA1=79f1a6f5486523e6d8dcfef696bc949fc767613d",
          "SHA1=dce4322406004fc884d91ed9a88a36daca7ae19a",
          "SHA1=dbe26c67a4cabba16d339a1b256ca008effcf6c8",
          "SHA1=9f5453c36aa03760d935e062ac9e1f548d14e894",
          "SHA1=da361c56c18ea98e1c442aac7c322ff20f64486b",
          "SHA1=14c9cd9e2cf2b0aae56c46ff9ad1c89a8a980050",
          "SHA1=21e6c104fe9731c874fab5c9560c929b2857b918",
          "SHA1=ef80da613442047697bec35ea228cde477c09a3d",
          "SHA1=c834c4931b074665d56ccab437dfcc326649d612",
          "SHA1=aa2ea973bb248b18973e57339307cfb8d309f687",
          "SHA1=bf87e32a651bdfd9b9244a8cf24fca0e459eb614",
          "SHA1=977fd907b6a2509019d8ef4f6213039f2523f2b5",
          "SHA1=b89a8eef5aeae806af5ba212a8068845cafdab6f",
          "SHA1=a45687965357036df17b8ff380e3a43a8fbb2ca9",
          "SHA1=59aead65b240a163ad47b2d1cf33cdb330608317",
          "SHA1=8c377ab4eebc5f4d8dd7bb3f90c0187dfdd3349f",
          "SHA1=ddd36f96f5a509855f55eed9eb4cba9758d6339a",
          "SHA1=a838303cda908530ef124f8d6f7fb69938b613bc",
          "SHA1=84d44e166072bccf1f8e1e9eb51880ffa065a274",
          "SHA1=88d00eff21221f95a0307da229bc9fe1afb6861b",
          "SHA1=9ca90642cff9ca71c7022c0f9dfd87da2b6a0bff",
          "SHA1=a98734cd388f5b4b3caca5ce61cb03b05a8ad570",
          "SHA1=bad84fca57ab0ef0af9230a93e0cc3d149f9ccd0",
          "SHA1=ce5681896e7631b6e83cccb7aa056a33e72a1bbe",
          "SHA1=0634878c3f6048a38ec82869d7c6df2f69f3e210",
          "SHA1=eacfc73f5f45f229867ee8b2eb1f9649b5dd422e",
          "SHA1=dc8fa4648c674e3a7148dd8e8c35f668a3701a52",
          "SHA1=02316decf9e5165b431c599643f6856e86b95e7c",
          "SHA1=cc3186debacb98e0b0fb40ad82816bea10741099",
          "SHA1=87f313fc30ec8759b391e9d6c08f79b02f3ecebd",
          "SHA1=56af49e030eb85528e82849d7d1b6147f3c4973e",
          "SHA1=62fdb0b43c56530a6a0ba434037d131f236d1266",
          "SHA1=5088c71a740ef7c4156dcaa31e543052fe226e1c",
          "SHA1=64d0447cbb0d6a45010b94eb9d5b0b90296edcbf",
          "SHA1=0aecdc0b8208b81b0c37eef3b0eaea8d8ebef42e",
          "SHA1=2fe874274bac6842819c1e9fe9477e6d5240944d",
          "SHA1=33cdab3bbc8b3adce4067a1b042778607dce2acd",
          "SHA1=ba0938512d7abab23a72279b914d0ea0fb46e498",
          "SHA1=3d8cc9123be74b31c597b0014c2a72090f0c44ef",
          "SHA1=1f1ce28c10453acbc9d3844b4604c59c0ab0ad46",
          "SHA1=724dde837df2ff92b3ea7026fe8a0c4e5773898f",
          "SHA1=8ab7e9ba3c26bcd5d6d0646c6d2b2693e22aac1c",
          "SHA1=b480c54391a2a2f917a44f91a5e9e4590648b332",
          "SHA1=9c24dd75e4074041dbe03bf21f050c77d748b8e9",
          "SHA1=bea745b598dd957924d3465ebc04c5b830d5724f",
          "SHA1=e35a2b009d54e1a0b231d8a276251f64231b66a3",
          "SHA1=99bd8c1f5eeedd9f6a9252df5dbd0e42ef5999a4",
          "SHA1=5dd2c31c4357a8b76db095364952b3d0e3935e1d",
          "SHA1=2e3de9bff43d7712707ef8a0b10f7e4ad8427fd8",
          "SHA1=f42f28d164205d9f6dab9317c9fecad54c38d5d2",
          "SHA1=5520ac25d81550a255dc16a0bb89d4b275f6f809",
          "SHA1=d25340ae8e92a6d29f599fef426a2bc1b5217299",
          "SHA1=43f53a739eda1e58f470e8e9ff9aa1437e5d9546",
          "SHA1=879e92a7427bdbcc051a18bbb3727ac68154e825",
          "SHA1=be270d94744b62b0d36bef905ef6296165ffcee9",
          "SHA1=108439a4c4508e8dca659905128a4633d8851fd9",
          "SHA1=fe0afc6dd03a9bd7f6e673cc6b4af2266737e3d1",
          "SHA1=343ec3073fc84968e40a145dc9260a403966bcb4",
          "SHA1=0d9c77aca860a43cca87a0c00f69e2ab07ab0b67",
          "SHA1=c60cf6dea446e4a52c6b1cfc2a76e9aadd954dab",
          "SHA1=bd3e1d5aacac6406a7bcea3b471bbfa863efbc3d",
          "SHA1=aca8e53483b40a06dfdee81bb364b1622f9156fe",
          "SHA1=53a194e1a30ed9b2d3acd87c2752cfa6645eea76",
          "SHA1=06ecf73790f0277b8e27c8138e2c9ad0fc876438",
          "SHA1=a22c111045b4358f8279190e50851c443534fc24",
          "SHA1=d2c7aa9b424015f970fe7506ae5d1c69a8ac11f6",
          "SHA1=2eeab9786dac3f5f69e642f6e29f4e4819038551",
          "SHA1=8ea50d7d13ff2d1306fed30a2d136dd6245eb3bc",
          "SHA1=490109fa6739f114651f4199196c5121d1c6bdf2",
          "SHA1=877c6c36a155109888fe1f9797b93cb30b4957ef",
          "SHA1=66e95daee3d1244a029d7f3d91915f1f233d1916",
          "SHA1=175fb76c7cd8f0aeb916f4acb3b03f8b2d51846a",
          "SHA1=0536c9f15094ca8ddeef6dec75d93dc35366d8a9",
          "SHA1=65886384708d5a6c86f3c4c16a7e7cdbf68de92a",
          "SHA1=d7e8aef8c8feb87ce722c0b9abf34a7e6bab6eb4",
          "SHA1=25d812a5ece19ea375178ef9d60415841087726e",
          "SHA1=24b47ba7179755e3b12a59d55ae6b2c3d2bd1505",
          "SHA1=a547c5b1543a4c3a4f91208d377a2b513088f4a4",
          "SHA1=604870e76e55078dfb8055d49ae8565ed6177f7c",
          "SHA1=37364cb5f5cefd68e5eca56f95c0ab4aff43afcc",
          "SHA1=962e2ac84c28ed5e373d4d4ccb434eceee011974",
          "SHA1=94b014123412fbe8709b58ec72594f8053037ae9",
          "SHA1=c969f1f73922fd95db1992a5b552fbc488366a40",
          "SHA1=6dac7a8fa9589caae0db9d6775361d26011c80b2",
          "SHA1=cd7b0c6b6ef809e7fb1f68ba36150eceabe500f7",
          "SHA1=1d2ab091d5c0b6e5977f7fa5c4a7bfb8ea302dc7",
          "SHA1=729a8675665c61824f22f06c7b954be4d14b52c4",
          "SHA1=814200191551faec65b21f5f6819b46c8fc227a3",
          "SHA1=59c0fa0d61576d9eb839c9c7e15d57047ee7fe29",
          "SHA1=48be0ec2e8cb90cac2be49ef71e44390a0f648ce",
          "SHA1=0e030cf5e5996f0778452567e144f75936dc278f",
          "SHA1=6003184788cd3d2fc624ca801df291ccc4e225ee",
          "SHA1=6cc28df318a9420b49a252d6e8aaeda0330dc67d",
          "SHA1=59e6effdb23644ca03e60618095dc172a28f846e",
          "SHA1=df177a0c8c1113449f008f8e833105344b419834",
          "SHA1=5d6b9e80e12bfc595d4d26f6afb099b3cb471dd4",
          "SHA1=c0a8e45e57bb6d82524417d6fb7e955ab95621c0",
          "SHA1=3599ea2ac1fa78f423423a4cf90106ea0938dde8",
          "SHA1=363b907c3b4f37968e9c8e1b7eeca5a5c5d530f8",
          "SHA1=53f7a84a8cebe0e3f84894c6b9119466d1a8ddaf",
          "SHA1=7ee65bedaf7967c752831c83e26540e65358175e",
          "SHA1=e525f54b762c10703c975132e8fc21b6cd88d39b",
          "SHA1=3a1f19b7a269723e244756dac1fc27c793276fe7",
          "SHA1=d6b61c685cfaa36c85f1672ac95844f8293c70d0",
          "SHA1=6714380bc0b8ab09b9a0d2fa66d1b025b646b946",
          "SHA1=96523f72e4283f9816d3da8f2270690dd1dd263e",
          "SHA1=5db61d00a001fd493591dc919f69b14713889fc5",
          "SHA1=b3c111d7192cfa8824e5c9b7c0660c37978025d6",
          "SHA1=49b1e6a922a8d2cb2101c48155dfc08c17d09341",
          "SHA1=282fca60f0c37eb6d76400bca24567945e43c6d8",
          "SHA1=2a06006e54c62a2e8bdf14313f90f0ab5d2f8de8",
          "SHA1=4692730f6b56eeb0399460c72ade8a15ddd43a62",
          "SHA1=fe10018af723986db50701c8532df5ed98b17c39",
          "SHA1=b34fc245d561905c06a8058753d25244aaecbb61",
          "SHA1=2ade3347df84d6707f39d9b821890440bcfdb5e9",
          "SHA1=5e9538d76b75f87f94ca5409ae3ddc363e8aba7f",
          "SHA1=5a69d921926ef0abf03757edf22c0d8d30c15d4b",
          "SHA1=986c1fdfe7c9731f4de15680a475a72cf2245121",
          "SHA1=42eb220fdfb76c6e0649a3e36acccbdf36e287f1",
          "SHA1=7192e22e0f8343058ec29fb7b8065e09ce389a5b",
          "SHA1=b2b01c728e0e8ef7b2e9040d6db9828bd4a5b48d",
          "SHA1=b99a5396094b6b20cea72fbf0c0083030155f74e",
          "SHA1=628e63caf72c29042e162f5f7570105d2108e3c2",
          "SHA1=1fb12c5db2acad8849677e97d7ce860d2bb2329e",
          "SHA1=e5021a98e55d514e2376aa573d143631e5ee1c13",
          "SHA1=46be4e6cd8117ac13531bff30edcf564f39bcc52",
          "SHA1=377f7e7382908690189aede31fcdd532baa186b5",
          "SHA1=5b4619596c89ed17ccbe92fd5c0a823033f2f1e1",
          "SHA1=bda102afbc60f3f3c5bcbd5390ffbbbb89170b9c",
          "SHA1=ca33c88cd74e00ece898dca32a24bdfcacc3f756",
          "SHA1=7d1ff4096a75f9fcc67c7c9c810d99874c096b6b",
          "SHA1=1a83c8b63d675c940aaec10f70c0c7698e9b0165",
          "SHA1=f8e88630dae53e0b54edefdefa36d96c3dcbd776",
          "SHA1=e33eac9d3b9b5c0db3db096332f059bf315a2343",
          "SHA1=5635bb2478929010693bc3b23f8b7fe5fdbc3aed",
          "SHA1=3fd7fda9c7dfdb2a845c39971572bd090bee3b1d",
          "SHA1=3e790c4e893513566916c76a677b0f98bd7334dd",
          "SHA1=738b7918d85e5cb4395df9e3f6fc94ddad90e939",
          "SHA1=5ca6a52230507b1dffab7acd501540bc10f1ab81",
          "SHA1=820d339fd3dbb632a790d6506ddf6aee925fcffe",
          "SHA1=0ac0c21ca05161eaa6a042f347391a2a2fc78c96",
          "SHA1=c95db1e82619fb16f8eec9a8209b7b0e853a4ebe",
          "SHA1=4f077a95908b154ea12faa95de711cb44359c162",
          "SHA1=29a190727140f40cea9514a6420f5a195e36386b",
          "SHA1=dbf3abdc85d6a0801c4af4cd1b77c44d5f57b03e",
          "SHA1=de0c16e3812924212f04e15caa09763ae4770403",
          "SHA1=3b1f1e96fc8a7eb93b14b1213f797f164a313cee",
          "SHA1=cc51be79ae56bc97211f6b73cc905c3492da8f9d",
          "SHA1=4c021c4a5592c07d4d415ab11b23a70ba419174b",
          "SHA1=9d191bee98f0af4969a26113098e3ea85483ae2d",
          "SHA1=ac31d15851c0af14d60cfce23f00c4b7887d3cb7",
          "SHA1=b25170e09c9fb7c0599bfba3cf617187f6a733ac",
          "SHA1=5f8ae70b25b664433c6942d5963acadf2042cfe8",
          "SHA1=a37616f0575a683bd81a0f49fadbbc87e1525eba",
          "SHA1=33285b2e97a0aeb317166cce91f6733cf9c1ad53",
          "SHA1=c22c28a32a5e43a76514faf4fac14d135e0d4ffd",
          "SHA1=7c996d9ef7e47a3b197ff69798333dc29a04cc8a",
          "SHA1=cb0bc86d437ab78c1fbefdaf1af965522ebdd65d",
          "SHA1=4a1a499857accc04b4d586df3f0e0c2b3546e825",
          "SHA1=c3a893680cd33706546a7a3e8fbcc4bd063ce07e",
          "SHA1=df58f9b193c6916aaec7606c0de5eba70c8ec665",
          "SHA1=fc69138b9365fa60e21243369940c8dcfcca5db1",
          "SHA1=3fbe337b6ed1a1a63ae8b4240c01bd68ed531674",
          "SHA1=07c244739803f60a75d60347c17edc02d5d10b5d",
          "SHA1=cc0e0440adc058615e31e8a52372abadf658e6b1",
          "SHA1=6e191d72b980c8f08a0f60efa01f0b5bf3b34afb",
          "SHA1=d697a3f4993e7cb15efdeda3b1a798ae25a2d0e9",
          "SHA1=5cfec6aa4842e5bafff23937f5efca71f21cf7ca",
          "SHA1=def86c7dee1f788c717ac1917f1b5bbfada25a95",
          "SHA1=c22dc62e10378191840285814838fe9ed1af55d7",
          "SHA1=58b31fb2b623bd2c5d5c8c49b657a14a674664a4",
          "SHA1=80fa962bdfb76dfcb9e5d13efc38bb3d392f2e77",
          "SHA1=b62c5bae9c6541620379115a7ba0036ecfa19537",
          "SHA1=585df373a9c56072ab6074afee8f1ec3778d70f8",
          "SHA1=64ab599d34c26f53afe076a84c54db7ba1a53def",
          "SHA1=f130e82524d8f5af403c3b0e0ffa4b64fedeec92",
          "SHA1=bd87aecc0ac1d1c2ab72be1090d39fab657f7cc6",
          "SHA1=5499f1bca93a3613428e8c18ac93a93b9a7249fb",
          "SHA1=7ab4565ba24268f0adadb03a5506d4eb1dc7c181",
          "SHA1=2f9b0cd96d961e49d5d3b416028fd3a0e43d6a28",
          "SHA1=1da0c712ff42bd9112ac6afadb7c4d3ae2f20fb7",
          "SHA1=ef8de780cfe839ecf6dc0dc161ae645bff9b853c",
          "SHA1=feb8e6e7419713a2993c48b9758c039bd322b699",
          "SHA1=d9b05c5ffc5eddf65186ba802bb1ece0249cab05",
          "SHA1=08596732304351b311970ff96b21f451f23b1e25",
          "SHA1=687b8962febbbea4cf6b3c11181fd76acb7dfd5a",
          "SHA1=9d0b824892fbfb0b943911326f95cd0264c60f7d",
          "SHA1=2ed4b51429b0a3303a645effc84022512f829836",
          "SHA1=1a40773dc430d7cb102710812b8c61fc51dfb79b",
          "SHA1=4f7a8e26a97980544be634b26899afbefb0a833c",
          "SHA1=983a8d4b1cb68140740a7680f929d493463e32e3",
          "SHA1=c4b6e2351a72311a6e8f71186b218951a27fb97f",
          "SHA1=6b090c558b877b6abb0d1051610cadbc6335ecbb",
          "SHA1=fcde5275ee1913509927ce5f0f85e6681064c9d2",
          "SHA1=92f251358b3fe86fd5e7aa9b17330afa0d64a705",
          "SHA1=400f833dcc2ef0a122dd0e0b1ec4ec929340d90e",
          "SHA1=27aa3f1b4baccd70d95ea75a0a3e54e735728aa2",
          "SHA1=005ac9213a8a4a6c421787a7b25c0bc7b9f3b309",
          "SHA1=eb0d45aa6f537f5b2f90f3ad99013606eafcd162",
          "SHA1=c1777fcb7005b707f8c86b2370f3278a8ccd729f",
          "SHA1=00a442a4305c62cefa8105c0b4c4a9a5f4d1e93b",
          "SHA1=cfa85a19d9a2f7f687b0decdc4a5480b6e30cb8c",
          "SHA1=0e60414750c48676d7aa9c9ec81c0a3b3a4d53d0",
          "SHA1=7c1b25518dee1e30b5a6eaa1ea8e4a3780c24d0c",
          "SHA1=4268f30b79ce125a81d0d588bef0d4e2ad409bbb",
          "SHA1=5fb9421be8a8b08ec395d05e00fd45eb753b593a",
          "SHA1=540b9f9a232b9d597138b8e0f33d83f5f6e247af",
          "SHA1=19bf65bdd9d77f54f1e8ccf189dc114e752344b0",
          "SHA1=f36a47edfacd85e0c6d4d22133dd386aee4eec15",
          "SHA1=9f22ebcd2915471e7526f30aa53c24b557a689f5",
          "SHA1=562368c390b0dadf2356b8b3c747357ecef2dfc8",
          "SHA1=f999709e5b00a68a0f4fa912619fe6548ad0c42d",
          "SHA1=03a56369b8b143049a6ec9f6cc4ef91ac2775863",
          "SHA1=82034032b30bbb78d634d6f52c7d7770a73b1b3c",
          "SHA1=3059bc49e027a79ff61f0147edbc5cd56ad5fc2d",
          "SHA1=af5f642b105d86f82ba6d5e7a55d6404bfb50875",
          "SHA1=f86ae53eb61d3c7c316effe86395a4c0376b06db",
          "SHA1=3fd55927d5997d33f5449e9a355eb5c0452e0de3",
          "SHA1=d942dac4033dcd681161181d50ce3661d1e12b96",
          "SHA1=dd55015f5406f0051853fd7cca3ab0406b5a2d52",
          "SHA1=336ed563ef96c40eece92a4d13de9f9b69991c8a",
          "SHA1=5711c88e9e64e45b8fc4b90ab6f2dd6437dc5a8a",
          "SHA1=ada23b709cb2bef8bedd612dc345db2e2fdbfaca",
          "SHA1=bd421ffdcc074ecca954d9b2c2fbce9301e9a36c",
          "SHA1=42f6bfcf558ef6da9254ed263a89abf4e909b5d5",
          "SHA1=9eef72e0c4d5055f6ae5fe49f7f812de29afbf37",
          "SHA1=007b2c7d72a5a89b424095dbb7f67ff2aeddb277",
          "SHA1=4243dbbf6e5719d723f24d0f862afd0fcb40bc35",
          "SHA1=35a817d949b2eab012506bed0a3b4628dd884471",
          "SHA1=9d07df024ec457168bf0be7e0009619f6ac4f13c",
          "SHA1=5f8356ffa8201f338dd2ea979eb47881a6db9f03",
          "SHA1=a65fabaf64aa1934314aae23f25cdf215cbaa4b6",
          "SHA1=21edff2937eb5cd6f6b0acb7ee5247681f624260",
          "SHA1=34ec04159d2c653a583a73285e6e2ac3c7b416dd",
          "SHA1=4f30f64b5dfcdc889f4a5e25b039c93dd8551c71",
          "SHA1=13572d36428ef32cfed3af7a8bb011ee756302b0",
          "SHA1=17d28a90ef4d3dbb083371f99943ff938f3b39f6",
          "SHA1=a4b2c56c12799855162ca3b004b4b2078c6ecf77",
          "SHA1=3ae56ab63230d6d9552360845b4a37b5801cc5ea",
          "SHA1=c8a4a64b412fd8ef079661db4a4a7cd7394514ca",
          "SHA1=24343ec4dfec11796a8800a3059b630e8be89070",
          "SHA1=a55b709cec2288384b12eafa8be4930e7c075ec9",
          "SHA1=5853e44ea0b6b4e9844651aa57d631193c1ed0f0",
          "SHA1=e3266b046d278194ade4d8f677772d0cb4ecfaf1",
          "SHA1=717669a1e2380cb61cc4e34618e118cc9cabbcd0",
          "SHA1=0adc1320421f02f2324e764aa344018758514436",
          "SHA1=7e900b0370a1d3cb8a3ea5394d7d094f95ec5dc0",
          "SHA1=0c74d09da7baf7c05360346e4c3512d0cd433d59",
          "SHA1=68b97bfaf61294743ba15ef36357cdb8e963b56e",
          "SHA1=e0d12e44db3f57ee7ea723683a6fd346dacf2e3e",
          "SHA1=31529d0e73f7fbfbe8c28367466c404c0e3e1d5a",
          "SHA1=04967bfd248d30183992c6c9fd2d9e07ae8d68ad",
          "SHA1=4d14d25b540bf8623d09c06107b8ca7bb7625c30",
          "SHA1=01779ee53f999464465ed690d823d160f73f10e7",
          "SHA1=e83fc2331ae1ea792b6cff7e970f607fee7346be",
          "SHA1=c8864c0c66ea45011c1c4e79328a3a1acf7e84a9",
          "SHA1=a92207062fb72e6e173b2ffdb12c76834455f5d3",
          "SHA1=6e58421e37c022410455b1c7b01f1e3c949df1cd",
          "SHA1=cb22723faa5ae2809476e5c5e9b9a597b26cab9b",
          "SHA1=4885cd221fa1ea330b9e4c1702be955d68bd3f6a",
          "SHA1=f7413250e7e8ad83c350092d78f0f75fcca9f474",
          "SHA1=78b9481607ca6f3a80b4515c432ddfe6550b18a8",
          "SHA1=970af806aa5e9a57d42298ab5ffa6e0d0e46deda",
          "SHA1=fe02ae340dc7fe08e4ad26dab9de418924e21603",
          "SHA1=85941b94524da181be8aad290127aa18fc71895c",
          "SHA1=8183a341ba6c3ce1948bf9be49ab5320e0ee324d",
          "SHA1=9cc694dcb532e94554a2a1ef7c6ced3e2f86ef5a",
          "SHA1=398e8209e5c5fdcb6c287c5f9561e91887caca7d",
          "SHA1=4e56e0b1d12664c05615c69697a2f5c5d893058a",
          "SHA1=ee877b496777763e853dd81fefd0924509bc5be0",
          "SHA1=3f347117d21cd8229dd99fa03d6c92601067c604",
          "SHA1=61f5904e9ff0d7e83ad89f0e7a3741e7f2fbf799",
          "SHA1=7ce978092fadbef44441a5f8dcb434df2464f193",
          "SHA1=b03b1996a40bfea72e4584b82f6b845c503a9748",
          "SHA1=1fd7f881ea4a1dbb5c9aeb9e7ad659a85421745b",
          "SHA1=91d026cd98de124d281fd6a8e7c54ddf6b913804",
          "SHA1=db006fa522142a197686c01116a6cf60e0001ef7",
          "SHA1=d2e6fc9259420f0c9b6b1769be3b1f63eb36dc57",
          "SHA1=089411e052ea17d66033155f77ae683c50147018",
          "SHA1=263181bc8c2c6af06b9a06d994e4b651c3ab1849",
          "SHA1=30e7258a5816a6db19cdda2b2603a8c3276f05c2",
          "SHA1=96047b280e0d6ddde9df1c79ca5f561219a0370d",
          "SHA1=c6bd965300f07012d1b651a9b8776028c45b149a",
          "SHA1=4c6ec22bc10947d089167b19d83a26bdd69f0dd1",
          "SHA1=ccd547ef957189eddb6ee213e5e0136e980186f9",
          "SHA1=8d3be83cf3bb36dbce974654b5330adb38792c2d",
          "SHA1=d0216ebc81618c22d9d51f2f702c739625f40037",
          "SHA1=18f34a0005e82a9a1556ba40b997b0eae554d5fd",
          "SHA1=3784d1b09a515c8824e05e9ea422c935e693080c",
          "SHA1=5c94c8894799f02f19e45fcab44ee33e653a4d17",
          "SHA1=88839168e50a4739dd4193f2d8f93a30cd1f14d8",
          "SHA1=2fc6845047abcf2a918fce89ab99e4955d08e72c",
          "SHA1=5742ad3d30bd34c0c26c466ac6475a2b832ad59e",
          "SHA1=d452fc8541ed5e97a6cbc93d08892c82991cdaad",
          "SHA1=eac1b9e1848dc455ed780292f20cd6a0c38a3406",
          "SHA1=bc2f3850c7b858340d7ed27b90e63b036881fd6c",
          "SHA1=d48757b74eff02255f74614f35aa27abbe3f72c7",
          "SHA1=9c6749fc6c1127f8788bff70e0ce9062959637c9",
          "SHA1=08efd5e24b5ebfef63b5e488144dc9fb6524eaf1",
          "SHA1=cb212a826324909fdedd2b572a59a5be877f1d7d",
          "SHA1=b0aede5a66e13469c46acbc3b01ccf038acf222c",
          "SHA1=0c26ab1299adcd9a385b541ef1653728270aa23e",
          "SHA1=d34a7c497c603f3f7fcad546dc4097c2da17c430",
          "SHA1=75d0b9bdfa79e5d43ec8b4c0996f559075723de7",
          "SHA1=1bd4ae9a406bf010e34cdd38e823f732972b18e3",
          "SHA1=b74338c91c6effabc02ae0ced180428ab1024c7d",
          "SHA1=6679cb0907ade366cf577d55be07eabc9fb83861",
          "SHA1=6ce0094a9aacdc050ff568935014607b8f23ff00",
          "SHA1=f7b3457a6fd008656e7216b1f09db2ff062f1ca4",
          "SHA1=89656051126c3e97477a9985d363fbdde0bc159e",
          "SHA1=1ecb7b9658eb819a80b8ebdaa2e69f0d84162622",
          "SHA1=aaaf565fa30834aba3f29a97fc58d15e372500b5",
          "SHA1=b49ac8fefc6d1274d84fef44c1e5183cc7accba1",
          "SHA1=9f2b550c58c71d407898594b110a9320d5b15793",
          "SHA1=3f6a997b04d2299ba0e9f505803e8d60d0755f44",
          "SHA1=ec0c3c61a293a90f36db5f8ed91cbf33c2b14a19",
          "SHA1=d73dabcb3f55935b701542fd26875006217ebbbe",
          "SHA1=dda8c7e852fe07d67c110dab163354a2a85f44a5",
          "SHA1=643383938d5e0d4fd30d302af3e9293a4798e392",
          "SHA1=9e8a87401dc7cc56b3a628b554ba395b1868520f",
          "SHA1=35b28b15835aa0775b57f460d8a03e53dc1fb30f",
          "SHA1=09c567b8dd7c7f93884c2e6b71a7149fc0a7a1b5",
          "SHA1=9f6883e59fd6c136cfc556b7b388a4c363dc0516",
          "SHA1=53acd4d9e7ba0b1056cf52af0d191f226eddf312",
          "SHA1=9a35ae9a1f95ce4be64adc604c80079173e4a676",
          "SHA1=5abffd08f4939a0dee81a5d95cf1c02e2e14218c",
          "SHA1=ea360a9f23bb7cf67f08b88e6a185a699f0c5410",
          "SHA1=5eb693c9cc49c7d6a03f7960ddcfd8f468e5656b",
          "SHA1=4518758452af35d593e0cae80d9841a86af6d3de",
          "SHA1=da42cefde56d673850f5ef69e7934d39a6de3025",
          "SHA1=c32dfdb0ee859de618484f3ab7a43ee1d9a25d1c",
          "SHA1=471ca4b5bb5fe68543264dd52acb99fddd7b3c6d",
          "SHA1=290d6376658cf0f8182de0fae40b503098fa09fd",
          "SHA1=2bc9047f08a664ade481d0bbf554d3a0b49424ca",
          "SHA1=1f84d89dd0ae5008c827ce274848d551aff3fc33",
          "SHA1=6053d258096bccb07cb0057d700fe05233ab1fbb",
          "SHA1=cb5229acdf87493e45d54886e6371fc59fc09ee5",
          "SHA1=2db49bdf8029fdcda0a2f722219ae744eae918b0",
          "SHA1=eeff4ec4ebc12c6acd2c930dc2eaaf877cfec7ec",
          "SHA1=24f6e827984cca5d9aa3e4c6f3c0c5603977795a",
          "SHA1=db3debacd5f6152abd7a457d7910a0ec4457c0d7",
          "SHA1=96323381a98790b8ffac1654cb65e12dbbe6aff1",
          "SHA1=7241b25c3a3ee9f36b52de3db2fc27db7065af37",
          "SHA1=3c956b524e73586195d704b874e36d49fe42cb6a",
          "SHA1=fb25e6886d98fe044d0eb7bd42d24a93286266e0",
          "SHA1=caa0cb48368542a54949be18475d45b342fb76e5",
          "SHA1=4c16dcc7e6d7dd29a5f6600e50fc01a272c940e1",
          "SHA1=1f3a9265963b660392c4053329eb9436deeed339",
          "SHA1=b0c7ec472abf544c5524b644a7114cba0505951e",
          "SHA1=622e7bffda8c80997e149ac11492625572e386e0",
          "SHA1=4ffa89f8dbdade28813e12db035cf9bd8665ef72",
          "SHA1=5fece994f2409810a0ad050b3ca9b633c93919e4",
          "SHA1=f50c6b84dfb8f2d53ba3bce000a55f0a486c0e79",
          "SHA1=2fa92d3739735bc9ac4dc38f42d909d97cc5c2a8",
          "SHA1=fece30b9b862bf99ae6a41e49f524fe6f32e215e",
          "SHA1=ae344c123ef6d206235f2a8448d07f86433db5a6",
          "SHA1=ad1616ea6dc17c91d983e829aa8a6706e81a3d27",
          "SHA1=c127c4d0917f54cee13a61c6c0029c95ae0746cf",
          "SHA1=84341ed15d645c4daedcdd39863998761e4cb0e3",
          "SHA1=fb4ce6de14f2be00a137e8dde2c68bb5b137ab9c",
          "SHA1=22c905fcdd7964726b4be5e8b5a9781322687a45",
          "SHA1=4927d843577bada119a17b249ff4e7f5e9983a92",
          "SHA1=d083e69055556a36df7c6e02115cbbf90726f35c",
          "SHA1=f0c463d29a5914b01e4607889094f1b7d95e7aaf",
          "SHA1=86e59b17272a3e7d9976c980ded939bf8bf75069",
          "SHA1=eb0021e29488c97a0e42a084a4fe5a0695eccb7b",
          "SHA1=388819a7048179848425441c60b3a8390ad04a69",
          "SHA1=611411538b2bc9045d29bbd07e6845e918343e3c",
          "SHA1=43011eb72be4775fec37aa436753c4d6827395d1",
          "SHA1=18938e0d924ee7c0febdbf2676a099e828182c1c",
          "SHA1=1743b073cccf44368dc83ed3659057eb5f644b06",
          "SHA1=fb1570b4865083dfce1fcff2bd72e9e1b03cead5",
          "SHA1=96c2e1d7c9a8ad242f8f478e871f645895d3e451",
          "SHA1=fcd615df88645d1f57ff5702bd6758b77efea6d0",
          "SHA1=70258117b5efe65476f85143fd14fa0b7f148adb",
          "SHA1=90a76945fd2fa45fab2b7bcfdaf6563595f94891",
          "SHA1=24b3f962587b0062ac9a1ec71bcc3836b12306d2",
          "SHA1=663803d7ab5aff28be37c2e7e8c7b98b91c5733e",
          "SHA1=2739c2cfa8306e6f78c335c55639566b3d450644",
          "SHA1=2027e5e8f2cfdfbd9081f99b65af4921626d77f9",
          "SHA1=eb44a05f8bba3d15e38454bd92999a856e6574eb",
          "SHA1=d7597d27eeb2658a7c7362193f4e5c813c5013e5",
          "SHA1=35f1ba60ba0da8512a0b1b15ee8e30fe240d77cd",
          "SHA1=1e6c2763f97e4275bba581de880124d64666a2fe",
          "SHA1=19977d45e98b48c901596fb0a49a7623cee4c782",
          "SHA1=27d3ebea7655a72e6e8b95053753a25db944ec0f",
          "SHA1=a2e0b3162cfa336cd4ab40a2acc95abe7dc53843",
          "SHA1=3d6d53b0f1cc908b898610227b9f1b9352137aba",
          "SHA1=8d0f33d073720597164f7321603578cd13346d1f",
          "SHA1=229716e61f74db821d5065bac533469efb54867b",
          "SHA1=dc7b022f8bd149efbcb2204a48dce75c72633526",
          "SHA1=ccdd3a1ebe9a1c8f8a72af20a05a10f11da1d308",
          "SHA1=469c04cb7841eedd43227facaf60a6d55cf21fd7",
          "SHA1=722aa0fa468b63c5d7ea308d77230ae3169d5f83",
          "SHA1=bfd8568f19d4273a1288726342d7620cc9070ae5",
          "SHA1=17b3163aecd1f512f1603548ef6eb4947fbec95e",
          "SHA1=ce549714a11bd43b52be709581c6e144957136ec",
          "SHA1=a3224815aedc14bb46f09535e9b8ca7eaa4963bf",
          "SHA1=ba0d6c596b78a1fc166747d7523ca6316ef87e9f",
          "SHA1=f85f5e5d747433b274e53c8377bf24fbc08758b6",
          "SHA1=2e9466d5a814c20403be7c7a5811039ca833bd5d",
          "SHA1=3bb1dddb4157b6b8175fc6e1e7c33bef7870c500",
          "SHA1=b0032b8d8e6f4bd19a31619ce38d8e010f29a816",
          "SHA1=a958734d25865cbc6bcbc11090ab9d6b72799143",
          "SHA1=11fcaeda49848474cee9989a00d8f29cb727acb7",
          "SHA1=45328110873640d8fed9fc72f7d2eadd3d17ceae",
          "SHA1=8db869c0674221a2d3280143cbb0807fac08e0cc",
          "SHA1=3fd5cd30085450a509eaa6367af26f6c4b9741b6",
          "SHA1=f1b3bdc3beb2dca19940d53eb5a0aed85b807e30",
          "SHA1=948fa3149742f73bf3089893407df1b20f78a563",
          "SHA1=e039c9dd21494dbd073b4823fc3a17fbb951ec6c",
          "SHA1=5eed0ce6487d0b8d0a6989044c4fcab1bd845d9e",
          "SHA1=ce31292b05c0ae1dc639a6ee95bb3bc7350f2aaf",
          "SHA1=1a53902327bac3ab323ee63ed215234b735c64da",
          "SHA1=078ae07dec258db4376d5a2a05b9b508d68c0123",
          "SHA1=609fa1efcf61e26d64a5ceb13b044175ab2b3a13",
          "SHA1=f052dc35b74a1a6246842fbb35eb481577537826",
          "SHA1=ba3faca988ff56f4850dede2587d5a3eff7c6677",
          "SHA1=8f266edf9f536c7fc5bb3797a1cf9039fde8e97c",
          "SHA1=d57c732050d7160161e096a8b238cb05d89d1bb2",
          "SHA1=7480c7f7346ce1f86a7429d9728235f03a11f227",
          "SHA1=40abf7edb4c76fb3f22418f03198151c5363f1cb",
          "SHA1=43b61039f415d14189d578012b6cb1bd2303d304",
          "SHA1=1e7c241b9a9ea79061b50fb19b3d141dee175c27",
          "SHA1=a809831166a70700b59076e0dbc8975f57b14398",
          "SHA1=22c9cd0f5986e91b733fbd5eda377720fd76c86d",
          "SHA1=d7b20ac695002334f804ffc67705ce6ac5732f91",
          "SHA1=fe1d909ab38de1389a2a48352fd1c8415fd2eab0",
          "SHA1=a64354aac2d68b4fa74b5829a9d42d90d83b040c",
          "SHA1=72a5ac213ec1681d173bee4f1807c70a77b41bf6",
          "SHA1=485c0b9710a196c7177b99ee95e5ddb35b26ddd1",
          "SHA1=891c8d482e23222498022845a6b349fe1a186bcc",
          "SHA1=6a60c5dc7d881ddb5d6fe954f10b8aa10d214e72",
          "SHA1=b4dcdbd97f38b24d729b986f84a9cdb3fc34d59f",
          "SHA1=e40ea8d498328b90c4afbb0bb0e8b91b826f688e",
          "SHA1=356172a2e12fd3d54e758aaa4ff0759074259144",
          "SHA1=7115929de6fc6b9f09142a878d1a1bf358af5f24",
          "SHA1=1b84abffd814b9f4595296b3e5ede0c44e630967",
          "SHA1=40d29aa7b3fafd27c8b27c7ca7a3089ccb88d69b",
          "SHA1=1c3f2579310ddd7ae09ce9ca1cc537a771b83c9f",
          "SHA1=f3db629cfe37a73144d5258e64d9dd8b38084cf4",
          "SHA1=879fcc6795cebe67718388228e715c470de87dca",
          "SHA1=b33b99ae2653b4e675beb7d9eb2c925a1f105bd4",
          "SHA1=160c96b5e5db8c96b821895582b501e3c2d5d6e7",
          "SHA1=8b6aa5b2bff44766ef7afbe095966a71bc4183fa",
          "SHA1=c31049605f028a56ce939cd2f97c2e56c12d99f8",
          "SHA1=a380aeb3ffaecc53ca48bb1d4d622c46f1de7962",
          "SHA1=c4ed28fdfba7b8a8dfe39e591006f25d39990f07",
          "SHA1=3048f3422b2b31b74eace0dab3f5c4440bdc7bb2",
          "SHA1=4d41248078181c7f61e6e4906aa96bbdea320dc2",
          "SHA1=0ff2ad8941fbb80cbccb6db7db1990c01c2869b1",
          "SHA1=6d3c760251d6e6ea7ff4f4fcac14876fac829cf9",
          "SHA1=20cf02c95e329cf2fd4563cddcbd434aad81ccb4",
          "SHA1=414cd15d6c991d19fb5be02e3b9fb0e6c5ce731c",
          "SHA1=e835776e0dc68c994dd18e8628454520156c93e3",
          "SHA1=99201c9555e5faf6e8d82da793b148311f8aa4b8",
          "SHA1=97bc298a1d12a493bf14e6523e4ff48d64832954",
          "SHA1=fb349c3cde212ef33a11a9d58a622dc58dff3f74",
          "SHA1=8cc8974a05e81678e3d28acfe434e7804abd019c",
          "SHA1=b0a684474eb746876faa617a28824bee93ba24f0",
          "SHA1=a01c42a5be7950adbc7228a9612255ac3a06b904",
          "SHA1=a22dead5cdf05bd2f79a4d0066ffcf01c7d303ec",
          "SHA1=f7ce71891738a976cd8d4b516c8d7a8e2f6b0ad6",
          "SHA1=441f87633ee6fbea5dee1268d1b9b936a596464d",
          "SHA1=da9cea92f996f938f699902482ac5313d5e8b28e",
          "SHA1=32f27451c377c8b5ea66be5475c2f2733cffe306",
          "SHA1=58ebfb7de214ee09f6bf71c8cc9c139dd4c8b016",
          "SHA1=f5293ac70d75cdfe580ff6a9edcc83236012eaf1",
          "SHA1=2d503a2457a787014a1fdd48a2ece2e6cbe98ea7",
          "SHA1=0b63e76fad88ac48dbfc7cf227890332fcd994a5",
          "SHA1=3ccf1f3ac636a5e21b39ede48ff49fa23e05413f",
          "SHA1=160a237295a9e5cbb64ca686a84e47553a14f71d",
          "SHA1=f5d58452620b55c2931cba75eb701f4cde90a9e4",
          "SHA1=a24840e32071e0f64e1dff8ca540604896811587",
          "SHA1=fad8e308f6d2e6a9cfaf9e6189335126a3c69acb",
          "SHA1=6da2dd8a0b4c0e09a04613bbabfc07c0b848ec77",
          "SHA1=35829e096a15e559fcbabf3441d99e580ca3b26e",
          "SHA1=f049e68720a5f377a5c529ca82d1147fe21b4c33",
          "SHA1=c4454a3a4a95e6772acb8a3d998b78a329259566",
          "SHA1=5291b17205accf847433388fe17553e96ad434ec",
          "SHA1=8b037d7a7cb612eabd8e20a9ce93afd92a6db2c2",
          "SHA1=0cca79962d9af574169f5dec12b1f4ca8e5e1868",
          "SHA1=87d47340d1940eaeb788523606804855818569e3",
          "SHA1=272ffcda920a8e2440eb0d31dcd05485e0d597ad",
          "SHA1=e28b754d4d332ea57349110c019d841cf4d27356",
          "SHA1=d1c38145addfed1bcd1b400334ff5a5e2ef9a5c6",
          "SHA1=c201d5d0ab945095c3b1a356b3b228af1aa652fc",
          "SHA1=39e57a0bb3b349c70ad5f11592f9282860bbcc0a",
          "SHA1=5622caf22032e5cbef52f48077cfbcbbbe85e961",
          "SHA1=d8498707f295082f6a95fd9d32c9782951f5a082",
          "SHA1=da03799bb0025a476e3e15cc5f426e5412aeef02",
          "SHA1=b5dfa3396136236cc9a5c91f06514fa717508ef5",
          "SHA1=ba63502aaf8c5a7c2464e83295948447e938a844",
          "SHA1=21ce232de0f306a162d6407fe1826aff435b2a04",
          "SHA1=36a6f75f05ac348af357fdecbabe1a184fe8d315",
          "SHA1=03257294ee74f69881002c4bf764b9cb83b759d6",
          "SHA1=6b54f8f137778c1391285fee6150dfa58a8120b1",
          "SHA1=1045c63eccb54c8aee9fd83ffe48306dc7fe272c",
          "SHA1=8f4b79b8026da7f966d38a8ba494c113c5e3894b",
          "SHA1=f736ccbb44c4de97cf9e9022e1379a4f58f5a5b8",
          "SHA1=d612165251d5f1dcfb1f1a762c88d956f49ce344",
          "SHA1=fac870d438bf62ecd5d5c8c58cc9bfda6f246b8b",
          "SHA1=86b1186a4e282341daf2088204ab9ff2d0402d28",
          "SHA1=b8de3a1aeeda9deea43e3f768071125851c85bd0",
          "SHA1=0cac0dbaa7adb7bba6e92c7cd2d514be7e86a914",
          "SHA1=1b25fbab2dbee5504dc94fbcc298cd8669c097a8",
          "SHA1=28b1c0b91eb6afd2d26b239c9f93beb053867a1a",
          "SHA1=8d6d6745a2adc9e5aa025c38875554ae6440d1ad",
          "SHA1=f42aa04b69a2e2241958b972ef24b65f91c3af12",
          "SHA1=44a3a00394a6d233a27189482852babf070ffebe",
          "SHA1=3e406325a717d7163ca31e81beae822d03cbe3d8",
          "SHA1=fc154983af4a5be15ae1e4b54e2050530b8bc057",
          "SHA1=a3636986cdcd1d1cb8ab540f3d5c29dcc90bb8f0",
          "SHA1=f9c916d163b85057414300ca214ebdf751172ecf",
          "SHA1=195b91a1a43de8bfb52a4869fbf53d7a226a6559",
          "SHA1=d62fa51e520022483bdc5847141658de689c0c29",
          "SHA1=9329a0ce2749a3a6bea2028ce7562d74c417db64",
          "SHA1=cfdb2085eaf729c7967f5d4efe16da3d50d07a23",
          "SHA1=184729ec2ffd0928a408255a23b3f532ffb3db3d",
          "SHA1=45a9f95a7a018925148152b888d09d478d56bbf5",
          "SHA1=a5f9aef55c64722ff2db96039af3b9c7dd8163e3",
          "SHA1=483e58ed495e4067a7c42ca48e8a5f600b14e018",
          "SHA1=b9b72a5be3871ddc0446bae35548ea176c4ea613",
          "SHA1=18f09ec53f0b7d2b1ab64949157e0e84628d0f0a",
          "SHA1=de2b56ef7a30a4697e9c4cdcae0fc215d45d061d",
          "SHA1=e2e7a2b2550b889235aafd9ffd1966ccd20badfe",
          "SHA1=016aa643fbd8e10484741436bcacc0d9eee483c8",
          "SHA1=5c88d9fcc491c7f1078c224e1d6c9f5bda8f3d8a",
          "SHA1=86e893e59352fcb220768fb758fcc5bbd91dd39e",
          "SHA1=1568117f691b41f989f10562f354ee574a6abc2d",
          "SHA1=5c2262f9e160047b9f4dee53bbfd958ec27ec22e",
          "SHA1=cb3de54667548a5c9abf5d8fa47db4097fcee9f1",
          "SHA1=8db4376a86bd2164513c178a578a0bf8d90e7292",
          "SHA1=4a04596acf79115f15add3921ce30a96f594d7ce",
          "SHA1=16a091bfd1fd616d4607cac367782b1d2ab07491",
          "SHA1=cf664e30f8bd548444458eef6d56d5c2e2713e2a",
          "SHA1=0466e90bf0e83b776ca8716e01d35a8a2e5f96d3",
          "SHA1=f544f25104fe997ec873f5cec64c7aa722263fb4",
          "SHA1=be797c91768ac854bd3b82a093e55db83da0cb11",
          "SHA1=cea540a2864ece0a868d841ab27680ff841fcbe6",
          "SHA1=b4f1877156bf3157bff1170ba878848b2f22d2d5",
          "SHA1=55cffb0ef56e52686b0c407b94bbea3701d6eccd",
          "SHA1=b6543d006cb2579fb768205c479524e432c04204",
          "SHA1=879b32fcf78044cbc74b57717ab3ae18e77bc2fb",
          "SHA1=e92817a8744ebc4e4fa5383cdce2b2977f01ecd4",
          "SHA1=4a7324ca485973d514fd087699f6d759ff32743b",
          "SHA1=e41808b022656befb7dc42bbeceaf867e2fec6b2",
          "SHA1=1e09f3dd6ba9386fa9126f0116e49c2371401e01",
          "SHA1=5bdd44eb321557c5d3ab056959397f0048ac90e6",
          "SHA1=42bb38b0b93d83b62fe2604b154ada9314c98df7",
          "SHA1=c47b890dda9882f9f37eccc27d58d6a774a2901f",
          "SHA1=2cc70b772b42e0208f345c7c70d78f7536812f99",
          "SHA1=a7948a4e9a3a1a9ed0e4e41350e422464d8313cd",
          "SHA1=b7a2f2760f9819cb242b2e4f5b7bab0a65944c81",
          "SHA1=7a1689cde189378e7db84456212b0e438f9bf90a",
          "SHA1=1d0df45ee3fa758f0470e055915004e6eae54c95",
          "SHA1=c6920171fa6dff2c17eb83befb5fd28e8dddf5f0",
          "SHA1=0a6e0f9f3d7179a99345d40e409895c12919195b",
          "SHA1=2dd916cb8a9973b5890829361c1f9c0d532ba5d6",
          "SHA1=bb962c9a8dda93e94fef504c4159de881e4706fe",
          "SHA1=dcfeca5e883a084e89ecd734c4528b922a1099b9",
          "SHA1=f56fec3f2012cd7fc4528626debc590909ed74b6",
          "SHA1=d126c6974a21e9c5fdd7ff1ca60bcc37c9353b47",
          "SHA1=a6aa7926aa46beaf9882a93053536b75ef2c7536",
          "SHA1=eb1ecad3d37bb980f908bf1a912415cff32e79e6",
          "SHA1=3805e4e08ad342d224973ecdade8b00c40ed31be",
          "SHA1=7ba4607763c6fef1b2562b72044a20ca2a0303e2",
          "SHA1=bec66e0a4842048c25732f7ea2bbe989ea400abf",
          "SHA1=fd87b70f94674b02d62bb01ae6e62d75c618f5c8",
          "SHA1=d17656f11b899d58dca7b6c3dd6eef3d65ae88e2",
          "SHA1=c1c869deee6293eee3d0d84b6706d90fab8f8558",
          "SHA1=f56186b6a7aa3dd7832c9d821f9d2d93bc2a9360",
          "SHA1=e9d7d7d42fd534abf52da23c0d6ec238cefde071",
          "SHA1=8d0ae69fbe0c6575b6f8caf3983dd3ddc65aadb5",
          "SHA1=b67945815e40b1cd90708c57c57dab12ed29da83",
          "SHA1=806832983bb8cb1e26001e60ea3b7c3ade4d3471",
          "SHA1=a4e2e227f984f344d48f4bf088ca9d020c63db4e",
          "SHA1=a34adabde63514e1916713a588905c4019f83efb",
          "SHA1=3270720a066492b046d7180ca6e60602c764cac7",
          "SHA1=2bcb81f1b643071180e8ed8f7e42f49606669976",
          "SHA1=3296844d22c87dd5eba3aa378a8242b41d59db7a",
          "SHA1=bb1f9cc94e83c59c90b055fe13bb4604b2c624df",
          "SHA1=fbc6d2448739ddec35bb5d6c94b46df4148f648d",
          "SHA1=d702d88b12233be9413446c445f22fda4a92a1d9",
          "SHA1=6ecfc7ccc4843812bfccfb7e91594c018f0a0ff9",
          "SHA1=2b0bb408ff0e66bcdf6574f1ca52cbf4015b257b",
          "SHA1=c520a368c472869c3dc356a7bcfa88046352e4d9",
          "SHA1=254dce914e13b90003b0ae72d8705d92fe7c8dd0",
          "SHA1=e9f576137181c261dc3b23871d1d822731d54a12",
          "SHA1=ec1eafb87340b18c7ef3bc349fed1ddd5d3678f6",
          "SHA1=1c537fd17836283364349475c6138e6667cf1164",
          "SHA1=cfdf9c9125755f4e81fa7cc5410d7740fdfea4ed",
          "SHA1=252157ab2e33eed7aa112d1c93c720cadcee31ae",
          "SHA1=97f668aa01ebbbf2f5f93419d146e6608d203efd",
          "SHA1=9feacc95d30107ce3e1e9a491e2c12d73eef2979",
          "SHA1=26c4a7b392d7e7bd7f0a2a758534e45c0d9a56ab",
          "SHA1=0f78974194b604122b1cd4e82768155f946f6d24",
          "SHA1=3cd037fbba8aae82c1b111c9f8755349c98bcb3c",
          "SHA1=d363011d6991219d7f152609164aba63c266b740",
          "SHA1=89909fa481ff67d7449ee90d24c167b17b0612f1",
          "SHA1=db3538f324f9e52defaba7be1ab991008e43d012",
          "SHA1=008a292f71f49be1fb538f876de6556ce7b5603a",
          "SHA1=e35969966769e7760094cbcffb294d0d04a09db6",
          "SHA1=5236728c7562b047a9371403137a6e169e2026a6",
          "SHA1=862387e84baaf506c10080620cc46df2bda03eea",
          "SHA1=c0100f8a8697a240604b3ea88848dd94947c7fd3",
          "SHA1=ad05bff5fe45df9e08252717fc2bc2af57bf026f",
          "SHA1=a87d6eac2d70a3fbc04e59412326b28001c179de",
          "SHA1=637d0de7fa2a06e462dad40a575cb0fa4a38d377",
          "SHA1=0904b8fa4654197eefd6380c81bbb2149ffe0634",
          "SHA1=928b9b180ff5deb9f9dd3a38c4758bcf09298c47",
          "SHA1=432fa24e0ce4b3673113c90b34d6e52dc7bac471",
          "SHA1=bbc0b9fd67c8f4cefa3d76fcb29ff3cef996b825",
          "SHA1=444f96d8943aec21d26f665203f3fb80b9a2a260",
          "SHA1=e74b6dda8bc53bc687fc21218bd34062a78d8467",
          "SHA1=eba5483bb47ec6ff51d91a9bdf1eee3b6344493d",
          "SHA1=e3048cd05573dc1d30b1088859bc728ef67aaad0",
          "SHA1=537923c633d8fc94d9ae45ad9d89e5346f581f17",
          "SHA1=022f7aa4d0f04d594588ae9fa65c90bcc4bda833",
          "SHA1=d979353d04bf65cc92ad3412605bc81edbb75ec2",
          "SHA1=7a107291a9fad0d298a606eb34798d423c4a5683",
          "SHA1=12d38abbc5391369a4c14f3431715b5b76ac5a2a",
          "SHA1=0fd700fee341148661616ecd8af8eca5e9fa60e3",
          "SHA1=3aba6dd15260875eb290e9d67992066141aa0bb0",
          "SHA1=a5596d4d329add26b9ca9fa7005302148dfacfd8",
          "SHA1=e6305dddd06490d7f87e3b06d09e9d4c1c643af0",
          "SHA1=22fc833e07dd163315095d32ebcd3b3e377c33a4",
          "SHA1=558aad879b6a47d94a968f39d0a4e3a3aaef1ef1",
          "SHA1=c9522cf7f6d6637aaff096b4b16b0d81f6ee1c37",
          "SHA1=d11659145d6627f3d93975528d92fb6814171f91",
          "SHA1=d3d2fe8080f0b18465520785f3a955e1a24ae462",
          "SHA1=6afc6b04cf73dd461e4a4956365f25c1f1162387",
          "SHA1=ea37a4241fa4d92c168d052c4e095ccd22a83080",
          "SHA1=72966ca845759d239d09da0de7eebe3abe86fee3",
          "SHA1=93aa3bb934b74160446df3a47fa085fd7f3a6be9",
          "SHA1=dc69a6cdf048e2c4a370d4b5cafd717d236374ea",
          "SHA1=24daa825adedcbbb1d098cbe9d68c40389901b64",
          "SHA1=2bf6b88b84d27cdf0699d6d18b08a1b36310cdd1",
          "SHA1=dc55217b6043d819eadebd423ff07704ee103231",
          "SHA1=2ba0db7465cf4ffb272f803a9d77292b79c1e6df",
          "SHA1=52ea274e399df8706067fdc5ac52af0480461887",
          "SHA1=d8adf4f02513367c2b273abb0bc02f7eb3a5ef19",
          "SHA1=6887668eb41637bbbab285d41a36093c6b17a8fa",
          "SHA1=d6b1b3311263bfb170f2091d22f373c2215051b7",
          "SHA1=fad014ec98529644b5db5388d96bc4f9b77dcdc3",
          "SHA1=a714a2a045fa8f46d0165b78fe3eecf129c1de3a",
          "SHA1=a09334489fb18443c8793cb0395860518193cc3c",
          "SHA1=49d58f7565bacf10539bc63f1d2fe342b3c3d85a",
          "SHA1=e4fcb363cfe9de0e32096fa5be94a41577a89bb0",
          "SHA1=6a60f5fa0dfc6c1fa55b24a29df7464ee01a9717",
          "SHA1=8b86c99328e4eb542663164685c6926e7e54ac20",
          "SHA1=431550db5c160b56e801f220ceeb515dc16e68d2",
          "SHA1=50e2bc41f0186fdce970b80e2a2cb296353af586",
          "SHA1=dd893cd3520b2015790f7f48023d833f8fe81374",
          "SHA1=7626036baf98ddcb492a8ec34e58c022ebd70a80",
          "SHA1=0b8b83f245d94107cb802a285e6529161d9a834d",
          "SHA1=c01caaa74439af49ca81cb5b200a167e7d32343c",
          "SHA1=26a8ab6ea80ab64d5736b9b72a39d90121156e76",
          "SHA1=bdfb25cc4ed569dc0d5849545eb4abe08539029f",
          "SHA1=f6f7b5776001149496092a95fb10218dea5d6a6b",
          "SHA1=166759fd511613414d3213942fe2575b926a6226",
          "SHA1=cce9b82f01ec68f450f5fe4312f40d929c6a506e",
          "SHA1=0a89a6f6f40213356487bfcfb0b129e4f6375180",
          "SHA1=f640c94e71921479cc48d06b59aba41ffa50a769",
          "SHA1=16d7ecf09fc98798a6170e4cef2745e0bee3f5c7",
          "SHA1=8d59fd14a445c8f3f0f7991fa6cd717d466b3754",
          "SHA1=3ca51b23f8562485820883e894b448413891183a",
          "SHA1=8275977e4b586e485e9025222d0a582fcb9e1e8f",
          "SHA1=30846313e3387298f1f81c694102133568d6d48d",
          "SHA1=b52886433e608926a0b6e623217009e4071b107e",
          "SHA1=d19d1d3aa30391922989f4c6e3f7dc4937dcefbf",
          "SHA1=d569d4bab86e70efbcdfdac9d822139d6f477b7c",
          "SHA1=091a039f5f2ae1bb0fa0f83660f4c178fd3a5a10",
          "SHA1=6293ff11805cd33bccbcca9f0132bff3ae2e2534",
          "SHA1=6523b3fd87de39eb5db1332e4523ce99556077dc",
          "SHA1=7667b72471689151e176baeba4e1cd9cd006a09a",
          "SHA1=1479717fab67d98bbc3665f6b12adddfca74e0ef",
          "SHA1=fc8fbd92f6e64682360885c188d1bdfbc14ca579",
          "SHA1=3abb9d0a9d600200ae19c706e570465ef0a15643",
          "SHA1=6df42ea7c0e6ee02062bf9ca2aa4aa5cd3775274",
          "SHA1=c40ff3ebf6b5579108165be63250634823db32ec",
          "SHA1=cef5a329f7a36c76a546d9528e57245127f37246",
          "SHA1=7c46ecc5ce8e5f6e236a3b169fb46bb357ac3546",
          "SHA1=a32232a426c552667f710d2dcbd2fb9f9c50331d",
          "SHA1=755349d56cdd668ca22eebc4fc89f0cccef47327",
          "SHA1=e4436c8c42ba5ffabd58a3b2256f6e86ccc907ab",
          "SHA1=d496a8d3e71eaacd873ccef1d1f6801e54959713",
          "SHA1=437b56dc106d2e649d2c243c86729b6e6461d535",
          "SHA1=f10ec1b88c3a383c2a0c03362d31960836e3fb5f",
          "SHA1=f3cce7e79ab5bd055f311bb3ac44a838779270b6",
          "SHA1=7503a1ed7f6fbd068f8c900dd5ddb291417e3464",
          "SHA1=24aafe3c727c6a3bd1942db78327ada8fcb8c084",
          "SHA1=8453fc3198349cf0561c87efc329c81e7240c3da",
          "SHA1=51b9867c391be3ce56ba7e1c3cba8c76777245b2",
          "SHA1=a7bd05de737f8ea57857f1e0845a25677df01872",
          "SHA1=eb2496304073727564b513efd6387a77ce395443",
          "SHA1=43419df1f9a07430a18c5f3b3cc74de621be0f8e",
          "SHA1=736531c76b8d9c56e26561bf430e10ecabff0186",
          "SHA1=00b4e8b7644d1bf93f5ddb5740b444b445e81b02",
          "SHA1=19f3343bfad0ef3595f41d60272d21746c92ffca",
          "SHA1=74e4e3006b644392f5fcea4a9bae1d9d84714b57",
          "SHA1=5a7dd0da0aee0bdedc14c1b7831b9ce9178a0346",
          "SHA1=0b6ec2aedc518849a1c61a70b1f9fb068ede2bc3",
          "SHA1=c948ae14761095e4d76b55d9de86412258be7afd",
          "SHA1=80ea425e193bd0e05161e8e1dc34fb0eae5f9017",
          "SHA1=2e546d86d3b1e4eaa92b6ec4768de79f70eb922f",
          "SHA1=b91c34bb846fd5b2f13f627b7da16c78e3ee7b0f",
          "SHA1=a6816949cd469b6e5c35858d19273936fab1bef6",
          "SHA1=c02cb8256dfb37f690f2698473fe5428d17bc178",
          "SHA1=c2d18ce26ce2435845f534146d7f353b662ad2b9",
          "SHA1=05eff2001f595f9e2894c6b5eee756ae72379a6d",
          "SHA1=0a19a9c4c9185b80188da529ec9c9f45cbe73186",
          "SHA1=e7d8fc86b90f75864b7e2415235e17df4d85ee31",
          "SHA1=8e64c32bcfd70361956674f45964a8b0c8aa6388",
          "SHA1=97941faf575e43e59fe8ee167de457c2cf75c9eb",
          "SHA1=7e8efd93a1dad02385ec56c8f3b1cfd23aa47977",
          "SHA1=850d7df29256b4f537eddafe95cfea59fb118fe2",
          "SHA1=e2f40590b404a24e775f781525d8ed01f1b1156d",
          "SHA1=ff9048c451644c9c5ff2ba1408b194a0970b49e6",
          "SHA1=53f7fc4feb66af748f2ab295394bf4de62ae9fcc",
          "SHA1=3def50587309440e3b9e595bdbe4dde8d69a64e7",
          "SHA1=c6d349823bbb1f5b44bae91357895dba653c5861",
          "SHA1=f3029dba668285aac04117273599ac12a94a3564",
          "SHA1=adab368ed3c17b8f2dc0b2173076668b6153e03a",
          "SHA1=c45d03076fa6e66c1b8b74b020ad84712755e3df",
          "SHA1=0d27a3166575ec5983ec58de2591552cfa90ef92",
          "SHA1=d28b604b9bb608979cc0eab1e9e93e11c721aa3d",
          "SHA1=70bb3b831880e058524735b14f2a0f1a72916a4c",
          "SHA1=5a55c227ca13e9373b87f1ef6534533c7ce1f4fb",
          "SHA1=b97a8d506be2e7eaa4385f70c009b22adbd071ba",
          "SHA1=4075de7d7d2169d650c5ccede8251463913511e6",
          "SHA1=e09b5e80805b8fe853ea27d8773e31bff262e3f7",
          "SHA1=619413b5a6d6aeb4d58c409d54fe4a981dd7e4d9",
          "SHA1=012db3a80faf1f7f727b538cbe5d94064e7159de",
          "SHA1=d9c1913a6c76b883568910094dfa1d67aad80c84",
          "SHA1=49174d56cce618c77ae4013fe28861c80bf5ba97",
          "SHA1=e11f48631c6e0277e21a8bdf9be513651305f0d5",
          "SHA1=f6f11ad2cd2b0cf95ed42324876bee1d83e01775",
          "SHA1=d5326fea00bcde2ef7155acf3285c245c9fb4ece",
          "SHA1=e8234c44f3b7e4c510ef868e8c080e00e2832b07",
          "SHA1=9449f211c3c47821b638513d239e5f2c778dc523",
          "SHA1=456a1acacaa02664517c2f2fb854216e8e967f9d",
          "SHA1=2c27abbbbcf10dfb75ad79557e30ace5ed314df8",
          "SHA1=b314742af197a786218c6dd704b438469445eefa",
          "SHA1=7eb34cc1fcffb4fdb5cb7e97184dd64a65cb9371",
          "SHA1=fbfabf309680fbf7c0f6f14c5a0e4840c894e393",
          "SHA1=d9c09dd725bc7bc3c19b4db37866015817a516ef",
          "SHA1=6ed5c2313eecd97b78aa5dcdb442dd47345c9e43",
          "SHA1=1f26424eaf046dbf800ae2ac52d9bb38494d061a",
          "SHA1=b7fa8278ab7bc485727d075e761a72042c4595f7",
          "SHA1=10b9ae9286837b3bf6a00771c7e81adbdea3cbfe",
          "SHA1=850f15fd67d9177a50f3efef07a805b9613f50d6",
          "SHA1=696d68bdbe1d684029aaad2861c49af56694473a",
          "SHA1=164c899638bc83099c0379ea76485194564c956c",
          "SHA1=15f16fe63105b8f9cc0ef2bc8f97cfa5deb40662",
          "SHA1=b304cb10c88ddd8461bad429ebfd2fd1b809ac2b",
          "SHA1=a95a126b539989e29e68969bfab16df291e7fa8a",
          "SHA1=4f02fb7387ca0bc598c3bcb66c5065d08dbb3f73",
          "SHA1=1e8bccbd74f194db6411011017716c8c6b730d03",
          "SHA1=0cc60a56e245e70f664906b7b67dfe1b4a08a5b7",
          "SHA1=7838fb56fdab816bc1900a4720eea2fc9972ef7a",
          "SHA1=19bd488fe54b011f387e8c5d202a70019a204adf",
          "SHA1=879e327292616c56bd4aafc279fbda6cc393b74d",
          "SHA1=45e8f87afa41143e0c5850f9e054d18ec9c8a6c0",
          "SHA1=b53c360b35174bd89f97f681bf7c17f40e519eb6",
          "SHA1=c3be2bbd9b3f696bc9d51d5973cc00ca059fb172",
          "SHA1=5bb2d46ba666c03c56c326f0bbc85cc48a87dfa3",
          "SHA1=9b8c7eda28bfad07ffe5f84a892299bc7e118442",
          "SHA1=762a5b4c7beb2af675617dca6dcd6afd36ce0afd",
          "SHA1=6d9e22a275a5477ea446e6c56ee45671fbcbb5f6",
          "SHA1=1292c7dd60214d96a71e7705e519006b9de7968f",
          "SHA1=7c6cad6a268230f6e08417d278dda4d66bb00d13",
          "SHA1=65d8a7c2e867b22d1c14592b020c548dd0665646",
          "SHA1=f61e56359c663a769073782a0a3ffd3679c2694a",
          "SHA1=dd2b90c9796237036ac7136a172d96274dea14c8",
          "SHA1=af5b7556706e09ee9e74ee2e87eab5c0a49d2d35",
          "SHA1=57cc324326ab6c4239f8c10d2d1ce8862b2ce4d5",
          "SHA1=bed5bad7f405aa828a146c7f71d09c31d0c32051",
          "SHA1=34a07ae39b232cc3dbbe657b34660e692ff2043a",
          "SHA1=3f67a43ae174a715795e49f72bc350302de83323",
          "SHA1=a3d612a5ea3439ba72157bd96e390070bdddbbf3",
          "SHA1=655a9487d7a935322e19bb92d2465849055d029d",
          "SHA1=f70989f8b17971f13d45ee537e4ce98e93acbbaf",
          "SHA1=4044e5da1f16441fe7eb27cff7a76887a1aa7fec",
          "SHA1=7b4c922415e13deaf54bb2771f2ae30814ee1d14",
          "SHA1=8c11430372889bae1f91e8d068e2b2ad56dfc6bf",
          "SHA1=4f376b1d1439477a426ef3c52e8c1c69c2cb5305",
          "SHA1=1acc7a486b52c5ee6619dbdc3b4210b5f48b936f",
          "SHA1=6a3d3b9ab3d201cd6b0316a7f9c3fb4d34d0f403",
          "SHA1=7fb52290883a6b69a96d480f2867643396727e83",
          "SHA1=82dbac75b73ff4b92bdcbf6977a6683e1dcfe995",
          "SHA1=5b83c61178afb87ef7d58fd786808effcaaae861",
          "SHA1=bc47e15537fa7c32dfefd23168d7e1741f8477ed",
          "SHA1=ebafebe5e94fdf12bd2159ed66d73268576bc7d9",
          "SHA1=5e4b93591f905854fb870011464291c3508aff44",
          "SHA1=a38aac44ee232fb50a6abf145e8dd921ca3e7d78",
          "SHA256=aafb95a443911e4c67d4e45ffa83cca103c91b42915b81100534dc439bec0c1b",
          "SHA256=dfaefd06b680f9ea837e7815fc1cc7d1f4cc375641ac850667ab20739f46ad22",
          "SHA256=66a20fc2658c70facd420f5437a73fa07a5175998e569255cfb16c2f14c5e796",
          "SHA256=e8eb1c821dbf56bde05c0c49f6d560021628df89c29192058ce68907e7048994",
          "SHA256=5e3bc2d7bc56971457d642458563435c7e5c9c3c7c079ef5abeb6a61fb4d52ea",
          "SHA256=b8ffe83919afc08a430c017a98e6ace3d9cbd7258c16c09c4f3a4e06746fc80a",
          "SHA256=9b6a84f7c40ea51c38cc4d2e93efb3375e9d98d4894a85941190d94fbe73a4e4",
          "SHA256=c673f2eed5d0eed307a67119d20a91c8818a53a3cb616e2984876b07e5c62547",
          "SHA256=506f56996fbcd34ff8a27e6948a2e2e21e6dbf42dab6e3a6438402000b969fd1",
          "SHA256=4c2d2122ef7a100e1651f2ec50528c0d1a2b8a71c075461f0dc58a1aca36bc61",
          "SHA256=9dee9c925f7ea84f56d4a2ad4cf9a88c4dac27380887bf9ac73e7c8108066504",
          "SHA256=5a661e26cfe5d8dedf8c9644129039cfa40aebb448895187b96a8b7441d52aaa",
          "SHA256=a47555d04b375f844073fdcc71e5ccaa1bbb201e24dcdebe2399e055e15c849f",
          "SHA256=86721ee8161096348ed3dbe1ccbf933ae004c315b1691745a8af4a0df9fed675",
          "SHA256=06508aacb4ed0a1398a2b0da5fa2dbf7da435b56da76fd83c759a50a51c75caf",
          "SHA256=1766fd66f846d9a21e648d649ad35d1ff94f8ca17a40a9a738444d6b8e07aacb",
          "SHA256=6f55c148bb27c14408cf0f16f344abcd63539174ac855e510a42d78cfaec451c",
          "SHA256=247aadaf17ed894fcacf3fc4e109b005540e3659fd0249190eb33725d3d3082f",
          "SHA256=dde6f28b3f7f2abbee59d4864435108791631e9cb4cdfb1f178e5aa9859956d8",
          "SHA256=dfe57c6a4ef4d2491be325d67428698a61d9c5d2a24dbada10043d313be2c8cc",
          "SHA256=362c4f3dadc9c393682664a139d65d80e32caa2a97b6e0361dfd713a73267ecc",
          "SHA256=46cf46e1073b7c99142964b7c4bef1e5285fabcf2c6dbe5be99000a393d9f474",
          "SHA256=b019ebd77ac19cdd72bba3318032752649bd56a7576723a8ae1cccd70ee1e61a",
          "SHA256=4d5059ec1ebd41284b9cea6ce804596e0f386c09eee25becdd3f6949e94139ba",
          "SHA256=9d58f640c7295952b71bdcb456cae37213baccdcd3032c1e3aeb54e79081f395",
          "SHA256=d636c011b8b2896572f5de260eb997182cc6955449b044a739bd19cbe6fdabd2",
          "SHA256=a15325e9e6b8e4192291deb56c20c558dde3f96eb682c6e90952844edb984a00",
          "SHA256=e3dbafce5ad2bf17446d0f853aeedf58cc25aa1080ab97e22375a1022d6acb16",
          "SHA256=26f41e4268be59f5de07552b51fa52d18d88be94f8895eb4a16de0f3940cf712",
          "SHA256=e2d8dd5dacc24051709f55a35184f5f99aef957a83bd358b0608b4479e1ec24f",
          "SHA256=06bda5a1594f7121acd2efe38ccb617fbc078bb9a70b665a5f5efd70e3013f50",
          "SHA256=626fae47811450d080d08c3d9fd890aa64bfecdc45eacd42a40850c1833c8763",
          "SHA256=d25904fbf907e19f366d54962ff543d9f53b8fdfd2416c8b9796b6a8dd430e26",
          "SHA256=5fae7e491b0d919f0b551e15e0942ac7772f2889722684aea32cff369e975879",
          "SHA256=68671b735716ffc168addc052c5dc3d635e63e71c1e78815e7874286c3fcc248",
          "SHA256=3e274df646f191d2705c0beaa35eeea84808593c3b333809f13632782e27ad75",
          "SHA256=d7ddf874304556f8a10942a29b3d387cb5155a7419f87813557fe728cb14806d",
          "SHA256=f088b2ba27dacd5c28f8ee428f1350dca4bc7c6606309c287c801b2e1da1a53d",
          "SHA256=cdd2a4575a46bada4837a6153a79c14d60ee3129830717ef09e0e3efd9d00812",
          "SHA256=b50b11e2203942695380869c6072e15479290bc57da2ec5df3481a36b8a8561e",
          "SHA256=2bbc6b9dd5e6d0327250b32305be20c89b19b56d33a096522ee33f22d8c82ff1",
          "SHA256=f85eb576acb5db0d2f48e5f09a7244165a876fa1ca8697ebb773e4d7071d4439",
          "SHA256=72322fa8bba20df6966acbcf41e83747893fd173cd29de99b5ad1a5d3bf8f2de",
          "SHA256=d1c78c8ba70368e96515fb0596598938a8f9efa8f9f5d9e068ee008f03020fee",
          "SHA256=3503ea284b6819f9cb43b3e94c0bb1bf5945ccb37be6a898387e215197a4792a",
          "SHA256=ff6729518a380bf57f1bc6f1ec0aa7f3012e1618b8d9b0f31a61d299ee2b4339",
          "SHA256=3ac5e01689a3d745e60925bc7faca8d4306ae693e803b5e19c94906dc30add46",
          "SHA256=a6f8aa3de5b4aea58eddd45807d722c864d4bc4a38ad573174af864e21f0d526",
          "SHA256=0c018eaa293c03febe2aef1e868fca782a06b49d7d2f9f388ae5fb57604c5250",
          "SHA256=223f61c3f443c5047d1aeb905b0551005a426f084b7a50384905e7e4ecb761a1",
          "SHA256=18047c2d45758a43d6b7e56bcd4aa90354c899795baf944f037850c48d8e892a",
          "SHA256=442d506c1ac1f48f6224f0cdd64590779aee9c88bdda2f2cc3169b862cba1243",
          "SHA256=7d4ca5760b6ad2e4152080e115f040f9d42608d2c7d7f074a579f911d06c8cf8",
          "SHA256=b1867d13a4cab66a76f4d4448824ca0cb3a176064626f9618c0c103ee3cb4f47",
          "SHA256=0cf91e8f64a7c98dbeab21597bd76723aee892ed8fa4ee44b09f9e75089308e2",
          "SHA256=9e3430d5e0e93bc4a5dccc985053912065e65722bfc2eaf431bc1da91410434c",
          "SHA256=b773511fdb2e370dec042530910a905472fcc2558eb108b246fd3200171b04d3",
          "SHA256=3ff50c67d51553c08dcb7c98342f68a0f54ad6658c5346c428bdcd1f185569f6",
          "SHA256=a369942ce8d4b70ebf664981e12c736ec980dbe5a74585dd826553c4723b1bce",
          "SHA256=d3b5fd13a53eee5c468c8bfde4bfa7b968c761f9b781bb80ccd5637ee052ee7d",
          "SHA256=8bda0108de82ebeae82f43108046c5feb6f042e312fa0115475a9e32274fae59",
          "SHA256=16a2e578bc8683f17a175480fea4f53c838cfae965f1d4caa47eaf9e0b3415c1",
          "SHA256=16ae28284c09839900b99c0bdf6ce4ffcd7fe666cfd5cfb0d54a3ad9bea9aa9c",
          "SHA256=0bd164da36bd637bb76ca66602d732af912bd9299cb3d520d26db528cb54826d",
          "SHA256=c3d479d7efd0f6b502d6829b893711bdd51aac07d66326b41ef5451bafdfcb29",
          "SHA256=4eb1b9f3fe3c79f20c9cdeba92f6d6eb9b9ed15b546851e1f5338c0b7d36364b",
          "SHA256=fb1183ef22ecbcc28f9c0a351c2c0280f1312a0fdf8a9983161691e2585efc70",
          "SHA256=7236c8ff33c0e5cfa956778aa7303f1979f3bf709c361399fa1ce101b7e355b8",
          "SHA256=7149fbd191d7e4941a32a3118ab017426b551d5d369f20c94c4f36ae4ef54f26",
          "SHA256=fb81b5f8bf69637dbdf050181499088a67d24577587bc520de94b5ee8996240f",
          "SHA256=399effe75d32bdab6fa0a6bffe02dbf0a59219d940b654837c3be1c0bd02e9aa",
          "SHA256=dbc604b4e01362a3e51357af4a87686834fe913852a4e0a8c0d4c1a0f7d076ed",
          "SHA256=6de84caa2ca18673e01b91af58220c60aecd5cccf269725ec3c7f226b2167492",
          "SHA256=5fad3775feb8b6f6dcbd1642ae6b6a565ff7b64eadfc9bf9777918b51696ab36",
          "SHA256=e81230217988f3e7ec6f89a06d231ec66039bdba340fd8ebb2bbb586506e3293",
          "SHA256=cbd4f66ae09797fcd1dc943261a526710acc8dd4b24e6f67ed4a1fce8b0ae31c",
          "SHA256=fafa1bb36f0ac34b762a10e9f327dcab2152a6d0b16a19697362d49a31e7f566",
          "SHA256=b2364c3cf230648dad30952701aef90acfc9891541c7e154e30c9750da213ed1",
          "SHA256=5f5e5f1c93d961985624768b7c676d488c7c7c1d4c043f6fc1ea1904fefb75be",
          "SHA256=a11cf43794ea5b5122a0851bf7de08e559f6e9219c77f9888ff740055f2c155e",
          "SHA256=d0bd1ae72aeb5f3eabf1531a635f990e5eaae7fdd560342f915f723766c80889",
          "SHA256=4bf4cced4209c73aa37a9e2bf9ff27d458d8d7201eefa6f6ad4849ee276ad158",
          "SHA256=d366cbc1d5dd8863b45776cfb982904abd21d0c0d4697851ff54381055abcfc8",
          "SHA256=f15962354d37089884abba417f58e9dbd521569b4f69037a24a37cfc2a490672",
          "SHA256=f4dc11b7922bf2674ca9673638e7fe4e26aceb0ebdc528e6d10c8676e555d7b2",
          "SHA256=3cb111fdedc32f2f253aacde4372b710035c8652eb3586553652477a521c9284",
          "SHA256=45abdbcd4c0916b7d9faaf1cd08543a3a5178871074628e0126a6eda890d26e0",
          "SHA256=1675eedd4c7f2ec47002d623bb4ec689ca9683020e0fdb0729a9047c8fb953dd",
          "SHA256=b37b3c6877b70289c0f43aeb71349f7344b06063996e6347c3c18d8c5de77f3b",
          "SHA256=1a42ebde59e8f63804eaa404f79ee93a16bb33d27fb158c6bfbe6143226899a0",
          "SHA256=bac7e75745d0cb8819de738b73edded02a07111587c4531383dccd4562922b65",
          "SHA256=8138b219a2b1be2b0be61e5338be470c18ad6975f11119aee3a771d4584ed750",
          "SHA256=04a85e359525d662338cae86c1e59b1d7aa9bd12b920e8067503723dc1e03162",
          "SHA256=03680068ec41bbe725e1ed2042b63b82391f792e8e21e45dc114618641611d5d",
          "SHA256=af16c36480d806adca881e4073dcd41acb20c35ed0b1a8f9bd4331de655036e1",
          "SHA256=ad40e6d0f77c0e579fb87c5106bf6de3d1a9f30ee2fbf8c9c011f377fa05f173",
          "SHA256=9f4ce6ab5e8d44f355426d9a6ab79833709f39b300733b5b251a0766e895e0e5",
          "SHA256=38d6d90d543bf6037023c1b1b14212b4fa07731cbbb44bdb17e8faffc12b22e8",
          "SHA256=e68d453d333854787f8470c8baef3e0d082f26df5aa19c0493898bcf3401e39a",
          "SHA256=ae3a6a0726f667658fc3e3180980609dcb31bdbf833d7cb76ba5d405058d5156",
          "SHA256=a0728184caead84f2e88777d833765f2d8af6a20aad77b426e07e76ef91f5c3f",
          "SHA256=df0cc4e5c9802f8edaefeb130e375cad56b2c5490d8ebd77d8dbdcc6fdc7ecb6",
          "SHA256=d0543f0fdc589c921b47877041f01b17a534c67dcc7c5ad60beba8cf7e7bc9c6",
          "SHA256=f9bc6b2d5822c5b3a7b1023adceb25b47b41e664347860be4603ee81b644590e",
          "SHA256=916c535957a3b8cbf3336b63b2260ea4055163a9e6b214f2a7005d6d36a4a677",
          "SHA256=ebe2e9ec6d5d94c2d58fbcc9d78c5f0ee7a2f2c1aed6d1b309f383186d11dfa3",
          "SHA256=e86cb77de7b6a8025f9a546f6c45d135f471e664963cf70b381bee2dfd0fdef4",
          "SHA256=7d43769b353d63093228a59eb19bba87ce6b552d7e1a99bf34a54eee641aa0ea",
          "SHA256=3871e16758a1778907667f78589359734f7f62f9dc953ec558946dcdbe6951e3",
          "SHA256=45e5977b8d5baec776eb2e62a84981a8e46f6ce17947c9a76fa1f955dc547271",
          "SHA256=fa875178ae2d7604d027510b0d0a7e2d9d675e10a4c9dda2d927ee891e0bcb91",
          "SHA256=ff987c30ce822d99f3b4b4e23c61b88955f52406a95e6331570a2a13cbebc498",
          "SHA256=3301b49b813427fa37a719988fe6446c6f4468dfe15aa246bec8d397f62f6486",
          "SHA256=e6a2b1937fa277526a1e0ca9f9b32f85ab9cb7cb1a32250dd9c607e93fc2924f",
          "SHA256=f27febff1be9e89e48a9128e2121c7754d15f8a5b2e88c50102cecee5fe60229",
          "SHA256=0f016c80c4938fbcd47a47409969b3925f54292eba2ce01a8e45222ce8615eb8",
          "SHA256=81939e5c12bd627ff268e9887d6fb57e95e6049f28921f3437898757e7f21469",
          "SHA256=3e07bb866d329a2f9aaa4802bad04fdac9163de9bf9cfa1d035f5ca610b4b9bf",
          "SHA256=cf3180f5308af002ac5d6fd5b75d1340878c375f0aebc3157e3bcad6322b7190",
          "SHA256=cf69704755ec2643dfd245ae1d4e15d77f306aeb1a576ffa159453de1a7345cb",
          "SHA256=0bc3685b0b8adc97931b5d31348da235cd7581a67edf6d79913e6a5709866135",
          "SHA256=9679758455c69877fce866267d60c39d108b495dca183954e4af869902965b3d",
          "SHA256=ce0a4430d090ba2f1b46abeaae0cb5fd176ac39a236888fa363bf6f9fd6036d9",
          "SHA256=3c4207c90c97733fae2a08679d63fbbe94dfcf96fdfdf88406aa7ab3f80ea78f",
          "SHA256=eaa5dae373553024d7294105e4e07d996f3a8bd47c770cdf8df79bf57619a8cd",
          "SHA256=a10b4ed33a13c08804da8b46fd1b7bd653a6f2bb65668e82086de1940c5bb5d1",
          "SHA256=53eaefba7e7dca9ab74e385abf18762f9f1aa51594e7f7db5ba612d6c787dd7e",
          "SHA256=9ca586b49135166eea00c6f83329a2d134152e0e9423822a51c13394265b6340",
          "SHA256=8cf0cbbdc43f9b977f0fb79e0a0dd0e1adabe08a67d0f40d727c717c747de775",
          "SHA256=37073e42ffa0322500f90cd7e3c8d02c4cdd695d31c77e81560abec20bfb68ba",
          "SHA256=7a48f92a9c2d95a72e18055cac28c1e7e6cad5f47aa735cbea5c3b82813ccfaf",
          "SHA256=7c933f5d07ccb4bd715666cd6eb35a774b266ddd8d212849535a54192a44f667",
          "SHA256=72288d4978ee87ea6c8b1566dbd906107357087cef7364fb3dd1e1896d00baeb",
          "SHA256=76b86543ce05540048f954fed37bdda66360c4a3ddb8328213d5aef7a960c184",
          "SHA256=c0ae3349ebaac9a99c47ec55d5f7de00dc03bd7c5cd15799bc00646d642aa8de",
          "SHA256=904e0f7d485a98e8497d5ec6dd6e6e1cf0b8d8e067fb64a9e09790af3c8c9d5a",
          "SHA256=3a5ec83fe670e5e23aef3afa0a7241053f5b6be5e6ca01766d6b5f9177183c25",
          "SHA256=e83908eba2501a00ef9e74e7d1c8b4ff1279f1cd6051707fd51824f87e4378fa",
          "SHA256=c825a47817399e988912bb75106befaefae0babc0743a7e32b46f17469c78cad",
          "SHA256=e8b51ab681714e491ab1a59a7c9419db39db04b0dd7be11293f3a0951afe740e",
          "SHA256=dbe9f17313e1164f06401234b875fbc7f71d41dc7271de643865af1358841fef",
          "SHA256=159e7c5a12157af92e0d14a0d3ea116f91c09e21a9831486e6dc592c93c10980",
          "SHA256=05f052c64d192cf69a462a5ec16dda0d43ca5d0245900c9fcb9201685a2e7748",
          "SHA256=14adbf0bc43414a7700e5403100cff7fc6ade50bebfab16a17acf2fdda5a9da8",
          "SHA256=810513b3f4c8d29afb46f71816350088caacf46f1be361af55b26f3fee4662c3",
          "SHA256=42b31b850894bf917372ff50fbe1aff3990331e8bd03840d75e29dcc1026c180",
          "SHA256=f74ffd6916333662900cbecb90aca2d6475a714ce410adf9c5c3264abbe5732c",
          "SHA256=1963d5a0e512b72353953aadbe694f73a9a576f0241a988378fa40bf574eda52",
          "SHA256=67e9d1f6f7ed58d86b025d3578cb7a3f3c389b9dd425b7f46bb1056e83bffc78",
          "SHA256=7049f3c939efe76a5556c2a2c04386db51daf61d56b679f4868bb0983c996ebb",
          "SHA256=0aca4447ee54d635f76b941f6100b829dc8b2e0df27bdf584acb90f15f12fbda",
          "SHA256=49ae47b6b4d5e1b791b89e0395659d42a29a79c3e6ec52cbfcb9f9cef857a9dd",
          "SHA256=0dc4ff96d7e7db696e0391c5a1dda92a0b0aedbf1b0535bf5d62ebeec5b2311c",
          "SHA256=e89cb7217ec1568b43ad9ca35bf059b17c3e26f093e373ab6ebdeee24272db21",
          "SHA256=01aa278b07b58dc46c84bd0b1b5c8e9ee4e62ea0bf7a695862444af32e87f1fd",
          "SHA256=41eeeb0472c7e9c3a7146a2133341cd74dd3f8b5064c9dee2c70e5daa060954f",
          "SHA256=d54ac69c438ba77cde88c6efd6a423491996d4e8a235666644b1db954eb1da9c",
          "SHA256=b617a072c578cea38c460e2851f3d122ba1b7cfa1f5ee3e9f5927663ac37af61",
          "SHA256=e428ddf9afc9b2d11e2271f0a67a2d6638b860c2c12d4b8cc63d33f3349ee93f",
          "SHA256=42e170a7ab1d2c160d60abfc906872f9cfd0c2ee169ed76f6acb3f83b3eeefdb",
          "SHA256=6fb5bc9c51f6872de116c7db8a2134461743908efc306373f6de59a0646c4f5d",
          "SHA256=c9c60f560440ff16ad3c767ff5b7658d5bda61ea1166efe9b7f450447557136e",
          "SHA256=7164aaff86b3b7c588fc7ae7839cc09c5c8c6ae29d1aff5325adaf5bedd7c9f5",
          "SHA256=680ddece32fe99f056e770cb08641f5b585550798dfdf723441a11364637c7e6",
          "SHA256=1c425793a8ce87be916969d6d7e9dd0687b181565c3b483ce53ad1ec6fb72a17",
          "SHA256=955dac77a0148e9f9ed744f5d341cb9c9118261e52fe622ac6213965f2bc4cad",
          "SHA256=4db1e0fdc9e6cefeb1d588668ea6161a977c372d841e7b87098cf90aa679abfb",
          "SHA256=a13054f349b7baa8c8a3fcbd31789807a493cc52224bbff5e412eb2bd52a6433",
          "SHA256=27cd05527feb020084a4a76579c125458571da8843cdfc3733211760a11da970",
          "SHA256=0452a6e8f00bae0b79335c1799a26b2b77d603451f2e6cc3b137ad91996d4dec",
          "SHA256=5df689a62003d26df4aefbaed41ec1205abbf3a2e18e1f1d51b97711e8fcdf00",
          "SHA256=3140005ce5cac03985f71c29732859c88017df9d41c3761aa7c57bbcb7ad2928",
          "SHA256=bced04bdefad6a08c763265d6993f07aa2feb57d33ed057f162a947cf0e6668f",
          "SHA256=ad8ffccfde782bc287241152cf24245a8bf21c2530d81c57e17631b3c4adb833",
          "SHA256=1078af0c70e03ac17c7b8aa5ee03593f5decfef2f536716646a4ded1e98c153c",
          "SHA256=38e6d7c2787b6289629c72b1ec87655392267044b4e4b830c0232243657ee8f9",
          "SHA256=38c18db050b0b2b07f657c03db1c9595febae0319c746c3eede677e21cd238b0",
          "SHA256=ae6fb53e4d8122dba3a65e5fa59185b36c3ac9df46e82fcfb6731ab55c6395aa",
          "SHA256=0b8887921e4a22e24fd058ba5ac40061b4bb569ac7207b9548168af9d6995e7c",
          "SHA256=8a982eed9cbc724d50a9ddf4f74ecbcd67b4fdcd9c2bb1795bc88c2d9caf7506",
          "SHA256=6cb6e23ba516570bbd158c32f7c7c99f19b24ca4437340ecb39253662afe4293",
          "SHA256=e4cf438838dc10b188b3d4a318fd9ba2479abb078458d7f97591c723e2d637ce",
          "SHA256=1ddfe4756f5db9fb319d6c6da9c41c588a729d9e7817190b027b38e9c076d219",
          "SHA256=385485e643aa611e97ceae6590c6a8c47155886123dbb9de1e704d0d1624d039",
          "SHA256=5f69d6b167a1eeca3f6ac64785c3c01976ee7303171faf998d65852056988683",
          "SHA256=b8b94c2646b62f6ac08f16514b6efaa9866aa3c581e4c0435a7aeafe569b2418",
          "SHA256=b51ddcf8309c80384986dda9b11bf7856b030e3e885b0856efdb9e84064917e5",
          "SHA256=3724b39e97936bb20ada51c6119aded04530ed86f6b8d6b45fbfb2f3b9a4114b",
          "SHA256=33bc9a17a0909e32a3ae7e6f089b7f050591dd6f3f7a8172575606bec01889ef",
          "SHA256=8111085022bda87e5f6aa4c195e743cc6dd6a3a6d41add475d267dc6b105a69f",
          "SHA256=53b9e423baf946983d03ce309ec5e006ba18c9956dcd97c68a8b714d18c8ffcf",
          "SHA256=0fd2df82341bf5ebb8a53682e60d08978100c01acb0bed7b6ce2876ada80f670",
          "SHA256=2a9d481ffdc5c1e2cb50cf078be32be06b21f6e2b38e90e008edfc8c4f2a9c4e",
          "SHA256=ee45fd2d7315fd039f3585a66e7855ba4af9d4721e1448e602623de14e932bbe",
          "SHA256=76940e313c27c7ff692051fbf1fbdec19c8c31a6723a9de7e15c3c1bec8186f6",
          "SHA256=eae5c993b250dcc5fee01deeb30045b0e5ee7cf9306ef6edd8c58e4dc743a8ed",
          "SHA256=3279593db91bb7ad5b489a01808c645eafafda6cc9c39f50d10ccc30203f2ddf",
          "SHA256=ae79e760c739d6214c1e314728a78a6cb6060cce206fde2440a69735d639a0a2",
          "SHA256=727e8ba66a8ff07bdc778eacb463b65f2d7167a6616ca2f259ea32571cacf8af",
          "SHA256=f85cca4badff17d1aa90752153ccec77a68ad282b69e3985fdc4743eaea85004",
          "SHA256=88df37ede18bea511f1782c1a6c4915690b29591cf2c1bf5f52201fbbb4fa2b9",
          "SHA256=67cd6166d791bdf74453e19c015b2cb1e85e41892c04580034b65f9f03fe2e79",
          "SHA256=71c0ce3d33352ba6a0fb26e274d0fa87dc756d2473e104e0f5a7d57fab8a5713",
          "SHA256=8ae383546761069b26826dfbf2ac0233169d155bca6a94160488092b4e70b222",
          "SHA256=7b0f442ac0bb183906700097d65aed0b4b9d8678f9a01aca864854189fe368e7",
          "SHA256=a2096b460e31451659b0dde752264c362f47254c8191930bc921ff16a4311641",
          "SHA256=29f449fca0a41deccef5b0dccd22af18259222f69ed6389beafe8d5168c59e36",
          "SHA256=7553c76b006bd2c75af4e4ee00a02279d3f1f5d691e7dbdc955eac46fd3614c3",
          "SHA256=56a3c9ac137d862a85b4004f043d46542a1b61c6acb438098a9640469e2d80e7",
          "SHA256=9790a7b9d624b2b18768bb655dda4a05a9929633cef0b1521e79e40d7de0a05b",
          "SHA256=3943a796cc7c5352aa57ccf544295bfd6fb69aae147bc8235a00202dc6ed6838",
          "SHA256=7e3b0b8d3e430074109d85729201d7c34bc5b918c0bcb9f64ce88c5e37e1a456",
          "SHA256=0de4247e72d378713bcf22d5c5d3874d079203bb4364e25f67a90d5570bdcce8",
          "SHA256=2ce81759bfa236913bbbb9b2cbc093140b099486fd002910b18e2c6e31fdc4f1",
          "SHA256=36505921af5a09175395ebaea29c72b2a69a3a9204384a767a5be8a721f31b10",
          "SHA256=8137ce22d0d0fc5ea5b174d6ad3506a4949506477b1325da2ccb76511f4c4f60",
          "SHA256=4737750788c72d2fc9cf95681c622357263075d65b23e54c4dc3f31446cad37b",
          "SHA256=fd388cf1df06d419b14dedbeb24c6f4dff37bea26018775f09d56b3067f0de2c",
          "SHA256=18712a063574bfec315d58577dfe413ab45b650e54747d1e18a56c3c7337a12c",
          "SHA256=3b2ad08123e8ed2516548240cfcdf5eefd89293f31070a6cd3949ee1b66fed14",
          "SHA256=edbb23e74562e98b849e5d0eefde3af056ec6e272802a04b61bebd12395754e5",
          "SHA256=11d258e05b850dcc9ecfacccc9486e54bd928aaa3d5e9942696c323fdbd3481b",
          "SHA256=39134750f909987f6ebb46cf37519bb80707be0ca2017f3735018bac795a3f8d",
          "SHA256=0eab16c7f54b61620277977f8c332737081a46bc6bbde50742b6904bdd54f502",
          "SHA256=5da0ffe33987f8d5fb9c151f0eff29b99f42233b27efcad596add27bdc5c88ff",
          "SHA256=e4522e2cfa0b1f5d258a3cf85b87681d6969e0572f668024c465d635c236b5d9",
          "SHA256=4b5229b3250c8c08b98cb710d6c056144271de099a57ae09f5d2097fc41bd4f1",
          "SHA256=bceaf970b60b4457eca3c181f649a1c67f4602778171e53d9bdc9b97a09603ca",
          "SHA256=5192ec4501d0fe0b1c8f7bf9b778f7524a7a70a26bbbb66e5dab8480f6fdbb8b",
          "SHA256=db711ec3f4c96b60e4ed674d60c20ff7212d80e34b7aa171ad626eaa8399e8c7",
          "SHA256=32bd0edb9daa60175b1dc054f30e28e8dbfa293a32e6c86bfd06bc046eaa2f9e",
          "SHA256=0cd4ca335155062182608cad9ef5c8351a715bce92049719dd09c76422cd7b0c",
          "SHA256=bdcacb9f373b017d0905845292bca2089feb0900ce80e78df1bcaae8328ce042",
          "SHA256=db90e554ad249c2bd888282ecf7d8da4d1538dd364129a3327b54f8242dd5653",
          "SHA256=f744abb99c97d98e4cd08072a897107829d6d8481aee96c22443f626d00f4145",
          "SHA256=f29073dc99cb52fa890aae80037b48a172138f112474a1aecddae21179c93478",
          "SHA256=b7aa4c17afdaff1603ef9b5cc8981bed535555f8185b59d5ae13f342f27ca6c5",
          "SHA256=edfc38f91b5e198f3bf80ef6dcaebb5e86963936bcd2e5280088ca90d6998b8c",
          "SHA256=a2353030d4ea3ad9e874a0f7ff35bbfa10562c98c949d88cabab27102bbb8e48",
          "SHA256=0484defcf1b5afbe573472753dc2395e528608b688e5c7d1d178164e48e7bed7",
          "SHA256=8e6363a6393eb4234667c6f614b2072e33512866b3204f8395bbe01530d63f2f",
          "SHA256=b3a191ccd1df19cdf17fe6637d48266ac84c4310b013ad6973d8cb336b06ff69",
          "SHA256=e05eeb2b8c18ad2cb2d1038c043d770a0d51b96b748bc34be3e7fc6f3790ce53",
          "SHA256=70211a3f90376bbc61f49c22a63075d1d4ddd53f0aefa976216c46e6ba39a9f4",
          "SHA256=c186967cc4f2a0cb853c9796d3ea416d233e48e735f02b1bb013967964e89778",
          "SHA256=0d30c6c4fa0216d0637b4049142bc275814fd674859373bd4af520ce173a1c75",
          "SHA256=5bd41a29cbba0d24e639f49d1f201b9bd119b11f5e3b8a5fefa3a5c6f1e7692c",
          "SHA256=bfc2ef3b404294fe2fa05a8b71c7f786b58519175b7202a69fe30f45e607ff1c",
          "SHA256=be54f7279e69fb7651f98e91d24069dbc7c4c67e65850e486622ccbdc44d9a57",
          "SHA256=00c3e86952eebb113d91d118629077b3370ebc41eeacb419762d2de30a43c09c",
          "SHA256=7a1105548bfc4b0a1b7b891cde0356d39b6633975cbcd0f2e2d8e31b3646d2ca",
          "SHA256=3b19a7207a55d752db1b366b1dea2fd2c7620a825a3f0dcffca10af76611118c",
          "SHA256=fe2fb5d6cfcd64aeb62e6bf5b71fd2b2a87886eb97ab59e5353ba740da9f5db5",
          "SHA256=7fd90500b57f9ac959c87f713fe9ca59e669e6e1512f77fccb6a75cdc0dfee8e",
          "SHA256=0c925468c3376458d0e1ec65e097bd1a81a03901035c0195e8f6ef904ef3f901",
          "SHA256=e642d82c5cde2bc40a204736b5b8d6578e8e2b893877ae0508cfa3371fc254dc",
          "SHA256=440883cd9d6a76db5e53517d0ec7fe13d5a50d2f6a7f91ecfc863bc3490e4f5c",
          "SHA256=1273b74c3c1553eaa92e844fbd51f716356cc19cf77c2c780d4899ec7738fbd1",
          "SHA256=146d77e80ca70ea5cb17bfc9a5cea92334f809cbdc87a51c2d10b8579a4b9c88",
          "SHA256=3c18ae965fba56d09a65770b4d8da54ccd7801f979d3ebd283397bc99646004b",
          "SHA256=65e3548bc09dffd550e79501e3fe0fee268f895908e2bba1aa5620eb9bdac52d",
          "SHA256=0e10d3c73596e359462dc6bfcb886768486ff59e158f0f872d23c5e9a2f7c168",
          "SHA256=afdd66562dea51001c3a9de300f91fc3eb965d6848dfce92ccb9b75853e02508",
          "SHA256=060d25126e45309414b380ee29f900840b689eae4217a8e621563f130c1d457f",
          "SHA256=38fa0c663c8689048726666f1c5e019feaa9da8278f1df6ff62da33961891d2a",
          "SHA256=2a6db9facf9e13d35c37dd468be04bae5f70c6127a9aee76daebddbdec95d486",
          "SHA256=36875562e747136313ec5db58174e5fab870997a054ca8d3987d181599c7db6a",
          "SHA256=642857fc8d737e92db8771e46e8638a37d9743928c959ed056c15427c6197a54",
          "SHA256=55a1535e173c998fbbc978009b02d36ca0c737340d84ac2a8da73dfc2f450ef9",
          "SHA256=1aaa9aef39cb3c0a854ecb4ca7d3b213458f302025e0ec5bfbdef973cca9111c",
          "SHA256=e3b257357be41a18319332df7023c4407e2b93ac4c9e0c6754032e29f3763eac",
          "SHA256=6c5aef14613b8471f5f4fdeb9f25b5907c2335a4bc18b3c2266fb1ffd8f1741d",
          "SHA256=1ce9e4600859293c59d884ea721e9b20b2410f6ef80699f8a78a6b9fad505dfc",
          "SHA256=33d7046a5d41f4010ad5df632577154ed223dac2ab0ca2da57dbf1724db45a57",
          "SHA256=653f6a65e0e608cae217bea2f90f05d8125cf23f83ba01a60de0f5659cfa5d4d",
          "SHA256=20dd9542d30174585f2623642c7fbbda84e2347e4365e804e3f3d81f530c4ece",
          "SHA256=3d008e636e74c846fe7c00f90089ff725561cb3d49ce3253f2bbfbc939bbfcb2",
          "SHA256=65329dad28e92f4bcc64de15c552b6ef424494028b18875b7dba840053bc0cdd",
          "SHA256=a66d2fb7ef7350ea74d4290c57fb62bc59c6ea93f759d4ca93c3febca7aeb512",
          "SHA256=133e542842656197c5d22429bd56d57aa33c9522897fdf29853a6d321033c743",
          "SHA256=79e2d37632c417138970b4feba91b7e10c2ea251c5efe3d1fc6fa0190f176b57",
          "SHA256=5ee292b605cd3751a24e5949aae615d472a3c72688632c3040dc311055b75a92",
          "SHA256=51e91dd108d974ae809e5fc23f6fbd16e13f672f86aa594dae4a5c4bc629b0b5",
          "SHA256=613d6cc154586c21b330018142a89eac4504e185f0be7f86af975e5b6c046c55",
          "SHA256=f9895458e73d4b0ef01eda347fb695bb00e6598d9f5e2506161b70ad96bb7298",
          "SHA256=b738eab6f3e32cec59d5f53c12f13862429d3db6756212bbcd78ba4b4dbc234c",
          "SHA256=caa85c44eb511377ea7426ff10df00a701c07ffb384eef8287636a4bca0b53ab",
          "SHA256=7da6113183328d4fddf6937c0c85ef65ba69bfe133b1146193a25bcf6ae1f9dd",
          "SHA256=854bc946b557ed78c7d40547eb39e293e83942a693c94d0e798d1c4fbde7efa9",
          "SHA256=6191c20426dd9b131122fb97e45be64a4d6ce98cc583406f38473434636ddedc",
          "SHA256=aa0c52cebd64a0115c0e7faf4316a52208f738f66a54b4871bd4162eb83dc41a",
          "SHA256=23ba19352b1e71a965260bf4d5120f0200709ee8657ed381043bec9a938a1ade",
          "SHA256=71fe5af0f1564dc187eea8d59c0fbc897712afa07d18316d2080330ba17cf009",
          "SHA256=2003b478b9fd1b3d76ec5bf4172c2e8915babbbee7ad1783794acbf8d4c2519d",
          "SHA256=03e0581432f5c8cc727a8aa387f5b69ff84d38d0df6f1226c19c6e960a81e1e9",
          "SHA256=69640e9209f8e2ac25416bd3119b5308894b6ce22b5c80cb5d5f98f2f85d42ce",
          "SHA256=074ae477c8c7ae76c6f2b0bf77ac17935a8e8ee51b52155d2821d93ab30f3761",
          "SHA256=16e2b071991b470a76dff4b6312d3c7e2133ad9ac4b6a62dda4e32281952fb23",
          "SHA256=092d04284fdeb6762e65e6ac5b813920d6c69a5e99d110769c5c1a78e11c5ba0",
          "SHA256=cff9aa9046bdfd781d34f607d901a431a51bb7e5f48f4f681cc743b2cdedc98c",
          "SHA256=9d5ebd0f4585ec20a5fe3c5276df13ece5a2645d3d6f70cedcda979bd1248fc2",
          "SHA256=f2ed6c1906663016123559d9f3407bc67f64e0d235fa6f10810a3fa7bb322967",
          "SHA256=e005e8d183e853a27ad3bb56f25489f369c11b0d47e3d4095aad9291b3343bf1",
          "SHA256=c190e4a7f1781ec9fa8c17506b4745a1369dcdf174ce07f85de1a66cf4b5ed8a",
          "SHA256=5027fce41ed60906a0e76b97c95c2a5a83d57a2d1cd42de232a21f26c0d58e48",
          "SHA256=cc383ad11e9d06047a1558ed343f389492da3ac2b84b71462aee502a2fa616c8",
          "SHA256=ffc72f0bde21ba20aa97bee99d9e96870e5aa40cce9884e44c612757f939494f",
          "SHA256=d7b743c3f98662c955c616e0d1bb0800c9602e5b6f2385336a72623037bfd6dd",
          "SHA256=636b4c1882bcdd19b56370e2ed744e059149c64c96de64ac595f20509efa6220",
          "SHA256=fb6b0d304433bf88cc7d57728683dbb4b9833459dc33528918ead09b3907ff22",
          "SHA256=7d8937c18d6e11a0952e53970a0934cf0e65515637ac24d6ca52ccf4b93d385f",
          "SHA256=4cff6e53430b81ecc4fae453e59a0353bcfe73dd5780abfc35f299c16a97998e",
          "SHA256=7837cb350338c4958968d06b105466da6518f5bb522a6e70e87c0cad85128408",
          "SHA256=4b4ea21da21a1167c00b903c05a4e3af6c514ea3dfe0b5f371f6a06305e1d27f",
          "SHA256=be8dd2d39a527649e34dc77ef8bc07193a4234b38597b8f51e519dadc5479ec2",
          "SHA256=c60fcff9c8e5243bbb22ec94618b9dcb02c59bb49b90c04d7d6ab3ebbd58dc3a",
          "SHA256=6a4875ae86131a594019dec4abd46ac6ba47e57a88287b814d07d929858fe3e5",
          "SHA256=22418016e980e0a4a2d01ca210a17059916a4208352c1018b0079ccb19aaf86a",
          "SHA256=0ee5067ce48883701824c5b1ad91695998916a3702cf8086962fbe58af74b2d6",
          "SHA256=b48a309ee0960da3caaaaf1e794e8c409993aeb3a2b64809f36b97aac8a1e62a",
          "SHA256=9fa120bda98633e30480d8475c9ac6637470c4ca7c63763560bf869138091b01",
          "SHA256=dcb815eb8e9016608d0d917101b6af8c84b96fb709dc0344bceed02cbc4ed258",
          "SHA256=101402d4f5d1ae413ded499c78a5fcbbc7e3bae9b000d64c1dd64e3c48c37558",
          "SHA256=d633055c7eda26dacfc30109eb790625519fc7b0a3a601ceed9e21918aad8a1b",
          "SHA256=c586befc3fd561fcbf1cf706214ae2adaa43ce9ba760efd548d581f60deafc65",
          "SHA256=0040153302b88bee27eb4f1eca6855039e1a057370f5e8c615724fa5215bada3",
          "SHA256=f583cfb8aab7d084dc052dbd0b9d56693308cbb26bd1b607c2aedf8ee2b25e44",
          "SHA256=d8459f7d707c635e2c04d6d6d47b63f73ba3f6629702c7a6e0df0462f6478ae2",
          "SHA256=bac1cd96ba242cdf29f8feac501110739f1524f0db1c8fcad59409e77b8928ba",
          "SHA256=d92eab70bcece4432258c9c9a914483a2267f6ab5ce2630048d3a99e8cb1b482",
          "SHA256=e4c154a0073bbad3c9f8ab7218e9b3be252ae705c20c568861dae4088f17ffcc",
          "SHA256=ac3f613d457fc4d44fa27b2e0b1baa62c09415705efb5a40a4756da39b3ac165",
          "SHA256=73fddd441a764e808ed6d6b8f3d0d13713e61221aa3cfef7da91cdaf112fe061",
          "SHA256=ff322cd0cc30976f9dbdb7a3681529aeab0de7b7f5c5763362b02c15da9657a1",
          "SHA256=c181ce9a57e8d763db89ba7c45702a8cf66ef1bb58e3f21874cf0265711f886b",
          "SHA256=5177a3b7393fb5855b2ec0a45d4c91660b958ee077e76e5a7d0669f2e04bcf02",
          "SHA256=51145a3fa8258aac106f65f34159d23c54b48b6d54ec0421748b3939ab6778eb",
          "SHA256=08eb2d2aa25c5f0af4e72a7e0126735536f6c2c05e9c7437282171afe5e322c6",
          "SHA256=31d8fc6f5fb837d5eb29db828d13ba8ee11867d86a90b2c2483a578e1d0ec43a",
          "SHA256=1aaf4c1e3cb6774857e2eef27c17e68dc1ae577112e4769665f516c2e8c4e27b",
          "SHA256=61a1bdddd3c512e681818debb5bee94db701768fc25e674fcad46592a3259bd0",
          "SHA256=83a1fabf782d5f041132d7c7281525f6610207b38f33ff3c5e44eb9444dd0cbc",
          "SHA256=8047859a7a886bcf4e666494bd03a6be9ce18e20dc72df0e5b418d180efef250",
          "SHA256=61f3b1c026d203ce94fab514e3d15090222c0eedc2a768cc2d073ec658671874",
          "SHA256=7133a461aeb03b4d69d43f3d26cd1a9e3ee01694e97a0645a3d8aa1a44c39129",
          "SHA256=a6f7897cd08fe9de5e902bb204ff87215584a008f458357d019a50d6139ca4af",
          "SHA256=0f035948848432bc243704041739e49b528f35c82a5be922d9e3b8a4c44398ff",
          "SHA256=6297556f66cd6619057f3a5b216b314f8a27eebb5fa575ee07a1944aca71ae80",
          "SHA256=09b0e07af8b17db1d896b78da4dd3f55db76738ee1f4ced083a97d737334a184",
          "SHA256=f581decc2888ef27ee1ea85ea23bbb5fb2fe6a554266ff5a1476acd1d29d53af",
          "SHA256=3e1f592533625bf794e0184485a4407782018718ae797103f9e968ff6f0973a1",
          "SHA256=94be67c319a67de75ebed050d5537cfaa795d72bba52f3d8cf349e7bd075410e",
          "SHA256=8939116df1d6c8fd0ebd14b2d37b3dec38a8820aa666ecd487bc1bb794f2a587",
          "SHA256=98b734dda78c16ebcaa4afeb31007926542b63b2f163b2f733fa0d00dbb344d8",
          "SHA256=ab8f2217e59319b88080e052782e559a706fa4fb7b8b708f709ff3617124da89",
          "SHA256=72b67b6b38f5e5447880447a55fead7f1de51ca37ae4a0c2b2f23a4cb7455f35",
          "SHA256=eea53103e7a5a55dc1df79797395a2a3e96123ebd71cdd2db4b1be80e7b3f02b",
          "SHA256=b11e109f6b3dbc8aa82cd7da0b7ba93d07d9809ee2a4b21ec014f6a676a53027",
          "SHA256=0507d893e3fd2917c81c1dc13ccb22ae5402ab6ca9fb8d89485010838050d08d",
          "SHA256=c26b51b4c37330800cff8519252e110116c3aaade94ceb9894ec5bfb1b8f9924",
          "SHA256=5aee1bae73d056960b3a2d2e24ea07c44358dc7bc3f8ac58cc015cccc8f8d89c",
          "SHA256=09bedbf7a41e0f8dabe4f41d331db58373ce15b2e9204540873a1884f38bdde1",
          "SHA256=1023dcd4c80db19e9f82f95b1c5e1ddb60db7ac034848dd5cc1c78104a6350f4",
          "SHA256=37dde6bd8a7a36111c3ac57e0ac20bbb93ce3374d0852bcacc9a2c8c8c30079e",
          "SHA256=93b266f38c3c3eaab475d81597abbd7cc07943035068bb6fd670dbbe15de0131",
          "SHA256=2470fd1b733314c9b0afa19fd39c5d19aa1b36db598b5ebbe93445caa545da5f",
          "SHA256=8a0702681bc51419fbd336817787a966c7f92cabe09f8e959251069578dfa881",
          "SHA256=9d9346e6f46f831e263385a9bd32428e01919cca26a035bbb8e9cb00bf410bc3",
          "SHA256=dd2c1aa4e14c825f3715891bfa2b6264650a794f366d5f73ed1ef1d79ff0dbf9",
          "SHA256=da6ca1fb539f825ca0f012ed6976baf57ef9c70143b7a1e88b4650bf7a925e24",
          "SHA256=9a54ef5cfbe6db599322967ee2c84db7daabcb468be10a3ccfcaa0f64d9173c7",
          "SHA256=c628cda1ef43defc00af45b79949675a8422490d32b080b3a8bb9434242bdbf2",
          "SHA256=f51bdb0ad924178131c21e39a8ccd191e46b5512b0f2e1cc8486f63e84e5d960",
          "SHA256=07b6d69bafcfd767f1b63a490a8843c3bb1f8e1bbea56176109b5743c8f7d357",
          "SHA256=b17507a3246020fa0052a172485d7b3567e0161747927f2edf27c40e310852e0",
          "SHA256=1698ba7eeee6ff9272cc25b242af89190ff23fd9530f21aa8f0f3792412594f3",
          "SHA256=092349aebdac28294dbad1656759d8461f362d1a36b01054dccf861d97beadf0",
          "SHA256=87aae726bf7104aac8c8f566ea98f2b51a2bfb6097b6fc8aa1f70adeb4681e1b",
          "SHA256=673b63b67345773cd6d66f6adcf2c753e2d949232bff818d5bb6e05786538d92",
          "SHA256=bb1135b51acca8348d285dc5461d10e8f57260e7d0c8cc4a092734d53fc40cbc",
          "SHA256=cbb8239a765bf5b2c1b6a5c8832d2cab8fef5deacadfb65d8ed43ef56d291ab6",
          "SHA256=837d3b67d3e66ef1674c9f1a47046e1617ed13f73ee08441d95a6de3d73ee9f2",
          "SHA256=db73b0fa032be22405fa0b52fbfe3b30e56ac4787e620e4854c32668ae43bc33",
          "SHA256=773999db2f07c50aad70e50c1983fa95804369d25a5b4f10bd610f864c27f2fc",
          "SHA256=f64a78b1294e6837f12f171a663d8831f232b1012fd8bae3c2c6368fbf71219b",
          "SHA256=733789d0a253e8d80cc3240e365b8d4274e510e36007f6e4b5fd13b07b084c3e",
          "SHA256=7cb594af6a3655daebc9fad9c8abf2417b00ba31dcd118707824e5316fc0cc21",
          "SHA256=9b1ac756e35f795dd91adbc841e78db23cb7165280f8d4a01df663128b66d194",
          "SHA256=e16dc51c51b2df88c474feb52ce884d152b3511094306a289623de69dedfdf48",
          "SHA256=747a4dc50915053649c499a508853a42d9e325a5eec22e586571e338c6d32465",
          "SHA256=903d6d71da64566b1d9c32d4fb1a1491e9f91006ad2281bb91d4f1ee9567ef7b",
          "SHA256=6cf1cac0e97d30bb445b710fd8513879678a8b07be95d309cbf29e9b328ff259",
          "SHA256=19a212e6fc324f4cb9ee5eba60f5c1fc0191799a4432265cbeaa3307c76a7fc0",
          "SHA256=de3597ae7196ca8c0750dce296a8a4f58893774f764455a125464766fcc9b3b5",
          "SHA256=55b5bcbf8fb4e1ce99d201d3903d785888c928aa26e947ce2cdb99eefd0dae03",
          "SHA256=f7e0cca8ad9ea1e34fa1a5e0533a746b2fa0988ba56b01542bc43841e463b686",
          "SHA256=4ba224af60a50cad10d0091c89134c72fc021da8d34a6f25c4827184dc6ca5c7",
          "SHA256=40eef1f52c7b81750cee2b74b5d2f4155d4e58bdde5e18ea612ab09ed0864554",
          "SHA256=1c2f1e2b0cc4da128feb73a6b9dd040df8495fefe861d69c9f44778c6ddb9b9b",
          "SHA256=53810ca98e07a567bb082628d95d796f14c218762cbbaa79704740284dccda4b",
          "SHA256=7048d90ed4c83ad52eb9c677f615627b32815066e34230c3b407ebb01279bae6",
          "SHA256=6e76764d750ebd835aa4bb055830d278df530303585614c1dc743f8d5adf97d7",
          "SHA256=db2a9247177e8cdd50fe9433d066b86ffd2a84301aa6b2eb60f361cfff077004",
          "SHA256=43ba8d96d5e8e54cab59d82d495eeca730eeb16e4743ed134cdd495c51a4fc89",
          "SHA256=841335eeb6af68dce5b8b24151776281a751b95056a894991b23afae80e9f33b",
          "SHA256=38d87b51f4b69ba2dae1477684a1415f1a3b578eee5e1126673b1beaefee9a20",
          "SHA256=00d9781d0823ab49505ef9c877aa6fa674e19ecc8b02c39ee2728f298bc92b03",
          "SHA256=84df20b1d9d87e305c92e5ffae21b10b325609d59d835a954dbd8750ef5dabf4",
          "SHA256=d9e8be11a19699903016f39f95c9c5bf1a39774ecea73670f2c3ed5385ebfe4c",
          "SHA256=6ef0b34649186fb98a7431b606e77ee35e755894b038755ba98e577bd51b2c72",
          "SHA256=dbb457ae1bd07a945a1466ce4a206c625e590aee3922fa7d86fbe956beccfc98",
          "SHA256=55963284bbd5a3297f39f12f0d8a01ed99fe59d008561e3537bcd4db4b4268fa",
          "SHA256=7e81beae78e1ddbf6c150e15667e1f18783f9b0ab7fbe52c7ab63e754135948d",
          "SHA256=3e85cf32562a47d51827b21ab1e7f8c26c0dbd1cd86272f3cc64caae61a7e5fb",
          "SHA256=e7cbfb16261de1c7f009431d374d90e9eb049ba78246e38bc4c8b9e06f324b6f",
          "SHA256=b50ffc60eaa4fb7429fdbb67c0aba0c7085f5129564d0a113fec231c5f8ff62e",
          "SHA256=760be95d4c04b10df89a78414facf91c0961020e80561eee6e2cb94b43b76510",
          "SHA256=b749566057dee0439f54b0d38935e5939b5cb011c46d7022530f748ebc63efe5",
          "SHA256=85866e8c25d82c1ec91d7a8076c7d073cccf421cf57d9c83d80d63943a4edd94",
          "SHA256=0f17e5cfc5bdd74aff91bfb1a836071345ba2b5d1b47b0d5bf8e7e0d4d5e2dbf",
          "SHA256=221dfbc74bbb255b0879360ccc71a74b756b2e0f16e9386b38a9ce9d4e2e34f9",
          "SHA256=6948480954137987a0be626c24cf594390960242cd75f094cd6aaa5c2e7a54fa",
          "SHA256=bc7ebd191e0991fd0865a5c956a92e63792a0bb2ff888af43f7a63bb65a22248",
          "SHA256=ac26150bc98ee0419a8b23e4cda3566e0eba94718ba8059346a9696401e9793d",
          "SHA256=81aafae4c4158d0b9a6431aff0410745a0f6a43fb20a9ab316ffeb8c2e2ccac0",
          "SHA256=3ff39728f1c11d1108f65ec5eb3d722fd1a1279c530d79712e0d32b34880baaa",
          "SHA256=9254f012009d55f555418ff85f7d93b184ab7cb0e37aecdfdab62cfe94dea96b",
          "SHA256=2732050a7d836ae0bdc5c0aea4cdf8ce205618c3e7f613b8139c176e86476d0c",
          "SHA256=0a9b608461d55815e99700607a52fbdb7d598f968126d38e10cc4293ac4b1ad8",
          "SHA256=87e38e7aeaaaa96efe1a74f59fca8371de93544b7af22862eb0e574cec49c7c3",
          "SHA256=3fa6379951f08ed3cb87eeba9cf0c5f5e1d0317dcfcf003b810df9d795eeb73e",
          "SHA256=ec5fac0b6bb267a2bd10fc80c8cca6718439d56e82e053d3ff799ce5f3475db5",
          "SHA256=927c2a580d51a598177fa54c65e9d2610f5f212f1b6cb2fbf2740b64368f010a",
          "SHA256=2f8b68de1e541093f2d4525a0d02f36d361cd69ee8b1db18e6dd064af3856f4f",
          "SHA256=b2ba6efeff1860614b150916a77c9278f19d51e459e67a069ccd15f985cbc0e1",
          "SHA256=8ef59605ebb2cb259f19aba1a8c122629c224c58e603f270eaa72f516277620c",
          "SHA256=4324f3d1e4007f6499a3d0f0102cd92ed9f554332bc0b633305cd7b957ff16c8",
          "SHA256=bb68552936a6b0a68fb53ce864a6387d2698332aac10a7adfdd5a48b97027ce3",
          "SHA256=80eeb8c2890f3535ed14f5881baf2f2226e6763be099d09fb8aadaba5b4474c1",
          "SHA256=d74755311d127d0eb7454e56babc2db8dbaa814bc4ba8e2a7754d3e0224778e1",
          "SHA256=19bf0d0f55d2ad33ef2d105520bde8fb4286f00e9d7a721e3c9587b9408a0775",
          "SHA256=ad0309c2d225d8540a47250e3773876e05ce6a47a7767511e2f68645562c0686",
          "SHA256=62f5e13b2edc00128716cb93e6a9eddffea67ce83d2bb426f18f5be08ead89e0",
          "SHA256=3f9530c94b689f39cc83377d76979d443275012e022782a600dcb5cad4cca6aa",
          "SHA256=3e758221506628b116e88c14e71be99940894663013df3cf1a9e0b6fb18852b9",
          "SHA256=314384b40626800b1cde6fbc51ebc7d13e91398be2688c2a58354aa08d00b073",
          "SHA256=fca10cde7d331b7f614118682d834d46125a65888e97bd9fda2df3f15797166c",
          "SHA256=86a8e0aa29a5b52c84921188cc1f0eca9a7904dcfe09544602933d8377720219",
          "SHA256=025e7be9fcefd6a83f4471bba0c11f1c11bd5047047d26626da24ee9a419cdc4",
          "SHA256=ce23c2dae4cca4771ea50ec737093dfafac06c64db0f924a1ccbbf687e33f5a2",
          "SHA256=77c5e95b872b1d815d6d3ed28b399ca39f3427eeb0143f49982120ff732285a9",
          "SHA256=11bd2c9f9e2397c9a16e0990e4ed2cf0679498fe0fd418a3dfdac60b5c160ee5",
          "SHA256=7cfa5e10dff8a99a5d544b011f676bc383991274c693e21e3af40cf6982adb8c",
          "SHA256=c8f0bb5d8836e21e7a22a406c69c01ba7d512a808c37c45088575d548ee25caa",
          "SHA256=11208bbba148736309a8d2a4ab9ab6b8f22f2297547b100d8bdfd7d413fe98b2",
          "SHA256=7893307df2fdde25371645a924f0333e1b2de31b6bc839d8e2a908d7830c6504",
          "SHA256=d2182b6ef3255c7c1a69223cd3c2d68eb8ba3112ce433cd49cd803dc76412d4b",
          "SHA256=c490d6c0844f59fdb4aa850a06e283fbf5e5b6ac20ff42ead03d549d8ae1c01b",
          "SHA256=8e5aef7c66c0e92dfc037ee29ade1c8484b8d7fadebdcf521d2763b1d8215126",
          "SHA256=81d54ebef1716e195955046ffded498a5a7e325bf83e7847893aa3b0b3776d05",
          "SHA256=d5c4ff35eaa74ccdb80c7197d3d113c9cd38561070f2aa69c0affe8ed84a77c9",
          "SHA256=828a18b16418c021b6c4aa8c6d54cef4e815efca0d48b9ff14822f9ccb69dff2",
          "SHA256=182bbdb9ecd3932e0f0c986b779c2b2b3997a7ca9375caa2ec59b4b08f4e9714",
          "SHA256=f88ebb633406a086d9cca6bc8b66a4ea940c5476529f9033a9e0463512a23a57",
          "SHA256=c299063e3eae8ddc15839767e83b9808fd43418dc5a1af7e4f44b97ba53fbd3d",
          "SHA256=5cfad3d473961763306d72c12bd5ae14183a1a5778325c9acacca764b79ca185",
          "SHA256=f1fbec90c60ee4daba1b35932db9f3556633b2777b1039163841a91cf997938e",
          "SHA256=9917144b7240b1ce0cadb1210fd26182744fbbdf145943037c4b93e44aced207",
          "SHA256=c6feb3f4932387df7598e29d4f5bdacec0b9ce98db3f51d96fc4ffdcc6eb10e1",
          "SHA256=0be4912bfd7a79f6ebfa1c06a59f0fb402bd4fe0158265780509edd0e562eac1",
          "SHA256=ad215185dc833c54d523350ef3dbc10b3357a88fc4dde00281d9af81ea0764d5",
          "SHA256=e2d6cdc3d8960a50d9f292bb337b3235956a61e4e8b16cf158cb979b777f42aa",
          "SHA256=8797d9afc7a6bb0933f100a8acbb5d0666ec691779d522ac66c66817155b1c0d",
          "SHA256=dbebf6d463c2dbf61836b3eba09b643e1d79a02652a32482ca58894703b9addb",
          "SHA256=cd4a249c3ef65af285d0f8f30a8a96e83688486aab515836318a2559757a89bb",
          "SHA256=e6d1ee0455068b74cf537388c874acb335382876aa9d74586efb05d6cc362ae5",
          "SHA256=af095de15a16255ca1b2c27dad365dff9ac32d2a75e8e288f5a1307680781685",
          "SHA256=70b63dfc3ed2b89a4eb8a0aa6c26885f460e5686d21c9d32413df0cdc5f962c7",
          "SHA256=909f6c4b8f779df01ef91e549679aa4600223ac75bc7f3a3a79a37cee2326e77",
          "SHA256=e3eff841ea0f2786e5e0fed2744c0829719ad711fc9258eeaf81ed65a52a8918",
          "SHA256=90574d2c406b9738aae8fc629c3983c5e47a6282a43b052f38b5dd313380c30a",
          "SHA256=823da894b2c73ffcd39e77366b6f1abf0ae9604d9b20140a54e6d55053aadeba",
          "SHA256=5daa8fa3b5db2e6225a2effea41af95fe7ffc579550c4081c8028ed33bc023b8",
          "SHA256=115034373fc0ec8f75fb075b7a7011b603259ecc0aca271445e559b5404a1406",
          "SHA256=a072197177aad26c31960694e38e2cae85afbab070929e67e331b99d3a418cf4",
          "SHA256=93d873cdf23d5edc622b74f9544cac7fe247d7a68e1e2a7bf2879fad97a3ae63",
          "SHA256=ac63c26ca43701dddaa7fb1aea535d42190f88752900a03040fd5aaa24991e25",
          "SHA256=1f8168036d636aad1680dd0f577ef9532dbb2dad3591d63e752b0ba3ee6fd501",
          "SHA256=592f56b13e7dcaa285da64a0b9a48be7562bd9b0a190208b7c8b7d8de427cf6c",
          "SHA256=d783ace822f8fe4e25d5387e5dd249cb72e62f62079023216dc436f1853a150f",
          "SHA256=e0b5a5f8333fc1213791af5c5814d7a99615b3951361ca75f8aa5022c9cfbc2b",
          "SHA256=c50f8ab8538c557963252b702c1bd3cee4604b5fc2497705d2a6a3fd87e3cc26",
          "SHA256=b3d1bdd4ad819b99870b6e2ed3527dfc0e3ce27b929ad64382b9c3d4e332315c",
          "SHA256=4a9093e8dbcb867e1b97a0a67ce99a8511900658f5201c34ffb8035881f2dbbe",
          "SHA256=f190919f1668652249fa23d8c0455acbde9d344089fde96566239b1a18b91da2",
          "SHA256=c9b49b52b493b53cd49c12c3fa9553e57c5394555b64e32d1208f5b96a5b8c6e",
          "SHA256=4c807bacfcf5c30686e26812ec8d5581a824b82fee7434260c27c33eee2dfbe2",
          "SHA256=000547560fea0dd4b477eb28bf781ea67bf83c748945ce8923f90fdd14eb7a4b",
          "SHA256=700b9839fde53e91f0847053b4d2eb8d9bd3aca098844510f1fa3bab6a37eb24",
          "SHA256=d474ea066d416ded9ed8501c285ca6b1c26a1d1c813c8f6bd5523eeb66c5d01e",
          "SHA256=4e3eb5b9bce2fd9f6878ae36288211f0997f6149aa8c290ed91228ba4cdfae80",
          "SHA256=6b830ea0db6546a044c9900d3f335e7820c2a80e147b0751641899d1a5aa8f74",
          "SHA256=2a4f4400402cdc475d39389645ca825bb0e775c3ecb7c527e30c5be44e24af7d",
          "SHA256=075de997497262a9d105afeadaaefc6348b25ce0e0126505c24aa9396c251e85",
          "SHA256=1ee59eb28688e73d10838c66e0d8e011c8df45b6b43a4ac5d0b75795ca3eb512",
          "SHA256=b6fd51e1f57a03006953e84fd56cc2821cc19e7c77c0474e1110aabaacaf03df",
          "SHA256=ff55c1f308a5694eb66a3e9ba326266c826c5341c44958831a7a59a23ed5ecc8",
          "SHA256=a7c2e7910942dd5e43e2f4eb159bcd2b4e71366e34a68109548b9fb12ac0f7cc",
          "SHA256=5d7bfe05792189eaf7193bee85f0c792c33315cfcb40b2e62cc7baef6cafbc5c",
          "SHA256=a7b000abbcc344444a9b00cfade7aa22ab92ce0cadec196c30eb1851ae4fa062",
          "SHA256=4ce8583768720be90fae66eed3b6b4a8c7c64e033be53d4cd98246d6e06086d0",
          "SHA256=7ef8949637cb947f1a4e1d4e68d31d1385a600d1b1054b53e7417767461fafa7",
          "SHA256=bdcacee3695583a0ca38b9a786b9f7334bf2a9a3387e4069c8e6ca378b2791d0",
          "SHA256=4c859b3d11d2ff0049b644a19f3a316a8ca1a4995aa9c39991a7bde8d4f426a4",
          "SHA256=50db5480d0392a7dd6ab5df98389dc24d1ed1e9c98c9c35964b19dabcd6dc67f",
          "SHA256=d969845ef6acc8e5d3421a7ce7e244f419989710871313b04148f9b322751e5d",
          "SHA256=da617fe914a5f86dc9d657ef891bbbceb393c8a6fea2313c84923f3630255cdb",
          "SHA256=e58bbf3251906ff722aa63415bf169618e78be85cb92c8263d3715c260491e90",
          "SHA256=cf66fcbcb8b2ea7fb4398f398b7480c50f6a451b51367718c36330182c1bb496",
          "SHA256=79e87b93fbed84ec09261b3a0145c935f7dfe4d4805edfb563b2f971a0d51463",
          "SHA256=1e24c45ce2672ee403db34077c88e8b7d7797d113c6fd161906dce3784da627d",
          "SHA256=0c512b615eac374d4d494e3c36838d8e788b3dc2691bf27916f7f42694b14467",
          "SHA256=4045ae77859b1dbf13972451972eaaf6f3c97bea423e9e78f1c2f14330cd47ca",
          "SHA256=b78eb7f12ba718183313cf336655996756411b7dcc8648157aaa4c891ca9dbee",
          "SHA256=c5050a2017490fff7aa53c73755982b339ddb0fd7cef2cde32c81bc9834331c5",
          "SHA256=771a8d05f1af6214e0ef0886662be500ee910ab99f0154227067fddcfe08a3dd",
          "SHA256=61d6e40601fa368800980801a662a5b3b36e3c23296e8ae1c85726a56ef18cc8",
          "SHA256=5ab48bf8c099611b217cc9f78af2f92e9aaeedf1cea4c95d5dd562f51e9f0d09",
          "SHA256=274340f7185a0cc047d82ecfb2cce5bd18764ee558b5227894565c2f9fe9f6ab",
          "SHA256=89bc3cb4522f9b0bf467a93a4123ef623c28244e25a9c34d4aae11f705d187e7",
          "SHA256=e3f2ee22dec15061919583e4beb8abb3b29b283e2bcb46badf2bfde65f5ea8dd",
          "SHA256=b7a20b5f15e1871b392782c46ebcc897929443d82073ee4dcb3874b6a5976b5d",
          "SHA256=ea0b9eecf4ad5ec8c14aec13de7d661e7615018b1a3c65464bf5eca9bbf6ded3",
          "SHA256=a566af57d88f37fa033e64b1d8abbd3ffdacaba260475fbbc8dab846a824eff5",
          "SHA256=98a123b314cba2de65f899cdbfa386532f178333389e0f0fbd544aff85be02eb",
          "SHA256=afda5af5f210336061bff0fab0ed93ee495312bed639ec5db56fbac0ea8247d3",
          "SHA256=e3936d3356573ce2e472495cd3ce769f49a613e453b010433dafce5ea498ddc2",
          "SHA256=9c8ed1506b3e35f5eea6ac539e286d46ef76ddbfdfc5406390fd2157c762ce91",
          "SHA256=97030f3c81906334429afebbf365a89b66804ed890cd74038815ca18823d626c",
          "SHA256=ef6d3c00f9d0aa31a218094480299ef73fc85146adf62fd0c2f4f88972c5c850",
          "SHA256=065a34b786b0ccf6f88c136408943c3d2bd3da14357ee1e55e81e05d67a4c9bc",
          "SHA256=3c11dec1571253594d64619d8efc8c0212897be84a75a8646c578e665f58bf5d",
          "SHA256=c188b36f258f38193ace21a7d254f0aec36b59ad7e3f9bcb9c2958108effebad",
          "SHA256=7539157df91923d4575f7f57c8eb8b0fd87f064c919c1db85e73eebb2910b60c",
          "SHA256=aaa3459bcac25423f78ed72dbae4d7ef19e7c5c65770cbe5210b14e33cd1816c",
          "SHA256=900dd68ccc72d73774a347b3290c4b6153ae496a81de722ebb043e2e99496f88",
          "SHA256=c9cf1d627078f63a36bbde364cd0d5f2be1714124d186c06db5bcdf549a109f8",
          "SHA256=22be050955347661685a4343c51f11c7811674e030386d2264cd12ecbf544b7c",
          "SHA256=509628b6d16d2428031311d7bd2add8d5f5160e9ecc0cd909f1e82bbbb3234d6",
          "SHA256=a9706e320179993dade519a83061477ace195daa1b788662825484813001f526",
          "SHA256=a29093d4d708185ba8be35709113fb42e402bbfbf2960d3e00fd7c759ef0b94e",
          "SHA256=ad23d77a38655acb71216824e363df8ac41a48a1a0080f35a0d23aa14b54460b",
          "SHA256=86a1b1bacc0c51332c9979e6aad84b5fba335df6b9a096ccb7681ab0779a8882",
          "SHA256=4b4c925c3b8285aeeab9b954e8b2a0773b4d2d0e18d07d4a9d268f4be90f6cae",
          "SHA256=5be106b92424b12865338b3f541b3c244dce9693fe15f763316f0c6d6fc073ee",
          "SHA256=b84dc9b885193ced6a1b6842a365a4f18d1683951bb11a5c780ab737ffa06684",
          "SHA256=dda2a604bb94a274e23f0005f0aa330d45ca1ea25111746fb46fa5ef6d155b1d",
          "SHA256=3af9c376d43321e813057ecd0403e71cafc3302139e2409ab41e254386c33ecb",
          "SHA256=f93e0d776481c4ded177d5e4aebb27f30f0d47dcb4a1448aee8b66099ac686e1",
          "SHA256=8bf01cd6d55502838853851703eb297ec71361fa9a0b088a30c2434f4d2bf9c6",
          "SHA256=80cbba9f404df3e642f22c476664d63d7c229d45d34f5cd0e19c65eb41becec3",
          "SHA256=c1c4310e5d467d24e864177bdbfc57cb5d29aac697481bfa9c11ddbeebfd4cc8",
          "SHA256=1aa8ba45f9524847e2a36c0dc6fd80162923e88dc1be217dde2fb5894c65ff43",
          "SHA256=654c5ba47f74008c8f49cbb97988017eec8c898adc3bb851bc6e1fdf9dcf54ad",
          "SHA256=a3975db1127c331ba541fffff0c607a15c45b47aa078e756b402422ef7e81c2c",
          "SHA256=7ad0ab23023bc500c3b46f414a8b363c5f8700861bc4745cecc14dd34bcee9ed",
          "SHA256=cf4b5fa853ce809f1924df3a3ae3c4e191878c4ea5248d8785dc7e51807a512b",
          "SHA256=5ae23f1fcf3fb735fcf1fa27f27e610d9945d668a149c7b7b0c84ffd6409d99a",
          "SHA256=70afdc0e11db840d5367afe53c35d9642c1cf616c7832ab283781d085988e505",
          "SHA256=76276c87617b836dd6f31b73d2bb0e756d4b3d133bddfe169cb4225124ca6bfb",
          "SHA256=0da746e49fd662be910d0e366934a7e02898714eaaa577e261ab40eb44222b5c",
          "SHA256=1e8b0c1966e566a523d652e00f7727d8b0663f1dfdce3b9a09b9adfaef48d8ee",
          "SHA256=1072beb3ff6b191b3df1a339e3a8c87a8dc5eae727f2b993ea51b448e837636a",
          "SHA256=ef438a754fd940d145cc5d658ddac666a06871d71652b258946c21efe4b7e517",
          "SHA256=0af5ccb3d33a9ba92071c9637be6254030d61998733a5eb3583e865e17844e05",
          "SHA256=4d0580c20c1ba74cf90d44c82d040f0039542eea96e4bbff3996e6760f457cee",
          "SHA256=94911fe6f2aba9683b10353094caf71ee4a882de63b4620797629d79f18feec5",
          "SHA256=f8965fdce668692c3785afa3559159f9a18287bc0d53abb21902895a8ecf221b",
          "SHA256=9b2f051ac901ab47d0012a1002cb8b2db28c14e9480c0dd55e1ac11c81ba9285",
          "SHA256=20f11a64bc4548f4edb47e3d3418da0f6d54a83158224b71662a6292bf45b5fb",
          "SHA256=d9500af86bf129d06b47bcfbc4b23fcc724cfbd2af58b03cdb13b26f8f50d65e",
          "SHA256=b531f0a11ca481d5125c93c977325e135a04058019f939169ce3cdedaddd422d",
          "SHA256=fa77a472e95c4d0a2271e5d7253a85af25c07719df26941b39082cfc0733071a",
          "SHA256=6ffdde6bc6784c13c601442e47157062941c47015891e7139c2aaba676ab59cc",
          "SHA256=5c9e257c9740561b5744812e1343815e7972c362c8993d972b96a56e18c712f3",
          "SHA256=76614f2e372f33100a8d92bf372cdbc1e183930ca747eed0b0cf2501293b990a",
          "SHA256=b4c07f7e7c87518e8950eb0651ae34832b1ecee56c89cdfbd1b4efa8cf97779f",
          "SHA256=786f0ba14567a7e19192645ad4e40bee6df259abf2fbdfda35b6a38f8493d6cc",
          "SHA256=17687cba00ec2c9036dd3cb5430aa1f4851e64990dafb4c8f06d88de5283d6ca",
          "SHA256=212c05b487cd4e64de2a1077b789e47e9ac3361efa24d9aab3cc6ad4bd3bd76a",
          "SHA256=5c80dc051c4b0c62b9284211f71e5567c0c0187e466591eacb93e7dc10e4b9ab",
          "SHA256=79440da6b8178998bdda5ebde90491c124b1967d295db1449ec820a85dc246dd",
          "SHA256=9eba5d1545fdbf37cf053ac3f3ba45bcb651b8abb7805cbfdfb5f91ea294fb95",
          "SHA256=c8940e2e9b069ec94f9f711150b313b437f8429f78d522810601b6ee8b52bada",
          "SHA256=45c3d607cb57a1714c1c604a25cbadf2779f4734855d0e43aa394073b6966b26",
          "SHA256=e4d9f037411284e996a002b15b49bc227d085ee869ae1cd91ba54ff7c244f036",
          "SHA256=ee3ff12943ced401e2b6df9e66e8a0be8e449fa9326cab241f471b2d8ffefdd7",
          "SHA256=ae73dd357e5950face9c956570088f334d18464cd49f00c56420e3d6ff47e8dc",
          "SHA256=b2bc7514201727d773c09a1cfcfae793fcdbad98024251ccb510df0c269b04e6",
          "SHA256=708016fbe22c813a251098f8f992b177b476bd1bbc48c2ed4a122ff74910a965",
          "SHA256=eef68fdc5df91660410fb9bed005ed08c258c44d66349192faf5bb5f09f5fa90",
          "SHA256=582b62ffbcbcdd62c0fc624cdf106545af71078f1edfe1129401d64f3eefaa3a",
          "SHA256=326b53365f8486c78608139cac84619eff90be361f7ade9db70f9867dd94dcc9",
          "SHA256=9bd8b0289955a6eb791f45c3203f08a64cbd457fd1b9d598a6fbbca5d0372e36",
          "SHA256=655110646bff890c448c0951e11132dc3592bda6e080696341b930d090224723",
          "SHA256=8d6febd54ce0c98ea3653e582f7791061923a9a4842bd4a1326564204431ca9f",
          "SHA256=9529efb1837b1005e5e8f477773752078e0a46500c748bc30c9b5084d04082e6",
          "SHA256=f2a4ddc38e68efd2eac27b2562529926f5ade93575a82e8d3e0abb2b37347257",
          "SHA256=e89afd283d5789b8064d5487e04b97e2cd3fc0c711a8cec230543ebdf9ffc534",
          "SHA256=78827fa00ea48d96ac9af8d1c1e317d02ce11793e7f7f6e4c7aac7b5d7dd490f",
          "SHA256=57a389da784269bb2cc0a258500f6dfbf4f6269276e1192619ce439ec77f4572",
          "SHA256=81fbc9d02ef9e05602ea9c0804d423043d0ea5a06393c7ece3be03459f76a41d",
          "SHA256=2ad8c38f6e0ca6c93abe3228c8a5d4299430ce0a2eeb80c914326c75ba8a33f9",
          "SHA256=89b9823ed974a5b71de8468324d45b7e9d6dc914f93615ba86c6209b25b3cbf7",
          "SHA256=5b9623da9ba8e5c80c49473f40ffe7ad315dcadffc3230afdc9d9226d60a715a",
          "SHA256=36e3127f045ef1fa7426a3ff8c441092d3b66923d2b69826034e48306609e289",
          "SHA256=71423a66165782efb4db7be6ce48ddb463d9f65fd0f266d333a6558791d158e5",
          "SHA256=4941c4298f4560fc1e59d0f16f84bab5c060793700b82be2fd7c63735f1657a8",
          "SHA256=848b150ffcf1301b26634a41f28deacb5ccdd3117d79b590d515ed49849b8891",
          "SHA256=14938f68957ede6e2b742a550042119a8fbc9f14427fb89fa53fff12d243561c",
          "SHA256=49ef680510e3dac6979a20629d10f06822c78f45b9a62ec209b71827a526be94",
          "SHA256=a495ffa623a5220179b0dd519935e255dd6910b7b7bc3d68906528496561ff53",
          "SHA256=a7c8f4faf3cbb088cac7753d81f8ec4c38ccb97cd9da817741f49272e8d01200",
          "SHA256=e1980c6592e6d2d92c1a65acad8f1071b6a404097bb6fcce494f3c8ac31385cf",
          "SHA256=c8ff7c9f510f7a2ed88d9b336d8c9339698d5e1ee14bfb91aa89703ec06dce42",
          "SHA256=0b542e47248611a1895018ec4f4033ea53464f259c74eb014d018b19ad818917",
          "SHA256=348dc502ac57d7362c7f222e656c52e630c90bef92217a3bd20e49193b5a69f1",
          "SHA256=f42eb29f5b2bcb2a70d796fd71fd1b259d5380b216ee672cf46dcdd4604b87ad",
          "SHA256=5fbfd7c4ea3db1197ad38d5a945acf6f2f42cb350380cf8ae276bc80b0dedb77",
          "SHA256=77950e2a40ac0447ae7ee1ee3ef1242ce22796a157074e6f04e345b1956e143c",
          "SHA256=de6bf572d39e2611773e7a01f0388f84fb25da6cba2f1f8b9b36ffba467de6fa",
          "SHA256=45ba688a4bded8a7e78a4f5b0dc21004e951ddceb014bb92f51a3301d2fbc56a",
          "SHA256=36aafa127736c7226c50061ea065f71e14f64ec60321f705bc52686d24117e0d",
          "SHA256=7c8ad57b3a224fdc2aac9dd2d7c3624f1fcd3542d4db804de25a90155657e2cc",
          "SHA256=7462b7ae48ae9469474222d4df2f0c4f72cdef7f3a69a524d4fccc5ed0fd343f",
          "SHA256=d205286bffdf09bc033c09e95c519c1c267b40c2ee8bab703c6a2d86741ccd3e",
          "SHA256=39f137083e6c0200543e1f8d3c074f857d141bdb8c8f09338d48520537b881aa",
          "SHA256=0b547368c03e0a584ae3c5e62af3728426c68b316a15f3290316844d193ad182",
          "SHA256=455bc98ba32adab8b47d2d89bdbadca4910f91c182ab2fc3211ba07d3784537b",
          "SHA256=bdbceca41e576841cad2f2b38ee6dbf92fd77fbbfdfe6ecf99f0623d44ef182c",
          "SHA256=a0dd3d43ab891777b11d4fdcb3b7f246b80bc66d12f7810cf268a5f6f4f8eb7b",
          "SHA256=3326e2d32bbabd69feb6024809afc56c7e39241ebe70a53728c77e80995422a5",
          "SHA256=e9919d1546c7dfef62ff01b87f739812de0a57463611c12012013ae689023ce1",
          "SHA256=3124b0411b8077605db2a9b7909d8240e0d554496600e2706e531c93c931e1b5",
          "SHA256=f6cd7353cb6e86e98d387473ed6340f9b44241867508e209e944f548b9db1d5f",
          "SHA256=506f953bbb285aeb8af0549eb24f52f3b7af36afe740afa36735bac70573ce28",
          "SHA256=b9ed73af3aef69dc1fb91731d6d0a649e93f83d0f07ddb9729d71c2d00ed0801",
          "SHA256=607dc4c75ac7aef82ae0616a453866b3b358c6cf5c8f9d29e4d37f844306b97c",
          "SHA256=e4eca7db365929ff7c5c785e2eab04ef8ec67ea9edcf7392f2b74eccd9449148",
          "SHA256=2270a8144dabaf159c2888519b11b61e5e13acdaa997820c09798137bded3dd6",
          "SHA256=5e27fe26110d2b9f6c2bad407d3d0611356576b531564f75ff96f9f72d5fcae4",
          "SHA256=cb57f3a7fe9e1f8e63332c563b0a319b26c944be839eabc03e9a3277756ba612",
          "SHA256=6bfc0f425de9f4e7480aa2d1f2e08892d0553ed0df1c31e9bf3d8d702f38fa2e",
          "SHA256=316a27e2bdb86222bc7c8af4e5472166b02aec7f3f526901ce939094e5861f6d",
          "SHA256=48891874441c6fa69e5518d98c53d83b723573e280c6c65ccfbde9039a6458c9",
          "SHA256=648994905b29b9c4a1074eef332bf6932b638bad62df020b5452c74e2b15d78f",
          "SHA256=6278bc785113831b2ec3368e2c9c9e89e8aca49085a59d8d38dac651471d6440",
          "SHA256=b8321471be85dc8a67ac18a2460cab50e7c41cb47252f9a7278b1e69d6970f25",
          "SHA256=673bcec3d53fab5efd6e3bac25ac9d6cc51f6bbdf8336e38aade2713dc1ae11b",
          "SHA256=8c95d28270a4a314299cf50f05dcbe63033b2a555195d2ad2f678e09e00393e6",
          "SHA256=e2e79f1e696f27fa70d72f97e448081b1fa14d59cbb89bb4a40428534dd5c6f6",
          "SHA256=22e125c284a55eb730f03ec27b87ab84cf897f9d046b91c76bea2b5809fd51c5",
          "SHA256=60b163776e7b95e0c2280d04476304d0c943b484909131f340e3ce6045a49289",
          "SHA256=42f0b036687cbd7717c9efed6991c00d4e3e7b032dc965a2556c02177dfdad0f",
          "SHA256=3ec5ad51e6879464dfbccb9f4ed76c6325056a42548d5994ba869da9c4c039a8",
          "SHA256=b7bba82777c9912e6a728c3e873c5a8fd3546982e0d5fa88e64b3e2122f9bc3b",
          "SHA256=aebcbfca180e372a048b682a4859fd520c98b5b63f6e3a627c626cb35adc0399",
          "SHA256=80a59ca71fc20961ccafc0686051e86ae4afbbd4578cb26ad4570b9207651085",
          "SHA256=f8d6ce1c86cbd616bb821698037f60a41e129d282a8d6f1f5ecdd37a9688f585",
          "SHA256=910479467ef17b9591d8d42305e7f6f247ad41c60ec890a1ffbe331f495ed135",
          "SHA256=2d195cd4400754cc6f6c3f8ab1fe31627932c3c1bf8d5d0507c292232d1a2396",
          "SHA256=d21aba58222930cb75946a0fb72b4adc96de583d3f7d8dc13829b804eb877257",
          "SHA256=16768203a471a19ebb541c942f45716e9f432985abbfbe6b4b7d61a798cea354",
          "SHA256=2665d3127ddd9411af38a255787a4e2483d720aa021be8d6418e071da52ed266",
          "SHA256=478917514be37b32d5ccf76e4009f6f952f39f5553953544f1b0688befd95e82",
          "SHA256=be03e9541f56ac6ed1e81407dcd7cc85c0ffc538c3c2c2c8a9c747edbcf13100",
          "SHA256=0b57569aaa0f4789d9642dd2189b0a82466b80ad32ff35f88127210ed105fe57",
          "SHA256=e50b25d94c1771937b2f632e10eea875ac6b19c57da703d52e23ad2b6299f0ae",
          "SHA256=ece0a900ea089e730741499614c0917432246ceb5e11599ee3a1bb679e24fd2c",
          "SHA256=cb59a641adb623a65a9b5af1db2ffd921fd1ca1bc046a6df85d5f2e00fd0b5a5",
          "SHA256=a3e507e713f11901017fc328186ae98e23de7cea5594687480229f77d45848d8",
          "SHA256=ef86c4e5ee1dbc4f81cd864e8cd2f4a2a85ee4475b9a9ab698a4ae1cc71fbeb0",
          "SHA256=51480eebbbfb684149842c3e19a8ffbd3f71183c017e0c4bc6cf06aacf9c0292",
          "SHA256=2afdb3278a7b57466a103024aef9ff7f41c73a19bab843a8ebf3d3c4d4e82b30",
          "SHA256=3d23bdbaf9905259d858df5bf991eb23d2dc9f4ecda7f9f77839691acef1b8c4",
          "SHA256=83fbf5d46cff38dd1c0f83686708b3bd6a3a73fddd7a2da2b5a3acccd1d9359c",
          "SHA256=9c10e2ec4f9ef591415f9a784b93dc9c9cdafa7c69602c0dc860c5b62222e449",
          "SHA256=51f002ee44e46889cf5b99a724dd10cc2bd3e22545e2a2cb3bd6b1dd3af5ba11",
          "SHA256=7dfc2eb033d2e090540860b8853036f40736d02bd22099ff6cf665a90be659cd",
          "SHA256=e728b259113d772b4e96466ab8fe18980f37c36f187b286361c852bd88101717",
          "SHA256=2b4c7d3820fe08400a7791e2556132b902a9bbadc1942de57077ecb9d21bf47a",
          "SHA256=b9ad7199c00d477ebbc15f2dcf78a6ba60c2670dad0ef0994cebccb19111f890",
          "SHA256=bc8cb3aebe911bd9b4a3caf46f7dda0f73fec4d2e4e7bc9601bb6726f5893091",
          "SHA256=6575ea9b319beb3845d43ce2c70ea55f0414da2055fa82eec324c4cebdefe893",
          "SHA256=a56c2a2425eb3a4260cc7fc5c8d7bed7a3b4cd2af256185f24471c668853aee8",
          "SHA256=63865f04c1150655817ed4c9f56ad9f637d41ebd2965b6127fc7c02757a7800e",
          "SHA256=8f23313adb35782adb0ba97fefbfbb8bbc5fc40ae272e07f6d4629a5305a3fa2",
          "SHA256=082c39fe2e3217004206535e271ebd45c11eb072efde4cc9885b25ba5c39f91d",
          "SHA256=26d69e677d30bb53c7ac7f3fce76291fe2c44720ef17ee386f95f08ec5175288",
          "SHA256=b2247e68386c1bdfd48687105c3728ebbad672daffa91b57845b4e49693ffd71",
          "SHA256=38b3eb8c86201d26353aab625cea672e60c2f66ce6f5e5eda673e8c3478bf305",
          "SHA256=952199c28332bc90cfd74530a77ee237967ed32b3c71322559c59f7a42187dc4",
          "SHA256=4e37592a2a415f520438330c32cfbdbd6af594deef5290b2fa4b9722b898ff69",
          "SHA256=40061b30b1243be76d5283cbc8abfe007e148097d4de7337670ff1536c4c7ba1",
          "SHA256=d7a61c671eab1dfaa62fe1088a85f6d52fb11f2f32a53822a49521ca2c16585e",
          "SHA256=74a846c61adc53692d3040aff4c1916f32987ad72b07fe226e9e7dbeff1036c4",
          "SHA256=238046cfe126a1f8ab96d8b62f6aa5ec97bab830e2bae5b1b6ab2d31894c79e4",
          "SHA256=478bcb750017cb6541f3dd0d08a47370f3c92eec998bc3825b5d8e08ee831b70",
          "SHA256=1e9c236ed39507661ec32731033c4a9b9c97a6221def69200e03685c08e0bfa7",
          "SHA256=e77786b21dbe73e9619ac9aac5e7e92989333d559aa22b4b65c97f0a42ff2e21",
          "SHA256=d1f4949f76d8ac9f2fa844d16b1b45fb1375d149d46e414e4a4c9424dc66c91f",
          "SHA256=c3e150eb7e7292f70299d3054ed429156a4c32b1f7466a706a2b99249022979e",
          "SHA256=4ace6dded819e87f3686af2006cb415ed75554881a28c54de606975c41975112",
          "SHA256=696679114f6a106ec94c21e2a33fe17af86368bcf9a796aaea37ea6e8748ad6a",
          "SHA256=9778136d2441439dc470861d15d96fa21dc9f16225232cd05b76791a5e0fde6f",
          "SHA256=6ed35f310c96920a271c59a097b382da07856e40179c2a4239f8daa04eef38e7",
          "SHA256=76e807b6c0214e66455f09a8de8faad40b738982ca84470f0043de0290449524",
          "SHA256=202d9703a5b8d06c5f92d2c5218a93431aa55af389007826a9bfaaf900812213",
          "SHA256=47f0cdaa2359a63ad1389ef4a635f1f6eee1f63bdf6ef177f114bdcdadc2e005",
          "SHA256=97b32ddf83f75637e3ba934df117081dd6a1c57d47a4c9700d35e736da11d5bd",
          "SHA256=00c02901472d74e8276743c847b8148be3799b0e3037c1dfdca21fa81ad4b922",
          "SHA256=d7bc7306cb489fe4c285bbeddc6d1a09e814ef55cf30bd5b8daf87a52396f102",
          "SHA256=3c6f9917418e991ed41540d8d882c8ca51d582a82fd01bff6cdf26591454faf5",
          "SHA256=c2a4ddcc9c3b339d752c48925d62fc4cc5adbf6fae8fedef74cdd47e88da01f8",
          "SHA256=b61869b7945be062630f1dd4bae919aecee8927f7e1bc3954a21ff763f4c0867",
          "SHA256=7877c1b0e7429453b750218ca491c2825dae684ad9616642eff7b41715c70aca",
          "SHA256=c0c52425dd90f36d110952c665e5b644bb1092f952942c07bb4da998c9ce6e5b",
          "SHA256=c2562e0101cb39906c73b96fc15a6e6e3edd710b19858f6bbd0c90f1561b6038",
          "SHA256=21ccdd306b5183c00ecfd0475b3152e7d94b921e858e59b68a03e925d1715f21",
          "SHA256=d5562fb90b0b3deb633ab335bcbd82ce10953466a428b3f27cb5b226b453eaf3",
          "SHA256=f1c8ca232789c2f11a511c8cd95a9f3830dd719cad5aa22cb7c3539ab8cb4dc3",
          "SHA256=2bf29a2df52110ed463d51376562afceac0e80fbb1033284cf50edd86c406b14",
          "SHA256=50d5eaa168c077ce5b7f15b3f2c43bd2b86b07b1e926c1b332f8cb13bd2e0793",
          "SHA256=258359a7fa3d975620c9810dab3a6493972876a024135feaf3ac8482179b2e79",
          "SHA256=405a99028c99f36ab0f84a1fd810a167b8f0597725e37513d7430617106501f1",
          "SHA256=17927b93b2d6ab4271c158f039cae2d60591d6a14458f5a5690aec86f5d54229",
          "SHA256=72b99147839bcfb062d29014ec09fe20a8f261748b5925b00171ef3cb849a4c1",
          "SHA256=405472a8f9400a54bb29d03b436ccd58cfd6442fe686f6d2ed4f63f002854659",
          "SHA256=1c1251784e6f61525d0082882a969cb8a0c5d5359be22f5a73e3b0cd38b51687",
          "SHA256=ca34f945117ec853a713183fa4e8cf85ea0c2c49ca26e73d869fee021f7b491d",
          "SHA256=b9ae1d53a464bc9bb86782ab6c55e2da8804c80a361139a82a6c8eef30fddd7c",
          "SHA256=fd33fb2735cc5ef466a54807d3436622407287e325276fcd3ed1290c98bd0533",
          "SHA256=a4680fabf606d6580893434e81c130ff7ec9467a15e6534692443465f264d3c9",
          "SHA256=11a9787831ac4f0657aeb5e7019c23acc39d8833faf28f85bd10d7590ea4cc5f",
          "SHA256=771015b2620942919bb2e0683476635b7a09db55216d6fbf03534cb18513b20c",
          "SHA256=2a11b4f125d8537e69af7b684494e49ef2a30a219634988e278177fa36c934eb",
          "SHA256=e32ab30d01dcff6418544d93f99ae812d2ce6396e809686620547bea05074f6f",
          "SHA256=37022838c4327e2a5805e8479330d8ff6f8cd3495079905e867811906c98ea20",
          "SHA256=3b6e85c8fed9e39b21b2eab0b69bc464272b2c92961510c36e2e2df7aa39861b",
          "SHA256=c7f64b27cd3be5af1c8454680529ea493dfbb09e634eec7e316445ad73499ae0",
          "SHA256=3c7e5b25a33a7805c999d318a9523fcae46695a89f55bbdb8bb9087360323dfc",
          "SHA256=8d57e416ea4bb855b78a2ff3c80de1dfbb5dc5ee9bfbdddb23e46bd8619287e2",
          "SHA256=e4a7da2cf59a4a21fc42b611df1d59cae75051925a7ddf42bf216cc1a026eadb",
          "SHA256=9a91d6e83b8fdec536580f6617f10dfc64eedf14ead29a6a644eb154426622ba",
          "SHA256=a8027daa6facf1ff81405daf6763249e9acf232a1a191b6bf106711630e6188e",
          "SHA256=b179e1ab6dc0b1aee783adbcad4ad6bb75a8a64cb798f30c0dd2ee8aaf43e6de",
          "SHA256=0e53b58415fa68552928622118d5b8a3a851b2fc512709a90b63ba46acda8b6b",
          "SHA256=ffd03584246730397e231eb8d16c1449aef2c3bc79bf9da3ebf8400a21b20ae7",
          "SHA256=c344e92a6d06155a217a9af7b4b35e6653665eec6569292e7b2e70f3a3027646",
          "SHA256=ff115cefe624b6ca0b3878a86f6f8b352d1915b65fbbdc33ae15530a96ebdaa7",
          "SHA256=c640930c29ea3610a3a5cebee573235ec70267ed223b79b9fa45a80081e686a4",
          "SHA256=88e2e6a705d3fb71b966d9fb46dc5a4b015548daf585fb54dfcd81dc0bd3ebdc",
          "SHA256=16b591cf5dc1e7282fdb25e45497fe3efc8095cbe31c05f6d97c5221a9a547e1",
          "SHA256=24e70c87d58fa5771f02b9ddf0d8870cba6b26e35c6455a2c77f482e2080d3e9",
          "SHA256=5a826b4fa10891cf63aae832fc645ce680a483b915c608ca26cedbb173b1b80a",
          "SHA256=8e92aacd60fca1f09b7257e62caf0692794f5d741c5d1eec89d841e87f2c359c",
          "SHA256=4bc0921ffd4acc865525d3faf98961e8decc5aec4974552cbbf2ae8d5a569de4",
          "SHA256=fd8669794c67b396c12fc5f08e9c004fdf851a82faf302846878173e4fbecb03",
          "SHA256=cc687fe3741bbde1dd142eac0ef59fd1d4457daee43cdde23bb162ef28d04e64",
          "SHA256=677c0b1add3990fad51f492553d3533115c50a242a919437ccb145943011d2bf",
          "SHA256=d8b58f6a89a7618558e37afc360cd772b6731e3ba367f8d58734ecee2244a530",
          "SHA256=d9a2bf0f5ba185170441f003dc46fbb570e1c9fdf2132ab7de28b87ba7ad1a0c",
          "SHA256=0d133ced666c798ea63b6d8026ec507d429e834daa7c74e4e091e462e5815180",
          "SHA256=b0b6a410c22cc36f478ff874d4a23d2e4b4e37c6e55f2a095fc4c3ef32bcb763",
          "SHA256=bfc121e93fcbf9bd42736cfe7675ae2cc805be9a58f1a0d8cc3aa5b42e49a13f",
          "SHA256=b9695940f72e3ed5d7369fb32958e2146abd29d5895d91ccc22dfbcc9485b78b",
          "SHA256=4a3d4db86f580b1680d6454baee1c1a139e2dde7d55e972ba7c92ec3f555dce2",
          "SHA256=5bdba1561ec5b23b1d56ea8cee411147d1526595f03a9281166a563b3641fa2a",
          "SHA256=cc586254e9e89e88334adee44e332166119307e79c2f18f6c2ab90ce8ba7fc9b",
          "SHA256=66f8bd2b29763acfbb7423f4c3c9c3af9f3ca4113bd580ab32f6e3ee4a4fc64e",
          "SHA256=49f75746eebe14e5db11706b3e58accc62d4034d2f1c05c681ecef5d1ad933ba",
          "SHA256=1e16a01ef44e4c56e87abfbe03b2989b0391b172c3ec162783ad640be65ab961",
          "SHA256=1c8dfa14888bb58848b4792fb1d8a921976a9463be8334cff45cc96f1276049a",
          "SHA256=9724488ca2ba4c787640c49131f4d1daae5bd47d6b2e7e5f9e8918b1d6f655be",
          "SHA256=b03f26009de2e8eabfcf6152f49b02a55c5e5d0f73e01d48f5a745f93ce93a29",
          "SHA256=fc3e8554602c476e2edfa92ba4f6fb2e5ba0db433b9fbd7d8be1036e454d2584",
          "SHA256=bef87650c29faf421e7ad666bf47d7a78a45f291b438c8d1c4b6a66e5b54c6fc",
          "SHA256=3a95cc82173032b82a0ffc7d2e438df64c13bc16b4574214c9fe3be37250925e",
          "SHA256=5351c81b4ec5a0d79c39d24bac7600d10eac30c13546fde43d23636b3f421e7c",
          "SHA256=4d777a9e2c61e8b55b3c34c5265b301454bb080abe7ffb373e7800bd6a498f8d",
          "SHA256=59b09bd69923c0b3de3239e73205b1846a5f69043546d471b259887bb141d879",
          "SHA256=36b9e31240ab0341873c7092b63e2e0f2cab2962ebf9b25271c3a1216b7669eb",
          "SHA256=5c04c274a708c9a7d993e33be3ea9e6119dc29527a767410dbaf93996f87369a",
          "SHA256=59626cac380d8fe0b80a6d4c4406d62ba0683a2f0f68d50ad506ca1b1cf25347",
          "SHA256=34bee22c18ddbddbe115cf1ab55cabf0e482aba1eb2c343153577fb24b7226d3",
          "SHA256=f4c7e94a7c2e49b130671b573a9e4ff4527a777978f371c659c3f97c14d126de",
          "SHA256=567809308cfb72d59b89364a6475f34a912d03889aa50866803ac3d0bf2c3270",
          "SHA256=523d1d43e896077f32cd9acaa8e85b513bfb7b013a625e56f0d4e9675d9822ba",
          "SHA256=b074caef2fbf7e1dc8870edccb65254858d95836f466b4e9e6ca398bf7a27aa3",
          "SHA256=4422851a0a102f654e95d3b79c357ae3af1b096d7d1576663c027cfbc04abaf9",
          "SHA256=8d3347c93dff62eecdde22ccc6ba3ce8c0446874738488527ea76d0645341409",
          "SHA256=f14da8aa5c8eea8df63cf935481d673fdf3847f5701c310abf4023f9d80ad57d",
          "SHA256=60c6f4f34c7319cb3f9ca682e59d92711a05a2688badbae4891b1303cd384813",
          "SHA256=c089a31ac95d41ed02d1e4574962f53376b36a9e60ff87769d221dc7d1a3ecfa",
          "SHA256=5f487829527802983d5c120e3b99f3cf89333ca14f5e49ac32df0798cfb1f7aa",
          "SHA256=9e2622d8e7a0ec136ba1fff639833f05137f8a1ff03e7a93b9a4aea25e7abb8d",
          "SHA256=f05b1ee9e2f6ab704b8919d5071becbce6f9d0f9d0ba32a460c41d5272134abe",
          "SHA256=6e944ae1bfe43a8a7cd2ea65e518a30172ce8f31223bdfd39701b2cb41d8a9e7",
          "SHA256=c470c9db58840149ce002f3e6003382ecf740884a683bae8f9d10831be218fa2",
          "SHA256=3ac8e54be2804f5fa60d0d23a11ba323fba078a942c96279425aabad935b8236",
          "SHA256=468b087a0901d7bd971ab564b03ded48c508840b1f9e5d233a7916d1da6d9bd5",
          "SHA256=496f4a4021226fb0f1b5f71a7634c84114c29faa308746a12c2414adb6b2a40b",
          "SHA256=ac1af529c9491644f1bda63267e0f0f35e30ab0c98ab1aecf4571f4190ab9db4",
          "SHA256=b95b2d9b29bd25659f1c7ba5a187f8d23cde01162d9b5b1a2c4aea8f64b38441",
          "SHA256=82fbcb371d53b8a76a25fbbafaae31147c0d1f6b9f26b3ea45262c2267386989",
          "SHA256=0fc3bc6e81b04dcaa349f59f04d6c85c55a2fea5db8fa0ba53d3096a040ce5a7",
          "SHA256=daf549a7080d384ba99d1b5bd2383dbb1aa640f7ea3a216df1f08981508155f5",
          "SHA256=bac709c49ddee363c8e59e515f2f632324a0359e932b7d8cb1ce2d52a95981aa",
          "SHA256=7f375639a0df7fe51e5518cf87c3f513c55bc117db47d28da8c615642eb18bfa",
          "SHA256=aa9ab1195dc866270e984f1bed5e1358d6ef24c515dfdb6c2a92d1e1b94bf608",
          "SHA256=7cf756afcaf2ce4f8fb479fdede152a17eabf4c5c7c329699dab026a4c1d4fd0",
          "SHA256=f8d45fa03f56e2ea14920b902856666b8d44f1f1b16644baf8c1ae9a61851fb6",
          "SHA256=0b2ad05939b0aabbdc011082fad7960baa0c459ec16a2b29f37c1fa31795a46d",
          "SHA256=e75714f8e0ff45605f6fc7689a1a89c7dcd34aab66c6131c63fefaca584539cf",
          "SHA256=0abca92512fc98fe6c2e7d0a33935686fc3acbd0a4c68b51f4a70ece828c0664",
          "SHA256=dafa4459d88a8ab738b003b70953e0780f6b8f09344ce3cd631af70c78310b53",
          "SHA256=f48f31bf9c6abbd44124b66bce2ab1200176e31ef1e901733761f2b5ceb60fb2",
          "SHA256=984a77e5424c6d099051441005f2938ae92b31b5ad8f6521c6b001932862add7",
          "SHA256=475e5016c9c0f5a127896f9179a1b1577a67b357f399ab5a1e68aab07134729a",
          "SHA256=543991ca8d1c65113dff039b85ae3f9a87f503daec30f46929fd454bc57e5a91",
          "SHA256=3678ba63d62efd3b706d1b661d631ded801485c08b5eb9a3ef38380c6cff319a",
          "SHA256=ab2632a4d93a7f3b7598c06a9fdc773a1b1b69a7dd926bdb7cf578992628e9dd",
          "SHA256=c082514317bf80a2f5129d84a5a55e411a95e32d03a4df1274537704c80e41dd",
          "SHA256=3813c1aab1760acb963bcc10d6ea3fddc2976b9e291710756408de392bc9e5d5",
          "SHA256=f13f6a4bf7711216c9e911f18dfa2735222551fb1f8c1a645a8674c1983ccea6",
          "SHA256=3a65d14fd3b1b5981084cdbd293dc6f4558911ea18dd80177d1e5b54d85bcaa0",
          "SHA256=898e07cf276ec2090b3e7ca7c192cc0fa10d6f13d989ef1cb5826ca9ce25b289",
          "SHA256=834a3d755b5ae798561f8e5fbb18cf28dfcae7a111dc6a03967888e9d10f6d78",
          "SHA256=d15a0bc7a39bbeff10019496c1ed217b7c1b26da37b2bdd46820b35161ddb3c4",
          "SHA256=c9014b03866bf37faa8fdb16b6af7cfec976aaef179fd5797d0c0bf8079d3a8c",
          "SHA256=46621554728bc55438c7c241137af401250f062edef6e7efecf1a6f0f6d0c1f7",
          "SHA256=8001d7161d662a6f4afb4d17823144e042fd24696d8904380d48065209f28258",
          "SHA256=4b465faf013929edf2f605c8cd1ac7a278ddc9a536c4c34096965e6852cbfb51",
          "SHA256=1336469ec0711736e742b730d356af23f8139da6038979cfe4de282de1365d3b",
          "SHA256=65025741ecd0ef516da01319b42c2d96e13cb8d78de53fb7e39cd53ea6d58c75",
          "SHA256=c8eaa5e6d3230b93c126d2d58e32409e4aeeb23ccf0dd047a17f1ef552f92fe9",
          "SHA256=2b186926ed815d87eaf72759a69095a11274f5d13c33b8cc2b8700a1f020be1d",
          "SHA256=85fdd255c5d7add25fd7cd502221387a5e11f02144753890218dd31a8333a1a3",
          "SHA256=31e2e5c3290989e8624820cf5af886fd778ee8187fed593f33a6178f65103f37",
          "SHA256=1deae340bf619319adce00701de887f7434deab4d5547a1742aeedb5634d23c6",
          "SHA256=442c18aeb09556bb779b21185c4f7e152b892410429c123c86fc209a802bff3c",
          "SHA256=ebf0e56a1941e3a6583aab4a735f1b04d4750228c18666925945ed9d7c9007e1",
          "SHA256=53bd8e8d3542fcf02d09c34282ebf97aee9515ee6b9a01cefd81baa45c6fd3d6",
          "SHA256=f62911334068c9edd44b9c3e8dee8155a0097aa331dd4566a61afa3549f35f65",
          "SHA256=e61a54f6d3869b43c4eceac3016df73df67cce03878c5a6167166601c5d3f028",
          "SHA256=f929bead59e9424ab90427b379dcdd63fbfe0c4fb5e1792e3a1685541cd5ec65",
          "SHA256=dd573f23d656818036fc9ae1064eda31aca86acb9bc44a6e127db3ea112a9094",
          "SHA256=87e094214feb56a482cd8ae7ee7c7882b5a8dccce7947fdaa04a660fa19f41e5",
          "SHA256=c35cab244bd88bf0b1e7fc89c587d82763f66cf1108084713f867f72cc6f3633",
          "SHA256=78d49094913526340d8d0ef952e8fe9ada9e8b20726b77fb88c9fb5d54510663",
          "SHA256=436ccab6f62fa2d29827916e054ade7acae485b3de1d3e5c6c62d3debf1480e7",
          "SHA256=67734c7c0130dd66c964f76965f09a2290da4b14c94412c0056046e700654bdc",
          "SHA256=b1334a71cc73b3d0c54f62d8011bec330dfc355a239bf94a121f6e4c86a30a2e",
          "SHA256=be66f3bbfed7d648cfd110853ddb8cef561f94a45405afc6be06e846b697d2b0",
          "SHA256=7108613244f16c2279c3c917aa49cef8acf0b92fdaa9ace19bf5cf634360d727",
          "SHA256=bcfc2c9883e6c1b8429be44cc4db988a9eecb544988fbd756d18cfca6201876f",
          "SHA256=20e52e0d7f579dc6884cc6e80266fddceda69ea5fdd0b095c0874b0d877e48a2",
          "SHA256=6c64688444d3e004da77dcfb769d064bb38afceeef7ff915dfc71e60e19ff18a",
          "SHA256=ecd07df7ad6fee9269a9e9429eb199bf3e24cf672aa1d013b7e8d90d75324566",
          "SHA256=b3e645e8817696fa5d5e2255f9328f3b6a2e5fce91737f4d654ff155dc9851e5",
          "SHA256=3b7177e9a10c1392633c5f605600bb23c8629379f7f42957972374a05d4dc458",
          "SHA256=6c7120e40fc850e4715058b233f5ad4527d1084a909114fd6a36b7b7573c4a44",
          "SHA256=32cccc4f249499061c0afa18f534c825d01034a1f6815f5506bf4c4ff55d1351",
          "SHA256=31f4140c12ac31f5729a8de4dc051d3acd07783564604df831a2a6722c979192",
          "SHA256=d6801e845d380c809d0da8c7a5d3cd2faa382875ae72f5f7af667a34df25fbf7",
          "SHA256=e4658d93544f69f5cb9aa6d9fec420fecc8750cb57e1e9798da38c139d44f2eb",
          "SHA256=077aa8ff5e01747723b6d24cc8af460a7a00f30cd3bc80e41cc245ceb8305356",
          "SHA256=d330ab003206ce5e9828607562790aa8dd0453f6b7452f5c6053e3c6b6761d25",
          "SHA256=ad2477632b9b07588cfe0e692f244c05fa4202975c1fe91dd3b90fa911ac6058",
          "SHA256=91314768da140999e682d2a290d48b78bb25a35525ea12c1b1f9634d14602b2c",
          "SHA256=0ce40a2cdd3f45c7632b858e8089ddfdd12d9acb286f2015a4b1b0c0346a572c",
          "SHA256=5fe5a6f88fbbc85be9efe81204eee11dff1a683b426019d330b1276a3b5424f4",
          "SHA256=18e1707b319c279c7e0204074088cc39286007a1cf6cb6e269d5067d8d0628c6",
          "SHA256=a334bdf0c0ab07803380eb6ef83eefe7c147d6962595dd9c943a6a76f2200b0d",
          "SHA256=71ff60722231c7641ad593756108cf6779dbaad21c7b08065fb1d4e225eab14d",
          "SHA256=af298d940b186f922464d2ef19ccfc129c77126a4f337ecf357b4fe5162a477c",
          "SHA256=6001c6acae09d2a91f8773bbdfd52654c99bc672a9756dc4cb53dc2e3efeb097",
          "SHA256=818e396595d08d724666803cd29dac566dc7db23bf50e9919d04b33afa988c01",
          "SHA256=6befa481e8cca8084d9ec3a1925782cd3c28ef7a3e4384e034d48deaabb96b63",
          "SHA256=be683cd38e64280567c59f7dc0a45570abcb8a75f1d894853bbbd25675b4adf7",
          "SHA256=2288c418ddadd5a1db4e58c118d8455b01fd33728664408ce23b9346ae0ca057",
          "SHA256=42579a759f3f95f20a2c51d5ac2047a2662a2675b3fb9f46c1ed7f23393a0f00",
          "SHA256=64a8e00570c68574b091ebdd5734b87f544fa59b75a4377966c661d0475d69a5",
          "SHA256=7de1ce434f957df7bbdf6578dd0bf06ed1269f3cc182802d5c499f5570a85b3a",
          "SHA256=8b92cdb91a2e2fab3881d54f5862e723826b759749f837a11c9e9d85d52095a2",
          "SHA256=ea3c5569405ed02ec24298534a983bcb5de113c18bc3fd01a4dd0b5839cd17b9",
          "SHA256=f4e500a9ac5991da5bf114fa80e66456a2cde3458a3d41c14e127ac09240c114",
          "SHA256=8ed0c00920ce76e832701d45117ed00b12e20588cb6fe8039fbccdfef9841047",
          "SHA256=0584520b4b3bdad1d177329bd9952c0589b2a99eb9676cb324d1fce46dad0b9a",
          "SHA256=1b7fb154a7b7903a3c81f12f4b094f24a3c60a6a8cffca894c67c264ab7545fa",
          "SHA256=4cd80f4e33b713570f6a16b9f77679efa45a466737e41db45b41924e7d7caef4",
          "SHA256=a0e583bd88eb198558442f69a8bbfc96f4c5c297befea295138cfd2070f745c5",
          "SHA256=9bfd24947052bfe9f2979113a7941e40bd7e3a82eaa081a32ad4064159f07c91",
          "SHA256=38bb9751a3a1f072d518afe6921a66ee6d5cf6d25bc50af49e1925f20d75d4d7",
          "SHA256=d80714d87529bb0bc7abcc12d768c43a697fbca59741c38fa0b46900da4db30e",
          "SHA256=83f7be0a13c1fccf024c31da5c68c0ea1decf4f48fc39d6e4fd324bbe789ae8a",
          "SHA256=1f4d4db4abe26e765a33afb2501ac134d14cadeaa74ae8a0fae420e4ecf58e0c",
          "SHA256=ea85bbe63d6f66f7efee7007e770af820d57f914c7f179c5fee3ef2845f19c41",
          "SHA256=42851a01469ba97cdc38939b10cf9ea13237aa1f6c37b1ac84904c5a12a81fa0",
          "SHA256=1e9ec6b3e83055ae90f3664a083c46885c506d33de5e2a49f5f1189e89fa9f0a",
          "SHA256=a59c40e7470b7003e8adfee37c77606663e78d7e3f2ebb8d60910af19924d8df",
          "SHA256=2203bd4731a8fdc2a1c60e975fd79fd5985369e98a117df7ee43c528d3c85958",
          "SHA256=5f6547e9823f94c5b94af1fb69a967c4902f72b6e0c783804835e6ce27f887b0",
          "SHA256=47f08f7d30d824a8f4bb8a98916401a37c0fd8502db308aba91fe3112b892dcc",
          "SHA256=15c53eb3a0ea44bbd2901a45a6ebeae29bb123f9c1115c38dfb2cdbec0642229",
          "SHA256=d44848d3e845f8293974e8b621b72a61ec00c8d3cf95fcf41698bbbd4bdf5565",
          "SHA256=f15ae970e222ce06dbf3752b223270d0e726fb78ebec3598b4f8225b5a0880b1",
          "SHA256=a5a50449e2cc4d0dbc80496f757935ae38bf8a1bebdd6555a3495d8c219df2ad",
          "SHA256=37c637a74bf20d7630281581a8fae124200920df11ad7cd68c14c26cc12c5ec9",
          "SHA256=a97b404aae301048e0600693457c3320d33f395e9312938831bc5a0e808f2e67",
          "SHA256=d45600f3015a54fa2c9baa7897edbd821aeea2532e6aadb8065415ed0a23d0c2",
          "SHA256=c64d4ac416363c7a1aa828929544d1c1d78cf032b39769943b851cfc4c0faafc",
          "SHA256=c725919e6357126d512c638f993cf572112f323da359645e4088f789eb4c7b8c",
          "SHA256=69e3fda487a5ec2ec0f67b7d79a5a836ff0036497b2d1aec514c67d2efa789b2",
          "SHA256=55fee54c0d0d873724864dc0b2a10b38b7f40300ee9cae4d9baaf8a202c4049a",
          "SHA256=d1463b7fec911c10a8c96d84eb7c0f9e95fa488d826647a591a38c0593f812a4",
          "SHA256=2a652de6b680d5ad92376ad323021850dab2c653abf06edf26120f7714b8e08a",
          "SHA256=c35f3a9da8e81e75642af20103240618b641d39724f9df438bf0f361122876b0",
          "SHA256=ae5cc99f3c61c86c7624b064fd188262e0160645c1676d231516bf4e716a22d3",
          "SHA256=6cb51ae871fbd5d07c5aad6ff8eea43d34063089528603ca9ceb8b4f52f68ddc",
          "SHA256=f40435488389b4fb3b945ca21a8325a51e1b5f80f045ab019748d0ec66056a8b",
          "SHA256=7aaf2aa194b936e48bc90f01ee854768c8383c0be50cfb41b346666aec0cf853",
          "SHA256=6f1fc8287dd8d724972d7a165683f2b2ad6837e16f09fe292714e8e38ecd1e38",
          "SHA256=950a4c0c772021cee26011a92194f0e58d61588f77f2873aa0599dff52a160c9",
          "SHA256=3f3684a37b2645fa6827943d9812ffc2d83e89e962935b29874bec7c3714a06f",
          "SHA256=7fc01f25c4c18a6c539cda38fdbf34b2ff02a15ffd1d93a7215e1f48f76fb3be",
          "SHA256=6b71b7f86e41540a82d7750a698e0386b74f52962b879cbb46f17935183cd2c7",
          "SHA256=18f306b6edcfacd33b7b244eaecdd0986ef342f0d381158844d1f0ee1ac5c8d7",
          "SHA256=99f4994a0e5bd1bf6e3f637d3225c69ff4cd620557e23637533e7f18d7d6cba1",
          "SHA256=7cb497abc44aad09a38160d6a071db499e05ff5871802ccc45d565d242026ee7",
          "SHA256=88992ddcb9aaedb8bfcc9b4354138d1f7b0d7dddb9e7fcc28590f27824bee5c3",
          "SHA256=4da08c0681fbe028b60a1eaf5cb8890bd3eba4d0e6a8b976495ddcd315e147ba",
          "SHA256=bda99629ec6c522c3efcbcc9ca33688d31903146f05b37d0d3b43db81bfb3961",
          "SHA256=46d1dc89cc5fa327e7adf3e3d6d498657240772b85548c17d2e356aac193dd28",
          "SHA256=73c03b01d5d1eb03ec5cb5a443714b12fa095cc4b09ddc34671a92117ae4bb3a",
          "SHA256=f37d609ea1f06660d970415dd3916c4c153bb5940bf7d2beb47fa34e8a8ffbfc",
          "SHA256=bc13adeb6bf62b1e10ef41205ef92382e6c18d6a20669d288a0b11058e533d63",
          "SHA256=da11e9598eef033722b97873d1c046270dd039d0e3ee6cd37911e2dc2eb2608d",
          "SHA256=922d23999a59ce0d84b479170fd265650bc7fae9e7d41bf550d8597f472a3832",
          "SHA256=8fe9828bea83adc8b1429394db7a556a17f79846ad0bfb7f242084a5c96edf2a",
          "SHA256=bb0742036c82709e02f25f98a9ff37c36a8c228bcaa98e40629fac8cde95b421",
          "SHA256=7227377a47204f8e2ff167eee54b4b3545c0a19e3727f0ec59974e1a904f4a96",
          "SHA256=6071db01b50c658cf78665c24f1d21f21b4a12d16bfcfaa6813bf6bbc4d0a1e8",
          "SHA256=49ed27460730b62403c1d2e4930573121ab0c86c442854bc0a62415ca445a810",
          "SHA256=1fac3fab8ea2137a7e81a26de121187bf72e7d16ffa3e9aec3886e2376d3c718",
          "SHA256=11a4b08e70ebc25a1d4c35ed0f8ef576c1424c52b580115b26149bd224ffc768",
          "SHA256=6e0aa67cfdbe27a059cbd066443337f81c5b6d37444d14792d1c765d9d122dcf",
          "SHA256=5449e4dd1b75a7d52922c30baeca0ca8e32fe2210d1e72af2a2f314a5c2268fb",
          "SHA256=54488a8c7da53222f25b6ed74b0dedc55d00f5fa80f4eaf6daac28f7c3528876",
          "SHA256=98ec7cc994d26699f5d26103a0aeb361128cff3c2c4d624fc99126540e23e97e",
          "SHA256=65008817eb97635826a8708a6411d7b50f762bab81304e457119d669382944c3",
          "SHA256=f596e64f4c5d7c37a00493728d8756b243cfdc11e3372d6d6dfeffc13c9ab960",
          "SHA256=de8f8006d8ee429b5f333503defa54b25447f4ed6aeade5e4219e23f3473ef1c",
          "SHA256=b1d96233235a62dbb21b8dbe2d1ae333199669f67664b107bff1ad49b41d9414",
          "SHA256=4ab41816abbf14d59e75b7fad49e2cb1c1feb27a3cb27402297a2a4793ff9da7",
          "SHA256=9f1229cd8dd9092c27a01f5d56e3c0d59c2bb9f0139abf042e56f343637fda33",
          "SHA256=b47be212352d407d0ef7458a7161c66b47c2aec8391dd101df11e65728337a6a",
          "SHA256=1cedd5815bb6e20d3697103cfc0275f5015f469e6007e8cac16892c97731c695",
          "SHA256=01e024cb14b34b6d525c642a710bfa14497ea20fd287c39ba404b10a8b143ece",
          "SHA256=b0dcdbdc62949c981c4fc04ccea64be008676d23506fc05637d9686151a4b77f",
          "SHA256=7a2cd1dc110d014165c001ce65578da0c0c8d7d41cc1fa44f974e8a82296fc25",
          "SHA256=6f806a9de79ac2886613c20758546f7e9597db5a20744f7dd82d310b7d6457d0",
          "SHA256=f84f8173242b95f9f3c4fea99b5555b33f9ce37ca8188b643871d261cb081496",
          "SHA256=2d2c7ee9547738a8a676ab785c151e8b48ed40fe7cf6174650814c7f5f58513b",
          "SHA256=0fc0644085f956706ea892563309ba72f0986b7a3d4aa9ae81c1fa1c35e3e2d3",
          "SHA256=ad8fd8300ed375e22463cea8767f68857d9a3b0ff8585fbeb60acef89bf4a7d7",
          "SHA256=a7860e110f7a292d621006b7208a634504fb5be417fd71e219060381b9a891e6",
          "SHA256=2f60536b25ba8c9014e4a57d7a9a681bd3189fa414eea88c256d029750e15cae",
          "SHA256=b583414fcee280128788f7b39451c511376fe821f455d4f3702795e96d560704",
          "SHA256=63af3fdb1e85949c8adccb43f09ca4556ae258b363a99ae599e1e834d34c8670",
          "SHA256=4880f40f2e557cff38100620b9aa1a3a753cb693af16cd3d95841583edcb57a8",
          "SHA256=3cb75429944e60f6c820c7638adbf688883ad44951bca3f8912428afe72bc134",
          "SHA256=131d5490ceb9a5b2324d8e927fea5becfc633015661de2f4c2f2375a3a3b64c6",
          "SHA256=e0cb07a0624ddfacaa882af49e3783ae02c9fbd0ab232541a05a95b4a8abd8ef",
          "SHA256=8c748ae5dcc10614cc134064c99367d28f3131d1f1dda0c9c29e99279dc1bdd9",
          "SHA256=b9a4e40a5d80fedd1037eaed958f9f9efed41eb01ada73d51b5dcd86e27e0cbf",
          "SHA256=d0e25b879d830e4f867b09d6540a664b6f88bad353cd14494c33b31a8091f605",
          "SHA256=ba40b1fc798c2f78165e78997b4baf3d99858ee39a372ca6fbc303057793e50d",
          "SHA256=76660e91f1ff3cb89630df5af4fe09de6098d09baa66b1a130c89c3c5edd5b22",
          "SHA256=0e8595217f4457757bed0e3cdea25ea70429732b173bba999f02dc85c7e06d02",
          "SHA256=c8926e31be2d1355e542793af8ff9ccc4d1d60cae40c9564b2400dd4e1090bda",
          "SHA256=3384f4a892f7aa72c43280ff682d85c8e3936f37a68d978d307a9461149192de",
          "SHA256=0a89a6ab2fca486480b6e3dacf392d6ce0c59a5bdb4bcd18d672feb4ebb0543c",
          "SHA256=dee384604d2d0018473941acbefe553711ded7344a4932daeffb876fe2fa0233",
          "SHA256=478d855b648ef4501d3b08b3b10e94076ac67546b0ce86b454324f1bf9a78aa0",
          "SHA256=423f052690b6b523502931151dfcc63530e3bd9d79680f9b5ac033b23b5c6f18",
          "SHA256=f8886a9c759e0426e08d55e410b02c5b05af3c287b15970175e4874316ffaf13",
          "SHA256=ae71f40f06edda422efcd16f3a48f5b795b34dd6d9bb19c9c8f2e083f0850eb7",
          "SHA256=7cc9ba2df7b9ea6bb17ee342898edd7f54703b93b6ded6a819e83a7ee9f938b4",
          "SHA256=cdfbe62ef515546f1728189260d0bdf77167063b6dbb77f1db6ed8b61145a2bc",
          "SHA256=a855b6ec385b3369c547a3c54e88a013dd028865aba0f3f08be84cdcbaa9a0f6",
          "SHA256=d59cc3765a2a9fa510273dded5a9f9ac5190f1edf24a00ffd6a1bbd1cb34c757",
          "SHA256=11832c345e9898c4f74d3bf8f126cf84b4b1a66ad36135e15d103dbf2ac17359",
          "SHA256=1a450ae0c9258ab0ae64f126f876b5feed63498db729ec61d06ed280e6c46f67",
          "SHA256=2695390a8a7448390fe383beb1eee06d582202683f0273d6e72ef39a8cf709e1",
          "SHA256=ffd1aef19646ffed09b56a2ace4fc8cdf5b2f714fcca1e7ffb82256264c94b18",
          "SHA256=2101d5e80e92c55ecfd8c24fcf2202a206a4fd70195a1378f88c4cc04d336f22",
          "SHA256=b9e0c2a569ab02742fa3a37846310a1d4e46ba2bfd4f80e16f00865fc62690cb",
          "SHA256=19696fb0db3fcae22f705ae1eb1e9f1151c823f3ff5d8857e90f2a4a6fdc5758",
          "SHA256=ff9623317287358440ec67da9ba79994d9b17b99ffdd709ec836478fe1fc22a5",
          "SHA256=a188760f1bf36584a2720014ca982252c6bcd824e7619a98580e28be6090dccc",
          "SHA256=442f12adebf7cb166b19e8aead2b0440450fd1f33f5db384a39776bb2656474a",
          "SHA256=58a74dceb2022cd8a358b92acd1b48a5e01c524c3b0195d7033e4bd55eff4495",
          "SHA256=600a2119657973112025db3c0eeab2e69d528bccfeed75f40c6ef50b059ec8a0",
          "SHA256=0f30ecd4faec147a2335a4fc031c8a1ac9310c35339ebeb651eb1429421951a0",
          "SHA256=94c226a530dd3cd8d911901f702f3dab8200d1d4fdc73fcb269f7001f4e66915",
          "SHA256=175eed7a4c6de9c3156c7ae16ae85c554959ec350f1c8aaa6dfe8c7e99de3347",
          "SHA256=47c490cc83a17ff36a1a92e08d63e76edffba49c9577865315a6c9be6ba80a7d",
          "SHA256=a66b4420fa1df81a517e2bbea1a414b57721c67a4aa1df1967894f77e81d036e",
          "SHA256=c6a5663f20e5cee2c92dee43a0f2868fb0af299f842410f4473dcde7abcb6413",
          "SHA256=082d4d4d4ba1bda5e1599bd24e930ae9f000e7d12b00f7021cca90a4600ea470",
          "SHA256=84739539aa6a9c9cb3c48c53f9399742883f17f24e081ebfa7bfaaf59f3ed451",
          "SHA256=64dddd5ac53fe2c9de2b317c09034d1bccaf21d6c03ccfde3518e5aa3623dd66",
          "SHA256=a899b659b08fbae30b182443be8ffb6a6471c1d0497b52293061754886a937a3",
          "SHA256=2a6212f3b68a6f263e96420b3607b31cfdfe51afff516f3c87d27bf8a89721e8",
          "SHA256=bb50818a07b0eb1bd317467139b7eb4bad6cd89053fecdabfeae111689825955",
          "SHA256=9399f35b90f09b41f9eeda55c8e37f6d1cb22de6e224e54567d1f0865a718727",
          "SHA256=7196187fb1ef8d108b380d37b2af8efdeb3ca1f6eefd37b5dc114c609147216d",
          "SHA256=96df0b01eeba3e6e50759d400df380db27f0d0e34812d0374d22ac1758230452",
          "SHA256=df4c02beb039d15ff0c691bbc3595c9edfc1d24e783c8538a859bc5ea537188d",
          "SHA256=3c95ebf3f1a87f67d2861dbd1c85dc26c118610af0c9fbf4180428e653ac3e50",
          "SHA256=119c48b79735fda0ecd973d77d9bdc6b329960caed09b38ab454236ca039d280",
          "SHA256=3c5d7069f85ec1d6f58147431f88c4d7c48df73baf94ffdefd664f2606baf09c",
          "SHA256=0c42fe45ffa9a9c36c87a7f01510a077da6340ffd86bf8509f02c6939da133c5",
          "SHA256=cf3a7d4285d65bf8688215407bce1b51d7c6b22497f09021f0fce31cbeb78986",
          "SHA256=41765151df57125286b398cc107ff8007972f4653527f876d133dac1548865d6",
          "SHA256=f877296e8506e6a1acbdacdc5085b18c6842320a2775a329d286bac796f08d54",
          "SHA256=d884ca8cc4ef1826ca3ab03eb3c2d8f356ba25f2d20db0a7d9fc251c565be7f3",
          "SHA256=453be8f63cc6b116e2049659e081d896491cf1a426e3d5f029f98146a3f44233",
          "SHA256=7c0f77d103015fc29379ba75d133dc3450d557b0ba1f7495c6b43447abdae230",
          "SHA256=39336e2ce105901ab65021d6fdc3932d3d6aab665fe4bd55aa1aa66eb0de32f0",
          "SHA256=910aa4685c735d8c07662aa04fafec463185699ad1a0cd1967b892fc33ec6c3c",
          "SHA256=6d2cc7e1d95bb752d79613d0ea287ea48a63fb643dcb88c12b516055da56a11d",
          "SHA256=89b0017bc30cc026e32b758c66a1af88bd54c6a78e11ec2908ff854e00ac46be",
          "SHA256=05c15a75d183301382a082f6d76bf3ab4c520bf158abca4433d9881134461686",
          "SHA256=a6c05b10a5c090b743a61fa225b09e390e2dd2bd6cb4fd96b987f1e0d3f2124a",
          "SHA256=ce231637422709d927fb6fa0c4f2215b9c0e3ebbd951fb2fa97b8e64da479b96",
          "SHA256=26ecd3cea139218120a9f168c8c0c3b856e0dd8fb2205c2a4bcb398f5f35d8dd",
          "SHA256=ec1307356828426d60eab78ffb5fc48a06a389dea6e7cc13621f1fa82858a613",
          "SHA256=fed0fe2489ae807913be33827b3b11359652a127e33b64464cc570c05abd0d17",
          "SHA256=37d999df20c1a0b8ffaef9484c213a97b9987ed308b4ba07316a6013fbd31c60",
          "SHA256=72c0d2d699d0440db17cb7cbbc06a253eaafd21465f14bb0fed8b85ae73153d1",
          "SHA256=49329fa09f584d1960b09c1b15df18c0bc1c4fdb90bf48b6b5703e872040b668",
          "SHA256=9dab4b6fddc8e1ec0a186aa8382b184a5d52cfcabaaf04ff9e3767021eb09cf4",
          "SHA256=b1e4455499c6a90ba9a861120a015a6b6f17e64479462b869ad0f05edf6552de",
          "SHA256=8cb62c5d41148de416014f80bd1fd033fd4d2bd504cb05b90eeb6992a382d58f",
          "SHA256=0aafa9f47acf69d46c9542985994ff5321f00842a28df2396d4a3076776a83cb",
          "SHA256=50aa2b3a762abb1306fa003c60de3c78e89ea5d29aab8a9c6479792d2be3c2d7",
          "SHA256=b9b3878ddc5dfb237d38f8d25067267870afd67d12a330397a8853209c4d889c",
          "SHA256=6c6c5e35accc37c928d721c800476ccf4c4b5b06a1b0906dc5ff4df71ff50943",
          "SHA256=61e7f9a91ef25529d85b22c39e830078b96f40b94d00756595dded9d1a8f6629",
          "SHA256=2ef7df384e93951893b65500dac6ee09da6b8fe9128326caad41b8be4da49a1e",
          "SHA256=d998ea6d0051e17c1387c9f295b1c79bacb2f61c23809903445f60313d36c7fd",
          "SHA256=8ef0ad86500094e8fa3d9e7d53163aa6feef67c09575c169873c494ed66f057f",
          "SHA256=7ec93f34eb323823eb199fbf8d06219086d517d0e8f4b9e348d7afd41ec9fd5d",
          "SHA256=e5b0772be02e2bc807804874cf669e97aa36f5aff1f12fa0a631a3c7b4dd0dc8",
          "SHA256=29a90ae1dcee66335ece4287a06482716530509912be863c85a2a03a6450a5b6",
          "SHA256=0909005d625866ef8ccd8ae8af5745a469f4f70561b644d6e38b80bccb53eb06",
          "SHA256=ed3448152bcacf20d7c33e9194c89d5304dee3fba16034dd0cc03a3374e63c91",
          "SHA256=0cf84400c09582ee2911a5b1582332c992d1cd29fcf811cb1dc00fcd61757db0",
          "SHA256=b1920889466cd5054e3ab6433a618e76c6671c3e806af8b3084c77c0e7648cbe",
          "SHA256=28999af32b55ddb7dcfc26376a244aa2fe297233ce7abe4919a1aef2f7e2cee7",
          "SHA256=adc10de960f40fa9f6e28449748250fa9ddfd331115b77a79809a50c606753ee",
          "SHA256=48b1344e45e4de4dfb74ef918af5e0e403001c9061018e703261bbd72dc30548",
          "SHA256=87b4c5b7f653b47c9c3bed833f4d65648db22481e9fc54aa4a8c6549fa31712b",
          "SHA256=54bf602a6f1baaec5809a630a5c33f76f1c3147e4b05cecf17b96a93b1d41dca",
          "SHA256=dec8a933dba04463ed9bb7d53338ff87f2c23cfb79e0e988449fc631252c9dcc",
          "SHA256=b4d47ea790920a4531e3df5a4b4b0721b7fea6b49a35679f0652f1e590422602",
          "SHA256=df0dcfb3971829af79629efd036b8e1c6e2127481b3644ccc6e2ddd387489a15",
          "SHA256=fded693528f7e6ac1af253e0bd2726607308fdaa904f1e7242ed44e1c0b29ae8",
          "SHA256=45f42c5d874369d6be270ea27a5511efcca512aeac7977f83a51b7c4dee6b5ef",
          "SHA256=7e0124fcc7c95fdc34408cf154cb41e654dade8b898c71ad587b2090b1da30d7",
          "SHA256=3d9e83b189fcf5c3541c62d1f54a0da0a4e5b62c3243d2989afc46644056c8e3",
          "SHA256=8edab185e765f9806fa57153db1ede00e68270d2351443ee1de30674eca8d9b6",
          "SHA256=52a90fd1546c068b92add52c29fbb8a87d472a57e609146bbcb34862f9dcec15",
          "SHA256=8b688dd055ead2c915a139598c8db7962b42cb6e744eaacfcb338c093fc1f4e7",
          "SHA256=c08581e3e444849729c5b956d0d6030080553d0bc6e5ae7e9a348d45617b9746",
          "SHA256=77da3e8c5d70978b287d433ae1e1236c895b530a8e1475a9a190cdcc06711d2f",
          "SHA256=64f9e664bc6d4b8f5f68616dd50ae819c3e60452efd5e589d6604b9356841b57",
          "SHA256=3c0a36990f7eef89b2d5f454b6452b6df1304609903f31f475502e4050241dd8",
          "SHA256=8cfd5b2102fbc77018c7fe6019ec15f07da497f6d73c32a31f4ba07e67ec85d9",
          "SHA256=5a0b10a9e662a0b0eeb951ffd2a82cc71d30939a78daebd26b3f58bb24351ac9",
          "SHA256=c7079033659ac9459b3b7ab2510805832db2e2a70fe9beb1a6e13c1f51890d88",
          "SHA256=bbbeb5020b58e6942ec7dec0d1d518e95fc12ddae43f54ef0829d3393c6afd63",
          "SHA256=38535a0e9fc0684308eb5d6aa6284669bc9743f11cb605b79883b8c13ef906ad",
          "SHA256=65deb5dca18ee846e7272894f74d84d9391bbe260c22f24a65ab37d48bd85377",
          "SHA256=7f5dc63e5742096e4accaca39ae77a2a2142b438c10f97860dee4054b51d3b35",
          "SHA256=263e8f1e20612849aea95272da85773f577fd962a7a6d525b53f43407aa7ad24",
          "SHA256=f0605dda1def240dc7e14efa73927d6c6d89988c01ea8647b671667b2b167008",
          "SHA256=bc453d428fc224960fa8cbbaf90c86ce9b4c8c30916ad56e525ab19b6516424e",
          "SHA256=df96d844b967d404e58a12fc57487abc24cd3bd1f8417acfe1ce1ee4a0b0b858",
          "SHA256=1d0397c263d51e9fc95bcc8baf98d1a853e1c0401cd0e27c7bf5da3fba1c93a8",
          "SHA256=159dcf37dc723d6db2bad46ed6a1b0e31d72390ec298a5413c7be318aef4a241",
          "SHA256=d6827cd3a8f273a66ecc33bb915df6c7dea5cc1b8134b0c348303ef50db33476",
          "SHA256=cbf74bed1a4d3d5819b7c50e9d91e5760db1562d8032122edac6f0970f427183",
          "SHA256=2b188ae51ec3be082e4d08f7483777ec5e66d30e393a4e9b5b9dc9af93d1f09b",
          "SHA256=033c4634ab1a43bc3247384864f3380401d3b4006a383312193799dded0de4c7",
          "SHA256=0ebaef662b14410c198395b13347e1d175334ec67919709ad37d65eba013adff",
          "SHA256=1228d0b6b4f907384346f64e918cc28021fe1cd7d4e39687bca34a708998261a",
          "SHA256=2d83ccb1ad9839c9f5b3f10b1f856177df1594c66cbbc7661677d4b462ebf44d",
          "SHA256=ae42afa9be9aa6f6a5ae09fa9c05cd2dfb7861dc72d4fd8e0130e5843756c471",
          "SHA256=2121a2bb8ebbf2e6e82c782b6f3c6b7904f686aa495def25cf1cf52a42e16109",
          "SHA256=368a9c2b6f12adbe2ba65181fb96f8b0d2241e4eae9f3ce3e20e50c3a3cc9aa1",
          "SHA256=070ff602cccaaef9e2b094e03983fd7f1bf0c0326612eb76593eabbf1bda9103",
          "SHA256=89108a15f009b285db4ef94250b889d5b11b96b4aa7b190784a6d1396e893e10",
          "SHA256=4744df6ac02ff0a3f9ad0bf47b15854bbebb73c936dd02f7c79293a2828406f6",
          "SHA256=f77fe6b1e0e913ac109335a8fa2ac4961d35cbbd50729936059aba8700690a9e",
          "SHA256=dd4a1253d47de14ef83f1bc8b40816a86ccf90d1e624c5adf9203ae9d51d4097",
          "SHA256=7f190f6e5ab0edafd63391506c2360230af4c2d56c45fc8996a168a1fc12d457",
          "SHA256=5bf3985644308662ebfa2fbcc11fb4d3e2a0c817ad3da1a791020f8c8589ebc8",
          "SHA256=a19fc837ca342d2db43ee8ad7290df48a1b8b85996c58a19ca3530101862a804",
          "SHA256=f8430bdc6fd01f42217d66d87a3ef6f66cb2700ebb39c4f25c8b851858cc4b35",
          "SHA256=3e1d47a497babbfd1c83905777b517ec87c65742bee7eb57a2273eca825d2272",
          "SHA256=ed2f33452ec32830ffef2d5dc832985db9600c306ed890c47f3f33ccbb335c39",
          "SHA256=3390919bb28d5c36cc348f9ef23be5fa49bfd81263eb7740826e4437cbe904cd",
          "SHA256=39cfde7d401efce4f550e0a9461f5fc4d71fa07235e1336e4f0b4882bd76550e",
          "SHA256=29e0062a017a93b2f2f5207a608a96df4d554c5de976bd0276c2590a03bd3e94",
          "SHA256=0ae8d1dd56a8a000ced74a627052933d2e9bff31d251de185b3c0c5fc94a44db",
          "SHA256=2b120de80a5462f8395cfb7153c86dfd44f29f0776ea156ec4a34fa64e5c4797",
          "SHA256=d5586dc1e61796a9ae5e5d1ced397874753056c3df2eb963a8916287e1929a71",
          "SHA256=6945077a6846af3e4e2f6a2f533702f57e993c5b156b6965a552d6a5d63b7402",
          "SHA256=2298e838e3c015aedfb83ab18194a2503fe5764a862c294c8b39c550aab2f08e",
          "SHA256=61befeef14783eb0fed679fca179d2f5c33eb2dcbd40980669ca2ebeb3bf11cf",
          "SHA256=767ef5c831f92d92f2bfc3e6ea7fd76d11999eeea24cb464fd62e73132ed564b",
          "SHA256=dba8db472e51edd59f0bbaf4e09df71613d4dd26fd05f14a9bc7e3fc217a78aa",
          "SHA256=f85784fa8e7a7ec86cb3fe76435802f6bb82256e1824ed7b5d61bf075f054573",
          "SHA256=797c1f883d90d25e7fd553624bb16bfd5db24c2658aa0c3c51c715d5833c10fd",
          "SHA256=591bd5e92dfa0117b3daa29750e73e2db25baa717c31217539d30ffb1f7f3a52",
          "SHA256=cfc5c585dd4e592dd1a08887ded28b92d9a5820587b6f4f8fa4f56d60289259b",
          "SHA256=0296e2ce999e67c76352613a718e11516fe1b0efc3ffdb8918fc999dd76a73a5",
          "SHA256=8f68ca89910ebe9da3d02ec82d935de1814d79c44f36cd30ea02fa49ae488f00",
          "SHA256=d9a3dc47699949c8ec0c704346fb2ee86ff9010daa0dbac953cfa5f76b52fcd1",
          "SHA256=15fb486b6b8c2a2f1b067f48fba10c2f164638fe5e6cee618fb84463578ecac9",
          "SHA256=572c545b5a95d3f4d8c9808ebeff23f3c62ed41910eb162343dd5338e2d6b0b4",
          "SHA256=65c26276cadda7a36f8977d1d01120edb5c3418be2317d501761092d5f9916c9",
          "SHA256=af1011c76a22af7be97a0b3e0ce11aca0509820c59fa7c8eeaaa1b2c0225f75a",
          "SHA256=91afa3de4b70ee26a4be68587d58b154c7b32b50b504ff0dc0babc4eb56578f4",
          "SHA256=5de78cf5f0b1b09e7145db84e91a2223c3ed4d83cceb3ef073c068cf88b9d444",
          "SHA256=7c731c0ea7f28671ab7787800db69739ea5cd6be16ea21045b4580cf95cbf73b",
          "SHA256=ada4e42bf5ef58ef1aad94435441003b1cc1fcaa5d38bfdbe1a3d736dc451d47",
          "SHA256=76fb4deaee57ef30e56c382c92abffe2cf616d08dbecb3368c8ee6b02e59f303",
          "SHA256=40da0adf588cbb2841a657239d92f24b111d62b173204b8102dd0e014932fe59",
          "SHA256=7277130afa0b1506998d7bc58567b0d83f52a27175f4c7c4a7186347095fceed",
          "SHA256=6c5c6c350c8dd4ca90a8cca0ed1eeca185ebc67b1100935c8f03eb3032aca388",
          "SHA256=862d0ff27bb086145a33b9261142838651b0d2e1403be321145e197600eb5015",
          "SHA256=775000c4083c8e4dcfc879d83fcd27b40b46820c9834ae4662861386a4d81fe9",
          "SHA256=125e4475a5437634cab529da9ea2ef0f4f65f89fb25a06349d731f283c27d9fe",
          "SHA256=8e88cb80328c3dbaa2752591692e74a2fae7e146d7d8aabc9b9ac9a6fe561e6c",
          "SHA256=08828990218ebb4415c1bb33fa2b0a009efd0784b18b3f7ecd3bc078343f7208",
          "SHA256=2e665962c827ce0adbd29fe6bcf09bbb1d7a7022075d162ff9b65d0af9794ac0",
          "SHA256=e51ec2876af3c9c3f1563987a9a35a10f091ea25ede16b1a34ba2648c53e9dfc",
          "SHA256=26e3bfef255efd052a84c3c43994c73222b14c95db9a4b1fc2e98f1a5cb26e43",
          "SHA256=deecbcd260849178de421d8e2f177dce5c63cf67a48abb23a0e3cf3aa3e00578",
          "SHA256=1f15fd9b81092a98fabcc4ac95e45cec2d9ff3874d2e3faac482f3e86edad441",
          "SHA256=dd0bd7b8fae8e8835ba09118a02a06a51e111fccbe16916414844aab91cfeed4",
          "SHA256=17942865680bd3d6e6633c90cc4bd692ae0951a8589dbe103c1e293b3067344d",
          "SHA256=3243aab18e273a9b9c4280a57aecef278e10bfff19abb260d7a7820e41739099",
          "SHA256=fc22977ff721b3d718b71c42440ee2d8a144f3fbc7755e4331ddd5bcc65158d2",
          "SHA256=909de5f21837ea2b13fdc4e5763589e6bdedb903f7c04e1d0b08776639774880",
          "SHA256=db0d425708ba908aedf5f8762d6fdca7636ae3a537372889446176c0237a2836",
          "SHA256=ecfc52a22e4a41bf53865b0e28309411c60af34a44e31a5c53cdc8c5733e8282",
          "SHA256=1b00d6e5d40b1b84ca63da0e99246574cdd2a533122bc83746f06c0d66e63a6e",
          "SHA256=30706f110725199e338e9cc1c940d9a644d19a14f0eb8847712cba4cacda67ab",
          "SHA256=7f84f009704bc36f0e97c7be3de90648a5e7c21b4f870e4f210514d4418079a0",
          "SHA256=cb9890d4e303a4c03095d7bc176c42dee1b47d8aa58e2f442ec1514c8f9e3cec",
          "SHA256=19d0fc91b70d7a719f7a28b4ad929f114bf1de94a4c7cba5ad821285a4485da0",
          "SHA256=3d8cfc9abea6d83dfea6da03260ff81be3b7b304321274f696ff0fdb9920c645",
          "SHA256=58c071cfe72e9ee867bba85cbd0abe72eb223d27978d6f0650d0103553839b59",
          "SHA256=34e0364a4952d914f23f271d36e11161fb6bb7b64aea22ff965a967825a4a4bf",
          "SHA256=07af8c5659ad293214364789df270c0e6d03d90f4f4495da76abc2d534c64d88",
          "SHA256=423d58265b22504f512a84faf787c1af17c44445ae68f7adcaa68b6f970e7bd5",
          "SHA256=f4ff679066269392f6b7c3ba6257fc60dd609e4f9c491b00e1a16e4c405b0b9b",
          "SHA256=ef1abc77f4000e68d5190f9e11025ea3dc1e6132103d4c3678e15a678de09f33",
          "SHA256=1afa03118f87b62c59a97617e595ebb26dde8dbdd16ee47ef3ddd1097c30ef6a",
          "SHA256=270547552060c6f4f5b2ebd57a636d5e71d5f8a9d4305c2b0fe5db0aa2f389cc",
          "SHA256=cfcf32f5662791f1f22a77acb6dddfbc970fe6e99506969b3ea67c03f67687ab",
          "SHA256=fa21e3d2bfb9fafddec0488852377fbb2dbdd6c066ca05bb5c4b6aa840fb7879",
          "SHA256=5b3705b47dc15f2b61ca3821b883b9cd114d83fcc3344d11eb1d3df495d75abe",
          "SHA256=31f4cfb4c71da44120752721103a16512444c13c2ac2d857a7e6f13cb679b427",
          "SHA256=7c79e5196c2f51d2ab16e40b9d5725a8bf6ae0aaa70b02377aedc0f4e93ca37f",
          "SHA256=09043c51719d4bf6405c9a7a292bb9bb3bcc782f639b708ddcc4eedb5e5c9ce9",
          "SHA256=9a95a70f68144980f2d684e96c79bdc93ebca1587f46afae6962478631e85d0c",
          "SHA256=d7c90cf3fdbbd2f40fe6a39ad0bb2a9a97a0416354ea84db3aeff6d925d14df8",
          "SHA256=2aa1b08f47fbb1e2bd2e4a492f5d616968e703e1359a921f62b38b8e4662f0c4",
          "SHA256=9ee33ffd80611a13779df6286c1e04d3c151f1e2f65e3d664a08997fcd098ef3",
          "SHA256=358ac54be252673841a1d65bfc2fb6d549c1a4c877fa7f5e1bfa188f30375d69",
          "SHA256=26c28746e947389856543837aa59a5b1f4697e5721a04d00aa28151a2659b097",
          "SHA256=4ec7af309a9359c332d300861655faeceb68bb1cd836dd66d10dd4fac9c01a28",
          "SHA256=1284a1462a5270833ec7719f768cdb381e7d0a9c475041f9f3c74fa8eea83590",
          "SHA256=defde359045213ae6ae278e2a92c5b4a46a74119902364c7957a38138e9c9bbd",
          "SHA256=4429f32db1cc70567919d7d47b844a91cf1329a6cd116f582305f3b7b60cd60b",
          "SHA256=d0e4d3e1f5d5942aaf2c72631e9490eecc4d295ee78c323d8fe05092e5b788eb",
          "SHA256=9fc29480407e5179aa8ea41682409b4ea33f1a42026277613d6484e5419de374",
          "SHA256=e7b79fe1377b3da749590c080d4d96e59e622b1013b2183b98c81baa8bf2fffe",
          "SHA256=a6c11d3bec2a94c40933ec1d3604cfe87617ba828b14f4cded6cfe85656debc0",
          "SHA256=47eaebc920ccf99e09fc9924feb6b19b8a28589f52783327067c9b09754b5e84",
          "SHA256=525d9b51a80ca0cd4c5889a96f857e73f3a80da1ffbae59851e0f51bdfb0b6cd",
          "SHA256=4ed2d2c1b00e87b926fb58b4ea43d2db35e5912975f4400aa7bd9f8c239d08b7",
          "SHA256=bd3cf8b9af255b5d4735782d3653be38578ff5be18846b13d05867a6159aaa53",
          "SHA256=84c5f6ddd9c90de873236205b59921caabb57ac6f7a506abbe2ce188833bbe51",
          "SHA256=32e1a8513eee746d17eb5402fb9d8ff9507fb6e1238e7ff06f7a5c50ff3df993",
          "SHA256=e34afe0a8c5459d13e7a11f20d62c7762b2a55613aaf6dbeb887e014b5f19295",
          "SHA256=d8fc8e3a1348393c5d7c3a84bcbae383d85a4721a751ad7afac5428e5e579b4e",
          "SHA256=0e9072759433abf3304667b332354e0c635964ff930de034294bf13d40da2a6f",
          "SHA256=0cfb7ea2cc515a7fe913ab3619cbfcf1ca96d8cf72dc350905634a5782907a49",
          "SHA256=13ae4d9dcacba8133d8189e59d9352272e15629e6bca580c32aff9810bd96e44",
          "SHA256=2e6b339597a89e875f175023ed952aaac64e9d20d457bbc07acf1586e7fe2df8",
          "SHA256=18776682fcc0c6863147143759a8d4050a4115a8ede0136e49a7cf885c8a4805",
          "SHA256=845f1e228de249fc1ddf8dc28c39d03e8ad328a6277b6502d3932e83b879a65a",
          "SHA256=9a523854fe84f15efc1635d7f5d3e71812c45d6a4d2c99c29fdc4b4d9c84954c",
          "SHA256=c6db7f2750e7438196ec906cc9eba540ef49ceca6dbd981038cef1dc50662a73",
          "SHA256=8399e5afd8e3e97139dffb1a9fb00db2186321b427f164403282217cab067c38",
          "SHA256=d7e091e0d478c34232e8479b950c5513077b3a69309885cee4c61063e5f74ac0",
          "SHA256=18deed37f60b6aa8634dda2565a0485452487d7bce88afb49301a7352db4e506",
          "SHA256=0cf6c6c2d231eaf67dfc87561cc9a56ecef89ab50baafee5a67962748d51faf3",
          "SHA256=5f7e47d728ac3301eb47b409801a0f4726a435f78f1ed02c30d2a926259c71f3",
          "SHA256=5c0b429e5935814457934fa9c10ac7a88e19068fa1bd152879e4e9b89c103921",
          "SHA256=2da330a2088409efc351118445a824f11edbe51cf3d653b298053785097fe40e",
          "SHA256=ab0925398f3fa69a67eacee2bbb7b34ac395bb309df7fc7a9a9b8103ef41ed7a",
          "SHA256=e502c2736825ea0380dd42effaa48105a201d4146e79de00713b8d3aaa98cd65",
          "SHA256=8fe429c46fedbab8f06e5396056adabbb84a31efef7f9523eb745fc60144db65",
          "SHA256=552f70374715e70c4ade591d65177be2539ec60f751223680dfaccb9e0be0ed9",
          "SHA256=eba14a2b4cefd74edaf38d963775352dc3618977e30261aab52be682a76b536f",
          "SHA256=5f20541f859f21b3106e12d37182b1ea39bb75ffcfcddb2ece4f6edd42c0bab2",
          "SHA256=bae4372a9284db52dedc1c1100cefa758b3ec8d9d4f0e5588a8db34ded5edb1f",
          "SHA256=2594b3ef3675ca3a7b465b8ed4962e3251364bab13b12af00ebba7fa2211abb2",
          "SHA256=a961f5939088238d76757669a9a81905e33f247c9c635b908daac146ae063499",
          "SHA256=2fbbc276737047cb9b3ba5396756d28c1737342d89dce1b64c23a9c4513ae445",
          "SHA256=31ffc8218a52c3276bece1e5bac7fcb638dca0bc95c2d385511958abdbe4e4a5",
          "SHA256=e279e425d906ba77784fb5b2738913f5065a567d03abe4fd5571695d418c1c0f",
          "SHA256=95d50c69cdbf10c9c9d61e64fe864ac91e6f6caa637d128eb20e1d3510e776d3",
          "SHA256=0466dac557ee161503f5dfbd3549f81ec760c3d6c7c4363a21a03e7a3f66aca8",
          "SHA256=66f851b309bada6d3e4b211baa23b534165b29ba16b5cbf5e8f44eaeb3ca86ea",
          "SHA256=d3eaf041ce5f3fd59885ead2cb4ce5c61ac9d83d41f626512942a50e3da7b75a",
          "SHA256=a5a4a3c3d3d5a79f3ed703fc56d45011c21f9913001fcbcc43a3f7572cff44ec",
          "SHA256=8781589c77df2330a0085866a455d3ef64e4771eb574a211849784fdfa765040",
          "SHA256=748ccadb6bf6cdf4c5a5a1bb9950ee167d8b27c5817da71d38e2bc922ffce73d",
          "SHA256=12eda8b65ed8c1d80464a0c535ea099dffdb4981c134294cb0fa424efc85ee56",
          "SHA256=9a1d66036b0868bbb1b2823209fedea61a301d5dd245f8e7d390bd31e52d663e",
          "SHA256=1d804efc9a1a012e1f68288c0a2833b13d00eecd4a6e93258ba100aa07e3406f",
          "SHA256=d04c72fd31e7d36b101ad30e119e14f6df9cbc7a761526da9b77f9e0b9888bc4",
          "SHA256=019c2955e380dd5867c4b82361a8d8de62346ef91140c95cb311b84448c0fa4f",
          "SHA256=923ebbe8111e73d5b8ecc2db10f8ea2629a3264c3a535d01c3c118a3b4c91782",
          "SHA256=97363f377aaf3c01641ac04a15714acbec978afb1219ac8f22c7e5df7f2b2d56",
          "SHA256=cac5dc7c3da69b682097144f12a816530091d4708ca432a7ce39f6abe6616461",
          "SHA256=30abc0cc700fdebc74e62d574addc08f6227f9c7177d9eaa8cbc37d5c017c9bb",
          "SHA256=07d0090c76155318e78a676e2f8af1500c20aaa1e84f047c674d5f990f5a09c8",
          "SHA256=43136de6b77ef85bc661d401723f38624e93c4408d758bc9f27987f2b4511fee",
          "SHA256=dd2f1f7012fb1f4b2fb49be57af515cb462aa9c438e5756285d914d65da3745b",
          "SHA256=fda93c6e41212e86af07f57ca95db841161f00b08dae6304a51b467056e56280",
          "SHA256=ded2927f9a4e64eefd09d0caba78e94f309e3a6292841ae81d5528cab109f95d",
          "SHA256=a34e45e5bbec861e937aefb3cbb7c8818f72df2082029e43264c2b361424cbb1",
          "SHA256=a903f329b70f0078197cb7683aae1bb432eaf58572fe572f7cb4bc2080042d7e",
          "SHA256=881bca6dc2dafe1ae18aeb59216af939a3ac37248c13ed42ad0e1048a3855461",
          "SHA256=13ae3081393f8100cc491ebb88ba58f0491b3550787cf3fd25a73aa7ca0290d9",
          "SHA256=54841d9f89e195196e65aa881834804fe3678f1cf6b328cab8703edd15e3ec57",
          "SHA256=3e9b62d2ea2be50a2da670746c4dbe807db9601980af3a1014bcd72d0248d84c",
          "SHA256=1a4f7d7926efc3e3488758ce318246ea78a061bde759ec6c906ff005dd8213e5",
          "SHA256=9d530642aeb6524691d06b9e02a84e3487c9cdd86c264b105035d925c984823a",
          "SHA256=c2fcc0fec64d5647813b84b9049d430406c4c6a7b9f8b725da21bcae2ff12247",
          "SHA256=d7c79238f862b471740aff4cc3982658d1339795e9ec884a8921efe2e547d7c3",
          "SHA256=fcdfe570e6dc6e768ef75138033d9961f78045adca53beb6fdb520f6417e0df1",
          "SHA256=1076504a145810dfe331324007569b95d0310ac1e08951077ac3baf668b2a486",
          "SHA256=e61004335dfe7349f2b2252baa1e111fb47c0f2d6c78a060502b6fcc92f801e4",
          "SHA256=0d3790af5f8e5c945410929e31d06144a471ac82f828afe89a4758a5bbeb7f9f",
          "SHA256=a2f45d95d54f4e110b577e621fefa0483fa0e3dcca14c500c298fb9209e491c1",
          "SHA256=386745d23a841e1c768b5bdf052e0c79bb47245f9713ee64e2a63f330697f0c8",
          "SHA256=163912dfa4ad141e689e1625e994ab7c1f335410ebff0ade86bda3b7cdf6e065",
          "SHA256=e6023b8fd2ce4ad2f3005a53aa160772e43fe58da8e467bd05ab71f3335fb822",
          "SHA256=e07211224b02aaf68a5e4b73fc1049376623793509d9581cdaee9e601020af06",
          "SHA256=003e61358878c7e49e18420ee0b4a37b51880be40929a76e529c7b3fb18e81b4",
          "SHA256=d2e843d9729da9b19d6085edf69b90b057c890a74142f5202707057ee9c0b568",
          "SHA256=cfb7af8ac67a379e7869289aeee21837c448ea6f8ab6c93988e7aa423653bd40",
          "SHA256=65db1b259e305a52042e07e111f4fa4af16542c8bacd33655f753ef642228890",
          "SHA256=d9a73df5ac5c68ef5b37a67e5e649332da0f649c3bb6828f70b65c0a2e7d3a23",
          "SHA256=3670ccd9515d529bb31751fcd613066348057741adeaf0bffd1b9a54eb8baa76",
          "SHA256=e26a21e1b79ecaee7033e05edb0bd72aca463c23bd6fdf5835916ce2dfdf1a63",
          "SHA256=00b3ff11585c2527b9e1c140fd57cb70b18fd0b775ec87e9646603056622a1fd",
          "SHA256=707b4b5f5c4585156d8a4d8c39cf26729f5ad05d7f77b17f48e670e808e3e6a0",
          "SHA256=6f1ff29e2e710f6d064dc74e8e011331d807c32cc2a622cbe507fd4b4d43f8f4",
          "SHA256=b0f6cd34717d0cea5ab394b39a9de3a479ca472a071540a595117219d9a61a44",
          "SHA256=b01ebea651ec7780d0fe88dd1b6c2500a36dacf85e3a4038c2ca1c5cb44c7b5d",
          "SHA256=5d530e111400785d183057113d70623e17af32931668ab7c7fc826f0fd4f91a3",
          "SHA256=9f1025601d17945c3a47026814bdec353ee363966e62dba7fe2673da5ce50def",
          "SHA256=793a26c5c4c154a40f84c3d3165deb807062b26796acaae94b72f453e95230d5",
          "SHA256=2bbe65cbec3bb069e92233924f7ee1f95ffa16173fceb932c34f68d862781250",
          "SHA256=26453afb1f808f64bec87a2532a9361b696c0ed501d6b973a1f1b5ae152a4d40",
          "SHA256=1e0eb0811a7cf1bdaf29d3d2cab373ca51eb8d8b58889ab7728e2d3aed244abe",
          "SHA256=8688e43d94b41eeca2ed458b8fc0d02f74696a918e375ecd3842d8627e7a8f2b",
          "SHA256=7c830ed39c9de8fe711632bf44846615f84b10db383f47b7d7c9db29a2bd829a",
          "SHA256=84bf1d0bcdf175cfe8aea2973e0373015793d43907410ae97e2071b2c4b8e2d4",
          "SHA256=4d19ee789e101e5a76834fb411aadf8229f08b3ece671343ad57a6576a525036",
          "SHA256=3f2fda9a7a9c57b7138687bbce49a2e156d6095dddabb3454ea09737e02c3fa5",
          "IMPHASH=88e21ed9e717781eaf87209acbdbb567",
          "IMPHASH=481d7bb63a8e5eaba756137e6ef22e54",
          "IMPHASH=cef6a450f196b28e634aa3c0655d8eda",
          "IMPHASH=0e0722c16a5ded199f64b26fccd2115a",
          "IMPHASH=f0cd7cce1d03cf9df1b8266701f92b46",
          "IMPHASH=cc88330f6dca52a40e258f689d3e2db4",
          "IMPHASH=835e364e2175338d970c2aaee365f3dc",
          "IMPHASH=82e75304c5b7ed87121b8b89c82f2389",
          "IMPHASH=9470f56376e665fb981a35b303436041",
          "IMPHASH=37b1eada43ad08093dfa4de7a411d15f",
          "IMPHASH=a2d936fa82b7340d28a697fb344046d8",
          "IMPHASH=16b23f4c6ea47d01340a2cce4bf613f7",
          "IMPHASH=32b632f6379bfaac9f4f3a030a694f55",
          "IMPHASH=052280a42374b8d779c10cd0d8118691",
          "IMPHASH=540992ba6f31301ba27604515a78ad79",
          "IMPHASH=a5fd3b0143c8db98017ec1b2b2528360",
          "IMPHASH=1e13511288689b63b2e1348bf5eb567b",
          "IMPHASH=dd406d43857d7f5ad1b0aec04fdb7e5f",
          "IMPHASH=cf1a39b9408348cddaa4a2827283534c",
          "IMPHASH=0dcd262801389f839ce909cb173448e2",
          "IMPHASH=9e15ce38f071c916bea830247f1241bb",
          "IMPHASH=5716c52252afe18d09f6c1bc6e5ef3ef",
          "IMPHASH=ecf8495ba751a7e38d6be4c5c80f2bef",
          "IMPHASH=f475387e3959dbea86854d61602db136",
          "IMPHASH=98dc1b41bda471f7eabdce8a5d16c09d",
          "IMPHASH=8b7e7c20da6ca9ac4bdb3927fe2b266a",
          "IMPHASH=14075e605bff546182d682f41afefea2",
          "IMPHASH=b8302791cd2edfe6dd562c4854ea495f",
          "IMPHASH=a1d29a3af6402793ec9d23883512938a",
          "IMPHASH=aa01c534155ce919d797860feb531eae",
          "IMPHASH=ebb99842fa08915eb8b7f67d8dc7a13a",
          "IMPHASH=89f3f52b23bdf03bd2bb7eb3cfab8817",
          "IMPHASH=8605f70bcc472025c2e78082388ed00b",
          "IMPHASH=27365d8741d23e179699f1f11a619c7d",
          "IMPHASH=dc0a0f2d424a59b4d17033f58f01b027",
          "IMPHASH=48e2ef3c2d32ecca62510d90e12b6632",
          "IMPHASH=a793af44219650b4dd07d8a19ede33f1",
          "IMPHASH=5f4063ab963abff76d0d83d239697e36",
          "IMPHASH=7716b766e630388f64de1961719be3d4",
          "IMPHASH=8ed3fbdefcc1982cd7decc40ace9d2e7",
          "IMPHASH=6e796fd10b55f58fd0ec9f122a14e918",
          "IMPHASH=2d7766896629499b1484227afaf43dd7",
          "IMPHASH=0579e15c488a56c544e8fac130d826ba",
          "IMPHASH=e1d88d0526dfa369c3661355dbd8773d",
          "IMPHASH=8ec78cf864273fd81203678b61c41f04",
          "IMPHASH=ff605557fd515d7ab30ff41dbd8bd24a",
          "IMPHASH=234f0978e7f2aa0beb9501ff53d94e5b",
          "IMPHASH=77d6a7153b3015318622b793227fb394",
          "IMPHASH=6c42ea981bc29a7e2ed56d297e0b56dc",
          "IMPHASH=23eb5ffc060c6c52546d38e2b63019bd",
          "IMPHASH=ee9cc2f584c2f06fbff67d484adcf426",
          "IMPHASH=d6dc99d60798b2647006ddba21671160",
          "IMPHASH=1427c5f0f4fb100e26a3911f8209504b",
          "IMPHASH=a095f31019d7a32d0a0507879a1822b1",
          "IMPHASH=b8a35d469bc164d86ac7c64e93b0037b",
          "IMPHASH=0e9dfd08346bbe128159bff440d13389",
          "IMPHASH=bd607d71fdc1444aa96dc431591c5c44",
          "IMPHASH=f4b8d579fbdb32eabd01954394f5bf3a",
          "IMPHASH=edc2197e927392567cf09f7de410b5bb",
          "IMPHASH=7fb9382c0d754d5aac897d7a3e72b10c",
          "IMPHASH=1422b8d354b95d9cd880c8726df45dfc",
          "IMPHASH=0c959096cf4b3180530cc7865ef29157",
          "IMPHASH=aca7bbc6be02770c50b07eb6f94d1d78",
          "IMPHASH=3f4c9025125027e307b7e52dd577303b",
          "IMPHASH=68062e8b9d3c1e6cc62a9cae16a12b81",
          "IMPHASH=228bac53e82887d1ed92f51a667a8231",
          "IMPHASH=8919b7bae28d98c4a9e5967c9c55ce70",
          "IMPHASH=7e798c3abcbd0f1cfa8b2b9688e01936",
          "IMPHASH=8add42784f4693f421d85a2bcbadc620",
          "IMPHASH=fbcdb079e9c13a82f98b79bb6ce86175",
          "IMPHASH=a94892b77a6474429b9f692d9952a9d5",
          "IMPHASH=aa03d5a319bc221875846e19e01276f7",
          "IMPHASH=26150d69f50aa9247c3f3f17521d18a2",
          "IMPHASH=beb40a1e9d5c89308d1c56958ddac27d",
          "IMPHASH=59b3f3fa2775e407721c2491ddb2890b",
          "IMPHASH=c314c92b5c25c6f4323e3efaf8bde47a",
          "IMPHASH=d8752c1d5954bea175ac00df5acebb09",
          "IMPHASH=54e54063abbf1edaa9cf9ed8a18916d6",
          "IMPHASH=4aaef0105216f062a5f3ee071a72770c",
          "IMPHASH=67f975f0734a5b0598223fbe00b3367e",
          "IMPHASH=175c5711f3c49a0d929e9e2314b21c6b",
          "IMPHASH=12befc0a82dcb0585359d335ed47af19",
          "IMPHASH=24b344cd341f8b20003ac85be08df979",
          "IMPHASH=08c7f29f5cb29ba70e49879da2e8ddce",
          "IMPHASH=fc9c0ba924e7f104eda5254aaeacc5e8",
          "IMPHASH=5192bc7311bdeb1f3977bdc0d2e943e4",
          "IMPHASH=7363079b9aae7d58bd33c691a613c83c",
          "IMPHASH=e2c63196ed5368f03dabed73b1ff3409",
          "IMPHASH=8211bd4f00a3d9928a11a6ac3329fc46",
          "IMPHASH=2699b7ae36fcadd71425ebafd231d0d1",
          "IMPHASH=8d2a933d039e8b8134ef41236d5ea843",
          "IMPHASH=cc335217d6f7ab7a53dcfa55cbda5fb0",
          "IMPHASH=f9141c3df8f7ec7b3f2d46265a3b5528",
          "IMPHASH=e0813a780309a0af84b605d95bd194e4",
          "IMPHASH=e5fd4339e7b94543b16624a27ba1c872",
          "IMPHASH=fffbca93e6322995552b841c7d65b033",
          "IMPHASH=105b74485670215ab231a942c9101ccf",
          "IMPHASH=74081c86ad3e9771011f162c107927de",
          "IMPHASH=2df11474daf362b1b2fa3d3a89b6acbe",
          "IMPHASH=22a9d7a42282b48c566b4423363d3a3e",
          "IMPHASH=4fbdc03e4487f98fb59360ea5b3e640d",
          "IMPHASH=b262e8d078ede007ebd0aa71b9152863",
          "IMPHASH=abbab73b191d90dc642cbbc1f31d750d",
          "IMPHASH=a5b3ea8c2012c517c472ad6befd37134",
          "IMPHASH=9d7183c1d8107495354c4fad9dae3452",
          "IMPHASH=7d004bbe0f546a91c93562d324307fa7",
          "IMPHASH=b84820037d6a51ba108e0e81ce01db0b",
          "IMPHASH=68b717fa2ab9431cd176776363359d48",
          "IMPHASH=b0356152212dc6e33752847235064fb0",
          "IMPHASH=baa420e9d4e3baf0d65d4fc2bf497708",
          "IMPHASH=85fd19df117fbc21efbcb1d587063e12",
          "IMPHASH=8122311437457ccae22578e301c6a17d",
          "IMPHASH=f939ef0b7f792672866386600f82aa04",
          "IMPHASH=d7de998e454f947f62d4a6b66490563b",
          "IMPHASH=17a9b50297a2334d8e9dfc3411bbe8ab",
          "IMPHASH=6816dabcee7b7d027bfbb93a16297afa",
          "IMPHASH=6723b1d5bd0f1fc13216cb44541e619e",
          "IMPHASH=71e84092e69114f0792419cb8b2b0fd1",
          "IMPHASH=9c8c681f74950997cd571fd838a847b8",
          "IMPHASH=95fe5e937e5acf9bea948fe0256e46ae",
          "IMPHASH=fc789f89340a45f1ab6c49e61b1f6b40",
          "IMPHASH=b8d0a36d2b14d79dfa08fb2e121f0920",
          "IMPHASH=6ce93eab57a73915ecd5c202a339f6ce",
          "IMPHASH=59b168c8ba0db46cb70d1d5a103e6c41",
          "IMPHASH=3edc60bda68569cac7ad7604728ff40d",
          "IMPHASH=3e8e7e5e779c7064e6bab177167e9e7a",
          "IMPHASH=b05ee5c816a30bc52378c759486af0b9",
          "IMPHASH=f7d07bcaa23837d219dcb64e76290252",
          "IMPHASH=d658b06ec1ce39670b02a2dd83e29d03",
          "IMPHASH=11bfcbdb0787ef461d442f973c392cf6",
          "IMPHASH=f531646e31cc12dfaac5b8352653c384",
          "IMPHASH=9b3ad85a76080f989d24cd89da90175a",
          "IMPHASH=5f6fd4ffba177389f414dd1a6ded24b4",
          "IMPHASH=4b0b017b23567cf8b9e1268957acd032",
          "IMPHASH=b4a71a1265f5f82cf383af17e229acb5",
          "IMPHASH=0ebf1214948a636eba076b14cd8f72d5",
          "IMPHASH=c05e71aad32edcbe71ae0ef1621f8693",
          "IMPHASH=427cd9c70cca88ca1db61a5ddc3b8450",
          "IMPHASH=236bc37dff7a92a4d25d807cf038e674",
          "IMPHASH=e38cca61999fb8a0308c0eb798b07989",
          "IMPHASH=3815f9107b799b863cd905178e6e07d0",
          "IMPHASH=3c91d549b68e320924bcde3856993e87",
          "IMPHASH=bb56f25a810b329868a0ff8e94080bad",
          "IMPHASH=f5030145594c486434040aa2636a5dde",
          "IMPHASH=d8101af81fd826b492ced1994ebd3268",
          "IMPHASH=b5967a61e1a4e1d57b3d8ffefc5721ed",
          "IMPHASH=799c9c020c6fcfd11a4172bc861f74af",
          "IMPHASH=2b9471e7bb8c05dc55d0a2ff0591ea98",
          "IMPHASH=6a47c957830ccce7ef43ed96aacf7c2c",
          "IMPHASH=b1e749ba779687a5127817da3d47af2c",
          "IMPHASH=202a0f2f992ec379e2876776ae9de661",
          "IMPHASH=f5df2479285c7b593b3630b8357032e3",
          "IMPHASH=32204eaf2afa5b348ab17de07362885c",
          "IMPHASH=1de2e6e58f6b19c4ec9ad6ca9fce5c14",
          "IMPHASH=64d934652c680b7759f6e75d05ee3072",
          "IMPHASH=176d8e75a27a45e2c6f5d4cceca4d869",
          "IMPHASH=f0820e8f674e44e5c2a3f899ec561c1d",
          "IMPHASH=f4fa225abfb5a5263241a01a2c3f2b8f",
          "IMPHASH=a18b467c3b43f334ca455c495a3ef70d",
          "IMPHASH=a8633e68c2ad9f3dc83775d8d5b21c5b",
          "IMPHASH=9d5a58052468c8e07ff3d5bd730e5d00",
          "IMPHASH=69260cce3156aa2dc0540fb78f5fe826",
          "IMPHASH=b1336b0cb67918ed39f1f88c354910d0",
          "IMPHASH=f119bff607049d431d0968fbaf6532f3",
          "IMPHASH=c91146dfe120f6e8fbed2150d9e020ca",
          "IMPHASH=1e6875beefe8571686d3e8530f8c4bfb",
          "IMPHASH=acdf419d1d03923be256205b9c33eec8",
          "IMPHASH=756adaea6a3f9f0cdaff73d1a49ca201",
          "IMPHASH=28dc68bb6d6bf4f6b2db8dd7588b2511",
          "IMPHASH=6e7cd05c0da9f82449a8b3795418ee00",
          "IMPHASH=8c3af6c25ab40c4daefb4f836d12e1c8",
          "IMPHASH=4792bcb395d06f9efb72e8020c4af5e6",
          "IMPHASH=d5bc15465b63888cc8b98ecc63a81517",
          "IMPHASH=7f53340c91c108efedb5b8678c5207b3",
          "IMPHASH=3f4a90b2976641ad2c0164792b24d322",
          "IMPHASH=d221afaadf43ceedb581e665435c56c7",
          "IMPHASH=f212bbc758bb52fc661839b1d194b76e",
          "IMPHASH=e938b727f5a033818337f7ba0584500f",
          "IMPHASH=3ac083b0ee2b752436a8a1532179f032",
          "IMPHASH=2e9ef79ea88178e29516dfa435a58900",
          "IMPHASH=24c3d3be20e794c17844d030be03fd2f",
          "IMPHASH=700a9350ac8b218ab9fc62cf25337ad3",
          "IMPHASH=e586fd1c5af87b43696b9d29b09bf1b1",
          "IMPHASH=2233472cee6457ad207017803048aaff",
          "IMPHASH=f046e37fa7914491dc25a6f7718da341",
          "IMPHASH=683bc425e3d8c21f9473a238a0645a4e",
          "IMPHASH=f08e2ac6ca73cd2a924ed25dc6813638",
          "IMPHASH=e2306e26abfd90a5ce4dad0e266b3905",
          "IMPHASH=10917aa77669c6ae714f074d89be9ab8",
          "IMPHASH=db62897eb9d2098e988f830159c04c82",
          "IMPHASH=51780bba04121d6be13f69de08721445",
          "IMPHASH=29a2e15ac1622a3daf7da5a78f0cef08",
          "IMPHASH=5988ec9f159fefbdf89d893aa634dd92",
          "IMPHASH=05d3de62beab8e88de1dafd3b24a16f6",
          "IMPHASH=88380fdfc880da4da407c38f34fe8a3c",
          "IMPHASH=8a424cd36ae3eab0d11332ce3b982a02",
          "IMPHASH=60a2fba979aaa0d0ccd09c12ca3d9e57",
          "IMPHASH=85f86c7c8ce81a78e84efa545d7edc65",
          "IMPHASH=9523103b30fb194643b97ccc3ab7abb0",
          "IMPHASH=0c2219c9c5eab786fa876f74356eea20",
          "IMPHASH=7abb0911ca4cc4697ee1e9897932d3ac",
          "IMPHASH=c6a0f65ba653ee78255cc9e314abc442",
          "IMPHASH=44e6f2f64092b48f8eb926c36ebd1d56",
          "IMPHASH=13300d56528646611f26704266713952",
          "IMPHASH=095c0cdb9c0421da216371c1f4e8790e",
          "IMPHASH=45f8f347e3fb919f3164a4a3278f1c71",
          "IMPHASH=0e4f5481813eeec4e5dd96e36020135f",
          "IMPHASH=1d05fb30a58133da2e9dbdfcf51b80fd",
          "IMPHASH=2561727ac42d399030b3c46477c428f4",
          "IMPHASH=be69e763a6a858c3e7e1ea6e3af12691",
          "IMPHASH=7fba20994f76fb31b9f5a2b3f0c00055",
          "IMPHASH=1d9cdf46ff335712634c292180c06755",
          "IMPHASH=ad4586d21c9469bf636b5e8660e9d702",
          "IMPHASH=958dd67f866ae27cf716e30a025b266f",
          "IMPHASH=1dd3b83f2b007f862a1d8de4a1d3303f",
          "IMPHASH=b4c562c2c654abd2cc71658646314976",
          "IMPHASH=679eba16ab2d51543b7007708838ef7c",
          "IMPHASH=a1603fe7f02448c6b33687ddb9304c7f",
          "IMPHASH=9e2cf28fe320bbf74972509536569c8e",
          "IMPHASH=f233a65b937c69b447824889fb7425ff",
          "IMPHASH=b3204707f6e489cd5a2484881eaf78ca",
          "IMPHASH=c61a46ffe79d3f7d6307c0d2ae5f391e",
          "IMPHASH=28c5045218461018dbde27212ab0f227",
          "IMPHASH=af34db96db910a3fa7a56f2fac8ed5e1",
          "IMPHASH=e80eeed7225a880bbde0d038a5fe1af4",
          "IMPHASH=62473b41d695f075ad96abc4a408de5b",
          "IMPHASH=56307b5227183c002e4231320a72b961",
          "IMPHASH=dd7c5c0c762169d40ee01280e4ac74fc",
          "IMPHASH=9915439d37f385dbffc72bf835f3ee02",
          "IMPHASH=4199ed50502e00f57d9b66e9305450f5",
          "IMPHASH=71c580daf556775f690f0af3db12506f",
          "IMPHASH=c1ab6741cd29de98a138f2bd639f620a",
          "IMPHASH=32247962aa01af8ad5dca696260a05ab",
          "IMPHASH=1d774a94ad511efe5ebfe70acc6f8c85",
          "IMPHASH=690a0fb27a0c47c785d6bbbfc2e56501",
          "IMPHASH=78727a5fac8bd281903014ee00dcd553",
          "IMPHASH=f5ebade1d3a6d3bde264b0c7f9f639e7",
          "IMPHASH=4343c9c0b78ee21e895f10d929c240d4",
          "IMPHASH=f510a429c6ce5c8d414550518b3823d2",
          "IMPHASH=45acfe4a83f61d872fb904a1f08ef991",
          "IMPHASH=cbf26c6e8cf7e294bda273e7026a2789",
          "IMPHASH=84d83741445d9f5a6717b874fed3d8f3",
          "IMPHASH=0b40636205c64cacfd2e4f407518ad58",
          "IMPHASH=b4627789883457d50964a248104cb4c2",
          "IMPHASH=a7ff164c1ee5113a0a09e66b2cd03544",
          "IMPHASH=a0a13575e37906924a0b79043b4005c6",
          "IMPHASH=955e7b12a8fa06444c68e54026c45de1",
          "IMPHASH=8f52e36711c80bb9d7e30995e0092e83",
          "IMPHASH=05fbe4619edf747787879d9323951439",
          "IMPHASH=865c945f842a3f5f5453fb90d12f6765",
          "IMPHASH=89f925b54b95944513671d79eba5fe07",
          "IMPHASH=f4c5b0399665885a7dd34f7cdbbc586f",
          "IMPHASH=2ece23bdef16ee294bd905c7ba1be589",
          "IMPHASH=e800cd3299d4cda0d9e02255acc3b7dd",
          "IMPHASH=a86fb9a41955bda815ab902fb58baa27",
          "IMPHASH=2f7ea575cf15da16c8f117eee37046d8",
          "IMPHASH=223a76f59831e1a59980b603f81c271d",
          "IMPHASH=c17c0bd619c1e188ffe27bd328dd7d08",
          "IMPHASH=1429d5c551f71d3ce6a7cc54c9348e95",
          "IMPHASH=3552d8a0022e7f3136b667e6d1e402f2",
          "IMPHASH=67d92a28cd2923a923adf7fd958905d8",
          "IMPHASH=3c9af2347198d96c8ab5b189b4e3db37",
          "IMPHASH=f43aa654b4bfb882a0af098ad3f899e9",
          "IMPHASH=518e77c070ae21af7c558962cd1854a3",
          "IMPHASH=8e96d1a56746c6f6f30f1a0963ce2f26",
          "IMPHASH=b19743993dc7f1d48b2a86fe9b9c91e3",
          "IMPHASH=acd1b0130287133223d26c91f27f6899",
          "IMPHASH=82942c060f79cefd3bf1acdf5c207561",
          "IMPHASH=bc5c06a7fa9555f3f34043d828d9b123",
          "IMPHASH=ccdeab2a83fbf2fef2e418cccd133ec1",
          "IMPHASH=2424cf613f90884493009dd6bee95693",
          "IMPHASH=5c77661ac2951da388949d9a834eb694",
          "IMPHASH=2a20cc9578bb34a4bb10b87b49b24982",
          "IMPHASH=3ee1cb6085fbe05e46e2b88493426848",
          "IMPHASH=cb876abd8c6ca8a47d50aec4a520a020",
          "IMPHASH=80ae2342fd6c7f5e1c642918e33dafb1",
          "IMPHASH=aa274f6b4b15691fd725d7044f98bf36",
          "IMPHASH=5e4c9e685f9b7d77c90ff710972bb7dd",
          "IMPHASH=4fb06df8cb54846e42943f0d3ae96e2f",
          "IMPHASH=74cc5d779ee7dbc9f389bab9dcccac50",
          "IMPHASH=0707fe3c02c8d2a4d6219bd0596d76f3",
          "IMPHASH=7863a0f25a0647ed7d52641222bd709a",
          "IMPHASH=75018719e85e67b75e73c57d682dbcbf",
          "IMPHASH=e08b2d7c450761f01ec9ed4ef0ca56a4",
          "IMPHASH=2263350df91a5a4f5e10e68b3b822029",
          "IMPHASH=6f0b9814da4da038669c47e77c2f268f",
          "IMPHASH=9fb64527ca6d4541cc256b1abd1e4101",
          "IMPHASH=27db67ffa112f866f1d34c32226e09cf",
          "IMPHASH=5bb79a6caa12076a6d140085cb53892e",
          "IMPHASH=d169b0949781ca2a6efea5a106266a02",
          "IMPHASH=5a50a9a44f5d36af5df1bde995d22e42",
          "IMPHASH=626c8ecbc636968157d73f18ac315926",
          "IMPHASH=f12ae9073d95c22ed89247253d59f500",
          "IMPHASH=44cbd2ee295f1a35795eb4cd7cdd0864",
          "IMPHASH=840e656bdb2987fa422092ec9d588895",
          "IMPHASH=d57ef6278dcd7049063e8fb6ade9effc",
          "IMPHASH=392aa6863da8d7c14ad7386026e93b58",
          "IMPHASH=5662b51943d85b7ca47a99cac81af985",
          "IMPHASH=8418ac0d7aaa9015794e55ea54733342",
          "IMPHASH=163436e69f8e582bdc1c1e6f735de23b",
          "IMPHASH=24e4c876bb5db0b0e0a4e92f0a3d3a48",
          "IMPHASH=3198fc43051f03c6c71587dbf232f75c",
          "IMPHASH=9321f9c47129fbc728ead2710e22f1a5",
          "IMPHASH=1a0d0d460994cfde55ee908d62330ee0",
          "IMPHASH=82f5b92ccd99d13f4dd6ed6aaf0441bc",
          "IMPHASH=634f3c43b014dc8845b086c9328a678c",
          "IMPHASH=81acb4bb89ef49c4e7f30513b4750e53",
          "IMPHASH=d61d30746681d0fda9bfd9e8af061b2a",
          "IMPHASH=7453e39bd87c63550451ba2fa354dd8e",
          "IMPHASH=bb437241f56020db0fcbf8f8629bdb07",
          "IMPHASH=1e8ee6407390a2d52051bec21c771fdb",
          "IMPHASH=7c24141cdcfc23f5eb0e2b6792d80740",
          "IMPHASH=a7f2c2e8e9d6c90e28819d1a3ab84bc8",
          "IMPHASH=1b0788bb68804273159b8ace9cba7ea3",
          "IMPHASH=9521d8684357766840dbcac2b4cee67d",
          "IMPHASH=b4c2607b2af5376910bf80b561e9a18a",
          "IMPHASH=f138fdbc6c7fbf73e135717c7d7eac27",
          "IMPHASH=82525a4a571f0f8d4e4f42ec6bb3900e",
          "IMPHASH=8bbc742eaed888736a715757f0584fb6",
          "IMPHASH=be527e5f470fbc661f914c81bfc9af38",
          "IMPHASH=ad374977f06fefefbb9c77155f7a0733",
          "IMPHASH=111e6d92e02f02f737654c5b1cfe9f6f",
          "IMPHASH=31907ffcac211e27136b14bb2f442070",
          "IMPHASH=60e068470635cf20cc19b7f8e8cbfc5f",
          "IMPHASH=8a5edbe5251fe141ea0262d5d572178b",
          "IMPHASH=0265c50548889ffd5c2d3a2539885efe",
          "IMPHASH=9376f1c4ab79240cc948b77bf9e8814b",
          "IMPHASH=82b2288ac7f842e42de15c5bc96f1772",
          "IMPHASH=317f02ddc9809d608a9bf63ce24e9550",
          "IMPHASH=65abf5c92cc2239f2dc9d589458569c9",
          "IMPHASH=12fef92a55cb5e1533b89d8e6a5892b2",
          "IMPHASH=fd133033a24971502ff0b2f189215c56",
          "IMPHASH=050d389675730da0d9d75367659cd53b",
          "IMPHASH=c590cbf2d6cbf206a2e47e8ed91dd944",
          "IMPHASH=505e0a016962137ca6169bce64ba2f53",
          "IMPHASH=02a27dc9a48b694b7df4b821eb65178c",
          "IMPHASH=bfe13c695e41d3eee414d3929b1bd523",
          "IMPHASH=5095ddaed3abc22c1510a141d72735cc",
          "IMPHASH=8f96c3ef5dda3fe697d4a4d6326dbe37",
          "IMPHASH=e1ecbd956bd016618b07e7dddcaf6e60",
          "IMPHASH=07a42e80559d960b176c0fc8fd309bfe",
          "IMPHASH=f86759bb4de4320918615dc06e998a39",
          "IMPHASH=c9f08d92efe88afb2545eb82a8870233",
          "IMPHASH=6b867dee14a77d0ada8ccad99b16291e",
          "IMPHASH=744af2b62301859b4ccdffba53551b15",
          "IMPHASH=ec5ee9a38e54ed3d4a6e6545672cb651",
          "IMPHASH=c3c9e6c0c33bad17eb055ec795fc113e",
          "IMPHASH=31a3c2c72c9a565dc4ba75ef26677569",
          "IMPHASH=7bc998aaa9fe4b4fd5e133554f42d913",
          "IMPHASH=bb981f82c2bfc3c22471df92d9d0fb89",
          "IMPHASH=ad34ea17f90a34f6f84a399a96383ada",
          "IMPHASH=30c0ed518c03fa46fa0bfe76f2db0e42",
          "IMPHASH=587191d77c08023e6e95463153e45463",
          "IMPHASH=c83f076c00d2b0a6ba9dc82f56a97631",
          "IMPHASH=cb8db41ab8c06472574e58b9466f4070",
          "IMPHASH=391ffad95759bc4bac2b737d0d0eaa84",
          "IMPHASH=c52384bc825d2414de3195672971339e",
          "IMPHASH=b0e74761cced2dde5173ae05ec562085",
          "IMPHASH=4bd0bd7710a7f71d38f056241c8ce0a7",
          "IMPHASH=ad0cdf3bab32983050527655bce40f96",
          "IMPHASH=e1a5435877b427be967867a25b1d263e",
          "IMPHASH=61b719638eacc2c5ca299805d4819e69",
          "IMPHASH=7687d0eba49315582228ef660f61b471",
          "IMPHASH=e7cbb1ce75bfc69f53855066a936042d",
          "IMPHASH=bc44fdc145156a15d0a803d18877b218",
          "IMPHASH=d5e7fc56a905088dbc79b8e27b98faea",
          "IMPHASH=3702511999371bac8982d01820dd70f2",
          "IMPHASH=d14ea0e632fc8485d77e7eba3c4d4537",
          "IMPHASH=2e7d3b001306473cbff3d0dc11a6fcbc",
          "IMPHASH=e717a2158439123c6fca79b6b2c0ba49",
          "IMPHASH=6736c04d5ff512e5e2eb608414276513",
          "IMPHASH=225e24ee3c4081a16ef32831b70bf8ef",
          "IMPHASH=48028b3b694466c1c0eb1d91ef5c02cb",
          "IMPHASH=37f7c6238c9ce110408e01ae1bc45635",
          "IMPHASH=b95bc1a99081d695b1c0b37b90a4a0be",
          "IMPHASH=78eaf4d62617f6b614d318cc70c6548a",
          "IMPHASH=55db306bc2be3ff71a6b91fd9db051b8",
          "IMPHASH=021fd02a8adad420116496b6f2759960",
          "IMPHASH=b3e26c5e0de2d01597dca208ef27cc38",
          "IMPHASH=67affe6126c1d4a774b2504061c96a2e",
          "IMPHASH=656ad5c2eac95f75d3fe6d5ca59e0d8d",
          "IMPHASH=5ea78a193212fe61ac722f45f0b0eab9",
          "IMPHASH=77ec8b2c372741f12098f084a13a56a8",
          "IMPHASH=f27327907e57c0c2c9fddc68eab2eb7b",
          "IMPHASH=b679ac08daf4b4ce8a58d85a8e0904ac",
          "IMPHASH=f2c2ee1ff03c54f384f4eee8c2533107",
          "IMPHASH=c12f7aec6ebe84a8390c82720adfc237",
          "IMPHASH=0a8eeabf5981efb2116244785cb03900",
          "IMPHASH=7f8c74638fcf297f8216aa5b184f61d6",
          "IMPHASH=d41fa95d4642dc981f10de36f4dc8cd7",
          "IMPHASH=8d616e68080def2200312de80392efa7",
          "IMPHASH=cde9174249f04dad0f79890c976c0792",
          "IMPHASH=858ceae385cdcfcbc7814644564c23e6",
          "IMPHASH=d232ae5bad7ce02f4eece90ef370c7a0",
          "IMPHASH=c7f08aed5725fe6a53a62ebe354ff135",
          "IMPHASH=cc81a908891587ccac8059435eda4c66",
          "IMPHASH=bd4f9a93da2bb4b5f6e90d4f9381661c",
          "IMPHASH=01aa65221a48929f0a34a27c4e3011b1",
          "IMPHASH=409d2ab916237fb129c57aacbb7cb4fe",
          "IMPHASH=65181bc89a1c2b5854548236269846c1",
          "IMPHASH=787e32b3fd816479fb93f9af0b6d0da3",
          "IMPHASH=8e89024d2c0ef0451c12b956a2b55b91",
          "IMPHASH=0cba56fa162378bc4ee09e94a4e2fe33",
          "IMPHASH=b7a0100fe60d7a8263da64820f7d0120",
          "IMPHASH=d16f507665603095c26147a7adcb93b8",
          "IMPHASH=0b663530751cc11f34273fee7921c431",
          "IMPHASH=604b5bd94f1892fd9e9025ef7a2bbe54",
          "IMPHASH=cb8397a3262c80b558aff93ab75b6a7b",
          "IMPHASH=d6c920c10d4d0f92f0ac14c3fefed233",
          "IMPHASH=9fd359d308a1e93106189b4ebd945855",
          "IMPHASH=c94e5ad0f33374535392364a5a193253",
          "IMPHASH=751c6b5c201f8c52f5512350cad88ddc",
          "IMPHASH=eac62dd0c27ed557fa4b641fa4050d04",
          "IMPHASH=506a31d768aec26b297c45b50026c820",
          "IMPHASH=60805da513b95c3d18a93b988bdfb58f",
          "IMPHASH=3aa0ceb8fcd07cf2514d1cb0b9bccf4b",
          "IMPHASH=c1579e4266fbdc47a5abc493a2d9d597",
          "IMPHASH=adfd4c0b031598afecb6f3f585f5f581",
          "IMPHASH=7a286ef4179598007a8afe9e5af95a48",
          "IMPHASH=c7912c850407aa93c979d95c4f593507",
          "IMPHASH=bec5dc89f030df7a96d19483fad4cc0a",
          "IMPHASH=b91054cdc4c8b3169cfe6c157f6d9f07",
          "IMPHASH=d67b7c7501e5261df5e66b3219fa52ee",
          "IMPHASH=b142d772a67c40535c8d8fabb6861748",
          "IMPHASH=1957e33acbc826c69f452ae1d1b89ac9",
          "IMPHASH=7a4a0df0bde1f8da6547a580d5bee7c3",
          "IMPHASH=085a78615099ffefa2df0a31da3058d8",
          "IMPHASH=e804d4ee2c20f3eb1d3c955e38a2fe11",
          "IMPHASH=6f2d756d22c285a46206de3bfde6c79d",
          "IMPHASH=071356ee9d8c7f91cbe8fa3c448286a2",
          "IMPHASH=ebf30b4cd57a4f4548a03eab0f6c418c",
          "IMPHASH=08ab07a2bc35aea02cd6d1efbb954cb3",
          "IMPHASH=cb15f8046e159c17b0510738fa18f758",
          "IMPHASH=07a513d1599c93bd34f01323b1ef7430",
          "IMPHASH=2430f988dcdc3828f6079e1e2cc71dc8",
          "IMPHASH=8b41eacbfbe5f5348579e27d30767e74",
          "IMPHASH=afee876e89b51e2cc7c91353fb588fe6",
          "IMPHASH=e11e41c95c1872ac3ebbd7768b16cf9e",
          "IMPHASH=e9077c03c44a511c2c8eaf5bad9ab90b",
          "IMPHASH=d6d76f43ccc3872b879b0df583364c78",
          "IMPHASH=62dbb90b4be9282d52aff9ae1a101d6b",
          "IMPHASH=3ec1e7e215efad2711248558465da9ad",
          "IMPHASH=96f270be3f73ec3fc2f2237fe84efca0",
          "IMPHASH=9ad5f7496f8c918d6c0536751d3accae",
          "IMPHASH=b1ed268dfdf4f39960971eb5822a4755",
          "IMPHASH=4c0161f638d5acafe23fcee3c5e86f15",
          "IMPHASH=9928d53dbe860aba1b7c891831680629",
          "IMPHASH=d122c1eaa50839be14c31876d0d4e0be",
          "IMPHASH=8f4588156ea7d9af8e4c162ce4c3ff23",
          "IMPHASH=abdaca21ab5c831000b0aa4b8f357716",
          "IMPHASH=0555907292d07d9f78205416eb1924d3",
          "IMPHASH=832f0fb3579a07b1c4bec82b4478306b",
          "IMPHASH=340e874a1ca966e45fc2a314ef228cce",
          "IMPHASH=b35d1d3faa6c97b106b343823d5df867",
          "IMPHASH=7e1327419d10a7eeece5579526f75d9f",
          "IMPHASH=084b99aebda8a13e4f774a2ced272e85",
          "IMPHASH=81ba5280406320ce6f03a9817d7d6035",
          "IMPHASH=e4f1a9234e4ea105321909d4c0e597ae",
          "IMPHASH=68a12eb3f32f7e193bd0d722ea6be4ab",
          "IMPHASH=c3fd2e688276a184b2528ee590054e5a",
          "IMPHASH=531d2392dbdd314fb1d9318fe9e5c4d2",
          "IMPHASH=29a1da8841f5363423dcba1a9773809a",
          "IMPHASH=9fc4a96d982ebfd6b9d87c0f3ebef681",
          "IMPHASH=304c4fcf70cfc8299a3b6eed8e7bbb31",
          "IMPHASH=3415f704b3149ea9a3d3a54036b208dd",
          "IMPHASH=7cf815757705e26b809574488ed56d0e",
          "IMPHASH=28d780857f0f6616f938aca3a38b5072",
          "IMPHASH=235102691b04f562ae8aa7ece38d8bc9",
          "IMPHASH=262d8fbbf1f514399bb3f230cddc12af",
          "IMPHASH=0f3ddbe229201f6fa9a3dbbaf842a556",
          "IMPHASH=bd093a7d5ba5632ee52f3466a688ee55",
          "IMPHASH=a9e22f5e8f4965960716d94ba7639c9f",
          "IMPHASH=528ac7a1e034801d1f20238971c6ec19",
          "IMPHASH=45bfe170e0cd654bc1e2ae3fca3ac3f4",
          "IMPHASH=7c8c655791b5c853e45aa174e5cc1333",
          "IMPHASH=a53b095a8d7366075d445892070cde51",
          "IMPHASH=f079f8637a1d4fe2fb93af2a267b68ef",
          "IMPHASH=0ebd5902a82ddfef8ed96678c1573a7b",
          "IMPHASH=9a970527986cd03e5a25d18b372624a1",
          "IMPHASH=87fde0c3f8e7dff7ab0d718d6b1252c8",
          "IMPHASH=959dce366573a7aae10b74a08931722a",
          "IMPHASH=fce118020e70919e5c8c629687f89e56",
          "IMPHASH=86682585c620fa85096a7bedaf990cd1",
          "IMPHASH=5f9cf5b0511f3c1129b467d273b921f2",
          "IMPHASH=543f80399f79401471523d335ea61642",
          "IMPHASH=3ca448454c33a5c72ad5e774de47930a",
          "IMPHASH=51ecd9b363fde1f003f4b4f20c874b1b",
          "IMPHASH=1f2627fc453dc35031a9502372bd3549",
          "IMPHASH=2cf48a541dc193e91bb2a831adcf278e",
          "IMPHASH=805e4a267f9495e7c0c430d92b78f8bd",
          "IMPHASH=92caaf6ebb43bbe61f3da8526172f776",
          "IMPHASH=421730c2b3fa3a7d78c2eda3da1be6a8",
          "IMPHASH=aa54fa0523f677e56d6d8199e5e18732",
          "IMPHASH=8ee2435c62b02fe0372cde028be489cb",
          "IMPHASH=50b6a9c4df6d0c9f517c804ad1307d7c",
          "IMPHASH=037b9d19995faadf69a2ce134473e346",
          "IMPHASH=2c19472843b56c67efb80d8c447f3cfe",
          "IMPHASH=a74f61fdcea718cb9579907b2caf54ab",
          "IMPHASH=84d45ee8df6f63b5af419d89003a97bc",
          "IMPHASH=69dbb4c8bbe4d8c2e1493f82170b93c4",
          "IMPHASH=6903b92e7760c5d7f7c181b64eb13176",
          "IMPHASH=d6f977640d4810a784d152e4d3c63a6b",
          "IMPHASH=473c3773ca11aa7371dbf350919c5724",
          "IMPHASH=87842ffa59724bda8389394bcaeb5d73",
          "IMPHASH=18502b56d9ea5dea7f9d31ef85db31d5",
          "IMPHASH=b6f67458e30912358144df4adf5264fd",
          "IMPHASH=a49a51d7f2ae972483961eb64d17888e",
          "IMPHASH=81e2eb25e24938b90806de865630a2b2",
          "IMPHASH=96861132665e8d66c0a91e6c02cc6639",
          "IMPHASH=69163e5596280d3319375c9bcd4b5da1",
          "IMPHASH=4946030efb34ab167180563899d5eb27",
          "IMPHASH=4c304943af1b07b15a5efa80f17d9b89",
          "IMPHASH=821d74031d3f625bcbd0df08b70f1e77",
          "IMPHASH=1bef18e9dda6f1e7bbf7eb76e9ccf16b",
          "IMPHASH=21f58b1f2de6ad0e9c019da7a4e7317b",
          "IMPHASH=91387ac37086b9b519f945b58095f38d",
          "IMPHASH=dcd41632f0ad9683e5c9c7cc083f78f7",
          "IMPHASH=ced7ea67fdf3d89a48849e0062278f7d",
          "IMPHASH=5713a0c2b363c49706fa0e60151511a8",
          "IMPHASH=089e8a8f2bb007852c63b64e66430293",
          "IMPHASH=383be1d728b0be96be1b810a131705ee",
          "IMPHASH=3d42ff70269b824dd9d4a8cb905669f9",
          "IMPHASH=363922cc73591e60f2af113182414230",
          "IMPHASH=fa084cdc36f03f1aeddaa3450e2781b1",
          "IMPHASH=3c61f9a38aaa7650fcd33b46e794d1bb",
          "IMPHASH=42e3f2ffa29901e572f2df03cb872159",
          "IMPHASH=4c5fc4519f1417f0630c3343aab7c9d2",
          "IMPHASH=d5d40497d82daf7e44255ede810ce7a6",
          "IMPHASH=91ee149529956a79a91eeb8c48f00b3d",
          "IMPHASH=a387f215b4964a3ca2e3c92f235a6d1b",
          "IMPHASH=ca6e77f472ebd5b2ade876e7c773bb57",
          "IMPHASH=67bace81ce26ddf73732dd75cbd0c0f2",
          "IMPHASH=18b8de84bd7aa83fec79d2c6aaf0a4f5",
          "IMPHASH=519cf5394541bf5e2869edeec81521e1",
          "IMPHASH=cae90f82e91b9a60af9a0e36c1f73be4",
          "IMPHASH=643f4d79f35dddc9bb5cc04a0f0c18d3",
          "IMPHASH=6b7d4c6283b9b951b7b2f47a0c5be8c7",
          "IMPHASH=b4c857bd3a7b1d8125c0f62aec45401e",
          "IMPHASH=49a12b06131d938e9dc40c693b88ba7f",
          "IMPHASH=f74aa24adc713dbb957ccb18f3c16a71",
          "IMPHASH=6faad89adbfc9d5448bb1bd12e7714cd",
          "IMPHASH=5759d90322a7311eaccf4f0ab2c2a7c4",
          "IMPHASH=8b6c1a09e11200591663b880a94a8d18",
          "IMPHASH=eade2a2576f329e4971bf5044ab24ac7",
          "IMPHASH=8b47d6faba90b5c89e27f7119c987e1a",
          "IMPHASH=4433528b0f664177546dd3e229f0daa5",
          "IMPHASH=c0f234205c50cc713673353c9653eea1",
          "IMPHASH=b4b90c1b054ebe273bff4b2fd6927990",
          "IMPHASH=f2dc136141066311fddef65f7f417c44",
          "IMPHASH=12a08688ec92616a8b639d85cc13a3ed",
          "IMPHASH=296afaa5ea70bbd17135afcd04758148",
          "IMPHASH=8232d2f79ce126e84cc044543ad82790",
          "IMPHASH=e10e743d152cf62f219a7e9192fb533d",
          "IMPHASH=e5af2438da6df2aa9750aa632c80cfa4",
          "IMPHASH=3a4e0bc46866ca54459753f62c879b62",
          "IMPHASH=10cb3185e13390f8931a50a131448cdf",
          "IMPHASH=4fb27d2712ef4afdb67e0921d64a5f1e",
          "IMPHASH=a96a02cf5f7896a9a9f045d1986bd83c",
          "IMPHASH=fd894d394a8ca9abd74f7210ed931682",
          "IMPHASH=ca07de87d444c1d2d10e16e9dcc2dc19",
          "IMPHASH=1aa10b05dee9268d7ce87f5f56ea9ded",
          "IMPHASH=485f7e86663d49c68c8b5f705d310f50",
          "IMPHASH=5899e93373114ca9e458e906675132b7",
          "IMPHASH=be2d638c3933fc3f5a96e539f9910c5f",
          "IMPHASH=fbfa302bf7eb5d615d0968541ee49ce4",
          "IMPHASH=f9b9487f25a2c1e08c02f391387c5323",
          "IMPHASH=ef102e058f6b88af0d66d26236257706",
          "IMPHASH=0f371a913e9fa3ba3a923718e489debb"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Vulnerable Driver Load By Name",
    "id": 44,
    "status": "experimental",
    "description": "Detects the load of known vulnerable drivers via the file name of the drivers.",
    "references": [
      "https://loldrivers.io/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/03",
    "modified": "2023/12/02",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543.003",
      "attack.t1068"
    ],
    "logsource": {
      "product": "windows",
      "category": "driver_load"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\panmonfltx64.sys",
          "\\dbutil.sys",
          "\\fairplaykd.sys",
          "\\nvaudio.sys",
          "\\superbmc.sys",
          "\\bsmi.sys",
          "\\smarteio64.sys",
          "\\bwrsh.sys",
          "\\agent64.sys",
          "\\asmmap64.sys",
          "\\dellbios.sys",
          "\\chaos-rootkit.sys",
          "\\wcpu.sys",
          "\\dh_kernel.sys",
          "\\sbiosio64.sys",
          "\\bw.sys",
          "\\asrdrv102.sys",
          "\\nt6.sys",
          "\\mhyprot3.sys",
          "\\winio64c.sys",
          "\\asupio64.sys",
          "\\blackbonedrv10.sys",
          "\\d.sys",
          "\\driver7-x86.sys",
          "\\sfdrvx32.sys",
          "\\enetechio64.sys",
          "\\gdrv.sys",
          "\\sysinfodetectorx64.sys",
          "\\fh-ethercat_dio.sys",
          "\\asromgdrv.sys",
          "\\my.sys",
          "\\dcprotect.sys",
          "\\irec.sys",
          "\\gedevdrv.sys",
          "\\winio32a.sys",
          "\\gvcidrv64.sys",
          "\\winio32.sys",
          "\\bs_hwmio64.sys",
          "\\nstr.sys",
          "\\inpoutx64.sys",
          "\\hw.sys",
          "\\winio64.sys",
          "\\hpportiox64.sys",
          "\\iobitunlocker.sys",
          "\\b1.sys",
          "\\aoddriver.sys",
          "\\elbycdio.sys",
          "\\protects.sys",
          "\\kprocesshacker.sys",
          "\\speedfan.sys",
          "\\radhwmgr.sys",
          "\\iscflashx64.sys",
          "\\black.sys",
          "\\b4.sys",
          "\\hwos2ec10x64.sys",
          "\\winflash64.sys",
          "\\corsairllaccess64.sys",
          "\\bs_i2cio.sys",
          "\\d3.sys",
          "\\windows-xp-64.sys",
          "\\aswvmm.sys",
          "\\bs_i2c64.sys",
          "\\1.sys",
          "\\nchgbios2x64.sys",
          "\\cpuz141.sys",
          "\\segwindrvx64.sys",
          "\\tdeio64.sys",
          "\\ntiolib.sys",
          "\\gtckmdfbs.sys",
          "\\iomap64.sys",
          "\\avalueio.sys",
          "\\semav6msr.sys",
          "\\lgdcatcher.sys",
          "\\b.sys",
          "\\hwdetectng.sys",
          "\\nt4.sys",
          "\\tgsafe.sys",
          "\\mydrivers.sys",
          "\\eneio64.sys",
          "\\procexp.sys",
          "\\viragt64.sys",
          "\\fpcie2com.sys",
          "\\lenovodiagnosticsdriver.sys",
          "\\cp2x72c.sys",
          "\\kerneld.amd64",
          "\\bs_def64.sys",
          "\\piddrv.sys",
          "\\amifldrv64.sys",
          "\\cpuz_x64.sys",
          "\\proxy32.sys",
          "\\wsdkd.sys",
          "\\t8.sys",
          "\\ucorew64.sys",
          "\\atszio.sys",
          "\\lmiinfo.sys",
          "\\80.sys",
          "\\nt3.sys",
          "\\ngiodriver.sys",
          "\\lv561av.sys",
          "\\gpcidrv64.sys",
          "\\fd3b7234419fafc9bdd533f48896ed73_b816c5cd.sys",
          "\\rtport.sys",
          "\\full.sys",
          "\\viragt.sys",
          "\\fiddrv64.sys",
          "\\cupfixerx64.sys",
          "\\cpupress.sys",
          "\\hwos2ec7x64.sys",
          "\\driver7-x86-withoutdbg.sys",
          "\\asrdrv10.sys",
          "\\nvflsh64.sys",
          "\\asrrapidstartdrv.sys",
          "\\tmcomm.sys",
          "\\wiseunlo.sys",
          "\\rwdrv.sys",
          "\\asio64.sys",
          "\\nvoclock.sys",
          "\\panio.sys",
          "\\mtcbsv64.sys",
          "\\amigendrv64.sys",
          "\\capcom.sys",
          "\\netflt.sys",
          "\\phlashnt.sys",
          "\\dbutil_2_3.sys",
          "\\ni.sys",
          "\\ntiolib_x64.sys",
          "\\atszio64.sys",
          "\\lgcoretemp.sys",
          "\\lha.sys",
          "\\phymem64.sys",
          "\\dbutildrv2.sys",
          "\\asrdrv103.sys",
          "\\rtcore64.sys",
          "\\bs_hwmio64_w10.sys",
          "\\ene.sys",
          "\\winio64b.sys",
          "\\piddrv64.sys",
          "\\directio32.sys",
          "\\monitor_win10_x64.sys",
          "\\nt5.sys",
          "\\asrsmartconnectdrv.sys",
          "\\rtif.sys",
          "\\atillk64.sys",
          "\\directio.sys",
          "\\asribdrv.sys",
          "\\kfeco11x64.sys",
          "\\citmdrv_ia64.sys",
          "\\sysdrv3s.sys",
          "\\amp.sys",
          "\\vboxdrv.sys",
          "\\adv64drv.sys",
          "\\hostnt.sys",
          "\\phymem_ext64.sys",
          "\\echo_driver.sys",
          "\\winiodrv.sys",
          "\\pdfwkrnl.sys",
          "\\glckio2.sys",
          "\\asrdrv106.sys",
          "\\nscm.sys",
          "\\bs_rcio64.sys",
          "\\ncpl.sys",
          "\\sandra.sys",
          "\\fiddrv.sys",
          "\\hwrwdrv.sys",
          "\\mhyprot.sys",
          "\\asrsetupdrv103.sys",
          "\\iqvw64.sys",
          "\\b3.sys",
          "\\ssport.sys",
          "\\bs_def.sys",
          "\\computerz.sys",
          "\\windows8-10-32.sys",
          "\\nstrwsk.sys",
          "\\lurker.sys",
          "\\bsmemx64.sys",
          "\\wyproxy64.sys",
          "\\asio.sys",
          "\\t3.sys",
          "\\cpuz.sys",
          "\\rtkio.sys",
          "\\driver7-x64.sys",
          "\\netfilterdrv.sys",
          "\\ioaccess.sys",
          "\\testbone.sys",
          "\\gameink.sys",
          "\\kevp64.sys",
          "\\mhyprot2.sys",
          "\\se64a.sys",
          "\\vboxusb.sys",
          "\\windows7-32.sys",
          "\\vproeventmonitor.sys",
          "\\winio64a.sys",
          "\\asrdrv101.sys",
          "\\netproxydriver.sys",
          "\\elrawdsk.sys",
          "\\zam64.sys",
          "\\cg6kwin2k.sys",
          "\\asupio.sys",
          "\\stdcdrvws64.sys",
          "\\81.sys",
          "\\citmdrv_amd64.sys",
          "\\amdryzenmasterdriver.sys",
          "\\vmdrv.sys",
          "\\sysinfo.sys",
          "\\alsysio64.sys",
          "\\directio64.sys",
          "\\rzpnk.sys",
          "\\amdpowerprofiler.sys",
          "\\truesight.sys",
          "\\wirwadrv.sys",
          "\\phymemx64.sys",
          "\\msio64.sys",
          "\\sepdrv3_1.sys",
          "\\gametersafe.sys",
          "\\bs_rcio.sys",
          "\\d4.sys",
          "\\t.sys",
          "\\eio.sys",
          "\\nt2.sys",
          "\\winring0.sys",
          "\\physmem.sys",
          "\\libnicm.sys",
          "\\msio32.sys",
          "\\asrautochkupddrv.sys",
          "\\asio32.sys",
          "\\etdsupp.sys",
          "\\smep_namco.sys",
          "\\bandai.sys",
          "\\d2.sys",
          "\\magdrvamd64.sys",
          "\\nvflash.sys",
          "\\goad.sys",
          "\\proxy64.sys",
          "\\amsdk.sys",
          "\\kbdcap64.sys",
          "\\vdbsv64.sys",
          "\\pchunter.sys",
          "\\sysconp.sys",
          "\\dh_kernel_10.sys",
          "\\msrhook.sys",
          "\\bedaisy.sys",
          "\\dcr.sys",
          "\\panmonflt.sys",
          "\\bsmixp64.sys",
          "\\otipcibus.sys",
          "\\fidpcidrv.sys",
          "\\kfeco10x64.sys",
          "\\asrdrv104.sys",
          "\\c.sys",
          "\\tdklib64.sys",
          "\\bsmix64.sys",
          "\\bs_flash64.sys",
          "\\stdcdrv64.sys",
          "\\naldrv.sys",
          "\\ctiio64.sys",
          "\\bwrs.sys",
          "\\nicm.sys",
          "\\winio32b.sys",
          "\\paniox64.sys",
          "\\ecsiodriverx64.sys",
          "\\iomem64.sys",
          "\\fidpcidrv64.sys",
          "\\aswarpot.sys",
          "\\bs_rciow1064.sys",
          "\\asmio64.sys",
          "\\openlibsys.sys",
          "\\viraglt64.sys",
          "\\dbk64.sys",
          "\\t7.sys",
          "\\atlaccess.sys",
          "\\nbiolib_x64.sys",
          "\\smep_capcom.sys",
          "\\iqvw64e.sys"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives may occur if one of the vulnerable driver names mentioned above didn't change its name between versions. So always make sure that the driver being loaded is the legitimate one and the non vulnerable version.",
      "If you experience a lot of FP you could comment the driver name or its exact known legitimate location (when possible)"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Vulnerable HackSys Extreme Vulnerable Driver Load",
    "id": 45,
    "status": "test",
    "description": "Detects the load of HackSys Extreme Vulnerable Driver which is an intentionally vulnerable Windows driver developed for security enthusiasts to learn and polish their exploitation skills at Kernel level and often abused by threat actors",
    "references": [
      "https://github.com/hacksysteam/HackSysExtremeVulnerableDriver"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/18",
    "modified": "2022/11/19",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "driver_load"
    },
    "detection": {
      "selection_name": {
        "ImageLoaded|endswith": "\\HEVD.sys"
      },
      "selection_sysmon": {
        "Hashes|contains": [
          "IMPHASH=f26d0b110873a1c7d8c4f08fbeab89c5",
          "IMPHASH=c46ea2e651fd5f7f716c8867c6d13594"
        ]
      },
      "selection_other": {
        "Imphash": [
          "f26d0b110873a1c7d8c4f08fbeab89c5",
          "c46ea2e651fd5f7f716c8867c6d13594"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Vulnerable WinRing0 Driver Load",
    "id": 46,
    "status": "test",
    "description": "Detects the load of a signed WinRing0 driver often used by threat actors, crypto miners (XMRIG) or malware for privilege escalation",
    "references": [
      "https://github.com/xmrig/xmrig/tree/master/bin/WinRing0",
      "https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/26",
    "modified": "2022/11/19",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "driver_load"
    },
    "detection": {
      "selection_name": {
        "ImageLoaded|endswith": [
          "\\WinRing0x64.sys",
          "\\WinRing0.sys",
          "\\WinRing0.dll",
          "\\WinRing0x64.dll",
          "\\winring00x64.sys"
        ]
      },
      "selection_sysmon": {
        "Hashes|contains": "IMPHASH=D41FA95D4642DC981F10DE36F4DC8CD7"
      },
      "selection_other": {
        "Imphash": "d41fa95d4642dc981f10de36f4dc8cd7"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WinDivert Driver Load",
    "id": 47,
    "status": "test",
    "description": "Detects the load of the Windiver driver, a powerful user-mode capture/sniffing/modification/blocking/re-injection package for Windows",
    "references": [
      "https://reqrypt.org/windivert-doc.html",
      "https://rastamouse.me/ntlm-relaying-via-cobalt-strike/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/30",
    "modified": "2022/11/19",
    "tags": [
      "attack.collection",
      "attack.defense_evasion",
      "attack.t1599.001",
      "attack.t1557.001"
    ],
    "logsource": {
      "category": "driver_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|contains": [
          "\\WinDivert.sys",
          "\\WinDivert64.sys",
          "\\NordDivert.sys",
          "\\lingtiwfp.sys",
          "\\eswfp.sys"
        ]
      },
      "selection_sysmon": {
        "Hashes|contains": [
          "IMPHASH=0604bb7cb4bb851e2168d5c7d9399087",
          "IMPHASH=2e5f0e649d97f32b03c09e4686d0574f",
          "IMPHASH=52f8aa269f69f0edad9e8fcdaedce276",
          "IMPHASH=c0e5d314da39dbf65a2dbff409cc2c76",
          "IMPHASH=58623490691babe8330adc81cd04a663",
          "IMPHASH=8ee39b48656e4d6b8459d7ba7da7438b",
          "IMPHASH=45ee545ae77e8d43fc70ede9efcd4c96",
          "IMPHASH=a1b2e245acd47e4a348e1a552a02859a",
          "IMPHASH=2a5f85fe4609461c6339637594fa9b0a",
          "IMPHASH=6b2c6f95233c2914d1d488ee27531acc",
          "IMPHASH=9f2fdd3f9ab922bbb0560a7df46f4342",
          "IMPHASH=d8a719865c448b1bd2ec241e46ac1c88",
          "IMPHASH=0ea54f8c9af4a2fe8367fa457f48ed38",
          "IMPHASH=9d519ae0a0864d6d6ae3f8b6c9c70af6",
          "IMPHASH=a74929edfc3289895e3f2885278947ae",
          "IMPHASH=a66b476c2d06c370f0a53b5537f2f11e",
          "IMPHASH=bdcd836a46bc2415773f6b5ea77a46e4",
          "IMPHASH=c28cd6ccd83179e79dac132a553693d9"
        ]
      },
      "selection_hashes": {
        "Imphash": [
          "0604bb7cb4bb851e2168d5c7d9399087",
          "2e5f0e649d97f32b03c09e4686d0574f",
          "52f8aa269f69f0edad9e8fcdaedce276",
          "c0e5d314da39dbf65a2dbff409cc2c76",
          "58623490691babe8330adc81cd04a663",
          "8ee39b48656e4d6b8459d7ba7da7438b",
          "45ee545ae77e8d43fc70ede9efcd4c96",
          "a1b2e245acd47e4a348e1a552a02859a",
          "2a5f85fe4609461c6339637594fa9b0a",
          "6b2c6f95233c2914d1d488ee27531acc",
          "9f2fdd3f9ab922bbb0560a7df46f4342",
          "d8a719865c448b1bd2ec241e46ac1c88",
          "0ea54f8c9af4a2fe8367fa457f48ed38",
          "9d519ae0a0864d6d6ae3f8b6c9c70af6",
          "a74929edfc3289895e3f2885278947ae",
          "a66b476c2d06c370f0a53b5537f2f11e",
          "bdcd836a46bc2415773f6b5ea77a46e4",
          "c28cd6ccd83179e79dac132a553693d9"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Legitimate WinDivert driver usage"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DLL Loaded From Suspicious Location Via Cmspt.EXE",
    "id": 48,
    "status": "test",
    "description": "Detects cmstp loading \"dll\" or \"ocx\" files from suspicious locations",
    "references": [
      "https://github.com/vadim-hunter/Detection-Ideas-Rules/blob/02bcbfc2bfb8b4da601bb30de0344ae453aa1afe/TTPs/Defense%20Evasion/T1218%20-%20Signed%20Binary%20Proxy%20Execution/T1218.003%20-%20CMSTP/Procedures.yaml"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/30",
    "modified": "2023/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.003"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\cmstp.exe",
        "ImageLoaded|contains": [
          "\\PerfLogs\\",
          "\\ProgramData\\",
          "\\Users\\",
          "\\Windows\\Temp\\",
          "C:\\Temp\\"
        ],
        "ImageLoaded|endswith": [
          ".dll",
          ".ocx"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Amsi.DLL Loaded Via LOLBIN Process",
    "id": 49,
    "status": "experimental",
    "description": "Detects loading of \"Amsi.dll\" by a living of the land process. This could be an indication of a \"PowerShell without PowerShell\" attack",
    "references": [
      "Internal Research",
      "https://www.paloaltonetworks.com/blog/security-operations/stopping-powershell-without-powershell/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/01",
    "modified": "2023/09/20",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\amsi.dll",
        "Image|endswith": [
          "\\ExtExport.exe",
          "\\odbcconf.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Azure Browser SSO Abuse",
    "id": 50,
    "status": "test",
    "description": "Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.\nAn attacker can use this to authenticate to Azure AD in a browser as that user.\n",
    "references": [
      "https://posts.specterops.io/requesting-azure-ad-request-tokens-on-azure-ad-joined-machines-for-browser-sso-2b0409caad30"
    ],
    "author": "Den Iuzvyk",
    "date": "2020/07/15",
    "modified": "2023/04/18",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded": "C:\\Windows\\System32\\MicrosoftAccountTokenProvider.dll"
      },
      "filter_main_bgtaskhost": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ],
        "Image|endswith": "\\BackgroundTaskHost.exe"
      },
      "filter_optional_devenv": {
        "Image|startswith": [
          "C:\\Program Files\\Microsoft Visual Studio\\",
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\"
        ],
        "Image|endswith": "\\IDE\\devenv.exe"
      },
      "filter_optional_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_optional_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_optional_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_optional_onedrive": {
        "Image|endswith": "\\AppData\\Local\\Microsoft\\OneDrive\\OneDrive.exe"
      },
      "filter_optional_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "False positives are expected since this rules is only looking for the DLL load event. This rule is better used in correlation with related activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Renamed Comsvcs DLL Loaded By Rundll32",
    "id": 51,
    "status": "test",
    "description": "Detects rundll32 loading a renamed comsvcs.dll to dump process memory",
    "references": [
      "https://twitter.com/sbousseaden/status/1555200155351228419"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/14",
    "modified": "2023/02/17",
    "tags": [
      "attack.credential_access",
      "attack.defense_evasion",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\rundll32.exe",
        "Hashes|contains": [
          "IMPHASH=eed93054cb555f3de70eaa9787f32ebb",
          "IMPHASH=5e0dbdec1fce52daae251a110b4f309d",
          "IMPHASH=eadbccbb324829acb5f2bbe87e5549a8",
          "IMPHASH=407ca0f7b523319d758a40d7c0193699",
          "IMPHASH=281d618f4e6271e527e6386ea6f748de"
        ]
      },
      "filter": {
        "ImageLoaded|endswith": "\\comsvcs.dll"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CredUI.DLL Loaded By Uncommon Process",
    "id": 52,
    "status": "experimental",
    "description": "Detects loading of \"credui.dll\" and related DLLs by an uncommon process. Attackers might leverage this DLL for potential use of \"CredUIPromptForCredentials\" or \"CredUnPackAuthenticationBufferW\".",
    "references": [
      "https://securitydatasets.com/notebooks/atomic/windows/credential_access/SDWIN-201020013208.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.002/T1056.002.md#atomic-test-2---powershell---prompt-user-for-password",
      "https://docs.microsoft.com/en-us/windows/win32/api/wincred/nf-wincred-creduipromptforcredentialsa",
      "https://github.com/S12cybersecurity/RDPCredentialStealer"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/20",
    "modified": "2023/07/28",
    "tags": [
      "attack.credential_access",
      "attack.collection",
      "attack.t1056.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "ImageLoaded|endswith": [
            "\\credui.dll",
            "\\wincredui.dll"
          ]
        },
        {
          "OriginalFileName": [
            "credui.dll",
            "wincredui.dll"
          ]
        }
      ],
      "filter_main_generic": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\",
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "filter_main_full": {
        "Image": [
          "C:\\Windows\\explorer.exe",
          "C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe",
          "C:\\Windows\\regedit.exe"
        ]
      },
      "filter_optional_opera": {
        "Image|endswith": "\\opera_autoupdate.exe"
      },
      "filter_optional_process_explorer": {
        "Image|endswith": [
          "\\procexp64.exe",
          "\\procexp.exe"
        ]
      },
      "filter_optional_teams": {
        "Image|startswith": "C:\\Users\\",
        "Image|contains": "\\AppData\\Local\\Microsoft\\Teams\\",
        "Image|endswith": "\\Teams.exe"
      },
      "filter_optional_onedrive": {
        "Image|startswith": "C:\\Users\\",
        "Image|contains": "\\AppData\\Local\\Microsoft\\OneDrive\\"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Other legitimate processes loading those DLLs in your environment."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Load Of Dbghelp/Dbgcore DLL From Suspicious Process",
    "id": 53,
    "related": [
      {
        "id": "bdc64095-d59a-42a2-8588-71fd9c9d9abc",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes.\nTools like ProcessHacker and some attacker tradecraft use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.\nAs an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine.\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump",
      "https://www.pinvoke.net/default.aspx/dbghelp/MiniDumpWriteDump.html",
      "https://medium.com/@fsx30/bypass-edrs-memory-protection-introduction-to-hooking-2efb21acffd6"
    ],
    "author": "Perez Diego (@darkquassar), oscd.community, Ecco",
    "date": "2019/10/27",
    "modified": "2023/03/09",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\dbghelp.dll",
          "\\dbgcore.dll"
        ],
        "Image|endswith": [
          "\\msbuild.exe",
          "\\cmd.exe",
          "\\rundll32.exe",
          "\\winword.exe",
          "\\excel.exe",
          "\\powerpnt.exe",
          "\\outlook.exe",
          "\\monitoringhost.exe",
          "\\wmic.exe",
          "\\bash.exe",
          "\\wscript.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\dnx.exe",
          "\\regsvcs.exe",
          "\\sc.exe",
          "\\scriptrunner.exe"
        ]
      },
      "filter_tiworker": {
        "CommandLine|startswith": "C:\\WINDOWS\\winsxs\\",
        "CommandLine|endswith": "\\TiWorker.exe -Embedding"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Unsigned Dbghelp/Dbgcore DLL Loaded",
    "id": 54,
    "related": [
      {
        "id": "0e277796-5f23-4e49-a490-483131d4f6e1",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the load of dbghelp/dbgcore DLL (used to make memory dumps) by suspicious processes.\nTools like ProcessHacker and some attacker tradecract use MiniDumpWriteDump API found in dbghelp.dll or dbgcore.dll.\nAs an example, SilentTrynity C2 Framework has a module that leverages this API to dump the contents of Lsass.exe and transfer it over the network back to the attacker's machine.\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump",
      "https://www.pinvoke.net/default.aspx/dbghelp/MiniDumpWriteDump.html",
      "https://medium.com/@fsx30/bypass-edrs-memory-protection-introduction-to-hooking-2efb21acffd6"
    ],
    "author": "Perez Diego (@darkquassar), oscd.community, Ecco",
    "date": "2019/10/27",
    "modified": "2022/12/09",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\dbghelp.dll",
          "\\dbgcore.dll"
        ],
        "Signed": "false"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PCRE.NET Package Image Load",
    "id": 55,
    "status": "test",
    "description": "Detects processes loading modules related to PCRE.NET package",
    "references": [
      "https://twitter.com/rbmaslen/status/1321859647091970051",
      "https://twitter.com/tifkin_/status/1321916444557365248"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/29",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|contains": "\\AppData\\Local\\Temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Load Of RstrtMgr.DLL By A Suspicious Process",
    "id": 56,
    "related": [
      {
        "id": "3669afd2-9891-4534-a626-e5cf03810a61",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the load of RstrtMgr DLL (Restart Manager) by a suspicious process.\nThis library has been used during ransomware campaigns to kill processes that would prevent file encryption by locking them (e.g. Conti ransomware, Cactus ransomware). It has also recently been seen used by the BiBi wiper for Windows.\nIt could also be used for anti-analysis purposes by shut downing specific processes.\n",
    "references": [
      "https://www.crowdstrike.com/blog/windows-restart-manager-part-1/",
      "https://www.crowdstrike.com/blog/windows-restart-manager-part-2/",
      "https://www.swascan.com/cactus-ransomware-malware-analysis/",
      "https://taiwan.postsen.com/business/88601/Hamas-hackers-use-data-destruction-software-BiBi-which-consumes-a-lot-of-processor-resources-to-wipe-Windows-computer-data--iThome.html"
    ],
    "author": "Luc G\u00c3\u00a9naux",
    "date": "2023/11/28",
    "tags": [
      "attack.impact",
      "attack.defense_evasion",
      "attack.t1486",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "ImageLoaded|endswith": "\\RstrtMgr.dll"
        },
        {
          "OriginalFileName": "RstrtMgr.dll"
        }
      ],
      "selection_folders_1": {
        "Image|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          "\\Temporary Internet"
        ]
      },
      "selection_folders_2": [
        {
          "Image|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "Image|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "Image|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        }
      ],
      "condition": "selection_img and 1 of selection_folders_*"
    },
    "falsepositives": [
      "Processes related to software installation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Load Of RstrtMgr.DLL By An Uncommon Process",
    "id": 57,
    "related": [
      {
        "id": "b48492dc-c5ef-4572-8dff-32bc241c15c8",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the load of RstrtMgr DLL (Restart Manager) by an uncommon process.\nThis library has been used during ransomware campaigns to kill processes that would prevent file encryption by locking them (e.g. Conti ransomware, Cactus ransomware). It has also recently been seen used by the BiBi wiper for Windows.\nIt could also be used for anti-analysis purposes by shut downing specific processes.\n",
    "references": [
      "https://www.crowdstrike.com/blog/windows-restart-manager-part-1/",
      "https://www.crowdstrike.com/blog/windows-restart-manager-part-2/",
      "https://www.swascan.com/cactus-ransomware-malware-analysis/",
      "https://taiwan.postsen.com/business/88601/Hamas-hackers-use-data-destruction-software-BiBi-which-consumes-a-lot-of-processor-resources-to-wipe-Windows-computer-data--iThome.html"
    ],
    "author": "Luc G\u00c3\u00a9naux",
    "date": "2023/11/28",
    "tags": [
      "attack.impact",
      "attack.defense_evasion",
      "attack.t1486",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "ImageLoaded|endswith": "\\RstrtMgr.dll"
        },
        {
          "OriginalFileName": "RstrtMgr.dll"
        }
      ],
      "filter_main_generic": {
        "Image|contains": [
          ":\\$WINDOWS.~BT\\",
          ":\\$WinREAgent\\",
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\ProgramData\\",
          ":\\Windows\\explorer.exe",
          ":\\Windows\\SoftwareDistribution\\",
          ":\\Windows\\SysNative\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\",
          ":\\WUDownloadCache\\"
        ]
      },
      "filter_main_user_software_installations": {
        "Image|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\Temp\\is-",
          ".tmp\\"
        ],
        "Image|endswith": ".tmp"
      },
      "filter_main_admin_software_installations": {
        "Image|contains": ":\\Windows\\Temp\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Other legitimate Windows processes not currently listed",
      "Processes related to software installation"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Diagnostic Library Sdiageng.DLL Loaded By Msdt.EXE",
    "id": 58,
    "status": "test",
    "description": "Detects both of CVE-2022-30190 (Follina) and DogWalk vulnerabilities exploiting msdt.exe binary to load the \"sdiageng.dll\" library",
    "references": [
      "https://www.securonix.com/blog/detecting-microsoft-msdt-dogwalk/"
    ],
    "author": "Greg (rule)",
    "date": "2022/06/17",
    "modified": "2023/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202",
      "cve.2022.30190"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\msdt.exe",
        "ImageLoaded|endswith": "\\sdiageng.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Core DLL Loaded By Non PowerShell Process",
    "id": 59,
    "related": [
      {
        "id": "867613fb-fa60-4497-a017-a82df74a172c",
        "type": "obsoletes"
      },
      {
        "id": "fe6e002f-f244-4278-9263-20e4b593827f",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects loading of essential DLLs used by PowerShell by non-PowerShell process.\nDetects behavior similar to meterpreter's \"load powershell\" extension.\n",
    "references": [
      "https://adsecurity.org/?p=2921",
      "https://github.com/p3nt4/PowerShdll"
    ],
    "author": "Tom Kern, oscd.community, Natalia Shornikova, Tim Shelton, Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2019/11/14",
    "modified": "2024/01/17",
    "tags": [
      "attack.t1059.001",
      "attack.execution"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "System.Management.Automation"
        },
        {
          "OriginalFileName": "System.Management.Automation.dll"
        },
        {
          "ImageLoaded|endswith": [
            "\\System.Management.Automation.dll",
            "\\System.Management.Automation.ni.dll"
          ]
        }
      ],
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Program Files\\PowerShell\\7\\pwsh.exe",
          ":\\Windows\\System32\\dsac.exe",
          ":\\WINDOWS\\System32\\RemoteFXvGPUDisablement.exe",
          ":\\Windows\\System32\\runscripthelper.exe",
          ":\\WINDOWS\\System32\\sdiagnhost.exe",
          ":\\Windows\\System32\\ServerManager.exe",
          ":\\Windows\\System32\\SyncAppvPublishingServer.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
          ":\\Windows\\System32\\winrshost.exe",
          ":\\Windows\\System32\\wsmprovhost.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe",
          ":\\Windows\\SysWOW64\\winrshost.exe",
          ":\\Windows\\SysWOW64\\wsmprovhost.exe"
        ]
      },
      "filter_main_dotnet": {
        "Image|contains": [
          ":\\Windows\\Microsoft.NET\\Framework\\",
          ":\\Windows\\Microsoft.NET\\Framework64\\"
        ],
        "Image|endswith": "\\mscorsvw.exe"
      },
      "filter_optional_sql_server_mgmt": {
        "Image|contains": [
          ":\\Program Files (x86)\\Microsoft SQL Server Management Studio",
          ":\\Program Files\\Microsoft SQL Server Management Studio"
        ],
        "Image|endswith": "\\IDE\\Ssms.exe"
      },
      "filter_optional_sql_server_tools": {
        "Image|contains": [
          ":\\Program Files (x86)\\Microsoft SQL Server\\",
          ":\\Program Files\\Microsoft SQL Server\\"
        ],
        "Image|endswith": "\\Tools\\Binn\\SQLPS.exe"
      },
      "filter_optional_citrix": {
        "Image|endswith": "\\Citrix\\ConfigSync\\ConfigSyncRun.exe"
      },
      "filter_optional_vs": {
        "Image|contains": [
          ":\\Program Files (x86)\\Microsoft Visual Studio\\",
          ":\\Program Files\\Microsoft Visual Studio\\"
        ]
      },
      "filter_optional_chocolatey": {
        "Image|contains": ":\\ProgramData\\chocolatey\\choco.exe"
      },
      "filter_optional_nextron": {
        "Image|contains": ":\\Windows\\Temp\\asgard2-agent\\",
        "Image|endswith": [
          "\\thor64.exe",
          "\\thor.exe"
        ]
      },
      "filter_optional_aurora": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Used by some .NET binaries, minimal on user workstation.",
      "Used by Microsoft SQL Server Management Studio"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Time Travel Debugging Utility Usage - Image",
    "id": 60,
    "status": "test",
    "description": "Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Tttracer/",
      "https://twitter.com/mattifestation/status/1196390321783025666",
      "https://twitter.com/oulusoyum/status/1191329746069655553"
    ],
    "author": "Ensar \u00c5\u017eamil, @sblmsrsn, @oscd_initiative",
    "date": "2020/10/06",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.credential_access",
      "attack.t1218",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\ttdrecord.dll",
          "\\ttdwriter.dll",
          "\\ttdloader.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage by software developers/testers"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Volume Shadow Copy Vssapi.dll Load",
    "id": 61,
    "related": [
      {
        "id": "333cdbe8-27bb-4246-bf82-b41a0dca4b70",
        "type": "similar"
      },
      {
        "id": "48bfd177-7cf2-412b-ad77-baf923489e82",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the image load of VSS DLL by uncommon executables",
    "references": [
      "https://github.com/ORCx41/DeleteShadowCopies"
    ],
    "author": "frack113",
    "date": "2022/10/31",
    "modified": "2023/05/03",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\vssapi.dll"
      },
      "filter_windows": [
        {
          "Image": [
            "C:\\Windows\\explorer.exe",
            "C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe"
          ]
        },
        {
          "Image|startswith": [
            "C:\\Windows\\System32\\",
            "C:\\Windows\\SysWOW64\\",
            "C:\\Windows\\Temp\\{",
            "C:\\Windows\\WinSxS\\"
          ]
        }
      ],
      "filter_program_files": {
        "Image|startswith": [
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "filter_programdata_packagecache": {
        "Image|startswith": "C:\\ProgramData\\Package Cache\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Volume Shadow Copy Vsstrace.dll Load",
    "id": 62,
    "related": [
      {
        "id": "333cdbe8-27bb-4246-bf82-b41a0dca4b70",
        "type": "similar"
      },
      {
        "id": "37774c23-25a1-4adb-bb6d-8bb9fd59c0f8",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the image load of VSS DLL by uncommon executables",
    "references": [
      "https://github.com/ORCx41/DeleteShadowCopies"
    ],
    "author": "frack113",
    "date": "2023/02/17",
    "modified": "2023/03/28",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\vsstrace.dll"
      },
      "filter_windows": [
        {
          "Image": [
            "C:\\Windows\\explorer.exe",
            "C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe"
          ]
        },
        {
          "Image|startswith": [
            "C:\\Windows\\System32\\",
            "C:\\Windows\\SysWOW64\\",
            "C:\\Windows\\Temp\\{",
            "C:\\Windows\\WinSxS\\"
          ]
        }
      ],
      "filter_program_files": {
        "Image|startswith": [
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Volume Shadow Copy VSS_PS.dll Load",
    "id": 63,
    "related": [
      {
        "id": "48bfd177-7cf2-412b-ad77-baf923489e82",
        "type": "similar"
      },
      {
        "id": "37774c23-25a1-4adb-bb6d-8bb9fd59c0f8",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the image load of vss_ps.dll by uncommon executables",
    "references": [
      "https://www.virustotal.com/gui/file/ba88ca45589fae0139a40ca27738a8fc2dfbe1be5a64a9558f4e0f52b35c5add",
      "https://twitter.com/am0nsec/status/1412232114980982787"
    ],
    "author": "Markus Neis, @markus_neis",
    "date": "2021/07/07",
    "modified": "2023/05/23",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\vss_ps.dll"
      },
      "filter_legit": {
        "Image|startswith": "C:\\Windows\\",
        "Image|endswith": [
          "\\clussvc.exe",
          "\\dismhost.exe",
          "\\dllhost.exe",
          "\\inetsrv\\appcmd.exe",
          "\\inetsrv\\iissetup.exe",
          "\\msiexec.exe",
          "\\rundll32.exe",
          "\\searchindexer.exe",
          "\\srtasks.exe",
          "\\svchost.exe",
          "\\taskhostw.exe",
          "\\thor.exe",
          "\\thor64.exe",
          "\\tiworker.exe",
          "\\vssvc.exe",
          "\\WmiPrvSE.exe",
          "\\System32\\SystemPropertiesAdvanced.exe"
        ]
      },
      "filter_programfiles": {
        "Image|startswith": [
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "filter_update": {
        "CommandLine|startswith": "C:\\$WinREAgent\\Scratch\\",
        "CommandLine|contains": "\\dismhost.exe {"
      },
      "filter_image_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpEvtMute DLL Load",
    "id": 64,
    "related": [
      {
        "id": "bedfc8ad-d1c7-4e37-a20e-e2b0dbee759c",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the load of EvtMuteHook.dll, a key component of SharpEvtHook, a tool that tampers with the Windows event logs",
    "references": [
      "https://github.com/bats3c/EvtMute"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/07",
    "modified": "2023/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Hashes|contains": "IMPHASH=330768A4F172E10ACB6287B87289D83B"
        },
        {
          "Imphash": "330768a4f172e10acb6287b87289d83b"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Other DLLs with the same Imphash"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SILENTTRINITY Stager DLL Load",
    "id": 65,
    "related": [
      {
        "id": "03552375-cc2c-4883-bbe4-7958d5a980be",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects SILENTTRINITY stager dll loading activity",
    "references": [
      "https://github.com/byt3bl33d3r/SILENTTRINITY"
    ],
    "author": "Aleksey Potapov, oscd.community",
    "date": "2019/10/22",
    "modified": "2023/02/17",
    "tags": [
      "attack.command_and_control",
      "attack.t1071"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Description|contains": "st2stager"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential DCOM InternetExplorer.Application DLL Hijack - Image Load",
    "id": 66,
    "related": [
      {
        "id": "e554f142-5cf3-4e55-ace9-a1b59e0def65",
        "type": "obsoletes"
      },
      {
        "id": "2f7979ae-f82b-45af-ac1d-2b10e93b0baa",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects potential DLL hijack of \"iertutil.dll\" found in the DCOM InternetExplorer.Application Class",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/201009-RemoteDCOMIErtUtilDLLHijack/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR), wagga",
    "date": "2020/10/12",
    "modified": "2022/12/18",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1021.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\Internet Explorer\\iexplore.exe",
        "ImageLoaded|endswith": "\\Internet Explorer\\iertutil.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Unsigned Image Loaded Into LSASS Process",
    "id": 67,
    "status": "test",
    "description": "Loading unsigned image (DLL, EXE) into LSASS process",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community",
    "date": "2019/10/22",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\lsass.exe",
        "Signed": "false"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Valid user connecting using RDP"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DotNET Assembly DLL Loaded Via Office Application",
    "id": 68,
    "status": "test",
    "description": "Detects any assembly DLL being loaded by an Office Product",
    "references": [
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "Antonlovesdnb",
    "date": "2020/02/19",
    "modified": "2023/03/29",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|startswith": "C:\\Windows\\assembly\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CLR DLL Loaded Via Office Applications",
    "id": 69,
    "status": "test",
    "description": "Detects CLR DLL being loaded by an Office Product",
    "references": [
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "Antonlovesdnb",
    "date": "2020/02/19",
    "modified": "2023/03/29",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\outlook.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|contains": "\\clr.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "GAC DLL Loaded Via Office Applications",
    "id": 70,
    "status": "test",
    "description": "Detects any GAC DLL being loaded by an Office Product",
    "references": [
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "Antonlovesdnb",
    "date": "2020/02/19",
    "modified": "2023/02/10",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|startswith": "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate macro usage. Add the appropriate filter according to your environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Active Directory Parsing DLL Loaded Via Office Application",
    "id": 71,
    "status": "test",
    "description": "Detects DSParse DLL being loaded by an Office Product",
    "references": [
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "Antonlovesdnb",
    "date": "2020/02/19",
    "modified": "2023/03/28",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|contains": "\\dsparse.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Microsoft Excel Add-In Loaded From Uncommon Location",
    "id": 72,
    "related": [
      {
        "id": "c5f4b5cb-4c25-4249-ba91-aa03626e3185",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects Microsoft Excel loading an Add-In (.xll) file from an uncommon location",
    "references": [
      "https://www.mandiant.com/resources/blog/lnk-between-browsers",
      "https://wazuh.com/blog/detecting-xll-files-used-for-dropping-fin7-jssloader-with-wazuh/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/12",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\excel.exe",
        "ImageLoaded|contains": [
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Perflogs\\",
          "\\Temp\\",
          "\\Users\\Public\\",
          "\\Windows\\Tasks\\"
        ],
        "ImageLoaded|endswith": ".xll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Some tuning might be required to allow or remove certain locations used by the rule if you consider them as safe locations"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Active Directory Kerberos DLL Loaded Via Office Application",
    "id": 73,
    "status": "test",
    "description": "Detects Kerberos DLL being loaded by an Office Product",
    "references": [
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "Antonlovesdnb",
    "date": "2020/02/19",
    "modified": "2023/03/28",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|endswith": "\\kerberos.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Microsoft VBA For Outlook Addin Loaded Via Outlook",
    "id": 74,
    "status": "test",
    "description": "Detects outlvba (Microsoft VBA for Outlook Addin) DLL being loaded by the outlook process",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=58"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/08",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\outlook.exe",
        "ImageLoaded|startswith": "\\outlvba.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate macro usage. Add the appropriate filter according to your environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Core DLL Loaded Via Office Application",
    "id": 75,
    "status": "experimental",
    "description": "Detects PowerShell core DLL being loaded by an Office Product",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/01",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\outlook.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|contains": [
          "\\System.Management.Automation.Dll",
          "\\System.Management.Automation.ni.Dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "VBA DLL Loaded Via Office Application",
    "id": 76,
    "status": "test",
    "description": "Detects VB DLL's loaded by an office application. Which could indicate the presence of VBA Macros.",
    "references": [
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "Antonlovesdnb",
    "date": "2020/02/19",
    "modified": "2023/02/10",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\mspub.exe",
          "\\onenote.exe",
          "\\onenoteim.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "ImageLoaded|endswith": [
          "\\VBE7.DLL",
          "\\VBEUI.DLL",
          "\\VBE7INTL.DLL"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate macro usage. Add the appropriate filter according to your environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote DLL Load Via Rundll32.EXE",
    "id": 77,
    "status": "experimental",
    "description": "Detects a remote DLL load event via \"rundll32.exe\".",
    "references": [
      "https://github.com/gabe-k/themebleed",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/18",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\rundll32.exe",
        "ImageLoaded|startswith": "\\\\\\\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WMI ActiveScriptEventConsumers Activity Via Scrcons.EXE DLL Load",
    "id": 78,
    "status": "test",
    "description": "Detects signs of the WMI script host process \"scrcons.exe\" loading scripting DLLs which could indicates WMI ActiveScriptEventConsumers EventConsumers activity.",
    "references": [
      "https://twitter.com/HunterPlaybook/status/1301207718355759107",
      "https://www.mdsec.co.uk/2020/09/i-like-to-move-it-windows-lateral-movement-part-1-wmi-event-subscription/",
      "https://threathunterplaybook.com/hunts/windows/200902-RemoteWMIActiveScriptEventConsumers/notebook.html"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/09/02",
    "modified": "2023/02/22",
    "tags": [
      "attack.lateral_movement",
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.003"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\scrcons.exe",
        "ImageLoaded|endswith": [
          "\\vbscript.dll",
          "\\wbemdisp.dll",
          "\\wshom.ocx",
          "\\scrrun.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate event consumers",
      "Dell computers on some versions register an event consumer that is known to cause false positives when brightness is changed by the corresponding keyboard button"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential 7za.DLL Sideloading",
    "id": 79,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"7za.dll\"",
    "references": [
      "https://www.gov.pl/attachment/ee91f24d-3e67-436d-aa50-7fa56acf789d"
    ],
    "author": "X__Junior",
    "date": "2023/06/09",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\7za.dll"
      },
      "filter_main_legit_path": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\"
        ],
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate third party application located in \"AppData\" may leverage this DLL to offer 7z compression functionality and may generate false positives. Apply additional filters as needed."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Abusable DLL Potential Sideloading From Suspicious Location",
    "id": 80,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of DLLs that are known to be abused from suspicious locations",
    "references": [
      "https://www.trendmicro.com/en_us/research/23/f/behind-the-scenes-unveiling-the-hidden-workings-of-earth-preta.html",
      "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/11",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection_dll": {
        "ImageLoaded|endswith": [
          "\\coreclr.dll",
          "\\facesdk.dll",
          "\\HPCustPartUI.dll",
          "\\libcef.dll",
          "\\ZIPDLL.dll"
        ]
      },
      "selection_folders_1": {
        "ImageLoaded|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          "\\Temporary Internet",
          "\\Windows\\Temp\\"
        ]
      },
      "selection_folders_2": [
        {
          "ImageLoaded|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "ImageLoaded|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "ImageLoaded|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        },
        {
          "ImageLoaded|contains|all": [
            ":\\Users\\",
            "\\Pictures\\"
          ]
        }
      ],
      "condition": "selection_dll and 1 of selection_folders_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Antivirus Software DLL Sideloading",
    "id": 81,
    "status": "test",
    "description": "Detects potential DLL sideloading of DLLs that are part of antivirus software suchas McAfee, Symantec...etc",
    "references": [
      "https://hijacklibs.net/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
    "date": "2022/08/17",
    "modified": "2023/03/13",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection_bitdefender": {
        "ImageLoaded|endswith": "\\log.dll"
      },
      "filter_log_dll_bitdefender": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\Bitdefender Antivirus Free\\",
          "C:\\Program Files (x86)\\Bitdefender Antivirus Free\\"
        ]
      },
      "filter_log_dll_dell_sar": {
        "Image": "C:\\Program Files\\Dell\\SARemediation\\audit\\TelemetryUtility.exe",
        "ImageLoaded": [
          "C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll",
          "C:\\Program Files\\Dell\\SARemediation\\audit\\log.dll"
        ]
      },
      "filter_log_dll_canon": {
        "ImageLoaded|startswith": "C:\\Program Files\\Canon\\MyPrinter\\"
      },
      "selection_fsecure": {
        "ImageLoaded|endswith": "\\qrt.dll"
      },
      "filter_fsecure": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\F-Secure\\Anti-Virus\\",
          "C:\\Program Files (x86)\\F-Secure\\Anti-Virus\\"
        ]
      },
      "selection_mcafee": {
        "ImageLoaded|endswith": [
          "\\ashldres.dll",
          "\\lockdown.dll",
          "\\vsodscpl.dll"
        ]
      },
      "filter_mcafee": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\McAfee\\",
          "C:\\Program Files (x86)\\McAfee\\"
        ]
      },
      "selection_cyberark": {
        "ImageLoaded|endswith": "\\vftrace.dll"
      },
      "filter_cyberark": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\",
          "C:\\Program Files (x86)\\CyberArk\\Endpoint Privilege Manager\\Agent\\x32\\"
        ]
      },
      "selection_avast": {
        "ImageLoaded|endswith": "\\wsc.dll"
      },
      "filter_avast": {
        "ImageLoaded|startswith": [
          "C:\\program Files\\AVAST Software\\Avast\\",
          "C:\\program Files (x86)\\AVAST Software\\Avast\\"
        ]
      },
      "selection_eset_deslock": {
        "ImageLoaded|endswith": "\\DLPPREM32.dll"
      },
      "filter_eset_deslock": {
        "ImageLoaded|startswith": [
          "C:\\program Files\\ESET",
          "C:\\program Files (x86)\\ESET"
        ]
      },
      "selection_titanium": {
        "ImageLoaded|endswith": "\\tmdbglog.dll"
      },
      "filter_titanium": {
        "ImageLoaded|startswith": [
          "C:\\program Files\\Trend Micro\\Titanium\\",
          "C:\\program Files (x86)\\Trend Micro\\Titanium\\"
        ]
      },
      "condition": "(selection_bitdefender and not 1 of filter_log_dll_*) or (selection_fsecure and not filter_fsecure) or (selection_mcafee and not filter_mcafee) or (selection_cyberark and not filter_cyberark) or (selection_avast and not filter_avast) or (selection_titanium and not filter_titanium) or (selection_eset_deslock and not filter_eset_deslock)"
    },
    "falsepositives": [
      "Applications that load the same dlls mentioned in the detection section. Investigate them and filter them out if a lot FPs are caused.",
      "Dell SARemediation plugin folder (C:\\Program Files\\Dell\\SARemediation\\plugin\\log.dll) is known to contain the 'log.dll' file.",
      "The Canon MyPrinter folder 'C:\\Program Files\\Canon\\MyPrinter\\' is known to contain the 'log.dll' file"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential appverifUI.DLL Sideloading",
    "id": 82,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"appverifUI.dll\"",
    "references": [
      "https://fatrodzianko.com/2020/02/15/dll-side-loading-appverif-exe/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/20",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\appverifUI.dll"
      },
      "filter_main_legit_path": {
        "Image": [
          "C:\\Windows\\SysWOW64\\appverif.exe",
          "C:\\Windows\\System32\\appverif.exe"
        ],
        "ImageLoaded|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Aruba Network Service Potential DLL Sideloading",
    "id": 83,
    "status": "test",
    "description": "Detects potential DLL sideloading activity via the Aruba Networks Virtual Intranet Access \"arubanetsvc.exe\" process using DLL Search Order Hijacking",
    "references": [
      "https://twitter.com/wdormann/status/1616581559892545537?t=XLCBO9BziGzD7Bmbt8oMEQ&s=09"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/22",
    "modified": "2023/03/15",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\arubanetsvc.exe",
        "ImageLoaded|endswith": [
          "\\wtsapi32.dll",
          "\\msvcr100.dll",
          "\\msvcp100.dll",
          "\\dbghelp.dll",
          "\\dbgcore.dll",
          "\\wininet.dll",
          "\\iphlpapi.dll",
          "\\version.dll",
          "\\cryptsp.dll",
          "\\cryptbase.dll",
          "\\wldp.dll",
          "\\profapi.dll",
          "\\sspicli.dll",
          "\\winsta.dll",
          "\\dpapi.dll"
        ]
      },
      "filter": {
        "ImageLoaded|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential AVKkid.DLL Sideloading",
    "id": 84,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"AVKkid.dll\"",
    "references": [
      "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\AVKkid.dll"
      },
      "filter_main_legit_path": {
        "Image|contains": [
          "C:\\Program Files (x86)\\G DATA\\",
          "C:\\Program Files\\G DATA\\"
        ],
        "Image|endswith": "\\AVKKid.exe",
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\G DATA\\",
          "C:\\Program Files\\G DATA\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential CCleanerDU.DLL Sideloading",
    "id": 85,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"CCleanerDU.dll\"",
    "references": [
      "https://lab52.io/blog/2344-2/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/13",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\CCleanerDU.dll"
      },
      "filter_main_path": {
        "Image|startswith": [
          "C:\\Program Files\\CCleaner\\",
          "C:\\Program Files (x86)\\CCleaner\\"
        ],
        "Image|endswith": [
          "\\CCleaner.exe",
          "\\CCleaner64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positives could occur from other custom installation paths. Apply additional filters accordingly."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential CCleanerReactivator.DLL Sideloading",
    "id": 86,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"CCleanerReactivator.dll\"",
    "references": [
      "https://lab52.io/blog/2344-2/"
    ],
    "author": "X__Junior",
    "date": "2023/07/13",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\CCleanerReactivator.dll"
      },
      "filter_main_path": {
        "Image|startswith": [
          "C:\\Program Files\\CCleaner\\",
          "C:\\Program Files (x86)\\CCleaner\\"
        ],
        "Image|endswith": "\\CCleanerReactivator.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positives could occur from other custom installation paths. Apply additional filters accordingly."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Chrome Frame Helper DLL Sideloading",
    "id": 87,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"chrome_frame_helper.dll\"",
    "references": [
      "https://hijacklibs.net/entries/3rd_party/google/chrome_frame_helper.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
    "date": "2022/08/17",
    "modified": "2023/05/15",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\chrome_frame_helper.dll"
      },
      "filter_main_path": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\Google\\Chrome\\Application\\",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\"
        ]
      },
      "filter_optional_user_path": {
        "ImageLoaded|contains": "\\AppData\\local\\Google\\Chrome\\Application\\"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Via ClassicExplorer32.dll",
    "id": 88,
    "status": "test",
    "description": "Detects potential DLL sideloading using ClassicExplorer32.dll from the Classic Shell software",
    "references": [
      "https://blogs.blackberry.com/en/2022/12/mustang-panda-uses-the-russian-ukrainian-war-to-attack-europe-and-asia-pacific-targets",
      "https://app.any.run/tasks/6d8cabb0-dcda-44b6-8050-28d6ce281687/"
    ],
    "author": "frack113",
    "date": "2022/12/13",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection_classicexplorer": {
        "ImageLoaded|endswith": "\\ClassicExplorer32.dll"
      },
      "filter_classicexplorer": {
        "ImageLoaded|startswith": "C:\\Program Files\\Classic Shell\\"
      },
      "condition": "selection_classicexplorer and not filter_classicexplorer"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Via comctl32.dll",
    "id": 89,
    "status": "test",
    "description": "Detects potential DLL sideloading using comctl32.dll to obtain system privileges",
    "references": [
      "https://github.com/binderlabs/DirCreate2System",
      "https://github.com/sailay1996/awesome_windows_logical_bugs/blob/60cbb23a801f4c3195deac1cc46df27c225c3d07/dir_create2system.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Subhash Popuri (@pbssubhash)",
    "date": "2022/12/16",
    "modified": "2022/12/19",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|startswith": [
          "C:\\Windows\\System32\\logonUI.exe.local\\",
          "C:\\Windows\\System32\\werFault.exe.local\\",
          "C:\\Windows\\System32\\consent.exe.local\\",
          "C:\\Windows\\System32\\narrator.exe.local\\",
          "C:\\windows\\system32\\wermgr.exe.local\\"
        ],
        "ImageLoaded|endswith": "\\comctl32.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Using Coregen.exe",
    "id": 90,
    "status": "test",
    "description": "Detect usage of DLL \"coregen.exe\" (Microsoft CoreCLR Native Image Generator) binary to sideload arbitrary DLLs.",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Coregen/"
    ],
    "author": "frack113",
    "date": "2022/12/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1055"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\coregen.exe"
      },
      "filter": {
        "ImageLoaded|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Program Files\\Microsoft Silverlight\\",
          "C:\\Program Files (x86)\\Microsoft Silverlight\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "System Control Panel Item Loaded From Uncommon Location",
    "id": 91,
    "status": "experimental",
    "description": "Detects image load events of system control panel items (.cpl) from uncommon or non-system locations which might be the result of sideloading.",
    "references": [
      "https://www.hexacorn.com/blog/2024/01/06/1-little-known-secret-of-fondue-exe/",
      "https://www.hexacorn.com/blog/2024/01/01/1-little-known-secret-of-hdwwiz-exe/"
    ],
    "author": "Anish Bogati",
    "date": "2024/01/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\hdwwiz.cpl",
          "\\appwiz.cpl"
        ]
      },
      "filter_main_legit_location": {
        "ImageLoaded|contains": [
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Of DBGCORE.DLL",
    "id": 92,
    "status": "experimental",
    "description": "Detects DLL sideloading of \"dbgcore.dll\"",
    "references": [
      "https://hijacklibs.net/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
    "date": "2022/10/25",
    "modified": "2023/05/05",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\dbgcore.dll"
      },
      "filter_main_generic": {
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\",
          "C:\\Windows\\SoftwareDistribution\\",
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SystemTemp\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "filter_optional_steam": {
        "ImageLoaded|endswith": "\\Steam\\bin\\cef\\cef.win7x64\\dbgcore.dll"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate applications loading their own versions of the DLL mentioned in this rule"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Of DBGHELP.DLL",
    "id": 93,
    "status": "experimental",
    "description": "Detects DLL sideloading of \"dbghelp.dll\"",
    "references": [
      "https://hijacklibs.net/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
    "date": "2022/10/25",
    "modified": "2023/05/05",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\dbghelp.dll"
      },
      "filter_main_generic": {
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\",
          "C:\\Windows\\SoftwareDistribution\\",
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SystemTemp\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "filter_optional_anaconda": {
        "ImageLoaded|endswith": [
          "\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\amd64\\dbghelp.dll",
          "\\Anaconda3\\Lib\\site-packages\\vtrace\\platforms\\windll\\i386\\dbghelp.dll"
        ]
      },
      "filter_optional_epicgames": {
        "ImageLoaded|endswith": [
          "\\Epic Games\\Launcher\\Engine\\Binaries\\ThirdParty\\DbgHelp\\dbghelp.dll",
          "\\Epic Games\\MagicLegends\\x86\\dbghelp.dll"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate applications loading their own versions of the DLL mentioned in this rule"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential EACore.DLL Sideloading",
    "id": 94,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"EACore.dll\"",
    "references": [
      "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\EACore.dll"
      },
      "filter_main_legit_path": {
        "Image|contains|all": [
          "C:\\Program Files\\Electronic Arts\\EA Desktop\\",
          "\\EACoreServer.exe"
        ],
        "ImageLoaded|startswith": "C:\\Program Files\\Electronic Arts\\EA Desktop\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Edputil.DLL Sideloading",
    "id": 95,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"edputil.dll\"",
    "references": [
      "https://alternativeto.net/news/2023/5/cybercriminals-use-wordpad-vulnerability-to-spread-qbot-malware/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\edputil.dll"
      },
      "filter_main_generic": {
        "ImageLoaded|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\",
          "C\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential System DLL Sideloading From Non System Locations",
    "id": 96,
    "status": "experimental",
    "description": "Detects DLL sideloading of DLLs usually located in system locations (System32, SysWOW64, etc.).",
    "references": [
      "https://hijacklibs.net/",
      "https://blog.cyble.com/2022/07/21/qakbot-resurfaces-with-new-playbook/",
      "https://blog.cyble.com/2022/07/27/targeted-attacks-being-carried-out-via-dll-sideloading/",
      "https://github.com/XForceIR/SideLoadHunter/blob/cc7ef2e5d8908279b0c4cee4e8b6f85f7b8eed52/SideLoads/README.md",
      "https://www.hexacorn.com/blog/2023/12/26/1-little-known-secret-of-runonce-exe-32-bit/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/14",
    "modified": "2024/01/10",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\shfolder.dll",
          "\\activeds.dll",
          "\\adsldpc.dll",
          "\\aepic.dll",
          "\\apphelp.dll",
          "\\applicationframe.dll",
          "\\appxalluserstore.dll",
          "\\appxdeploymentclient.dll",
          "\\archiveint.dll",
          "\\atl.dll",
          "\\audioses.dll",
          "\\auditpolcore.dll",
          "\\authfwcfg.dll",
          "\\authz.dll",
          "\\avrt.dll",
          "\\bcd.dll",
          "\\bcp47langs.dll",
          "\\bcp47mrm.dll",
          "\\bcrypt.dll",
          "\\cabinet.dll",
          "\\cabview.dll",
          "\\certenroll.dll",
          "\\cldapi.dll",
          "\\clipc.dll",
          "\\clusapi.dll",
          "\\cmpbk32.dll",
          "\\coloradapterclient.dll",
          "\\colorui.dll",
          "\\comdlg32.dll",
          "\\connect.dll",
          "\\coremessaging.dll",
          "\\credui.dll",
          "\\cryptbase.dll",
          "\\cryptdll.dll",
          "\\cryptui.dll",
          "\\cryptxml.dll",
          "\\cscapi.dll",
          "\\cscobj.dll",
          "\\cscui.dll",
          "\\d2d1.dll",
          "\\d3d10.dll",
          "\\d3d10_1.dll",
          "\\d3d10_1core.dll",
          "\\d3d10core.dll",
          "\\d3d10warp.dll",
          "\\d3d11.dll",
          "\\d3d12.dll",
          "\\d3d9.dll",
          "\\dataexchange.dll",
          "\\davclnt.dll",
          "\\dcomp.dll",
          "\\defragproxy.dll",
          "\\desktopshellext.dll",
          "\\deviceassociation.dll",
          "\\devicecredential.dll",
          "\\devicepairing.dll",
          "\\devobj.dll",
          "\\devrtl.dll",
          "\\dhcpcmonitor.dll",
          "\\dhcpcsvc.dll",
          "\\dhcpcsvc6.dll",
          "\\directmanipulation.dll",
          "\\dismapi.dll",
          "\\dismcore.dll",
          "\\dmcfgutils.dll",
          "\\dmcmnutils.dll",
          "\\dmenrollengine.dll",
          "\\dmenterprisediagnostics.dll",
          "\\dmiso8601utils.dll",
          "\\dmoleaututils.dll",
          "\\dmprocessxmlfiltered.dll",
          "\\dmpushproxy.dll",
          "\\dmxmlhelputils.dll",
          "\\dnsapi.dll",
          "\\dot3api.dll",
          "\\dot3cfg.dll",
          "\\drprov.dll",
          "\\dsclient.dll",
          "\\dsparse.dll",
          "\\dsreg.dll",
          "\\dsrole.dll",
          "\\dui70.dll",
          "\\duser.dll",
          "\\dusmapi.dll",
          "\\dwmapi.dll",
          "\\dwrite.dll",
          "\\dxgi.dll",
          "\\dxva2.dll",
          "\\eappcfg.dll",
          "\\eappprxy.dll",
          "\\edputil.dll",
          "\\efsadu.dll",
          "\\efsutil.dll",
          "\\esent.dll",
          "\\execmodelproxy.dll",
          "\\explorerframe.dll",
          "\\fastprox.dll",
          "\\faultrep.dll",
          "\\fddevquery.dll",
          "\\feclient.dll",
          "\\fhcfg.dll",
          "\\firewallapi.dll",
          "\\flightsettings.dll",
          "\\fltlib.dll",
          "\\fveapi.dll",
          "\\fwbase.dll",
          "\\fwcfg.dll",
          "\\fwpolicyiomgr.dll",
          "\\fwpuclnt.dll",
          "\\getuname.dll",
          "\\hid.dll",
          "\\hnetmon.dll",
          "\\httpapi.dll",
          "\\idstore.dll",
          "\\ieadvpack.dll",
          "\\iedkcs32.dll",
          "\\iernonce.dll",
          "\\iertutil.dll",
          "\\ifmon.dll",
          "\\iphlpapi.dll",
          "\\iri.dll",
          "\\iscsidsc.dll",
          "\\iscsium.dll",
          "\\isv.exe_rsaenh.dll",
          "\\joinutil.dll",
          "\\ksuser.dll",
          "\\ktmw32.dll",
          "\\licensemanagerapi.dll",
          "\\licensingdiagspp.dll",
          "\\linkinfo.dll",
          "\\loadperf.dll",
          "\\logoncli.dll",
          "\\logoncontroller.dll",
          "\\lpksetupproxyserv.dll",
          "\\magnification.dll",
          "\\mapistub.dll",
          "\\mfcore.dll",
          "\\mfplat.dll",
          "\\mi.dll",
          "\\midimap.dll",
          "\\miutils.dll",
          "\\mlang.dll",
          "\\mmdevapi.dll",
          "\\mobilenetworking.dll",
          "\\mpr.dll",
          "\\mprapi.dll",
          "\\mrmcorer.dll",
          "\\msacm32.dll",
          "\\mscms.dll",
          "\\mscoree.dll",
          "\\msctf.dll",
          "\\msctfmonitor.dll",
          "\\msdrm.dll",
          "\\msftedit.dll",
          "\\msi.dll",
          "\\msutb.dll",
          "\\mswb7.dll",
          "\\mswsock.dll",
          "\\msxml3.dll",
          "\\mtxclu.dll",
          "\\napinsp.dll",
          "\\ncrypt.dll",
          "\\ndfapi.dll",
          "\\netid.dll",
          "\\netiohlp.dll",
          "\\netplwiz.dll",
          "\\netprofm.dll",
          "\\netsetupapi.dll",
          "\\netshell.dll",
          "\\netutils.dll",
          "\\networkexplorer.dll",
          "\\newdev.dll",
          "\\ninput.dll",
          "\\nlaapi.dll",
          "\\nlansp_c.dll",
          "\\npmproxy.dll",
          "\\nshhttp.dll",
          "\\nshipsec.dll",
          "\\nshwfp.dll",
          "\\ntdsapi.dll",
          "\\ntlanman.dll",
          "\\ntlmshared.dll",
          "\\ntmarta.dll",
          "\\ntshrui.dll",
          "\\oleacc.dll",
          "\\omadmapi.dll",
          "\\onex.dll",
          "\\osbaseln.dll",
          "\\osuninst.dll",
          "\\p2p.dll",
          "\\p2pnetsh.dll",
          "\\p9np.dll",
          "\\pcaui.dll",
          "\\pdh.dll",
          "\\peerdistsh.dll",
          "\\pla.dll",
          "\\pnrpnsp.dll",
          "\\policymanager.dll",
          "\\polstore.dll",
          "\\printui.dll",
          "\\propsys.dll",
          "\\prvdmofcomp.dll",
          "\\puiapi.dll",
          "\\radcui.dll",
          "\\rasapi32.dll",
          "\\rasgcw.dll",
          "\\rasman.dll",
          "\\rasmontr.dll",
          "\\reagent.dll",
          "\\regapi.dll",
          "\\resutils.dll",
          "\\rmclient.dll",
          "\\rpcnsh.dll",
          "\\rsaenh.dll",
          "\\rtutils.dll",
          "\\rtworkq.dll",
          "\\samcli.dll",
          "\\samlib.dll",
          "\\sapi_onecore.dll",
          "\\sas.dll",
          "\\scansetting.dll",
          "\\scecli.dll",
          "\\schedcli.dll",
          "\\secur32.dll",
          "\\shell32.dll",
          "\\slc.dll",
          "\\snmpapi.dll",
          "\\spp.dll",
          "\\sppc.dll",
          "\\srclient.dll",
          "\\srpapi.dll",
          "\\srvcli.dll",
          "\\ssp.exe_rsaenh.dll",
          "\\ssp_isv.exe_rsaenh.dll",
          "\\sspicli.dll",
          "\\ssshim.dll",
          "\\staterepository.core.dll",
          "\\structuredquery.dll",
          "\\sxshared.dll",
          "\\tapi32.dll",
          "\\tbs.dll",
          "\\tdh.dll",
          "\\tquery.dll",
          "\\tsworkspace.dll",
          "\\ttdrecord.dll",
          "\\twext.dll",
          "\\twinapi.dll",
          "\\twinui.appcore.dll",
          "\\uianimation.dll",
          "\\uiautomationcore.dll",
          "\\uireng.dll",
          "\\uiribbon.dll",
          "\\updatepolicy.dll",
          "\\userenv.dll",
          "\\utildll.dll",
          "\\uxinit.dll",
          "\\uxtheme.dll",
          "\\vaultcli.dll",
          "\\virtdisk.dll",
          "\\vssapi.dll",
          "\\vsstrace.dll",
          "\\wbemprox.dll",
          "\\wbemsvc.dll",
          "\\wcmapi.dll",
          "\\wcnnetsh.dll",
          "\\wdi.dll",
          "\\wdscore.dll",
          "\\webservices.dll",
          "\\wecapi.dll",
          "\\wer.dll",
          "\\wevtapi.dll",
          "\\whhelper.dll",
          "\\wimgapi.dll",
          "\\winbrand.dll",
          "\\windows.storage.dll",
          "\\windows.storage.search.dll",
          "\\windowscodecs.dll",
          "\\windowscodecsext.dll",
          "\\windowsudk.shellcommon.dll",
          "\\winhttp.dll",
          "\\wininet.dll",
          "\\winipsec.dll",
          "\\winmde.dll",
          "\\winmm.dll",
          "\\winnsi.dll",
          "\\winrnr.dll",
          "\\winsqlite3.dll",
          "\\winsta.dll",
          "\\wkscli.dll",
          "\\wlanapi.dll",
          "\\wlancfg.dll",
          "\\wldp.dll",
          "\\wlidprov.dll",
          "\\wmiclnt.dll",
          "\\wmidcom.dll",
          "\\wmiutils.dll",
          "\\wmsgapi.dll",
          "\\wofutil.dll",
          "\\wpdshext.dll",
          "\\wshbth.dll",
          "\\wshelper.dll",
          "\\wtsapi32.dll",
          "\\wwapi.dll",
          "\\xmllite.dll",
          "\\xolehlp.dll",
          "\\xwizards.dll",
          "\\xwtpw32.dll",
          "\\aclui.dll",
          "\\bderepair.dll",
          "\\bootmenuux.dll",
          "\\dcntel.dll",
          "\\dwmcore.dll",
          "\\dynamoapi.dll",
          "\\fhsvcctl.dll",
          "\\fxsst.dll",
          "\\inproclogger.dll",
          "\\iumbase.dll",
          "\\kdstub.dll",
          "\\maintenanceui.dll",
          "\\mdmdiagnostics.dll",
          "\\mintdh.dll",
          "\\msdtctm.dll",
          "\\nettrace.dll",
          "\\osksupport.dll",
          "\\reseteng.dll",
          "\\resetengine.dll",
          "\\spectrumsyncclient.dll",
          "\\srcore.dll",
          "\\systemsettingsthresholdadminflowui.dll",
          "\\timesync.dll",
          "\\upshared.dll",
          "\\wmpdui.dll",
          "\\wwancfg.dll",
          "\\dpx.dll",
          "\\fxsapi.dll",
          "\\fxstiff.dll",
          "\\xpsservices.dll",
          "\\appvpolicy.dll",
          "\\batmeter.dll",
          "\\bootux.dll",
          "\\cmutil.dll",
          "\\configmanager2.dll",
          "\\coredplus.dll",
          "\\coreuicomponents.dll",
          "\\cryptsp.dll",
          "\\dmcommandlineutils.dll",
          "\\drvstore.dll",
          "\\dsprop.dll",
          "\\dxcore.dll",
          "\\edgeiso.dll",
          "\\framedynos.dll",
          "\\fveskybackup.dll",
          "\\fvewiz.dll",
          "\\gpapi.dll",
          "\\icmp.dll",
          "\\ifsutil.dll",
          "\\iumsdk.dll",
          "\\lockhostingframework.dll",
          "\\lrwizdll.dll",
          "\\mbaexmlparser.dll",
          "\\mfc42u.dll",
          "\\msiso.dll",
          "\\msvcp110_win.dll",
          "\\netapi32.dll",
          "\\netjoin.dll",
          "\\netprovfw.dll",
          "\\opcservices.dll",
          "\\pkeyhelper.dll",
          "\\playsndsrv.dll",
          "\\powrprof.dll",
          "\\prntvpt.dll",
          "\\profapi.dll",
          "\\proximitycommon.dll",
          "\\proximityservicepal.dll",
          "\\rasdlg.dll",
          "\\security.dll",
          "\\sppcext.dll",
          "\\srmtrace.dll",
          "\\tpmcoreprovisioning.dll",
          "\\umpdc.dll",
          "\\unattend.dll",
          "\\urlmon.dll",
          "\\vdsutil.dll",
          "\\version.dll",
          "\\winbio.dll",
          "\\windows.ui.immersive.dll",
          "\\winscard.dll",
          "\\winsync.dll",
          "\\wscapi.dll",
          "\\wsmsvc.dll",
          "\\FxsCompose.dll",
          "\\WfsR.dll",
          "\\rpchttp.dll",
          "\\storageusage.dll",
          "\\amsi.dll",
          "\\PrintIsolationProxy.dll",
          "\\msdtcVSp1res.dll",
          "\\rdpendp.dll",
          "\\dxilconv.dll",
          "\\utcutil.dll",
          "\\appraiser.dll",
          "\\dsound.dll",
          "\\DispBroker.dll",
          "\\FXSRESM.DLL",
          "\\cryptnet.dll",
          "\\COMRES.DLL",
          "\\igdumdim64.dll",
          "\\igd10iumd64.dll",
          "\\igd12umd64.dll",
          "\\igdusc64.dll",
          "\\WLBSCTRL.dll",
          "\\TSMSISrv.dll",
          "\\TSVIPSrv.dll",
          "\\wow64log.dll",
          "\\WptsExtensions.dll",
          "\\wbemcomn.dll"
        ]
      },
      "filter_main_generic": {
        "ImageLoaded|contains": [
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\",
          ":\\Windows\\SoftwareDistribution\\",
          ":\\Windows\\SystemTemp\\",
          ":\\$WINDOWS.~BT\\"
        ]
      },
      "filter_main_defender": {
        "Image|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
        "Image|endswith": "\\version.dll"
      },
      "filter_optional_office_appvpolicy": {
        "Image|endswith": ":\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\OfficeClickToRun.exe",
        "ImageLoaded|endswith": ":\\Program Files\\Common Files\\microsoft shared\\ClickToRun\\AppVPolicy.dll"
      },
      "filter_optional_azure": {
        "ImageLoaded|contains": ":\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\"
      },
      "filter_optional_dell": {
        "Image|contains": [
          ":\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs",
          ":\\Windows\\System32\\backgroundTaskHost.exe"
        ],
        "ImageLoaded|contains": ":\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs"
      },
      "filter_optional_dell_wldp": {
        "Image|contains": ":\\Program Files\\WindowsApps\\DellInc.DellSupportAssistforPCs",
        "Image|endswith": "\\wldp.dll"
      },
      "filter_optional_checkpoint": {
        "Image|contains": [
          ":\\Program Files\\CheckPoint\\",
          ":\\Program Files (x86)\\CheckPoint\\"
        ],
        "Image|endswith": "\\SmartConsole.exe",
        "ImageLoaded|contains": [
          ":\\Program Files\\CheckPoint\\",
          ":\\Program Files (x86)\\CheckPoint\\"
        ],
        "ImageLoaded|endswith": "\\PolicyManager.dll"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate applications loading their own versions of the DLLs mentioned in this rule"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Goopdate.DLL Sideloading",
    "id": 97,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"goopdate.dll\", a DLL used by googleupdate.exe",
    "references": [
      "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/goofy-guineapig/NCSC-MAR-Goofy-Guineapig.pdf"
    ],
    "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "modified": "2023/05/20",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\goopdate.dll"
      },
      "filter_main_generic": {
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\"
        ]
      },
      "filter_optional_dropbox_installer_temp": {
        "Image|contains|all": [
          "\\AppData\\Local\\Temp\\GUM",
          ".tmp\\Dropbox"
        ],
        "ImageLoaded|contains|all": [
          "\\AppData\\Local\\Temp\\GUM",
          ".tmp\\\\goopdate.dll"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "False positives are expected from Google Chrome installations running from user locations (AppData) and other custom locations. Apply additional filters accordingly.",
      "Other third party chromium browsers located in AppData"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Of Libcurl.DLL Via GUP.EXE",
    "id": 98,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"libcurl.dll\" by the \"gup.exe\" process from an uncommon location",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\gup.exe",
        "ImageLoaded|endswith": "\\libcurl.dll"
      },
      "filter_main_notepad_plusplus": {
        "Image|endswith": "\\Notepad++\\updater\\GUP.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Iviewers.DLL Sideloading",
    "id": 99,
    "status": "test",
    "description": "Detects potential DLL sideloading of \"iviewers.dll\" (OLE/COM Object Interface Viewer)",
    "references": [
      "https://www.secureworks.com/research/shadowpad-malware-analysis"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/03/21",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\iviewers.dll"
      },
      "filter": {
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\Windows Kits\\",
          "C:\\Program Files\\Windows Kits\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Via JsSchHlp",
    "id": 100,
    "status": "test",
    "description": "Detects potential DLL sideloading using JUSTSYSTEMS Japanese word processor",
    "references": [
      "https://www.welivesecurity.com/2022/12/14/unmasking-mirrorface-operation-liberalface-targeting-japanese-political-entities/",
      "http://www.windowexe.com/bbs/board.php?q=jsschhlp-exe-c-program-files-common-files-justsystem-jsschhlp-jsschhlp"
    ],
    "author": "frack113",
    "date": "2022/12/14",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\JSESPR.dll"
      },
      "filter": {
        "ImageLoaded|startswith": "C:\\Program Files\\Common Files\\Justsystem\\JsSchHlp\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Libvlc.DLL Sideloading",
    "id": 101,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"libvlc.dll\", a DLL that is legitimately used by \"VLC.exe\"",
    "references": [
      "https://www.trendmicro.com/en_us/research/23/c/earth-preta-updated-stealthy-strategies.html",
      "https://hijacklibs.net/entries/3rd_party/vlc/libvlc.html"
    ],
    "author": "X__Junior",
    "date": "2023/04/17",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\libvlc.dll"
      },
      "filter_main_vlc": {
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\VideoLAN\\VLC\\",
          "C:\\Program Files\\VideoLAN\\VLC\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positives are expected if VLC is installed in non-default locations"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Mfdetours.DLL Sideloading",
    "id": 102,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"mfdetours.dll\". While using \"mftrace.exe\" it can be abused to attach to an arbitrary process and force load any DLL named \"mfdetours.dll\" from the current directory of execution.",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\mfdetours.dll"
      },
      "filter_main_legit_path": {
        "ImageLoaded|contains": ":\\Program Files (x86)\\Windows Kits\\10\\bin\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Unsigned Mfdetours.DLL Sideloading",
    "id": 103,
    "related": [
      {
        "id": "d2605a99-2218-4894-8fd3-2afb7946514d",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects DLL sideloading of unsigned \"mfdetours.dll\". Executing \"mftrace.exe\" can be abused to attach to an arbitrary process and force load any DLL named \"mfdetours.dll\" from the current directory of execution.",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/11",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\mfdetours.dll"
      },
      "filter_main_legit_path": {
        "ImageLoaded|contains": ":\\Program Files (x86)\\Windows Kits\\10\\bin\\",
        "SignatureStatus": "Valid"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Of Non-Existent DLLs From System Folders",
    "id": 104,
    "related": [
      {
        "id": "df6ecb8b-7822-4f4b-b412-08f524b4576c",
        "type": "similar"
      },
      {
        "id": "602a1f13-c640-4d73-b053-be9a2fa58b77",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects DLL sideloading of system DLLs that are not present on the system by default (at least not in system directories).\nUsually this technique is used to achieve UAC bypass or privilege escalation.\n",
    "references": [
      "https://decoded.avast.io/martinchlumecky/png-steganography/",
      "https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992",
      "https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/",
      "https://github.com/Wh04m1001/SysmonEoP",
      "https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/",
      "http://remoteawesomethoughts.blogspot.com/2019/05/windows-10-task-schedulerservice.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), SBousseaden",
    "date": "2022/12/09",
    "modified": "2024/01/10",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          ":\\Windows\\System32\\TSMSISrv.dll",
          ":\\Windows\\System32\\TSVIPSrv.dll",
          ":\\Windows\\System32\\wbem\\wbemcomn.dll",
          ":\\Windows\\System32\\WLBSCTRL.dll",
          ":\\Windows\\System32\\wow64log.dll",
          ":\\Windows\\System32\\WptsExtensions.dll"
        ]
      },
      "filter_main_ms_signed": {
        "Signed": "true",
        "SignatureStatus": "Valid",
        "Signature": "Microsoft Windows"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Microsoft Office DLL Sideload",
    "id": 105,
    "status": "test",
    "description": "Detects DLL sideloading of DLLs that are part of Microsoft Office from non standard location",
    "references": [
      "https://hijacklibs.net/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
    "date": "2022/08/17",
    "modified": "2023/03/15",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\outllib.dll"
      },
      "filter": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\Microsoft Office\\OFFICE",
          "C:\\Program Files (x86)\\Microsoft Office\\OFFICE",
          "C:\\Program Files\\Microsoft Office\\Root\\OFFICE",
          "C:\\Program Files (x86)\\Microsoft Office\\Root\\OFFICE"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Rcdll.DLL Sideloading",
    "id": 106,
    "status": "test",
    "description": "Detects potential DLL sideloading of rcdll.dll",
    "references": [
      "https://www.trendmicro.com/en_us/research/23/c/iron-tiger-sysupdate-adds-linux-targeting.html"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/03/13",
    "modified": "2023/03/15",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\rcdll.dll"
      },
      "filter": {
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\",
          "C:\\Program Files (x86)\\Windows Kits\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential RjvPlatform.DLL Sideloading From Default Location",
    "id": 107,
    "status": "experimental",
    "description": "Detects loading of \"RjvPlatform.dll\" by the \"SystemResetPlatform.exe\" binary which can be abused as a method of DLL side loading since the \"$SysReset\" directory isn't created by default.",
    "references": [
      "https://twitter.com/0gtweet/status/1666716511988330499"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image": "C:\\Windows\\System32\\SystemResetPlatform\\SystemResetPlatform.exe",
        "ImageLoaded": "C:\\$SysReset\\Framework\\Stack\\RjvPlatform.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential RjvPlatform.DLL Sideloading From Non-Default Location",
    "id": 108,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"RjvPlatform.dll\" by \"SystemResetPlatform.exe\" located in a non-default location.",
    "references": [
      "https://twitter.com/0gtweet/status/1666716511988330499"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\RjvPlatform.dll",
        "Image": "\\SystemResetPlatform.exe"
      },
      "filter_main_legit_path": {
        "Image|startswith": "C:\\Windows\\System32\\SystemResetPlatform\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential RoboForm.DLL Sideloading",
    "id": 109,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"roboform.dll\", a DLL used by RoboForm Password Manager",
    "references": [
      "https://twitter.com/StopMalvertisin/status/1648604148848549888",
      "https://twitter.com/t3ft3lb/status/1656194831830401024",
      "https://www.roboform.com/"
    ],
    "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/14",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\roboform.dll",
          "\\roboform-x64.dll"
        ]
      },
      "filter_main_path": {
        "Image|startswith": [
          " C:\\Program Files (x86)\\Siber Systems\\AI RoboForm\\",
          " C:\\Program Files\\Siber Systems\\AI RoboForm\\"
        ],
        "Image|endswith": [
          "\\robotaskbaricon.exe",
          "\\robotaskbaricon-x64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "If installed on a per-user level, the path would be located in \"AppData\\Local\". Add additional filters to reflect this mode of installation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential ShellDispatch.DLL Sideloading",
    "id": 110,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"ShellDispatch.dll\"",
    "references": [
      "https://www.hexacorn.com/blog/2023/06/07/this-lolbin-doesnt-exist/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/20",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\ShellDispatch.dll"
      },
      "filter_main_legit_path": [
        {
          "ImageLoaded|contains|all": [
            ":\\Users\\",
            "\\AppData\\Local\\Temp\\"
          ]
        },
        {
          "ImageLoaded|contains": ":\\Windows\\Temp\\"
        }
      ],
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Some installers may trigger some false positives"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DLL Sideloading Of ShellChromeAPI.DLL",
    "id": 111,
    "related": [
      {
        "id": "e173ad47-4388-4012-ae62-bd13f71c18a8",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects processes loading the non-existent DLL \"ShellChromeAPI\". One known example is the \"DeviceEnroller\" binary in combination with the \"PhoneDeepLink\" flag tries to load this DLL.\nAdversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter\n",
    "references": [
      "https://mobile.twitter.com/0gtweet/status/1564131230941122561",
      "https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/01",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\ShellChromeAPI.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential SmadHook.DLL Sideloading",
    "id": 112,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"SmadHook.dll\", a DLL used by SmadAV antivirus",
    "references": [
      "https://research.checkpoint.com/2023/malware-spotlight-camaro-dragons-tinynote-backdoor/",
      "https://www.qurium.org/alerts/targeted-malware-against-crph/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/01",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\SmadHook32c.dll",
          "\\SmadHook64c.dll"
        ]
      },
      "filter_main_legit_path": {
        "Image": [
          "C:\\Program Files (x86)\\SMADAV\\SmadavProtect32.exe",
          "C:\\Program Files (x86)\\SMADAV\\SmadavProtect64.exe",
          "C:\\Program Files\\SMADAV\\SmadavProtect32.exe",
          "C:\\Program Files\\SMADAV\\SmadavProtect64.exe"
        ],
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\SMADAV\\",
          "C:\\Program Files\\SMADAV\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential SolidPDFCreator.DLL Sideloading",
    "id": 113,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"SolidPDFCreator.dll\"",
    "references": [
      "https://lab52.io/blog/new-mustang-pandas-campaing-against-australia/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/05/07",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\SolidPDFCreator.dll"
      },
      "filter_main_path": {
        "Image|endswith": "\\SolidPDFCreator.exe",
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\SolidDocuments\\SolidPDFCreator\\",
          "C:\\Program Files\\SolidDocuments\\SolidPDFCreator\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Third Party Software DLL Sideloading",
    "id": 114,
    "status": "test",
    "description": "Detects DLL sideloading of DLLs that are part of third party software (zoom, discord....etc)",
    "references": [
      "https://hijacklibs.net/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)",
    "date": "2022/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection_lenovo": {
        "ImageLoaded|endswith": "\\commfunc.dll"
      },
      "filter_lenovo": [
        {
          "ImageLoaded|contains": "\\AppData\\local\\Google\\Chrome\\Application\\"
        },
        {
          "ImageLoaded|startswith": [
            "C:\\Program Files\\Lenovo\\Communications Utility\\",
            "C:\\Program Files (x86)\\Lenovo\\Communications Utility\\"
          ]
        }
      ],
      "selection_toshiba": {
        "ImageLoaded|endswith": "\\tosbtkbd.dll"
      },
      "filter_toshiba": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\Toshiba\\Bluetooth Toshiba Stack\\",
          "C:\\Program Files (x86)\\Toshiba\\Bluetooth Toshiba Stack\\"
        ]
      },
      "condition": "(selection_lenovo and not filter_lenovo) or (selection_toshiba and not filter_toshiba)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Fax Service DLL Search Order Hijack",
    "id": 115,
    "status": "test",
    "description": "The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.",
    "references": [
      "https://windows-internals.com/faxing-your-way-to-system/"
    ],
    "author": "NVISO",
    "date": "2020/05/04",
    "modified": "2022/06/02",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\fxssvc.exe",
        "ImageLoaded|endswith": "ualapi.dll"
      },
      "filter": {
        "ImageLoaded|startswith": "C:\\Windows\\WinSxS\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Vivaldi_elf.DLL Sideloading",
    "id": 116,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"vivaldi_elf.dll\"",
    "references": [
      "https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\vivaldi_elf.dll"
      },
      "filter_main_legit_path": {
        "Image|endswith": "\\Vivaldi\\Application\\vivaldi.exe",
        "ImageLoaded|contains": "\\Vivaldi\\Application\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "VMGuestLib DLL Sideload",
    "id": 117,
    "status": "test",
    "description": "Detects DLL sideloading of VMGuestLib.dll by the WmiApSrv service.",
    "references": [
      "https://decoded.avast.io/martinchlumecky/png-steganography/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/01",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|contains|all": [
          "\\VMware\\VMware Tools\\vmStatsProvider\\win32",
          "\\vmGuestLib.dll"
        ],
        "Image|endswith": "\\Windows\\System32\\wbem\\WmiApSrv.exe"
      },
      "filter": {
        "Signed": "true"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "FP could occur if the legitimate version of vmGuestLib already exists on the system"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "VMMap Signed Dbghelp.DLL Potential Sideloading",
    "id": 118,
    "related": [
      {
        "id": "273a8dd8-3742-4302-bcc7-7df5a80fe425",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potential DLL sideloading of a signed dbghelp.dll by the Sysinternals VMMap.",
    "references": [
      "https://techcommunity.microsoft.com/t5/sysinternals-blog/zoomit-v7-1-procdump-2-0-for-linux-process-explorer-v17-05/ba-p/3884766"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/05",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|contains": "C:\\Debuggers\\dbghelp.dll",
        "Image|endswith": [
          "\\vmmap.exe",
          "\\vmmap64.exe"
        ],
        "Signed": "true"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "VMMap Unsigned Dbghelp.DLL Potential Sideloading",
    "id": 119,
    "related": [
      {
        "id": "98ffaed4-aec2-4e04-9b07-31492fe68b3d",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potential DLL sideloading of an unsigned dbghelp.dll by the Sysinternals VMMap.",
    "references": [
      "https://techcommunity.microsoft.com/t5/sysinternals-blog/zoomit-v7-1-procdump-2-0-for-linux-process-explorer-v17-05/ba-p/3884766"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/28",
    "modified": "2023/09/05",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|contains": "C:\\Debuggers\\dbghelp.dll",
        "Image|endswith": [
          "\\vmmap.exe",
          "\\vmmap64.exe"
        ]
      },
      "filter_main_signed": {
        "Signed": "true"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Via VMware Xfer",
    "id": 120,
    "status": "test",
    "description": "Detects loading of a DLL by the VMware Xfer utility from the non-default directory which may be an attempt to sideload arbitrary DLL",
    "references": [
      "https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/02",
    "modified": "2023/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\VMwareXferlogs.exe",
        "ImageLoaded|endswith": "\\glib-2.0.dll"
      },
      "filter": {
        "ImageLoaded|startswith": "C:\\Program Files\\VMware\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Waveedit.DLL Sideloading",
    "id": 121,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"waveedit.dll\", which is part of the Nero WaveEditor audio editing software.",
    "references": [
      "https://www.trendmicro.com/en_us/research/23/f/behind-the-scenes-unveiling-the-hidden-workings-of-earth-preta.html"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/14",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\waveedit.dll"
      },
      "filter_main_legit_path": {
        "Image": [
          "C:\\Program Files (x86)\\Nero\\Nero Apps\\Nero WaveEditor\\waveedit.exe",
          "C:\\Program Files\\Nero\\Nero Apps\\Nero WaveEditor\\waveedit.exe"
        ],
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\Nero\\Nero Apps\\Nero WaveEditor\\",
          "C:\\Program Files\\Nero\\Nero Apps\\Nero WaveEditor\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Wazuh Security Platform DLL Sideloading",
    "id": 122,
    "status": "experimental",
    "description": "Detects potential DLL side loading of DLLs that are part of the Wazuh security platform",
    "references": [
      "https://www.trendmicro.com/en_us/research/23/c/iron-tiger-sysupdate-adds-linux-targeting.html"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/03/13",
    "modified": "2023/05/12",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": [
          "\\libwazuhshared.dll",
          "\\libwinpthread-1.dll"
        ]
      },
      "filter_main_generic": {
        "ImageLoaded|startswith": [
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "filter_optional_mingw64": {
        "ImageLoaded|contains": [
          "\\AppData\\Local\\",
          "\\ProgramData\\"
        ],
        "ImageLoaded|endswith": "\\mingw64\\bin\\libwinpthread-1.dll"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Many legitimate applications leverage this DLL. (Visual Studio, JetBrains, Ruby, Anaconda, GithubDesktop, etc.)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Mpclient.DLL Sideloading",
    "id": 123,
    "related": [
      {
        "id": "7002aa10-b8d4-47ae-b5ba-51ab07e228b9",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potential sideloading of \"mpclient.dll\" by Windows Defender processes (\"MpCmdRun\" and \"NisSrv\") from their non-default directory.",
    "references": [
      "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool"
    ],
    "author": "Bhabesh Raj",
    "date": "2022/08/02",
    "modified": "2023/08/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\mpclient.dll",
        "Image|endswith": [
          "\\MpCmdRun.exe",
          "\\NisSrv.exe"
        ]
      },
      "filter_main_known_locations": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Windows Defender\\",
          "C:\\Program Files\\Microsoft Security Client\\",
          "C:\\Program Files\\Windows Defender\\",
          "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential WWlib.DLL Sideloading",
    "id": 124,
    "status": "experimental",
    "description": "Detects potential DLL sideloading of \"wwlib.dll\"",
    "references": [
      "https://twitter.com/WhichbufferArda/status/1658829954182774784",
      "https://news.sophos.com/en-us/2022/11/03/family-tree-dll-sideloading-cases-may-be-related/",
      "https://securelist.com/apt-luminousmoth/103332/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/05/18",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ImageLoaded|endswith": "\\wwlib.dll"
      },
      "filter_main_path": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft Office\\",
          "C:\\Program Files\\Microsoft Office\\"
        ],
        "Image|endswith": "\\winword.exe",
        "ImageLoaded|startswith": [
          "C:\\Program Files (x86)\\Microsoft Office\\",
          "C:\\Program Files\\Microsoft Office\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Spooler Service Suspicious Binary Load",
    "id": 125,
    "status": "test",
    "description": "Detect DLL Load from Spooler Service backup folder",
    "references": [
      "https://github.com/hhlxf/PrintNightmare",
      "https://github.com/ly4k/SpoolFool"
    ],
    "author": "FPT.EagleEye, Thomas Patzke (improvements)",
    "date": "2021/06/29",
    "modified": "2022/06/02",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574",
      "cve.2021.1675",
      "cve.2021.34527"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\spoolsv.exe",
        "ImageLoaded|contains": [
          "\\Windows\\System32\\spool\\drivers\\x64\\3\\",
          "\\Windows\\System32\\spool\\drivers\\x64\\4\\"
        ],
        "ImageLoaded|endswith": ".dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Loading of legitimate driver"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Unsigned Module Loaded by ClickOnce Application",
    "id": 126,
    "status": "experimental",
    "description": "Detects unsigned module load by ClickOnce application.",
    "references": [
      "https://posts.specterops.io/less-smartscreen-more-caffeine-ab-using-clickonce-for-trusted-code-execution-1446ea8051c5"
    ],
    "author": "@SerkinValery",
    "date": "2023/06/08",
    "tags": [
      "attack.persistence",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection_path": {
        "Image|contains": "\\AppData\\Local\\Apps\\2.0\\"
      },
      "selection_sig_status": [
        {
          "Signed": "false"
        },
        {
          "SignatureStatus": "Expired"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DLL Load By System Process From Suspicious Locations",
    "id": 127,
    "status": "experimental",
    "description": "Detects when a system process (i.e. located in system32, syswow64, etc.) loads a DLL from a suspicious location or a location with permissive permissions such as \"C:\\Users\\Public\"",
    "references": [
      "https://github.com/hackerhouse-opensource/iscsicpl_bypassUAC (Idea)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/17",
    "modified": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image|startswith": "C:\\Windows\\",
        "ImageLoaded|startswith": [
          "C:\\Users\\Public\\",
          "C:\\PerfLogs\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Python Image Load By Non-Python Process",
    "id": 128,
    "status": "experimental",
    "description": "Detects the image load of \"Python Core\" by a non-Python process. This might be indicative of a Python script bundled with Py2Exe.",
    "references": [
      "https://www.py2exe.org/",
      "https://unit42.paloaltonetworks.com/unit-42-technical-analysis-seaduke/"
    ],
    "author": "Patrick St. John, OTR (Open Threat Research)",
    "date": "2020/05/03",
    "modified": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Description": "Python Core"
      },
      "filter_main_generic": [
        {
          "Image|contains": "Python"
        },
        {
          "Image|startswith": [
            "C:\\Program Files\\",
            "C:\\Program Files (x86)\\",
            "C:\\ProgramData\\Anaconda3\\"
          ]
        }
      ],
      "filter_optional_aurora": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate Py2Exe Binaries",
      "Known false positive caused with Python Anaconda"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DotNet CLR DLL Loaded By Scripting Applications",
    "id": 129,
    "status": "test",
    "description": "Detects .NET CLR DLLs being loaded by scripting applications such as wscript or cscript. This could be an indication of potential suspicious execution.",
    "references": [
      "https://github.com/tyranid/DotNetToJScript",
      "https://thewover.github.io/Introducing-Donut/",
      "https://blog.menasec.net/2019/07/interesting-difr-traces-of-net-clr.html",
      "https://web.archive.org/web/20221026202428/https://gist.github.com/code-scrap/d7f152ffcdb3e0b02f7f394f5187f008"
    ],
    "author": "omkar72, oscd.community",
    "date": "2020/10/14",
    "modified": "2023/02/23",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\cmstp.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\msxsl.exe",
          "\\regsvr32.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ],
        "ImageLoaded|endswith": [
          "\\clr.dll",
          "\\mscoree.dll",
          "\\mscorlib.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Unsigned DLL Loaded by RunDLL32/RegSvr32",
    "id": 130,
    "status": "experimental",
    "description": "Detects RunDLL32/RegSvr32 loading an unsigned or untrusted DLL.\nAdversaries often abuse those programs to proxy execution of malicious code.\n",
    "references": [
      "https://www.elastic.co/security-labs/Hunting-for-Suspicious-Windows-Libraries-for-Execution-and-Evasion",
      "https://akhere.hashnode.dev/hunting-unsigned-dlls-using-kql",
      "https://unit42.paloaltonetworks.com/unsigned-dlls/?web_view=true"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2024/01/22",
    "tags": [
      "attack.t1218.011",
      "attack.t1218.010",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\regsvr32.exe",
          "\\rundll32.exe"
        ]
      },
      "filter_main_signed": [
        {
          "Signed": "true"
        },
        {
          "SignatureStatus": [
            "errorChaining",
            "errorCode_endpoint",
            "errorExpired",
            "trusted"
          ]
        }
      ],
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Unsigned Thor Scanner Execution",
    "id": 131,
    "status": "stable",
    "description": "Detects loading and execution of an unsigned thor scanner binary.",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\thor.exe",
          "\\thor64.exe"
        ],
        "ImageLoaded|endswith": [
          "\\thor.exe",
          "\\thor64.exe"
        ]
      },
      "filter_main": {
        "Signed": "true",
        "SignatureStatus": "valid",
        "Signature": "Nextron Systems GmbH"
      },
      "condition": "selection and not filter_main"
    },
    "falsepositives": [
      "Other legitimate binaries named \"thor.exe\" that aren't published by Nextron Systems"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Iscsicpl - ImageLoad",
    "id": 132,
    "status": "test",
    "description": "Detects the \"iscsicpl.exe\" UAC bypass technique that leverages a DLL Search Order hijacking technique to load a custom DLL's from temp or a any user controlled location in the users %PATH%",
    "references": [
      "https://github.com/hackerhouse-opensource/iscsicpl_bypassUAC",
      "https://twitter.com/wdormann/status/1547583317410607110"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/17",
    "modified": "2022/07/25",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image": "C:\\Windows\\SysWOW64\\iscsicpl.exe",
        "ImageLoaded|endswith": "\\iscsiexe.dll"
      },
      "filter": {
        "ImageLoaded|contains|all": [
          "C:\\Windows\\",
          "iscsiexe.dll"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass With Fake DLL",
    "id": 133,
    "status": "test",
    "description": "Attempts to load dismcore.dll after dropping it",
    "references": [
      "https://steemit.com/utopian-io/@ah101/uac-bypassing-utility"
    ],
    "author": "oscd.community, Dmitry Uchakin",
    "date": "2020/10/06",
    "modified": "2022/12/25",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dism.exe",
        "ImageLoaded|endswith": "\\dismcore.dll"
      },
      "filter": {
        "ImageLoaded": "C:\\Windows\\System32\\Dism\\dismcore.dll"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Actions of a legitimate telnet client"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WMIC Loading Scripting Libraries",
    "id": 134,
    "status": "test",
    "description": "Detects threat actors proxy executing code and bypassing application controls by leveraging wmic and the `/FORMAT` argument switch to download and execute an XSL file (i.e js, vbs, etc).",
    "references": [
      "https://securitydatasets.com/notebooks/atomic/windows/defense_evasion/SDWIN-201017061100.html",
      "https://twitter.com/dez_/status/986614411711442944",
      "https://lolbas-project.github.io/lolbas/Binaries/Wmic/"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/17",
    "modified": "2022/10/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1220"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\wmic.exe",
        "ImageLoaded|endswith": [
          "\\jscript.dll",
          "\\vbscript.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "The command wmic os get lastboottuptime loads vbscript.dll",
      "The command wmic os get locale loads vbscript.dll",
      "Since the ImageLoad event doesn't have enough information in this case. It's better to look at the recent process creation events that spawned the WMIC process and investigate the command line and parent/child processes to get more insights"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wmiprvse Wbemcomn DLL Hijack",
    "id": 135,
    "status": "test",
    "description": "Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\\Windows\\System32\\wbem\\` directory over the network and loading it for a WMI DLL Hijack scenario.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/201009-RemoteWMIWbemcomnDLLHijack/notebook.html"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "image_load"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\wmiprvse.exe",
        "ImageLoaded|endswith": "\\wbem\\wbemcomn.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WMI Persistence - Command Line Event Consumer",
    "id": 136,
    "status": "test",
    "description": "Detects WMI command line event consumers",
    "references": [
      "https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"
    ],
    "author": "Thomas Patzke",
    "date": "2018/03/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.t1546.003",
      "attack.persistence"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image": "C:\\Windows\\System32\\wbem\\WmiPrvSE.exe",
        "ImageLoaded|endswith": "\\wbemcons.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown (data set is too small; further testing needed)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious WSMAN Provider Image Loads",
    "id": 137,
    "status": "test",
    "description": "Detects signs of potential use of the WSMAN provider from uncommon processes locally and remote execution.",
    "references": [
      "https://twitter.com/chadtilbury/status/1275851297770610688",
      "https://bohops.com/2020/05/12/ws-management-com-another-approach-for-winrm-lateral-movement/",
      "https://docs.microsoft.com/en-us/windows/win32/winrm/windows-remote-management-architecture",
      "https://github.com/bohops/WSMan-WinRM"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/06/24",
    "modified": "2022/10/07",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.lateral_movement",
      "attack.t1021.003"
    ],
    "logsource": {
      "category": "image_load",
      "product": "windows"
    },
    "detection": {
      "request_client": [
        {
          "ImageLoaded|endswith": [
            "\\WsmSvc.dll",
            "\\WsmAuto.dll",
            "\\Microsoft.WSMan.Management.ni.dll"
          ]
        },
        {
          "OriginalFileName": [
            "WsmSvc.dll",
            "WSMANAUTOMATION.DLL",
            "Microsoft.WSMan.Management.dll"
          ]
        }
      ],
      "respond_server": {
        "Image|endswith": "\\svchost.exe",
        "OriginalFileName": "WsmWmiPl.dll"
      },
      "filter_general": {
        "Image|endswith": [
          "\\powershell.exe",
          "C:\\Windows\\System32\\sdiagnhost.exe",
          "C:\\Windows\\System32\\services.exe"
        ]
      },
      "filter_svchost": {
        "CommandLine|contains": [
          "svchost.exe -k netsvcs -p -s BITS",
          "svchost.exe -k GraphicsPerfSvcGroup -s GraphicsPerfSvc",
          "svchost.exe -k NetworkService -p -s Wecsvc",
          "svchost.exe -k netsvcs"
        ]
      },
      "filter_mscorsvw": {
        "Image|startswith": [
          "C:\\Windows\\Microsoft.NET\\Framework64\\v",
          "C:\\Windows\\Microsoft.NET\\Framework\\v"
        ],
        "Image|endswith": "\\mscorsvw.exe"
      },
      "filter_svr_2019": {
        "Image": [
          "C:\\Windows\\System32\\Configure-SMRemoting.exe",
          "C:\\Windows\\System32\\ServerManager.exe"
        ]
      },
      "filter_nextron": {
        "Image|startswith": "C:\\Windows\\Temp\\asgard2-agent\\"
      },
      "filter_citrix": {
        "Image|startswith": "C:\\Program Files\\Citrix\\"
      },
      "filter_ps_ise": {
        "Image|endswith": "\\powershell_ise.exe"
      },
      "filter_upgrade": {
        "Image|startswith": "C:\\$WINDOWS.~BT\\Sources\\"
      },
      "svchost": {
        "Image|endswith": "\\svchost.exe"
      },
      "commandline_null": {
        "CommandLine": null
      },
      "condition": "( request_client or respond_server ) and not 1 of filter* and not ( svchost and commandline_null )"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Network Connection Initiated By AddinUtil.EXE",
    "id": 138,
    "status": "experimental",
    "description": "Detects a network connection initiated by the Add-In deployment cache updating utility \"AddInutil.exe\".\nThis could indicate a potential command and control communication as this tool doesn't usually initiate network activity.\n",
    "references": [
      "https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html"
    ],
    "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)",
    "date": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": "\\addinutil.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Connection Initiated Via Certutil.EXE",
    "id": 139,
    "status": "test",
    "description": "Detects a network connection initiated by the certutil.exe utility.\nAttackers can abuse the utility in order to download malware or additional payloads.\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil"
    ],
    "author": "frack113, Florian Roth (Nextron Systems)",
    "date": "2022/09/02",
    "modified": "2022/10/04",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\certutil.exe",
        "Initiated": "true",
        "DestinationPort": [
          80,
          135,
          443,
          445
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Dllhost.EXE Initiated Network Connection To Non-Local IP Address",
    "id": 140,
    "status": "test",
    "description": "Detects dllhost initiating a network connection to a non-local IP address.\nAside from Microsoft own IP range that needs to be excluded. Network communication from Dllhost will depend entirely on the hosted DLL.\nAn initial baseline is recommended before deployment.\n",
    "references": [
      "https://redcanary.com/blog/child-processes/",
      "https://nasbench.medium.com/what-is-the-dllhost-exe-process-actually-running-ef9fe4c19c08"
    ],
    "author": "bartblaze",
    "date": "2020/07/13",
    "modified": "2024/01/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.execution",
      "attack.t1559.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dllhost.exe",
        "Initiated": "true"
      },
      "filter_main_ipv4": {
        "DestinationIp|startswith": [
          "10.",
          "192.168.",
          "172.16.",
          "172.17.",
          "172.18.",
          "172.19.",
          "172.20.",
          "172.21.",
          "172.22.",
          "172.23.",
          "172.24.",
          "172.25.",
          "172.26.",
          "172.27.",
          "172.28.",
          "172.29.",
          "172.30.",
          "172.31.",
          "169.254.",
          "127."
        ]
      },
      "filter_main_ipv6": {
        "DestinationIp|startswith": [
          "::1",
          "0:0:0:0:0:0:0:1",
          "fe80:",
          "fc",
          "fd"
        ]
      },
      "filter_main_msrange": {
        "DestinationIp|startswith": [
          "20.184.",
          "20.185.",
          "20.186.",
          "20.187.",
          "20.188.",
          "20.189.",
          "20.190.",
          "20.191.",
          "20.223.",
          "23.79.",
          "51.10.",
          "51.103.",
          "51.104.",
          "51.105.",
          "52.239.",
          "204.79.197"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Communication to other corporate systems that use IP addresses from public address spaces"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Network Connection Initiated To Mega.nz",
    "id": 141,
    "status": "test",
    "description": "Detects a network connection initiated by a binary to \"api.mega.co.nz\".\nAttackers were seen abusing file sharing websites similar to \"mega.nz\" in order to upload/download additional payloads.\n",
    "references": [
      "https://megatools.megous.com/",
      "https://www.mandiant.com/resources/russian-targeting-gov-business"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/12/06",
    "modified": "2024/02/01",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationHostname|endswith": [
          "mega.co.nz",
          "mega.nz"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate MEGA installers and utilities are expected to communicate with this domain. Exclude hosts that are known to be allowed to use this tool."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Initiated Network  Connection To Ngrok Domain",
    "id": 142,
    "related": [
      {
        "id": "1d08ac94-400d-4469-a82f-daee9a908849",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects an executable initiating a network connection to \"ngrok\" domains.\nAttackers were seen using this \"ngrok\" in order to store their second stage payloads and malware.\nWhile communication with such domains can be legitimate, often times is a sign of either data exfiltration by malicious actors or additional download.\n",
    "references": [
      "https://ngrok.com/",
      "https://ngrok.com/blog-post/new-ngrok-domains",
      "https://www.virustotal.com/gui/file/cca0c1182ac114b44dc52dd2058fcd38611c20bb6b5ad84710681d38212f835a/",
      "https://www.rnbo.gov.ua/files/2023_YEAR/CYBERCENTER/november/APT29%20attacks%20Embassies%20using%20CVE-2023-38831%20-%20report%20en.pdf"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/16",
    "modified": "2023/11/17",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationHostname|endswith": [
          ".ngrok-free.app",
          ".ngrok-free.dev",
          ".ngrok.app",
          ".ngrok.dev",
          ".ngrok.io"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the ngrok service."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Communication To Ngrok Tunneling Service Initiated",
    "id": 143,
    "related": [
      {
        "id": "18249279-932f-45e2-b37a-8925f2597670",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects an executable initiating a network connection to \"ngrok\" tunneling domains.\nAttackers were seen using this \"ngrok\" in order to store their second stage payloads and malware.\nWhile communication with such domains can be legitimate, often times is a sign of either data exfiltration by malicious actors or additional download.\n",
    "references": [
      "https://twitter.com/hakluke/status/1587733971814977537/photo/1",
      "https://ngrok.com/docs/secure-tunnels/tunnels/ssh-reverse-tunnel-agent"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/11/03",
    "modified": "2024/02/02",
    "tags": [
      "attack.exfiltration",
      "attack.command_and_control",
      "attack.t1567",
      "attack.t1568.002",
      "attack.t1572",
      "attack.t1090",
      "attack.t1102",
      "attack.s0508"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationHostname|contains": [
          "tunnel.us.ngrok.com",
          "tunnel.eu.ngrok.com",
          "tunnel.ap.ngrok.com",
          "tunnel.au.ngrok.com",
          "tunnel.sa.ngrok.com",
          "tunnel.jp.ngrok.com",
          "tunnel.in.ngrok.com"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the ngrok service."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Equation Editor Network Connection",
    "id": 144,
    "status": "test",
    "description": "Detects network connections from Equation Editor",
    "references": [
      "https://twitter.com/forensicitguy/status/1513538712986079238",
      "https://news.sophos.com/en-us/2019/07/18/a-new-equation-editor-exploit-goes-commercial-as-maldoc-attacks-using-it-spike/"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2022/04/14",
    "tags": [
      "attack.execution",
      "attack.t1203"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\eqnedt32.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Network Connection Initiated By IMEWDBLD.EXE",
    "id": 145,
    "related": [
      {
        "id": "863218bd-c7d0-4c52-80cd-0a96c09f54af",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a network connection initiated by IMEWDBLD.EXE. This might indicate potential abuse of the utility as a LOLBIN in order to download arbitrary files or additional payloads.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1105/T1105.md#atomic-test-10---windows---powershell-download",
      "https://lolbas-project.github.io/lolbas/Binaries/IMEWDBLD/"
    ],
    "author": "frack113",
    "date": "2022/01/22",
    "modified": "2023/11/09",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": "\\IMEWDBLD.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Msiexec.EXE Initiated Network Connection Over HTTP",
    "id": 146,
    "status": "test",
    "description": "Detects an initiated network connection by \"Msiexec.exe\" over port 80 or 443.\nAdversaries might abuse \"msiexec.exe\" to install and execute remotely hosted packages.\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md"
    ],
    "author": "frack113",
    "date": "2022/01/16",
    "modified": "2024/02/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": "\\msiexec.exe",
        "DestinationPort": [
          80,
          443
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Some rare installers were seen communicating with external servers for additional information. While its a very rare occurrence in some environments an initial baseline might be required."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Network Connection Initiated Via Notepad.EXE",
    "id": 147,
    "status": "test",
    "description": "Detects a network connection that is initiated by the \"notepad.exe\" process.\nThis might be a sign of process injection from a beacon process or something similar.\nNotepad rarely initiates a network communication except when printing documents for example.\n",
    "references": [
      "https://web.archive.org/web/20200219102749/https://www.sans.org/cyber-security-summit/archives/file/summit-archive-1492186586.pdf",
      "https://www.cobaltstrike.com/blog/why-is-notepad-exe-connecting-to-the-internet"
    ],
    "author": "EagleEye Team",
    "date": "2020/05/14",
    "modified": "2024/02/02",
    "tags": [
      "attack.command_and_control",
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\notepad.exe"
      },
      "filter_optional_printing": {
        "DestinationPort": 9100
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Printing documents via notepad might cause communication with the printer via port 9100 or similar."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Network Connection To Notion API",
    "id": 148,
    "status": "experimental",
    "description": "Detects a non-browser process communicating with the Notion API. This could indicate potential use of a covert C2 channel such as \"OffensiveNotion C2\"",
    "references": [
      "https://github.com/mttaggart/OffensiveNotion",
      "https://medium.com/@huskyhacks.mk/we-put-a-c2-in-your-notetaking-app-offensivenotion-3e933bace332"
    ],
    "author": "Gavin Knapp",
    "date": "2023/05/03",
    "tags": [
      "attack.command_and_control",
      "attack.t1102"
    ],
    "logsource": {
      "product": "windows",
      "category": "network_connection"
    },
    "detection": {
      "selection": {
        "DestinationHostname|contains": "api.notion.com"
      },
      "filter_main_notion": {
        "Image|endswith": "\\AppData\\Local\\Programs\\Notion\\Notion.exe"
      },
      "filter_main_brave": {
        "Image|endswith": "\\brave.exe"
      },
      "filter_main_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_main_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_main_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_main_maxthon": {
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_main_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_main_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_main_opera": {
        "Image|endswith": "\\opera.exe"
      },
      "filter_main_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_main_seamonkey": {
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_main_vivaldi": {
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_main_whale": {
        "Image|endswith": "\\whale.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate applications communicating with the \"api.notion.com\" endpoint that are not already in the exclusion list. The desktop and browser applications do not appear to be using the API by default unless integrations are configured."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Office Application Initiated Network Connection To Non-Local IP",
    "id": 149,
    "status": "test",
    "description": "Detects an office application (Word, Excel, PowerPoint)  that initiate a network connection to a non-private IP addresses.\nThis rule aims to detect traffic similar to one seen exploited in CVE-2021-42292.\nThis rule will require an initial baseline and tuning that is specific to your organization.\n",
    "references": [
      "https://corelight.com/blog/detecting-cve-2021-42292"
    ],
    "author": "Christopher Peacock '@securepeacock', SCYTHE '@scythe_io', Florian Roth (Nextron Systems), Tim Shelton",
    "date": "2021/11/10",
    "modified": "2024/01/31",
    "tags": [
      "attack.execution",
      "attack.t1203"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\excel.exe",
          "\\powerpnt.exe",
          "\\winword.exe",
          "\\wordview.exe"
        ],
        "Initiated": "true"
      },
      "filter_main_ipv4": {
        "DestinationIp|startswith": [
          "10.",
          "192.168.",
          "172.16.",
          "172.17.",
          "172.18.",
          "172.19.",
          "172.20.",
          "172.21.",
          "172.22.",
          "172.23.",
          "172.24.",
          "172.25.",
          "172.26.",
          "172.27.",
          "172.28.",
          "172.29.",
          "172.30.",
          "172.31.",
          "127.0.0.1"
        ]
      },
      "filter_main_ipv6": {
        "DestinationIp|startswith": [
          "::1",
          "0:0:0:0:0:0:0:1",
          "fe80:",
          "fc",
          "fd"
        ]
      },
      "filter_main_msrange": {
        "DestinationIp|startswith": [
          "20.184.",
          "20.185.",
          "20.186.",
          "20.187.",
          "20.188.",
          "20.189.",
          "20.190.",
          "20.191.",
          "20.223.",
          "23.79.",
          "51.10.",
          "51.103.",
          "51.104.",
          "51.105.",
          "52.239.",
          "204.79.197"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "You may have to tune certain domains out that Excel may call out to, such as microsoft or other business use case domains.",
      "Office documents commonly have templates that refer to external addresses, like \"sharepoint.ourcompany.com\" may have to be tuned.",
      "It is highly recommended to baseline your activity and tune out common business use cases."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Office Application Initiated Network Connection Over Uncommon Ports",
    "id": 150,
    "status": "experimental",
    "description": "Detects an office suit application (Word, Excel, PowerPoint, Outlook) communicating to target systems over uncommon ports.",
    "references": [
      "https://blogs.blackberry.com/en/2023/07/romcom-targets-ukraine-nato-membership-talks-at-nato-summit"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/12",
    "modified": "2024/01/31",
    "tags": [
      "attack.defense_evasion",
      "attack.command_and_control"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": [
          "\\excel.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe",
          "\\wordview.exe"
        ]
      },
      "filter_main_common_ports": {
        "DestinationPort": [
          53,
          80,
          139,
          443,
          445
        ]
      },
      "filter_main_outlook_ports": {
        "Image|contains": ":\\Program Files\\Microsoft Office\\",
        "Image|endswith": "\\OUTLOOK.EXE",
        "DestinationPort": [
          465,
          587,
          993,
          995
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Other ports can be used, apply additional filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Python Initiated Connection",
    "id": 151,
    "status": "experimental",
    "description": "Detects a Python process initiating a network connection. While this often relates to package installation, it can also indicate a potential malicious script communicating with a C&C server.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1046/T1046.md#atomic-test-4---port-scan-using-python",
      "https://pypi.org/project/scapy/"
    ],
    "author": "frack113",
    "date": "2021/12/10",
    "modified": "2023/09/07",
    "tags": [
      "attack.discovery",
      "attack.t1046"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows",
      "definition": "Requirements: Field enrichment is required for the filters to work. As field such as CommandLine and ParentImage are not available by default on this event type"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|contains": "python"
      },
      "filter_optional_conda": {
        "ParentImage": "C:\\ProgramData\\Anaconda3\\Scripts\\conda.exe",
        "CommandLine|contains|all": [
          ":\\ProgramData\\Anaconda3\\Scripts\\conda-script.py",
          "update"
        ]
      },
      "filter_optional_conda_jupyter_notebook": {
        "ParentImage": "C:\\ProgramData\\Anaconda3\\python.exe",
        "CommandLine|contains": "C:\\ProgramData\\Anaconda3\\Scripts\\jupyter-notebook-script.py"
      },
      "filter_main_local_communication": {
        "DestinationIp": "127.0.0.1",
        "SourceIp": "127.0.0.1"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate python scripts using the socket library or similar will trigger this. Apply additional filters and perform an initial baseline before deploying."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Outbound RDP Connections Over Non-Standard Tools",
    "id": 152,
    "status": "test",
    "description": "Detects Non-Standard tools initiating a connection over port 3389 indicating possible lateral movement.\nAn initial baseline is required before using this utility to exclude third party RDP tooling that you might use.\n",
    "references": [
      "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708"
    ],
    "author": "Markus Neis",
    "date": "2019/05/15",
    "modified": "2024/02/09",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.001",
      "car.2013-07-002"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationPort": 3389,
        "Initiated": "true"
      },
      "filter_main_mstsc": {
        "Image": [
          "C:\\Windows\\System32\\mstsc.exe",
          "C:\\Windows\\SysWOW64\\mstsc.exe"
        ]
      },
      "filter_optional_dns": {
        "Image": "C:\\Windows\\System32\\dns.exe",
        "SourcePort": 53,
        "Protocol": "udp"
      },
      "filter_optional_avast": {
        "Image|endswith": [
          "\\Avast Software\\Avast\\AvastSvc.exe",
          "\\Avast\\AvastSvc.exe"
        ]
      },
      "filter_optional_sysinternals_rdcman": {
        "Image|endswith": "\\RDCMan.exe"
      },
      "filter_optional_chrome": {
        "Image": "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"
      },
      "filter_optional_third_party": {
        "Image|endswith": [
          "\\FSAssessment.exe",
          "\\FSDiscovery.exe",
          "\\MobaRTE.exe",
          "\\mRemote.exe",
          "\\mRemoteNG.exe",
          "\\Passwordstate.exe",
          "\\RemoteDesktopManager.exe",
          "\\RemoteDesktopManager64.exe",
          "\\RemoteDesktopManagerFree.exe",
          "\\RSSensor.exe",
          "\\RTS2App.exe",
          "\\RTSApp.exe",
          "\\spiceworks-finder.exe",
          "\\Terminals.exe",
          "\\ws_TunnelService.exe"
        ]
      },
      "filter_optional_thor": {
        "Image|endswith": [
          "\\thor.exe",
          "\\thor64.exe"
        ]
      },
      "filter_optional_splunk": {
        "Image|startswith": "C:\\Program Files\\SplunkUniversalForwarder\\bin\\"
      },
      "filter_optional_sentinel_one": {
        "Image|endswith": "\\Ranger\\SentinelRanger.exe"
      },
      "filter_optional_firefox": {
        "Image": "C:\\Program Files\\Mozilla Firefox\\firefox.exe"
      },
      "filter_optional_tsplus": {
        "Image": [
          "C:\\Program Files\\TSplus\\Java\\bin\\HTML5service.exe",
          "C:\\Program Files (x86)\\TSplus\\Java\\bin\\HTML5service.exe"
        ]
      },
      "filter_optional_null": {
        "Image": null
      },
      "filter_optional_empty": {
        "Image": ""
      },
      "filter_optional_unknown": {
        "Image": "<unknown process>"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Third party RDP tools"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RDP Over Reverse SSH Tunnel",
    "id": 153,
    "status": "test",
    "description": "Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389",
    "references": [
      "https://twitter.com/cyb3rops/status/1096842275437625346"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/02/16",
    "modified": "2022/10/09",
    "tags": [
      "attack.command_and_control",
      "attack.t1572",
      "attack.lateral_movement",
      "attack.t1021.001",
      "car.2013-07-002"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\svchost.exe",
        "Initiated": "true",
        "SourcePort": 3389
      },
      "selection_destination": [
        {
          "DestinationIp|startswith": "127."
        },
        {
          "DestinationIp": "::1"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RDP to HTTP or HTTPS Target Ports",
    "id": 154,
    "status": "test",
    "description": "Detects svchost hosting RDP termsvcs communicating to target systems on TCP port 80 or 443",
    "references": [
      "https://twitter.com/tekdefense/status/1519711183162556416?s=12&t=OTsHCBkQOTNs1k3USz65Zg",
      "https://www.mandiant.com/resources/bypassing-network-restrictions-through-rdp-tunneling"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/29",
    "modified": "2022/07/14",
    "tags": [
      "attack.command_and_control",
      "attack.t1572",
      "attack.lateral_movement",
      "attack.t1021.001",
      "car.2013-07-002"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\svchost.exe",
        "Initiated": "true",
        "SourcePort": 3389,
        "DestinationPort": [
          80,
          443
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Network Connection Initiated By Regsvr32.EXE",
    "id": 155,
    "status": "test",
    "description": "Detects a network connection initiated by \"Regsvr32.exe\"",
    "references": [
      "https://pentestlab.blog/2017/05/11/applocker-bypass-regsvr32/",
      "https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/"
    ],
    "author": "Dmitriy Lifanov, oscd.community",
    "date": "2019/10/25",
    "modified": "2023/09/18",
    "tags": [
      "attack.execution",
      "attack.t1559.001",
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": "\\regsvr32.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Rundll32 Internet Connection",
    "id": 156,
    "status": "test",
    "description": "Detects a rundll32 that communicates with public IP addresses",
    "references": [
      "https://www.hybrid-analysis.com/sample/759fb4c0091a78c5ee035715afe3084686a8493f39014aea72dae36869de9ff6?environmentId=100"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/11/04",
    "modified": "2023/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011",
      "attack.execution"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\rundll32.exe",
        "Initiated": "true"
      },
      "filter": [
        {
          "DestinationIp|startswith": [
            "10.",
            "192.168.",
            "172.16.",
            "172.17.",
            "172.18.",
            "172.19.",
            "172.20.",
            "172.21.",
            "172.22.",
            "172.23.",
            "172.24.",
            "172.25.",
            "172.26.",
            "172.27.",
            "172.28.",
            "172.29.",
            "172.30.",
            "172.31.",
            "127.",
            "20.",
            "51.103.",
            "51.104.",
            "51.105."
          ]
        },
        {
          "CommandLine|contains": "PcaSvc.dll,PcaPatchSdbTask"
        },
        {
          "SourceHostname|endswith": ".internal.cloudapp.net"
        }
      ],
      "filter_update_processes": {
        "ParentImage": "C:\\Windows\\System32\\svchost.exe",
        "DestinationPort": 443
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Communication to other corporate systems that use IP addresses from public address spaces"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Script Initiated Connection",
    "id": 157,
    "status": "test",
    "description": "Detects a script interpreter wscript/cscript opening a network connection. Adversaries may use script to download malicious payloads.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/28d190330fe44de6ff4767fc400cc10fa7cd6540/atomics/T1105/T1105.md"
    ],
    "author": "frack113",
    "date": "2022/08/28",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": [
          "\\wscript.exe",
          "\\cscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Script Initiated Connection to Non-Local Network",
    "id": 158,
    "status": "test",
    "description": "Detects a script interpreter wscript/cscript opening a network connection to a non-local network. Adversaries may use script to download malicious payloads.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/28d190330fe44de6ff4767fc400cc10fa7cd6540/atomics/T1105/T1105.md"
    ],
    "author": "frack113, Florian Roth",
    "date": "2022/08/28",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": [
          "\\wscript.exe",
          "\\cscript.exe"
        ]
      },
      "filter_lan": {
        "DestinationIp|startswith": [
          "127.",
          "10.",
          "172.",
          "192.",
          "169.254.",
          "20."
        ]
      },
      "filter_ipv6": {
        "DestinationIp|startswith": [
          "::1",
          "0:0:0:0:0:0:0:1",
          "fe80:",
          "fc",
          "fd"
        ]
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Legitimate scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Silenttrinity Stager Msbuild Activity",
    "id": 159,
    "status": "test",
    "description": "Detects a possible remote connections to Silenttrinity c2",
    "references": [
      "https://www.blackhillsinfosec.com/my-first-joyride-with-silenttrinity/"
    ],
    "author": "Kiran kumar s, oscd.community",
    "date": "2020/10/11",
    "modified": "2022/10/05",
    "tags": [
      "attack.execution",
      "attack.t1127.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\msbuild.exe"
      },
      "filter": {
        "DestinationPort": [
          80,
          443
        ],
        "Initiated": "true"
      },
      "condition": "selection and filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Network Connection Binary No CommandLine",
    "id": 160,
    "status": "test",
    "description": "Detects suspicious network connections made by a well-known Windows binary run with no command line parameters",
    "references": [
      "https://redcanary.com/blog/raspberry-robin/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/03",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": [
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\dllhost.exe"
        ],
        "CommandLine|endswith": [
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\dllhost.exe"
        ]
      },
      "filter_no_cmdline": {
        "CommandLine": ""
      },
      "filter_null": {
        "CommandLine": null
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Cmstp Making Network Connection",
    "id": 161,
    "status": "test",
    "description": "Detects suspicious network connection by Cmstp",
    "references": [
      "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.003"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\cmstp.exe",
        "Initiated": "true"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Network Communication With Crypto Mining Pool",
    "id": 162,
    "status": "stable",
    "description": "Detects initiated network connections to crypto mining pools",
    "references": [
      "https://www.poolwatch.io/coin/monero",
      "https://github.com/stamparm/maltrail/blob/3ea70459b9559134449423c0a7d8b965ac5c40ea/trails/static/suspicious/crypto_mining.txt",
      "https://www.virustotal.com/gui/search/behaviour_network%253A*.miningocean.org/files"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/10/26",
    "modified": "2024/01/19",
    "tags": [
      "attack.impact",
      "attack.t1496"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationHostname": [
          "alimabi.cn",
          "ap.luckpool.net",
          "bcn.pool.minergate.com",
          "bcn.vip.pool.minergate.com",
          "bohemianpool.com",
          "ca-aipg.miningocean.org",
          "ca-dynex.miningocean.org",
          "ca-neurai.miningocean.org",
          "ca-qrl.miningocean.org",
          "ca-upx.miningocean.org",
          "ca-zephyr.miningocean.org",
          "ca.minexmr.com",
          "ca.monero.herominers.com",
          "cbd.monerpool.org",
          "cbdv2.monerpool.org",
          "cryptmonero.com",
          "crypto-pool.fr",
          "crypto-pool.info",
          "cryptonight-hub.miningpoolhub.com",
          "d1pool.ddns.net",
          "d5pool.us",
          "daili01.monerpool.org",
          "de-aipg.miningocean.org",
          "de-dynex.miningocean.org",
          "de-zephyr.miningocean.org",
          "de.minexmr.com",
          "dl.nbminer.com",
          "donate.graef.in",
          "donate.ssl.xmrig.com",
          "donate.v2.xmrig.com",
          "donate.xmrig.com",
          "donate2.graef.in",
          "drill.moneroworld.com",
          "dwarfpool.com",
          "emercoin.com",
          "emercoin.net",
          "emergate.net",
          "ethereumpool.co",
          "eu.luckpool.net",
          "eu.minerpool.pw",
          "fcn-xmr.pool.minergate.com",
          "fee.xmrig.com",
          "fr-aipg.miningocean.org",
          "fr-dynex.miningocean.org",
          "fr-neurai.miningocean.org",
          "fr-qrl.miningocean.org",
          "fr-upx.miningocean.org",
          "fr-zephyr.miningocean.org",
          "fr.minexmr.com",
          "hellominer.com",
          "herominers.com",
          "hk-aipg.miningocean.org",
          "hk-dynex.miningocean.org",
          "hk-neurai.miningocean.org",
          "hk-qrl.miningocean.org",
          "hk-upx.miningocean.org",
          "hk-zephyr.miningocean.org",
          "huadong1-aeon.ppxxmr.com",
          "iwanttoearn.money",
          "jw-js1.ppxxmr.com",
          "koto-pool.work",
          "lhr.nbminer.com",
          "lhr3.nbminer.com",
          "linux.monerpool.org",
          "lokiturtle.herominers.com",
          "luckpool.net",
          "masari.miner.rocks",
          "mine.c3pool.com",
          "mine.moneropool.com",
          "mine.ppxxmr.com",
          "mine.zpool.ca",
          "mine1.ppxxmr.com",
          "minemonero.gq",
          "miner.ppxxmr.com",
          "miner.rocks",
          "minercircle.com",
          "minergate.com",
          "minerpool.pw",
          "minerrocks.com",
          "miners.pro",
          "minerxmr.ru",
          "minexmr.cn",
          "minexmr.com",
          "mining-help.ru",
          "miningpoolhub.com",
          "mixpools.org",
          "moner.monerpool.org",
          "moner1min.monerpool.org",
          "monero-master.crypto-pool.fr",
          "monero.crypto-pool.fr",
          "monero.hashvault.pro",
          "monero.herominers.com",
          "monero.lindon-pool.win",
          "monero.miners.pro",
          "monero.riefly.id",
          "monero.us.to",
          "monerocean.stream",
          "monerogb.com",
          "monerohash.com",
          "moneroocean.stream",
          "moneropool.com",
          "moneropool.nl",
          "monerorx.com",
          "monerpool.org",
          "moriaxmr.com",
          "mro.pool.minergate.com",
          "multipool.us",
          "myxmr.pw",
          "na.luckpool.net",
          "nanopool.org",
          "nbminer.com",
          "node3.luckpool.net",
          "noobxmr.com",
          "pangolinminer.comgandalph3000.com",
          "pool.4i7i.com",
          "pool.armornetwork.org",
          "pool.cortins.tk",
          "pool.gntl.co.uk",
          "pool.hashvault.pro",
          "pool.minergate.com",
          "pool.minexmr.com",
          "pool.monero.hashvault.pro",
          "pool.ppxxmr.com",
          "pool.somec.cc",
          "pool.support",
          "pool.supportxmr.com",
          "pool.usa-138.com",
          "pool.xmr.pt",
          "pool.xmrfast.com",
          "pool2.armornetwork.org",
          "poolchange.ppxxmr.com",
          "pooldd.com",
          "poolmining.org",
          "poolto.be",
          "ppxvip1.ppxxmr.com",
          "ppxxmr.com",
          "prohash.net",
          "r.twotouchauthentication.online",
          "randomx.xmrig.com",
          "ratchetmining.com",
          "seed.emercoin.com",
          "seed.emercoin.net",
          "seed.emergate.net",
          "seed1.joulecoin.org",
          "seed2.joulecoin.org",
          "seed3.joulecoin.org",
          "seed4.joulecoin.org",
          "seed5.joulecoin.org",
          "seed6.joulecoin.org",
          "seed7.joulecoin.org",
          "seed8.joulecoin.org",
          "sg-aipg.miningocean.org",
          "sg-dynex.miningocean.org",
          "sg-neurai.miningocean.org",
          "sg-qrl.miningocean.org",
          "sg-upx.miningocean.org",
          "sg-zephyr.miningocean.org",
          "sg.minexmr.com",
          "sheepman.mine.bz",
          "siamining.com",
          "sumokoin.minerrocks.com",
          "supportxmr.com",
          "suprnova.cc",
          "teracycle.net",
          "trtl.cnpool.cc",
          "trtl.pool.mine2gether.com",
          "turtle.miner.rocks",
          "us-aipg.miningocean.org",
          "us-dynex.miningocean.org",
          "us-neurai.miningocean.org",
          "us-west.minexmr.com",
          "us-zephyr.miningocean.org",
          "usxmrpool.com",
          "viaxmr.com",
          "webservicepag.webhop.net",
          "xiazai.monerpool.org",
          "xiazai1.monerpool.org",
          "xmc.pool.minergate.com",
          "xmo.pool.minergate.com",
          "xmr-asia1.nanopool.org",
          "xmr-au1.nanopool.org",
          "xmr-eu1.nanopool.org",
          "xmr-eu2.nanopool.org",
          "xmr-jp1.nanopool.org",
          "xmr-us-east1.nanopool.org",
          "xmr-us-west1.nanopool.org",
          "xmr-us.suprnova.cc",
          "xmr-usa.dwarfpool.com",
          "xmr.2miners.com",
          "xmr.5b6b7b.ru",
          "xmr.alimabi.cn",
          "xmr.bohemianpool.com",
          "xmr.crypto-pool.fr",
          "xmr.crypto-pool.info",
          "xmr.f2pool.com",
          "xmr.hashcity.org",
          "xmr.hex7e4.ru",
          "xmr.ip28.net",
          "xmr.monerpool.org",
          "xmr.mypool.online",
          "xmr.nanopool.org",
          "xmr.pool.gntl.co.uk",
          "xmr.pool.minergate.com",
          "xmr.poolto.be",
          "xmr.ppxxmr.com",
          "xmr.prohash.net",
          "xmr.simka.pw",
          "xmr.somec.cc",
          "xmr.suprnova.cc",
          "xmr.usa-138.com",
          "xmr.vip.pool.minergate.com",
          "xmr1min.monerpool.org",
          "xmrf.520fjh.org",
          "xmrf.fjhan.club",
          "xmrfast.com",
          "xmrigcc.graef.in",
          "xmrminer.cc",
          "xmrpool.de",
          "xmrpool.eu",
          "xmrpool.me",
          "xmrpool.net",
          "xmrpool.xyz",
          "xx11m.monerpool.org",
          "xx11mv2.monerpool.org",
          "xxx.hex7e4.ru",
          "zarabotaibitok.ru",
          "zer0day.ru"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Dead Drop Resolvers",
    "id": 163,
    "related": [
      {
        "id": "d7b09985-95a3-44be-8450-b6eadf49833e",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects an executable, which is not an internet browser or known application, initiating network connections to legit popular websites, which were seen to be used as dead drop resolvers in previous attacks.\nIn this context attackers leverage known websites such as \"facebook\", \"youtube\", etc. In order to pass through undetected.\n",
    "references": [
      "https://content.fireeye.com/apt-41/rpt-apt41",
      "https://securelist.com/the-tetrade-brazilian-banking-malware/97779/",
      "https://blog.bushidotoken.net/2021/04/dead-drop-resolvers-espionage-inspired.html",
      "https://github.com/kleiton0x00/RedditC2",
      "https://twitter.com/kleiton0x7e/status/1600567316810551296",
      "https://www.linkedin.com/posts/kleiton-kurti_github-kleiton0x00redditc2-abusing-reddit-activity-7009939662462984192-5DbI/?originalSubdomain=al"
    ],
    "author": "Sorina Ionescu, X__Junior (Nextron Systems)",
    "date": "2022/08/17",
    "modified": "2024/02/06",
    "tags": [
      "attack.command_and_control",
      "attack.t1102",
      "attack.t1102.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationHostname|endswith": [
          ".t.me",
          "4shared.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cloudflare.com",
          "ddns.net",
          "discord.com",
          "docs.google.com",
          "drive.google.com",
          "dropbox.com",
          "dropmefiles.com",
          "facebook.com",
          "feeds.rapidfeeds.com",
          "fotolog.com",
          "ghostbin.co/",
          "githubusercontent.com",
          "gofile.io",
          "hastebin.com",
          "imgur.com",
          "livejournal.com",
          "mediafire.com",
          "mega.co.nz",
          "mega.nz",
          "onedrive.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "reddit.com",
          "send.exploit.in",
          "sendspace.com",
          "steamcommunity.com",
          "storage.googleapis.com",
          "technet.microsoft.com",
          "temp.sh",
          "transfer.sh",
          "twitter.com",
          "ufile.io",
          "abuse.ch",
          "vimeo.com",
          "wetransfer.com",
          "youtube.com"
        ]
      },
      "filter_main_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_main_chrome_appdata": {
        "Image|startswith": "C:\\Users\\",
        "Image|endswith": "\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe"
      },
      "filter_main_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_main_firefox_appdata": {
        "Image|startswith": "C:\\Users\\",
        "Image|endswith": "\\AppData\\Local\\Mozilla Firefox\\firefox.exe"
      },
      "filter_main_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_main_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_main_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_main_safari": {
        "Image|contains": [
          "C:\\Program Files (x86)\\Safari\\",
          "C:\\Program Files\\Safari\\"
        ],
        "Image|endswith": "\\safari.exe"
      },
      "filter_main_defender": {
        "Image|contains": [
          "C:\\Program Files\\Windows Defender Advanced Threat Protection\\",
          "C:\\Program Files\\Windows Defender\\",
          "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\"
        ],
        "Image|endswith": [
          "\\MsMpEng.exe",
          "\\MsSense.exe"
        ]
      },
      "filter_main_prtg": {
        "Image|endswith": [
          "C:\\Program Files (x86)\\PRTG Network Monitor\\PRTG Probe.exe",
          "C:\\Program Files\\PRTG Network Monitor\\PRTG Probe.exe"
        ]
      },
      "filter_main_brave": {
        "Image|startswith": "C:\\Program Files\\BraveSoftware\\",
        "Image|endswith": "\\brave.exe"
      },
      "filter_main_maxthon": {
        "Image|contains": "\\AppData\\Local\\Maxthon\\",
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_main_opera": {
        "Image|contains": "\\AppData\\Local\\Programs\\Opera\\",
        "Image|endswith": "\\opera.exe"
      },
      "filter_main_seamonkey": {
        "Image|startswith": [
          "C:\\Program Files\\SeaMonkey\\",
          "C:\\Program Files (x86)\\SeaMonkey\\"
        ],
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_main_vivaldi": {
        "Image|contains": "\\AppData\\Local\\Vivaldi\\",
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_main_whale": {
        "Image|startswith": [
          "C:\\Program Files\\Naver\\Naver Whale\\",
          "C:\\Program Files (x86)\\Naver\\Naver Whale\\"
        ],
        "Image|endswith": "\\whale.exe"
      },
      "filter_main_whaterfox": {
        "Image|startswith": [
          "C:\\Program Files\\Waterfox\\",
          "C:\\Program Files (x86)\\Waterfox\\"
        ],
        "Image|endswith": "\\Waterfox.exe"
      },
      "filter_main_midori": {
        "Image|contains": "\\AppData\\Local\\Programs\\midori-ng\\",
        "Image|endswith": "\\Midori Next Generation.exe"
      },
      "filter_main_slimbrowser": {
        "Image|startswith": [
          "C:\\Program Files\\SlimBrowser\\",
          "C:\\Program Files (x86)\\SlimBrowser\\"
        ],
        "Image|endswith": "\\slimbrowser.exe"
      },
      "filter_main_flock": {
        "Image|contains": "\\AppData\\Local\\Flock\\",
        "Image|endswith": "\\Flock.exe"
      },
      "filter_main_phoebe": {
        "Image|contains": "\\AppData\\Local\\Phoebe\\",
        "Image|endswith": "\\Phoebe.exe"
      },
      "filter_main_falkon": {
        "Image|startswith": [
          "C:\\Program Files\\Falkon\\",
          "C:\\Program Files (x86)\\Falkon\\"
        ],
        "Image|endswith": "\\falkon.exe"
      },
      "filter_main_qtweb": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\QtWeb\\",
          "C:\\Program Files\\QtWeb\\"
        ],
        "Image|endswith": "\\QtWeb.exe"
      },
      "filter_main_avant": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Avant Browser\\",
          "C:\\Program Files\\Avant Browser\\"
        ],
        "Image|endswith": "\\avant.exe"
      },
      "filter_main_whatsapp": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\WindowsApps\\",
          "C:\\Program Files\\WindowsApps\\"
        ],
        "Image|endswith": "\\WhatsApp.exe",
        "DestinationHostname|endswith": "facebook.com"
      },
      "filter_main_telegram": {
        "Image|contains": "\\AppData\\Roaming\\Telegram Desktop\\",
        "Image|endswith": "\\Telegram.exe",
        "DestinationHostname|endswith": ".t.me"
      },
      "filter_main_onedrive": {
        "Image|contains": "\\AppData\\Local\\Microsoft\\OneDrive\\",
        "Image|endswith": "\\OneDrive.exe",
        "DestinationHostname|endswith": "onedrive.com"
      },
      "filter_main_dropbox": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Dropbox\\Client\\",
          "C:\\Program Files\\Dropbox\\Client\\"
        ],
        "Image|endswith": [
          "\\Dropbox.exe",
          "\\DropboxInstaller.exe"
        ],
        "DestinationHostname|endswith": "dropbox.com"
      },
      "filter_main_mega": {
        "Image|endswith": [
          "\\MEGAsync.exe",
          "\\MEGAsyncSetup32_*RC.exe",
          "\\MEGAsyncSetup32.exe",
          "\\MEGAsyncSetup64.exe",
          "\\MEGAupdater.exe"
        ],
        "DestinationHostname|endswith": [
          "mega.co.nz",
          "mega.nz"
        ]
      },
      "filter_main_googledrive": {
        "Image|contains": [
          "C:\\Program Files\\Google\\Drive File Stream\\",
          "C:\\Program Files (x86)\\Google\\Drive File Stream\\"
        ],
        "Image|endswith": "GoogleDriveFS.exe",
        "DestinationHostname|endswith": "drive.google.com"
      },
      "filter_main_discord": {
        "Image|contains": "\\AppData\\Local\\Discord\\",
        "Image|endswith": "\\Discord.exe",
        "DestinationHostname|endswith": [
          "discord.com",
          "cdn.discordapp.com"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "One might need to exclude other internet browsers found in it's network or other applications like ones mentioned above from Microsoft Defender.",
      "Ninite contacting githubusercontent.com"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Network Connection Initiated To DevTunnels Domain",
    "id": 164,
    "related": [
      {
        "id": "4b657234-038e-4ad5-997c-4be42340bce4",
        "type": "similar"
      },
      {
        "id": "b3e6418f-7c7a-4fad-993a-93b65027a9f1",
        "type": "similar"
      },
      {
        "id": "1cb0c6ce-3d00-44fc-ab9c-6d6d577bf20b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects network connections to Devtunnels domains initiated by a process on a system. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.\n",
    "references": [
      "https://blueteamops.medium.com/detecting-dev-tunnels-16f0994dc3e2",
      "https://learn.microsoft.com/en-us/azure/developer/dev-tunnels/security",
      "https://cydefops.com/devtunnels-unleashed"
    ],
    "author": "Kamran Saifullah",
    "date": "2023/11/20",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationHostname|endswith": ".devtunnels.ms"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Devtunnels will also trigger this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Dropbox API Usage",
    "id": 165,
    "status": "test",
    "description": "Detects an executable that isn't dropbox but communicates with the Dropbox API",
    "references": [
      "https://app.any.run/tasks/7e906adc-9d11-447f-8641-5f40375ecebb",
      "https://www.zscaler.com/blogs/security-research/new-espionage-attack-molerats-apt-targeting-users-middle-east"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/20",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationHostname|endswith": [
          "api.dropboxapi.com",
          "content.dropboxapi.com"
        ]
      },
      "filter": {
        "Image|contains": "\\Dropbox"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate use of the API with a tool that the author wasn't aware of"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Epmap Connection",
    "id": 166,
    "status": "experimental",
    "description": "Detects suspicious \"epmap\" connection to a remote computer via remote procedure call (RPC)",
    "references": [
      "https://github.com/RiccardoAncarani/TaskShell/"
    ],
    "author": "frack113, Tim Shelton (fps)",
    "date": "2022/07/14",
    "modified": "2023/09/28",
    "tags": [
      "attack.lateral_movement"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Protocol": "tcp",
        "Initiated": "true",
        "DestinationPort": 135
      },
      "filter_image": {
        "Image|startswith": [
          "C:\\Windows\\",
          "C:\\ProgramData\\Amazon\\SSM\\Update\\amazon-ssm-agent-updater"
        ]
      },
      "filter_image_null1": {
        "Image": null
      },
      "filter_image_null2": {
        "Image": ""
      },
      "filter_image_unknown": {
        "Image": "<unknown process>"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Network Connection to IP Lookup Service APIs",
    "id": 167,
    "related": [
      {
        "id": "ec82e2a5-81ea-4211-a1f8-37a0286df2c2",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects external IP address lookups by non-browser processes via services such as \"api.ipify.org\". This could be indicative of potential post compromise internet test activity.",
    "references": [
      "https://github.com/rsp/scripts/blob/c8bb272d68164a9836e4f273d8f924927f39b8c6/externalip-benchmark.md",
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa20-302a",
      "https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/",
      "https://www.trendmicro.com/en_us/research/23/e/managed-xdr-investigation-of-ducktail-in-trend-micro-vision-one.html"
    ],
    "author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/24",
    "modified": "2024/02/08",
    "tags": [
      "attack.discovery",
      "attack.t1016"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationHostname|contains": [
          "api.2ip.ua",
          "api.bigdatacloud.net",
          "api.ipify.org",
          "bot.whatismyipaddress.com",
          "canireachthe.net",
          "checkip.amazonaws.com",
          "checkip.dyndns.org",
          "curlmyip.com",
          "db-ip.com",
          "edns.ip-api.com",
          "eth0.me",
          "freegeoip.app",
          "geoipy.com",
          "getip.pro",
          "icanhazip.com",
          "ident.me",
          "ifconfig.io",
          "ifconfig.me",
          "ip-api.com",
          "ip.anysrc.net",
          "ip.tyk.nu",
          "ipaddressworld.com",
          "ipapi.co",
          "ipconfig.io",
          "ipecho.net",
          "ipinfo.io",
          "ipof.in",
          "ipv4.icanhazip.com",
          "ipv4bot.whatismyipaddress.com",
          "ipwho.is",
          "l2.io",
          "myexternalip.com",
          "wgetip.com",
          "whatismyip.akamai.com",
          "wtfismyip.com"
        ]
      },
      "filter_optional_brave": {
        "Image|endswith": "\\brave.exe"
      },
      "filter_optional_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_optional_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_optional_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_optional_maxthon": {
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_optional_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_optional_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_optional_opera": {
        "Image|endswith": "\\opera.exe"
      },
      "filter_optional_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_optional_seamonkey": {
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_optional_vivaldi": {
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_optional_whale": {
        "Image|endswith": "\\whale.exe"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate use of the external websites for troubleshooting or network monitoring"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Microsoft Binary Suspicious Communication Endpoint",
    "id": 168,
    "related": [
      {
        "id": "635dbb88-67b3-4b41-9ea5-a3af2dd88153",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects executables located in potentially suspicious directories initiating network connections towards file sharing domains.",
    "references": [
      "https://twitter.com/M_haggis/status/900741347035889665",
      "https://twitter.com/M_haggis/status/1032799638213066752",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/ransomware-hive-conti-avoslocker",
      "https://www.cisa.gov/uscert/ncas/alerts/aa22-321a",
      "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/exfil/Invoke-ExfilDataToGitHub.ps1"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2018/08/30",
    "modified": "2024/02/09",
    "tags": [
      "attack.lateral_movement",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection_paths": {
        "Image|contains": [
          ":\\PerfLogs\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\System32\\Tasks\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Temp\\"
        ]
      },
      "selection_domains": {
        "Initiated": "true",
        "DestinationHostname|endswith": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.co.nz",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Some installers located in the temp directory might communicate with the Github domains in order to download additional software. Baseline these cases or move the github domain to a lower level hunting rule."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Non-Browser Network Communication With Google API",
    "id": 169,
    "status": "experimental",
    "description": "Detects a non-browser process interacting with the Google API which could indicate the use of a covert C2 such as Google Sheet C2 (GC2-sheet)\n",
    "references": [
      "https://github.com/looCiprian/GC2-sheet",
      "https://youtu.be/n2dFlSaBBKo",
      "https://services.google.com/fh/files/blogs/gcat_threathorizons_full_apr2023.pdf",
      "https://www.tanium.com/blog/apt41-deploys-google-gc2-for-attacks-cyber-threat-intelligence-roundup/",
      "https://www.bleepingcomputer.com/news/security/hackers-abuse-google-command-and-control-red-team-tool-in-attacks/"
    ],
    "author": "Gavin Knapp",
    "date": "2023/05/01",
    "modified": "2023/11/03",
    "tags": [
      "attack.command_and_control",
      "attack.t1102"
    ],
    "logsource": {
      "product": "windows",
      "category": "network_connection"
    },
    "detection": {
      "selection": {
        "DestinationHostname|contains": [
          "drive.googleapis.com",
          "oauth2.googleapis.com",
          "sheets.googleapis.com",
          "www.googleapis.com"
        ]
      },
      "filter_optional_brave": {
        "Image|endswith": "\\brave.exe"
      },
      "filter_optional_chrome": {
        "Image|endswith": [
          ":\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          ":\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_optional_google_drive": {
        "Image|contains": ":\\Program Files\\Google\\Drive File Stream\\",
        "Image|endswith": "\\GoogleDriveFS.exe"
      },
      "filter_optional_firefox": {
        "Image|endswith": [
          ":\\Program Files\\Mozilla Firefox\\firefox.exe",
          ":\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_optional_ie": {
        "Image|endswith": [
          ":\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          ":\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_optional_maxthon": {
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_optional_edge_1": [
        {
          "Image|contains": ":\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": [
            ":\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            ":\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe",
            "\\WindowsApps\\MicrosoftEdge.exe"
          ]
        }
      ],
      "filter_optional_edge_2": {
        "Image|contains": [
          ":\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          ":\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_optional_opera": {
        "Image|endswith": "\\opera.exe"
      },
      "filter_optional_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_optional_seamonkey": {
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_optional_vivaldi": {
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_optional_whale": {
        "Image|endswith": "\\whale.exe"
      },
      "filter_optional_googleupdate": {
        "Image|endswith": "\\GoogleUpdate.exe"
      },
      "filter_optional_outlook.exe": {
        "Image|endswith": "\\outlook.exe"
      },
      "filter_optional_teams": {
        "Image|endswith": "\\teams.exe"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate applications communicating with the \"googleapis.com\" endpoints that are not already in the exclusion list. This is environmental dependent and requires further testing and tuning."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Malware Callback Communication",
    "id": 170,
    "related": [
      {
        "id": "6d8c3d20-a5e1-494f-8412-4571d716cf5c",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects programs that connect to known malware callback ports based on statistical analysis from two different sandbox system databases\n",
    "references": [
      "https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/19",
    "modified": "2023/12/11",
    "tags": [
      "attack.persistence",
      "attack.command_and_control",
      "attack.t1571"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationPort": [
          100,
          198,
          200,
          243,
          473,
          666,
          700,
          743,
          777,
          1443,
          1515,
          1777,
          1817,
          1904,
          1960,
          2443,
          2448,
          3360,
          3675,
          3939,
          4040,
          4433,
          4438,
          4443,
          4444,
          4455,
          5445,
          5552,
          5649,
          6625,
          7210,
          7777,
          8143,
          8843,
          9631,
          9943,
          10101,
          12102,
          12103,
          12322,
          13145,
          13394,
          13504,
          13505,
          13506,
          13507,
          14102,
          14103,
          14154,
          49180,
          65520,
          65535
        ]
      },
      "filter_optional_sys_directories": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\"
        ]
      },
      "filter_main_local_ips": {
        "DestinationIp|startswith": [
          "10.",
          "127.",
          "172.16.",
          "172.17.",
          "172.18.",
          "172.19.",
          "172.20.",
          "172.21.",
          "172.22.",
          "172.23.",
          "172.24.",
          "172.25.",
          "172.26.",
          "172.27.",
          "172.28.",
          "172.29.",
          "172.30.",
          "172.31.",
          "192.168."
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Communication To Uncommon Destination Ports",
    "id": 171,
    "related": [
      {
        "id": "4b89abaa-99fe-4232-afdd-8f9aa4d20382",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects programs that connect to uncommon destination ports",
    "references": [
      "https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/19",
    "modified": "2023/12/11",
    "tags": [
      "attack.persistence",
      "attack.command_and_control",
      "attack.t1571"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationPort": [
          8080,
          8888
        ]
      },
      "filter_main_local_ips": {
        "DestinationIp|startswith": [
          "10.",
          "127.",
          "172.16.",
          "172.17.",
          "172.18.",
          "172.19.",
          "172.20.",
          "172.21.",
          "172.22.",
          "172.23.",
          "172.24.",
          "172.25.",
          "172.26.",
          "172.27.",
          "172.28.",
          "172.29.",
          "172.30.",
          "172.31.",
          "192.168."
        ]
      },
      "filter_optional_sys_directories": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Outbound Kerberos Connection",
    "id": 172,
    "related": [
      {
        "id": "eca91c7c-9214-47b9-b4c5-cb1d7e4f2350",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.",
    "references": [
      "https://github.com/GhostPack/Rubeus"
    ],
    "author": "Ilyas Ochkov, oscd.community",
    "date": "2019/10/24",
    "modified": "2023/01/30",
    "tags": [
      "attack.credential_access",
      "attack.t1558",
      "attack.lateral_movement",
      "attack.t1550.003"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationPort": 88,
        "Initiated": "true"
      },
      "filter_exact": {
        "Image": [
          "C:\\Windows\\System32\\lsass.exe",
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Web Browsers"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Microsoft Sync Center Suspicious Network Connections",
    "id": 173,
    "status": "test",
    "description": "Detects suspicious connections from Microsoft Sync Center to non-private IPs.",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-november-2021/"
    ],
    "author": "elhoim",
    "date": "2022/04/28",
    "modified": "2022/06/02",
    "tags": [
      "attack.t1055",
      "attack.t1218",
      "attack.execution",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "network_connection"
    },
    "detection": {
      "selection_mobsync": {
        "Image|endswith": "\\mobsync.exe"
      },
      "filter": {
        "DestinationIp|startswith": [
          "10.",
          "192.168.",
          "172.16.",
          "172.17.",
          "172.18.",
          "172.19.",
          "172.20.",
          "172.21.",
          "172.22.",
          "172.23.",
          "172.24.",
          "172.25.",
          "172.26.",
          "172.27.",
          "172.28.",
          "172.29.",
          "172.30.",
          "172.31."
        ],
        "DestinationIsIpv6": "false"
      },
      "condition": "selection_mobsync and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Outbound SMTP Connections",
    "id": 174,
    "status": "test",
    "description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.\nThe data may also be sent to an alternate network location from the main command and control server.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1048.003/T1048.003.md#atomic-test-5---exfiltration-over-alternative-protocol---smtp",
      "https://www.ietf.org/rfc/rfc2821.txt"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "modified": "2022/09/21",
    "tags": [
      "attack.exfiltration",
      "attack.t1048.003"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationPort": [
          25,
          587,
          465,
          2525
        ],
        "Initiated": "true"
      },
      "filter_clients": {
        "Image|endswith": [
          "\\thunderbird.exe",
          "\\outlook.exe"
        ]
      },
      "filter_mailserver": {
        "Image|startswith": "C:\\Program Files\\Microsoft\\Exchange Server\\"
      },
      "filter_outlook": {
        "Image|startswith": "C:\\Program Files\\WindowsApps\\microsoft.windowscommunicationsapps_",
        "Image|endswith": "\\HxTsr.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Other SMTP tools"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Program Location with Network Connections",
    "id": 175,
    "status": "test",
    "description": "Detects programs with network connections running in suspicious files system locations",
    "references": [
      "https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo"
    ],
    "author": "Florian Roth (Nextron Systems), Tim Shelton",
    "date": "2017/03/19",
    "modified": "2023/12/11",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows",
      "definition": "Use the following config to generate the necessary Event ID 3 Network Connection events"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          ":\\$Recycle.bin",
          ":\\Perflogs\\",
          ":\\Users\\Default\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Fonts\\",
          ":\\Windows\\IME\\",
          "\\config\\systemprofile\\",
          "\\Windows\\addins\\"
        ]
      },
      "filter_optional_ibm": {
        "Image|contains": ":\\Users\\Public\\IBM\\ClientSolutions\\Start_Programs\\"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Remote PowerShell Session Initiated",
    "id": 176,
    "status": "test",
    "description": "Detects a process that initiated a network connection over ports 5985 or 5986 from a non-network service account.\nThis could potentially indicates a remote PowerShell connection.\n",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/09/12",
    "modified": "2024/02/02",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.lateral_movement",
      "attack.t1021.006"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "DestinationPort": [
          5985,
          5986
        ],
        "Initiated": "true",
        "SourceIsIpv6": "false"
      },
      "filter_main_service_users": [
        {
          "User|contains": [
            "NETWORK SERVICE",
            "NETZWERKDIENST",
            "SERVICIO DE RED",
            "SERVIZIO DI RETE"
          ]
        },
        {
          "User|contains|all": [
            "SERVICE R",
            "SEAU"
          ]
        }
      ],
      "filter_main_localhost": {
        "SourceIp": [
          "::1",
          "127.0.0.1"
        ],
        "DestinationIp": [
          "::1",
          "127.0.0.1"
        ]
      },
      "filter_optional_avast": {
        "Image": [
          "C:\\Program Files\\Avast Software\\Avast\\AvastSvc.exe",
          "C:\\Program Files (x86)\\Avast Software\\Avast\\AvastSvc.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate usage of remote PowerShell, e.g. remote administration and monitoring.",
      "Network Service user name of a not-covered localization"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Non-Browser Network Communication With Telegram API",
    "id": 177,
    "status": "experimental",
    "description": "Detects an a non-browser process interacting with the Telegram API which could indicate use of a covert C2",
    "references": [
      "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/small-sieve/NCSC-MAR-Small-Sieve.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/19",
    "tags": [
      "attack.command_and_control",
      "attack.t1102"
    ],
    "logsource": {
      "product": "windows",
      "category": "network_connection"
    },
    "detection": {
      "selection": {
        "DestinationHostname|contains": "api.telegram.org"
      },
      "filter_main_brave": {
        "Image|endswith": "\\brave.exe"
      },
      "filter_main_chrome": {
        "Image": [
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
        ]
      },
      "filter_main_firefox": {
        "Image": [
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "filter_main_ie": {
        "Image": [
          "C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe",
          "C:\\Program Files\\Internet Explorer\\iexplore.exe"
        ]
      },
      "filter_main_maxthon": {
        "Image|endswith": "\\maxthon.exe"
      },
      "filter_main_edge_1": [
        {
          "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\"
        },
        {
          "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
        },
        {
          "Image": [
            "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
            "C:\\Program Files\\Microsoft\\Edge\\Application\\msedge.exe"
          ]
        }
      ],
      "filter_main_edge_2": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeCore\\",
          "C:\\Program Files\\Microsoft\\EdgeCore\\"
        ],
        "Image|endswith": [
          "\\msedge.exe",
          "\\msedgewebview2.exe"
        ]
      },
      "filter_main_opera": {
        "Image|endswith": "\\opera.exe"
      },
      "filter_main_safari": {
        "Image|endswith": "\\safari.exe"
      },
      "filter_main_seamonkey": {
        "Image|endswith": "\\seamonkey.exe"
      },
      "filter_main_vivaldi": {
        "Image|endswith": "\\vivaldi.exe"
      },
      "filter_main_whale": {
        "Image|endswith": "\\whale.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate applications communicating with the Telegram API e.g. web browsers not in the exclusion list, app with an RSS  etc."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Network Connection Initiated To Visual Studio Code Tunnels Domain",
    "id": 178,
    "related": [
      {
        "id": "9501f8e6-8e3d-48fc-a8a6-1089dd5d7ef4",
        "type": "similar"
      },
      {
        "id": "b3e6418f-7c7a-4fad-993a-93b65027a9f1",
        "type": "similar"
      },
      {
        "id": "1cb0c6ce-3d00-44fc-ab9c-6d6d577bf20b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects network connections to Visual Studio Code tunnel domains initiated by a process on a system. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.\n",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html",
      "https://cydefops.com/vscode-data-exfiltration"
    ],
    "author": "Kamran Saifullah",
    "date": "2023/11/20",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.001"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "DestinationHostname|endswith": ".tunnels.api.visualstudio.com"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Visual Studio Code tunnel will also trigger this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Outbound Network Connection To Public IP Via Winlogon",
    "id": 179,
    "status": "experimental",
    "description": "Detects a \"winlogon.exe\" process that initiate network communications with public IP addresses",
    "references": [
      "https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/"
    ],
    "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io",
    "date": "2023/04/28",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.command_and_control",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\winlogon.exe",
        "Initiated": "true"
      },
      "filter_optional_local_ip": {
        "DestinationIp|startswith": [
          "10.",
          "127.",
          "172.16.",
          "172.17.",
          "172.18.",
          "172.19.",
          "172.20.",
          "172.21.",
          "172.22.",
          "172.23.",
          "172.24.",
          "172.25.",
          "172.26.",
          "172.27.",
          "172.28.",
          "172.29.",
          "172.30.",
          "172.31.",
          "192.168."
        ]
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Communication to other corporate systems that use IP addresses from public address spaces"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Wordpad Outbound Connections",
    "id": 180,
    "status": "experimental",
    "description": "Detects a network connection initiated by \"wordpad.exe\" over uncommon destination ports.\nThis might indicate potential process injection activity from a beacon or similar mechanisms.\n",
    "references": [
      "https://blogs.blackberry.com/en/2023/07/romcom-targets-ukraine-nato-membership-talks-at-nato-summit"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/12",
    "modified": "2023/12/15",
    "tags": [
      "attack.defense_evasion",
      "attack.command_and_control"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Initiated": "true",
        "Image|endswith": "\\wordpad.exe"
      },
      "filter_main_ports": {
        "DestinationPort": [
          80,
          139,
          443,
          445,
          465,
          587,
          993,
          995
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Other ports can be used, apply additional filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Wuauclt Network Connection",
    "id": 181,
    "status": "test",
    "description": "Detects the use of the Windows Update Client binary (wuauclt.exe) to proxy execute code and making network connections.\nOne could easily make the DLL spawn a new process and inject to it to proxy the network connection and bypass this rule.\n",
    "references": [
      "https://dtm.uk/wuauclt/"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/12",
    "modified": "2023/11/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "network_connection",
      "product": "windows",
      "definition": "Requirements: The CommandLine field enrichment is required in order for this rule to be used."
    },
    "detection": {
      "selection": {
        "Image|contains": "wuauclt",
        "CommandLine|contains": " /RunHandlerComServer"
      },
      "filter_main_ipv4": {
        "DestinationIp|startswith": [
          "10.",
          "127.",
          "169.254.",
          "172.16",
          "172.17",
          "172.18",
          "172.19",
          "172.20",
          "172.21",
          "172.22",
          "172.23",
          "172.24",
          "172.25",
          "172.26",
          "172.27",
          "172.28",
          "172.29",
          "172.30",
          "172.31",
          "192.168"
        ]
      },
      "filter_main_ipv6": {
        "DestinationIp|startswith": [
          "::1",
          "0:0:0:0:0:0:0:1",
          "fe80:",
          "fc",
          "fd"
        ]
      },
      "filter_main_msrange": {
        "DestinationIp|startswith": [
          "20.184.",
          "20.185.",
          "20.186.",
          "20.187.",
          "20.188.",
          "20.189.",
          "20.190.",
          "20.191.",
          "20.220.",
          "20.221.",
          "23.79.",
          "51.10.",
          "51.103.",
          "51.104.",
          "51.105.",
          "52.239."
        ]
      },
      "filter_main_uus": {
        "CommandLine|contains": [
          ":\\Windows\\UUS\\Packages\\Preview\\amd64\\updatedeploy.dll /ClassId",
          ":\\Windows\\UUS\\amd64\\UpdateDeploy.dll /ClassId"
        ]
      },
      "filter_main_winsxs": {
        "CommandLine|contains|all": [
          ":\\Windows\\WinSxS\\",
          "\\UpdateDeploy.dll /ClassId "
        ]
      },
      "filter_main_cli_null": {
        "CommandLine": null
      },
      "filter_main_cli_empty": {
        "CommandLine": ""
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ADFS Database Named Pipe Connection By Uncommon Tool",
    "id": 182,
    "status": "test",
    "description": "Detects suspicious local connections via a named pipe to the AD FS configuration database (Windows Internal Database).\nUsed to access information such as the AD FS configuration settings which contains sensitive information used to sign SAML tokens.\n",
    "references": [
      "https://github.com/Azure/Azure-Sentinel/blob/f99542b94afe0ad2f19a82cc08262e7ac8e1428e/Detections/SecurityEvent/ADFSDBNamedPipeConnection.yaml",
      "https://o365blog.com/post/adfs/",
      "https://github.com/Azure/SimuLand"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2021/10/08",
    "modified": "2023/11/30",
    "tags": [
      "attack.collection",
      "attack.t1005"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName": "\\MICROSOFT##WID\\tsql\\query"
      },
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Windows\\System32\\mmc.exe",
          ":\\Windows\\system32\\svchost.exe",
          ":\\Windows\\System32\\wsmprovhost.exe",
          ":\\Windows\\SysWOW64\\mmc.exe",
          ":\\Windows\\SysWOW64\\wsmprovhost.exe",
          ":\\Windows\\WID\\Binn\\sqlwriter.exe",
          "\\AzureADConnect.exe",
          "\\Microsoft.Identity.Health.Adfs.PshSurrogate.exe",
          "\\Microsoft.IdentityServer.ServiceHost.exe",
          "\\Microsoft.Tri.Sensor.exe",
          "\\sqlservr.exe",
          "\\tssdis.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CobaltStrike Named Pipe",
    "id": 183,
    "related": [
      {
        "id": "85adeb13-4fc9-4e68-8a4a-c7cb2c336eb7",
        "type": "similar"
      },
      {
        "id": "0e7163d4-9e19-4fa7-9be6-000c61aad77a",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a named pipe as used by CobaltStrike",
    "references": [
      "https://twitter.com/d4rksystem/status/1357010969264873472",
      "https://labs.f-secure.com/blog/detecting-cobalt-strike-default-modules-via-named-pipe-analysis/",
      "https://github.com/SigmaHQ/sigma/issues/253",
      "https://blog.cobaltstrike.com/2021/02/09/learn-pipe-fitting-for-all-of-your-offense-projects/",
      "https://redcanary.com/threat-detection-report/threats/cobalt-strike/"
    ],
    "author": "Florian Roth (Nextron Systems), Wojciech Lesicki",
    "date": "2021/05/25",
    "modified": "2022/10/31",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can always use Cobalt Strike, but also you can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection_MSSE": {
        "PipeName|contains|all": [
          "\\MSSE-",
          "-server"
        ]
      },
      "selection_postex": {
        "PipeName|startswith": "\\postex_"
      },
      "selection_status": {
        "PipeName|startswith": "\\status_"
      },
      "selection_msagent": {
        "PipeName|startswith": "\\msagent_"
      },
      "selection_mojo": {
        "PipeName|startswith": "\\mojo_"
      },
      "selection_interprocess": {
        "PipeName|startswith": "\\interprocess_"
      },
      "selection_samr": {
        "PipeName|startswith": "\\samr_"
      },
      "selection_netlogon": {
        "PipeName|startswith": "\\netlogon_"
      },
      "selection_srvsvc": {
        "PipeName|startswith": "\\srvsvc_"
      },
      "selection_lsarpc": {
        "PipeName|startswith": "\\lsarpc_"
      },
      "selection_wkssvc": {
        "PipeName|startswith": "\\wkssvc_"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "CobaltStrike Named Pipe Pattern Regex",
    "id": 184,
    "related": [
      {
        "id": "85adeb13-4fc9-4e68-8a4a-c7cb2c336eb7",
        "type": "similar"
      },
      {
        "id": "d5601f8c-b26f-4ab0-9035-69e11a8d4ad2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a named pipe matching a pattern used by CobaltStrike Malleable C2 profiles",
    "references": [
      "https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575",
      "https://gist.github.com/MHaggis/6c600e524045a6d49c35291a21e10752"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/30",
    "modified": "2022/12/31",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can always use Cobalt Strike, but also you can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": [
        {
          "PipeName|re": "\\\\mojo\\.5688\\.8052\\.(?:183894939787088877|35780273329370473)[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\wkssvc_?[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\ntsvcs[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\DserNamePipe[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\SearchTextHarvester[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\mypipe-(?:f|h)[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\windows\\.update\\.manager[0-9a-f]{2,3}"
        },
        {
          "PipeName|re": "\\\\ntsvcs_[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\scerpc_?[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\PGMessagePipe[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\MsFteWds[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\f4c3[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\fullduplex_[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\msrpc_[0-9a-f]{4}"
        },
        {
          "PipeName|re": "\\\\win\\\\msrpc_[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\f53f[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\rpc_[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\spoolss_[0-9a-f]{2}"
        },
        {
          "PipeName|re": "\\\\Winsock2\\\\CatalogChangeListener-[0-9a-f]{3}-0,"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "CobaltStrike Named Pipe Patterns",
    "id": 185,
    "related": [
      {
        "id": "0e7163d4-9e19-4fa7-9be6-000c61aad77a",
        "type": "similar"
      },
      {
        "id": "d5601f8c-b26f-4ab0-9035-69e11a8d4ad2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a named pipe with a pattern found in CobaltStrike malleable C2 profiles",
    "references": [
      "https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575",
      "https://gist.github.com/MHaggis/6c600e524045a6d49c35291a21e10752"
    ],
    "author": "Florian Roth (Nextron Systems), Christian Burkard (Nextron Systems)",
    "date": "2021/07/30",
    "modified": "2024/01/26",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055",
      "stp.1k"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can always use Cobalt Strike, but also you can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection_malleable_profile_generic": [
        {
          "PipeName|startswith": [
            "\\DserNamePipe",
            "\\f4c3",
            "\\f53f",
            "\\fullduplex_",
            "\\mojo.5688.8052.183894939787088877",
            "\\mojo.5688.8052.35780273329370473",
            "\\MsFteWds",
            "\\msrpc_",
            "\\mypipe-f",
            "\\mypipe-h",
            "\\ntsvcs",
            "\\PGMessagePipe",
            "\\rpc_",
            "\\scerpc",
            "\\SearchTextHarvester",
            "\\spoolss",
            "\\win_svc",
            "\\win\\msrpc_",
            "\\windows.update.manager",
            "\\wkssvc"
          ]
        },
        {
          "PipeName": [
            "\\demoagent_11",
            "\\demoagent_22"
          ]
        }
      ],
      "selection_malleable_profile_catalog_change_listener": {
        "PipeName|startswith": "\\Winsock2\\CatalogChangeListener-",
        "PipeName|endswith": "-0,"
      },
      "filter_main_generic": {
        "PipeName": [
          "\\wkssvc",
          "\\spoolss",
          "\\scerpc",
          "\\ntsvcs",
          "\\SearchTextHarvester",
          "\\PGMessagePipe",
          "\\MsFteWds"
        ]
      },
      "filter_optional_websense": {
        "Image|contains": [
          ":\\Program Files\\Websense\\",
          ":\\Program Files (x86)\\Websense\\"
        ],
        "PipeName|startswith": [
          "\\DserNamePipeR",
          "\\DserNamePipeW"
        ]
      },
      "condition": "1 of selection_malleable_profile_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Chrome instances using the exact same pipe name \"mojo.xxx\"",
      "Websense Endpoint using the pipe name \"DserNamePipe(R|W)\\d{1,5}\""
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CoercedPotato Named Pipe Creation",
    "id": 186,
    "status": "experimental",
    "description": "Detects the pattern of a pipe name as used by the hack tool CoercedPotato",
    "references": [
      "https://blog.hackvens.fr/articles/CoercedPotato.html",
      "https://github.com/hackvens/CoercedPotato"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/10/11",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": "\\coerced\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - DiagTrackEoP Default Named Pipe",
    "id": 187,
    "status": "experimental",
    "description": "Detects creation of default named pipe used by the DiagTrackEoP POC, a tool that abuses \"SeImpersonate\" privilege.",
    "references": [
      "https://github.com/Wh04m1001/DiagTrackEoP/blob/3a2fc99c9700623eb7dc7d4b5f314fd9ce5ef51f/main.cpp#L22"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/03",
    "modified": "2023/08/07",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": "thisispipe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - EfsPotato Named Pipe Creation",
    "id": 188,
    "status": "experimental",
    "description": "Detects the pattern of a pipe name as used by the hack tool EfsPotato",
    "references": [
      "https://twitter.com/SBousseaden/status/1429530155291193354?s=20",
      "https://github.com/zcgonvh/EfsPotato"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2023/12/21",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": [
          "\\pipe\\",
          "\\pipe\\srvsvc"
        ]
      },
      "filter_optional_ctx": {
        "PipeName|contains": "\\CtxShare"
      },
      "filter_optional_default": {
        "PipeName|startswith": "\\pipe\\"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "\\pipe\\LOCAL\\Monitorian"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Credential Dumping Tools Named Pipe Created",
    "id": 189,
    "status": "test",
    "description": "Detects well-known credential dumping tools execution via specific named pipe creation",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "https://image.slidesharecdn.com/zeronights2017kheirkhabarov-171118103000/75/hunting-for-credentials-dumping-in-windows-environment-57-2048.jpg?cb=1666035799"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community",
    "date": "2019/11/01",
    "modified": "2023/08/07",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.t1003.002",
      "attack.t1003.004",
      "attack.t1003.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": [
          "\\cachedump",
          "\\lsadump",
          "\\wceservicepipe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Administrator using tool for password recovery"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - Koh Default Named Pipe",
    "id": 190,
    "status": "experimental",
    "description": "Detects creation of default named pipes used by the Koh tool",
    "references": [
      "https://github.com/GhostPack/Koh/blob/0283d9f3f91cf74732ad377821986cfcb088e20a/Clients/BOF/KohClient.c#L12"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/08",
    "modified": "2023/08/07",
    "tags": [
      "attack.privilege_escalation",
      "attack.credential_access",
      "attack.t1528",
      "attack.t1134.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": [
          "\\imposecost",
          "\\imposingcost"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Alternate PowerShell Hosts Pipe",
    "id": 191,
    "related": [
      {
        "id": "ac7102b4-9e1e-4802-9b4f-17c5524c015c",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190610-PwshAlternateHosts/notebook.html",
      "https://threathunterplaybook.com/hunts/windows/190410-LocalPwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Tim Shelton",
    "date": "2019/09/12",
    "modified": "2023/10/18",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|startswith": "\\PSHost"
      },
      "filter_main_generic": {
        "Image|contains": [
          ":\\Program Files\\PowerShell\\7-preview\\pwsh.exe",
          ":\\Program Files\\PowerShell\\7\\pwsh.exe",
          ":\\Windows\\system32\\dsac.exe",
          ":\\Windows\\system32\\inetsrv\\w3wp.exe",
          ":\\Windows\\System32\\sdiagnhost.exe",
          ":\\Windows\\system32\\ServerManager.exe",
          ":\\Windows\\system32\\wbem\\wmiprvse.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
          ":\\Windows\\System32\\wsmprovhost.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe"
        ]
      },
      "filter_main_sqlserver": {
        "Image|contains|all": [
          ":\\Program Files",
          "\\Microsoft SQL Server\\"
        ],
        "Image|endswith": "\\Tools\\Binn\\SQLPS.exe"
      },
      "filter_optional_citrix": {
        "Image|contains": ":\\Program Files\\Citrix\\"
      },
      "filter_optional_exchange": {
        "Image|contains": ":\\Program Files\\Microsoft\\Exchange Server\\"
      },
      "filter_main_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Programs using PowerShell directly without invocation of a dedicated interpreter."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New PowerShell Instance Created",
    "id": 192,
    "related": [
      {
        "id": "58cb02d5-78ce-4692-b3e1-dce850aae41a",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the execution of PowerShell via the creation of a named pipe starting with PSHost",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190610-PwshAlternateHosts/notebook.html",
      "https://threathunterplaybook.com/hunts/windows/190410-LocalPwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2019/09/12",
    "modified": "2023/11/30",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|startswith": "\\PSHost"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "PUA - CSExec Default Named Pipe",
    "id": 193,
    "related": [
      {
        "id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects default CSExec pipe creation",
    "references": [
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
      "https://github.com/malcomvetter/CSExec"
    ],
    "author": "Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/07",
    "modified": "2023/11/30",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": "\\csexecsvc"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Administrator activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - PAExec Default Named Pipe",
    "id": 194,
    "status": "test",
    "description": "Detects PAExec default named pipe",
    "references": [
      "https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries/blob/efa17a600b43c897b4b7463cc8541daa1987eeb4/Command%20and%20Control/C2-NamedPipe.md",
      "https://github.com/poweradminllc/PAExec"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/26",
    "tags": [
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "category": "pipe_created",
      "product": "windows",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|startswith": "\\PAExec"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - RemCom Default Named Pipe",
    "id": 195,
    "related": [
      {
        "id": "9e77ed63-2ecf-4c7b-b09d-640834882028",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects default RemCom pipe creation",
    "references": [
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
      "https://github.com/kavika13/RemCom"
    ],
    "author": "Nikita Nazarov, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/07",
    "modified": "2023/11/30",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName|contains": "\\RemCom"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Administrator activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WMI Event Consumer Created Named Pipe",
    "id": 196,
    "status": "test",
    "description": "Detects the WMI Event Consumer service scrcons.exe creating a named pipe",
    "references": [
      "https://github.com/RiccardoAncarani/LiquidSnake"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/09/01",
    "modified": "2023/11/30",
    "tags": [
      "attack.t1047",
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\scrcons.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Malicious Named Pipe Created",
    "id": 197,
    "status": "test",
    "description": "Detects the creation of a named pipe seen used by known APTs or malware.",
    "references": [
      "https://securelist.com/wild-neutron-economic-espionage-threat-actor-returns-with-new-tricks/71275/",
      "https://securelist.com/faq-the-projectsauron-apt/75533/",
      "https://web.archive.org/web/20180725233601/https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf",
      "https://www.us-cert.gov/ncas/alerts/TA17-117A",
      "https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html",
      "https://thedfirreport.com/2020/06/21/snatch-ransomware/",
      "https://github.com/RiccardoAncarani/LiquidSnake",
      "https://www.accenture.com/us-en/blogs/cyber-defense/turla-belugasturgeon-compromises-government-entity",
      "https://us-cert.cisa.gov/ncas/analysis-reports/ar19-304a",
      "https://download.bitdefender.com/resources/files/News/CaseStudies/study/115/Bitdefender-Whitepaper-PAC-A4-en-EN1.pdf",
      "https://unit42.paloaltonetworks.com/emissary-panda-attacks-middle-east-government-sharepoint-servers/",
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "Florian Roth (Nextron Systems), blueteam0ps, elhoim",
    "date": "2017/11/06",
    "modified": "2023/08/07",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "product": "windows",
      "category": "pipe_created",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName": [
          "\\46a676ab7f179e511e30dd2dc41bd388",
          "\\583da945-62af-10e8-4902-a8f205c72b2e",
          "\\6e7645c4-32c5-4fe3-aabf-e94c2f4370e7",
          "\\9f81f59bc58452127884ce513865ed20",
          "\\adschemerpc",
          "\\ahexec",
          "\\AnonymousPipe",
          "\\bc31a7",
          "\\bc367",
          "\\bizkaz",
          "\\csexecsvc",
          "\\dce_3d",
          "\\e710f28d59aa529d6792ca6ff0ca1b34",
          "\\gruntsvc",
          "\\isapi_dg",
          "\\isapi_dg2",
          "\\isapi_http",
          "\\jaccdpqnvbrrxlaf",
          "\\lsassw",
          "\\NamePipe_MoreWindows",
          "\\pcheap_reuse",
          "\\Posh*",
          "\\rpchlp_3",
          "\\sdlrpc",
          "\\svcctl",
          "\\testPipe",
          "\\winsession"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "PsExec Tool Execution From Suspicious Locations - PipeName",
    "id": 198,
    "related": [
      {
        "id": "f3f3a972-f982-40ad-b63c-bca6afdfad7c",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects PsExec default pipe creation where the image executed is located in a suspicious location. Which could indicate that the tool is being used in an attack",
    "references": [
      "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
      "https://jpcertcc.github.io/ToolAnalysisResultSheet"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/04",
    "modified": "2023/09/20",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "pipe_created",
      "product": "windows",
      "definition": "Note that you have to configure logging for Named Pipe Events in Sysmon config (Event ID 17 and Event ID 18). The basic configuration is in popular sysmon configuration (https://github.com/SwiftOnSecurity/sysmon-config), but it is worth verifying. You can also use other repo, e.g. https://github.com/Neo23x0/sysmon-config, https://github.com/olafhartong/sysmon-modular. How to test detection? You can check powershell script from this site https://svch0st.medium.com/guide-to-named-pipes-and-hunting-for-cobalt-strike-pipes-dc46b2c5f575"
    },
    "detection": {
      "selection": {
        "PipeName": "\\PSEXESVC",
        "Image|contains": [
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate use of psexec from the locations mentioned above. This will require initial tuning based on your environment."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CMSTP Execution Process Access",
    "id": 199,
    "status": "stable",
    "description": "Detects various indicators of Microsoft Connection Manager Profile Installer execution",
    "references": [
      "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"
    ],
    "author": "Nik Seetharaman",
    "date": "2018/07/16",
    "modified": "2021/06/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.003",
      "attack.execution",
      "attack.t1559.001",
      "attack.g0069",
      "attack.g0080",
      "car.2019-04-001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_access"
    },
    "detection": {
      "selection": {
        "CallTrace|contains": "cmlua.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate CMSTP use (unlikely in modern enterprise environments)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CobaltStrike BOF Injection Pattern",
    "id": 200,
    "status": "test",
    "description": "Detects a typical pattern of a CobaltStrike BOF which inject into other processes",
    "references": [
      "https://github.com/boku7/injectAmsiBypass",
      "https://github.com/boku7/spawn"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/04",
    "modified": "2023/11/28",
    "tags": [
      "attack.execution",
      "attack.t1106",
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CallTrace|re": "^C:\\\\Windows\\\\SYSTEM32\\\\ntdll\\.dll\\+[a-z0-9]{4,6}\\|C:\\\\Windows\\\\System32\\\\KERNELBASE\\.dll\\+[a-z0-9]{4,6}\\|UNKNOWN\\([A-Z0-9]{16}\\)$",
        "GrantedAccess": [
          "0x1028",
          "0x1fffff"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Generic Process Access",
    "id": 201,
    "status": "experimental",
    "description": "Detects process access requests from hacktool processes based on their default image name",
    "references": [
      "https://jsecurity101.medium.com/bypassing-access-mask-auditing-strategies-480fb641c158",
      "https://www.splunk.com/en_us/blog/security/you-bet-your-lsass-hunting-lsass-access.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel",
    "date": "2023/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "SourceImage|endswith": [
            "\\Akagi.exe",
            "\\Akagi64.exe",
            "\\atexec_windows.exe",
            "\\Certify.exe",
            "\\Certipy.exe",
            "\\CoercedPotato.exe",
            "\\crackmapexec.exe",
            "\\CreateMiniDump.exe",
            "\\dcomexec_windows.exe",
            "\\dpapi_windows.exe",
            "\\findDelegation_windows.exe",
            "\\GetADUsers_windows.exe",
            "\\GetNPUsers_windows.exe",
            "\\getPac_windows.exe",
            "\\getST_windows.exe",
            "\\getTGT_windows.exe",
            "\\GetUserSPNs_windows.exe",
            "\\gmer.exe",
            "\\hashcat.exe",
            "\\htran.exe",
            "\\ifmap_windows.exe",
            "\\impersonate.exe",
            "\\Inveigh.exe",
            "\\LocalPotato.exe",
            "\\mimikatz_windows.exe",
            "\\mimikatz.exe",
            "\\netview_windows.exe",
            "\\nmapAnswerMachine_windows.exe",
            "\\opdump_windows.exe",
            "\\PasswordDump.exe",
            "\\Potato.exe",
            "\\PowerTool.exe",
            "\\PowerTool64.exe",
            "\\psexec_windows.exe",
            "\\PurpleSharp.exe",
            "\\pypykatz.exe",
            "\\QuarksPwDump.exe",
            "\\rdp_check_windows.exe",
            "\\Rubeus.exe",
            "\\SafetyKatz.exe",
            "\\sambaPipe_windows.exe",
            "\\SelectMyParent.exe",
            "\\SharpChisel.exe",
            "\\SharPersist.exe",
            "\\SharpEvtMute.exe",
            "\\SharpImpersonation.exe",
            "\\SharpLDAPmonitor.exe",
            "\\SharpLdapWhoami.exe",
            "\\SharpUp.exe",
            "\\SharpView.exe",
            "\\smbclient_windows.exe",
            "\\smbserver_windows.exe",
            "\\sniff_windows.exe",
            "\\sniffer_windows.exe",
            "\\split_windows.exe",
            "\\SpoolSample.exe",
            "\\Stracciatella.exe",
            "\\SysmonEOP.exe",
            "\\temp\\rot.exe",
            "\\ticketer_windows.exe",
            "\\TruffleSnout.exe",
            "\\winPEASany_ofs.exe",
            "\\winPEASany.exe",
            "\\winPEASx64_ofs.exe",
            "\\winPEASx64.exe",
            "\\winPEASx86_ofs.exe",
            "\\winPEASx86.exe",
            "\\xordump.exe"
          ]
        },
        {
          "SourceImage|contains": [
            "\\goldenPac",
            "\\just_dce_",
            "\\karmaSMB",
            "\\kintercept",
            "\\LocalPotato",
            "\\ntlmrelayx",
            "\\rpcdump",
            "\\samrdump",
            "\\secretsdump",
            "\\smbexec",
            "\\smbrelayx",
            "\\wmiexec",
            "\\wmipersist",
            "HotPotato",
            "Juicy Potato",
            "JuicyPotato",
            "PetitPotam",
            "RottenPotato"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - HandleKatz Duplicating LSASS Handle",
    "id": 202,
    "status": "test",
    "description": "Detects HandleKatz opening LSASS to duplicate its handle to later dump the memory without opening any new handles",
    "references": [
      "https://github.com/codewhitesec/HandleKatz"
    ],
    "author": "Bhabesh Raj (rule), @thefLinkk",
    "date": "2022/06/27",
    "modified": "2023/11/28",
    "tags": [
      "attack.execution",
      "attack.t1106",
      "attack.defense_evasion",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "GrantedAccess": "0x1440",
        "CallTrace|startswith": "C:\\Windows\\System32\\ntdll.dll+",
        "CallTrace|contains": "|UNKNOWN(",
        "CallTrace|endswith": ")"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - LittleCorporal Generated Maldoc Injection",
    "id": 203,
    "status": "test",
    "description": "Detects the process injection of a LittleCorporal generated Maldoc.",
    "references": [
      "https://github.com/connormcgarr/LittleCorporal"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/09",
    "modified": "2023/11/28",
    "tags": [
      "attack.execution",
      "attack.t1204.002",
      "attack.t1055.003"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": "\\winword.exe",
        "CallTrace|contains|all": [
          ":\\Windows\\Microsoft.NET\\Framework64\\v2.",
          "UNKNOWN"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SysmonEnte Execution",
    "id": 204,
    "status": "test",
    "description": "Detects the use of SysmonEnte, a tool to attack the integrity of Sysmon",
    "references": [
      "https://codewhitesec.blogspot.com/2022/09/attacks-on-sysmon-revisited-sysmonente.html",
      "https://github.com/codewhitesec/SysmonEnte/",
      "https://github.com/codewhitesec/SysmonEnte/blob/main/screens/1.png"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/07",
    "modified": "2023/11/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection_sysmon": {
        "TargetImage|contains": [
          ":\\Windows\\Sysmon.exe",
          ":\\Windows\\Sysmon64.exe"
        ],
        "GrantedAccess": "0x1400"
      },
      "selection_calltrace": {
        "CallTrace": "Ente"
      },
      "filter_main_generic": {
        "SourceImage|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "filter_main_msdefender": {
        "SourceImage|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
        "SourceImage|endswith": "\\MsMpEng.exe"
      },
      "condition": "( selection_sysmon and not 1 of filter_main_* ) or selection_calltrace"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Lsass Memory Dump via Comsvcs DLL",
    "id": 205,
    "status": "test",
    "description": "Detects adversaries leveraging the MiniDump export function from comsvcs.dll via rundll32 to perform a memory dump from lsass.",
    "references": [
      "https://twitter.com/shantanukhande/status/1229348874298388484",
      "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/20",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "SourceImage|endswith": "\\rundll32.exe",
        "CallTrace|contains": "comsvcs.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSASS Memory Access by Tool With Dump Keyword In Name",
    "id": 206,
    "status": "test",
    "description": "Detects LSASS process access requests from a source process with the \"dump\" keyword in its image name.",
    "references": [
      "https://twitter.com/_xpn_/status/1491557187168178176",
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/10",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "SourceImage|contains": "dump",
        "GrantedAccess|endswith": [
          "10",
          "30",
          "50",
          "70",
          "90",
          "B0",
          "D0",
          "F0",
          "18",
          "38",
          "58",
          "78",
          "98",
          "B8",
          "D8",
          "F8",
          "1A",
          "3A",
          "5A",
          "7A",
          "9A",
          "BA",
          "DA",
          "FA",
          "0x14C2",
          "FF"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare programs that contain the word dump in their name and access lsass"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Activity Via LSASS",
    "id": 207,
    "status": "experimental",
    "description": "Detects process access requests to the LSASS process with specific call trace calls and access masks.\nThis behaviour is expressed by many credential dumping tools such as Mimikatz, NanoDump, Invoke-Mimikatz, Procdump and even the Taskmgr dumping feature.\n",
    "references": [
      "https://blog.menasec.net/2019/02/threat-hunting-21-procdump-or-taskmgr.html",
      "https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.001/T1003.001.md",
      "https://research.splunk.com/endpoint/windows_possible_credential_dumping/"
    ],
    "author": "Samir Bousseaden, Michael Haag",
    "date": "2019/04/03",
    "modified": "2023/12/13",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "GrantedAccess|contains": [
          "0x1000",
          "0x1038",
          "0x1438",
          "0x143a",
          "0x1fffff"
        ],
        "CallTrace|contains": [
          "dbgcore.dll",
          "dbghelp.dll",
          "kernel32.dll",
          "kernelbase.dll",
          "ntdll.dll"
        ]
      },
      "filter_main_system_user": {
        "SourceUser|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "filter_optional_thor": {
        "CallTrace|contains|all": [
          ":\\Windows\\Temp\\asgard2-agent\\",
          "\\thor\\thor64.exe+",
          "|UNKNOWN("
        ],
        "GrantedAccess": "0x103800"
      },
      "filter_optional_sysmon": {
        "SourceImage|endswith": ":\\Windows\\Sysmon64.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Credential Dumping Activity By Python Based Tool",
    "id": 208,
    "related": [
      {
        "id": "4b9a8556-99c4-470b-a40c-9c8d02c77ed0",
        "type": "obsoletes"
      },
      {
        "id": "7186e989-4ed7-4f4e-a656-4674b9e3e48b",
        "type": "obsoletes"
      }
    ],
    "status": "stable",
    "description": "Detects LSASS process access for potential credential dumping by a Python-like tool such as LaZagne or Pypykatz.",
    "references": [
      "https://twitter.com/bh4b3sh/status/1303674603819081728",
      "https://github.com/skelsec/pypykatz"
    ],
    "author": "Bhabesh Raj, Jonhnathan Ribeiro",
    "date": "2023/11/27",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0349"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "CallTrace|contains|all": [
          "_ctypes.pyd+",
          ":\\Windows\\System32\\KERNELBASE.dll+",
          ":\\Windows\\SYSTEM32\\ntdll.dll+"
        ],
        "CallTrace|contains": [
          "python27.dll+",
          "python3*.dll+"
        ],
        "GrantedAccess": "0x1FFFFF"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote LSASS Process Access Through Windows Remote Management",
    "id": 209,
    "status": "stable",
    "description": "Detects remote access to the LSASS process via WinRM. This could be a sign of credential dumping from tools like mimikatz.",
    "references": [
      "https://pentestlab.blog/2018/05/15/lateral-movement-winrm/"
    ],
    "author": "Patryk Prauze - ING Tech",
    "date": "2019/05/20",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.execution",
      "attack.t1003.001",
      "attack.t1059.001",
      "attack.lateral_movement",
      "attack.t1021.006",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "SourceImage|endswith": ":\\Windows\\system32\\wsmprovhost.exe"
      },
      "filter_main_access": {
        "GrantedAccess": "0x80000000"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious LSASS Access Via MalSecLogon",
    "id": 210,
    "status": "test",
    "description": "Detects suspicious access to LSASS handle via a call trace to \"seclogon.dll\" with a suspicious access right.",
    "references": [
      "https://twitter.com/SBousseaden/status/1541920424635912196",
      "https://github.com/elastic/detection-rules/blob/2bc1795f3d7bcc3946452eb4f07ae799a756d94e/rules/windows/credential_access_lsass_handle_via_malseclogon.toml",
      "https://splintercod3.blogspot.com/p/the-hidden-side-of-seclogon-part-3.html"
    ],
    "author": "Samir Bousseaden (original elastic rule), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "SourceImage|endswith": "\\svchost.exe",
        "GrantedAccess": "0x14c0",
        "CallTrace|contains": "seclogon.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious GrantedAccess Flags On LSASS",
    "id": 211,
    "related": [
      {
        "id": "32d0d3e2-e58d-4d41-926b-18b520b2b32d",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects process access requests to LSASS process with potentially suspicious access flags",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights",
      "https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&ithint=file%2cpptx&app=PowerPoint&authkey=!AMvCRTKB_V1J5ow",
      "https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html",
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "http://security-research.dyndns.org/pub/slides/FIRST2017/FIRST-2017_Tom-Ueltschi_Sysmon_FINAL_notes.pdf"
    ],
    "author": "Florian Roth, Roberto Rodriguez, Dimitrios Slamaris, Mark Russinovich, Thomas Patzke, Teymur Kheirkhabarov, Sherif Eldeeb, James Dickenson, Aleksey Potapov, oscd.community",
    "date": "2021/11/22",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection_target": {
        "TargetImage|endswith": "\\lsass.exe"
      },
      "selection_access": [
        {
          "GrantedAccess|endswith": [
            "30",
            "50",
            "70",
            "90",
            "B0",
            "D0",
            "F0",
            "18",
            "38",
            "58",
            "78",
            "98",
            "B8",
            "D8",
            "F8",
            "1A",
            "3A",
            "5A",
            "7A",
            "9A",
            "BA",
            "DA",
            "FA",
            "0x14C2"
          ]
        },
        {
          "GrantedAccess|startswith": [
            "0x100000",
            "0x1418",
            "0x1438",
            "0x143a",
            "0x1f0fff",
            "0x1f1fff",
            "0x1f2fff",
            "0x1f3fff",
            "0x40"
          ]
        }
      ],
      "filter_main_generic": {
        "SourceImage|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "filter_optional_malwarebytes": {
        "SourceImage|endswith": ":\\ProgramData\\MALWAREBYTES\\MBAMSERVICE\\ctlrupdate\\mbupdatr.exe"
      },
      "filter_optional_vscode": {
        "SourceImage|endswith": "\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
      },
      "filter_main_windefend_1": {
        "SourceImage|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\",
        "SourceImage|endswith": "\\MsMpEng.exe"
      },
      "filter_main_windefend_2": {
        "CallTrace|contains|all": [
          "|?:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\{",
          "}\\mpengine.dll+"
        ],
        "GrantedAccess": "0x1418"
      },
      "filter_main_windefend_3": {
        "CallTrace|contains": [
          "|c:\\program files\\windows defender\\mprtp.dll",
          "|c:\\program files\\windows defender\\MpClient.dll"
        ]
      },
      "filter_optional_vmwaretools": {
        "SourceImage|contains": ":\\ProgramData\\VMware\\VMware Tools\\",
        "SourceImage|endswith": "\\vmtoolsd.exe"
      },
      "filter_optional_sysinternals_process_explorer": {
        "SourceImage|endswith": [
          "\\PROCEXP64.EXE",
          "\\PROCEXP.EXE"
        ],
        "GrantedAccess": "0x40"
      },
      "filter_optional_mbami": {
        "SourceImage|endswith": "\\MBAMInstallerService.exe",
        "GrantedAccess": "0x40"
      },
      "filter_optional_nextron": {
        "SourceImage|endswith": [
          "\\aurora-agent-64.exe",
          "\\aurora-agent.exe",
          "\\thor.exe",
          "\\thor64.exe"
        ],
        "GrantedAccess": "0x40"
      },
      "filter_main_explorer": {
        "SourceImage|endswith": "\\explorer.exe",
        "GrantedAccess": "0x401"
      },
      "filter_optional_sysinternals_handle": {
        "SourceImage|endswith": [
          "\\handle.exe",
          "\\handle64.exe"
        ],
        "GrantedAccess": "0x40"
      },
      "filter_optional_webex": {
        "SourceImage|endswith": "\\AppData\\Local\\WebEx\\WebexHost.exe",
        "GrantedAccess": "0x401"
      },
      "filter_optional_steam_apps": {
        "SourceImage|contains": "\\SteamLibrary\\steamapps\\"
      },
      "condition": "all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate software such as AV and EDR"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Credential Dumping Attempt Via WerFault",
    "id": 212,
    "status": "test",
    "description": "Detects process LSASS memory dump using Mimikatz, NanoDump, Invoke-Mimikatz, Procdump or Taskmgr based on the CallTrace pointing to ntdll.dll, dbghelp.dll or dbgcore.dll for win10, server2016 and up.",
    "references": [
      "https://github.com/helpsystems/nanodump/commit/578116faea3d278d53d70ea932e2bbfe42569507"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2012/06/27",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "SourceImage|endswith": "\\WerFault.exe",
        "TargetImage|endswith": "\\lsass.exe",
        "GrantedAccess": "0x1FFFFF"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Actual failures in lsass.exe that trigger a crash dump (unlikely)",
      "Unknown cases in which WerFault accesses lsass.exe"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSASS Access From Potentially White-Listed Processes",
    "id": 213,
    "status": "test",
    "description": "Detects a possible process memory dump that uses a white-listed filename like TrolleyExpress.exe as a way to dump the LSASS process memory without Microsoft Defender interference\n",
    "references": [
      "https://twitter.com/_xpn_/status/1491557187168178176",
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz",
      "https://twitter.com/mrd0x/status/1460597833917251595"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/10",
    "modified": "2023/11/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\lsass.exe",
        "SourceImage|endswith": [
          "\\TrolleyExpress.exe",
          "\\ProcessDump.exe",
          "\\dump64.exe"
        ],
        "GrantedAccess|endswith": [
          "10",
          "30",
          "50",
          "70",
          "90",
          "B0",
          "D0",
          "F0",
          "18",
          "38",
          "58",
          "78",
          "98",
          "B8",
          "D8",
          "F8",
          "1A",
          "3A",
          "5A",
          "7A",
          "9A",
          "BA",
          "DA",
          "FA",
          "0x14C2",
          "FF"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Direct Syscall of NtOpenProcess",
    "id": 214,
    "status": "experimental",
    "description": "Detects potential calls to NtOpenProcess directly from NTDLL.",
    "references": [
      "https://medium.com/falconforce/falconfriday-direct-system-calls-and-cobalt-strike-bofs-0xff14-741fa8e1bdd6"
    ],
    "author": "Christian Burkard (Nextron Systems), Tim Shelton (FP)",
    "date": "2021/07/28",
    "modified": "2023/12/13",
    "tags": [
      "attack.execution",
      "attack.t1106"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CallTrace|startswith": "UNKNOWN"
      },
      "filter_main_vcredist": {
        "TargetImage|endswith": "vcredist_x64.exe",
        "SourceImage|endswith": "vcredist_x64.exe"
      },
      "filter_main_generic": {
        "SourceImage|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\"
        ],
        "TargetImage|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "filter_main_kerneltrace_edge": {
        "Provider_Name": "Microsoft-Windows-Kernel-Audit-API-Calls"
      },
      "filter_optional_vmware": {
        "TargetImage|endswith": ":\\Windows\\system32\\systeminfo.exe",
        "SourceImage|endswith": "setup64.exe"
      },
      "filter_optional_cylance": {
        "SourceImage|endswith": ":\\Windows\\Explorer.EXE",
        "TargetImage|endswith": ":\\Program Files\\Cylance\\Desktop\\CylanceUI.exe"
      },
      "filter_optional_amazon": {
        "SourceImage|endswith": "AmazonSSMAgentSetup.exe",
        "TargetImage|endswith": "AmazonSSMAgentSetup.exe"
      },
      "filter_optional_vscode": {
        "SourceImage|endswith": "\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe",
        "TargetImage|endswith": "\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
      },
      "filter_optional_teams": {
        "TargetImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\current\\Teams.exe",
        "SourceImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\current\\Teams.exe"
      },
      "filter_optional_discord": {
        "TargetImage|contains": "\\AppData\\Local\\Discord\\",
        "TargetImage|endswith": "\\Discord.exe"
      },
      "filter_optional_yammer": {
        "SourceImage|contains": "\\AppData\\Local\\yammerdesktop\\app-",
        "SourceImage|endswith": "\\Yammer.exe",
        "TargetImage|contains": "\\AppData\\Local\\yammerdesktop\\app-",
        "TargetImage|endswith": "\\Yammer.exe",
        "GrantedAccess": "0x1000"
      },
      "filter_optional_evernote": {
        "TargetImage|endswith": "\\Evernote\\Evernote.exe"
      },
      "filter_optional_adobe_acrobat": {
        "SourceImage|contains": ":\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\",
        "SourceImage|endswith": "\\AcroCEF.exe",
        "TargetImage|contains": ":\\Program Files\\Adobe\\Acrobat DC\\Acrobat\\",
        "TargetImage|endswith": "\\AcroCEF.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential NT API Stub Patching",
    "id": 215,
    "status": "experimental",
    "description": "Detects potential NT API stub patching as seen used by the project PatchingAPI",
    "references": [
      "https://github.com/D1rkMtr/UnhookingPatch",
      "https://twitter.com/D1rkMtr/status/1611471891193298944?s=20"
    ],
    "author": "frack113",
    "date": "2023/01/07",
    "modified": "2023/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "GrantedAccess": "0x1FFFFF",
        "CallTrace|startswith": "C:\\Windows\\SYSTEM32\\ntdll.dll+",
        "CallTrace|contains": "|UNKNOWN(",
        "CallTrace|endswith": ")"
      },
      "filter_main_generic": [
        {
          "SourceImage|contains": [
            ":\\Program Files\\",
            ":\\Program Files (x86)\\",
            ":\\Windows\\System32\\",
            ":\\Windows\\SysWOW64\\"
          ]
        },
        {
          "TargetImage|contains": [
            ":\\Program Files\\",
            ":\\Program Files (x86)\\",
            ":\\Windows\\System32\\",
            ":\\Windows\\SysWOW64\\"
          ]
        }
      ],
      "filter_optional_thor": {
        "SourceImage|endswith": [
          "\\thor.exe",
          "\\thor64.exe"
        ]
      },
      "filter_optional_githubdesktop": {
        "SourceImage|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\GitHubDesktop\\app-"
        ],
        "SourceImage|endswith": [
          "\\GitHubDesktop.exe",
          "\\resources\\app\\git\\usr\\bin\\sh.exe"
        ],
        "TargetImage|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\GitHubDesktop\\app-"
        ]
      },
      "filter_main_dotnet": {
        "SourceImage|contains": ":\\Windows\\Microsoft.NET\\",
        "TargetImage|contains": ":\\Windows\\Microsoft.NET\\"
      },
      "filter_main_taskhost": {
        "SourceImage|contains": [
          ":\\Windows\\system32\\taskhostw.exe",
          ":\\Windows\\system32\\taskhost.exe"
        ],
        "TargetImage|contains": [
          ":\\Windows\\Microsoft.NET\\Framework\\v",
          ":\\Windows\\Microsoft.NET\\Framework64\\v"
        ],
        "TargetImage|endswith": "\\NGenTask.exe"
      },
      "filter_optional_teams_to_update": {
        "SourceImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\stage\\Teams.exe",
        "TargetImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\Update.exe"
      },
      "filter_optional_teams_update_regsvr32": {
        "SourceImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\Update.exe",
        "TargetImage|endswith": ":\\WINDOWS\\SysWOW64\\regsvr32.exe"
      },
      "filter_optional_teams_update_to_teams": {
        "SourceImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\Update.exe",
        "TargetImage|endswith": "\\AppData\\Local\\Microsoft\\Teams\\stage\\Teams.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Shellcode Injection",
    "id": 216,
    "status": "test",
    "description": "Detects potential shellcode injection used by tools such as Metasploit's migrate and Empire's psinject",
    "references": [
      "https://github.com/EmpireProject/PSInject"
    ],
    "author": "Bhabesh Raj",
    "date": "2022/03/11",
    "modified": "2023/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "GrantedAccess": [
          "0x147a",
          "0x1f3fff"
        ],
        "CallTrace|contains": "UNKNOWN"
      },
      "filter_optional_dell_folders": {
        "SourceImage|contains": [
          ":\\Program Files\\Dell\\",
          ":\\Program Files (x86)\\Dell\\"
        ],
        "TargetImage|contains": [
          ":\\Program Files\\Dell\\",
          ":\\Program Files (x86)\\Dell\\"
        ],
        "GrantedAccess": "0x1F3FFF",
        "CallTrace|startswith": "?:\\Windows\\System32\\ntdll.dll"
      },
      "filter_optional_dell_specifc": {
        "SourceImage|endswith": ":\\Program Files (x86)\\Dell\\UpdateService\\ServiceShell.exe",
        "TargetImage|endswith": ":\\Windows\\Explorer.EXE",
        "GrantedAccess": "0x1F3FFF",
        "CallTrace|startswith": "?:\\Windows\\System32\\ntdll.dll"
      },
      "filter_optional_visual_studio": {
        "SourceImage|endswith": [
          ":\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\PerfWatson2.exe",
          ":\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\PerfWatson2.exe"
        ],
        "TargetImage|endswith": [
          ":\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\devenv.exe",
          ":\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\devenv.exe"
        ],
        "CallTrace|startswith": "?:\\Windows\\System32\\ntdll.dll"
      },
      "filter_optional_ddvdatacollector": {
        "SourceImage|contains": ":\\Program Files\\Microsoft Visual Studio\\",
        "SourceImage|endswith": "\\MSBuild\\Current\\Bin\\MSBuild.exe",
        "TargetImage|endswith": ":\\Program Files\\Dell\\DellDataVault\\DDVDataCollector.exe"
      },
      "filter_optional_wmiprvese": {
        "SourceImage|endswith": ":\\Windows\\System32\\Wbem\\Wmiprvse.exe",
        "TargetImage|endswith": ":\\Windows\\system32\\lsass.exe",
        "CallTrace|startswith": "?:\\Windows\\SYSTEM32\\ntdll.dll"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Credential Dumping Attempt Via Svchost",
    "id": 217,
    "status": "test",
    "description": "Detects when a process tries to access the memory of svchost to potentially dump credentials.",
    "references": [
      "Internal Research"
    ],
    "author": "Florent Labouyrie",
    "date": "2021/04/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.t1548"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_access"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": "\\svchost.exe",
        "GrantedAccess": "0x143a"
      },
      "filter_main_known_processes": {
        "SourceImage|endswith": [
          "\\services.exe",
          "\\msiexec.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Svchost Process Access",
    "id": 218,
    "status": "test",
    "description": "Detects suspicious access to the \"svchost\" process such as that used by Invoke-Phantom to kill the thread of the Windows event logging service.",
    "references": [
      "https://github.com/hlldz/Invoke-Phant0m",
      "https://twitter.com/timbmsft/status/900724491076214784"
    ],
    "author": "Tim Burrell",
    "date": "2020/01/02",
    "modified": "2023/01/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetImage|endswith": ":\\Windows\\System32\\svchost.exe",
        "GrantedAccess": "0x1F3FFF",
        "CallTrace|contains": "UNKNOWN"
      },
      "filter_main_msbuild": {
        "SourceImage|contains": ":\\Program Files\\Microsoft Visual Studio\\",
        "SourceImage|endswith": "\\MSBuild\\Current\\Bin\\MSBuild.exe",
        "CallTrace|contains": [
          "Microsoft.Build.ni.dll",
          "System.ni.dll"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Function Call From Undocumented COM Interface EditionUpgradeManager",
    "id": 219,
    "status": "test",
    "description": "Detects function calls from the EditionUpgradeManager COM interface. Which is an interface that is not used by standard executables.",
    "references": [
      "https://www.snip2code.com/Snippet/4397378/UAC-bypass-using-EditionUpgradeManager-C/",
      "https://gist.github.com/hfiref0x/de9c83966623236f5ebf8d9ae2407611"
    ],
    "author": "oscd.community, Dmitry Uchakin",
    "date": "2020/10/07",
    "modified": "2023/11/30",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CallTrace|contains": "editionupgrademanagerobj.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "UAC Bypass Using WOW64 Logger DLL Hijack",
    "id": 220,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using a WoW64 logger DLL hijack (UACMe 30)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_access",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "SourceImage|contains": ":\\Windows\\SysWOW64\\",
        "GrantedAccess": "0x1fffff",
        "CallTrace|startswith": "UNKNOWN(0000000000000000)|UNKNOWN(0000000000000000)|"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "7Zip Compressing Dump Files",
    "id": 221,
    "related": [
      {
        "id": "1ac14d38-3dfc-4635-92c7-e3fd1c5f5bfc",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of 7z in order to compress a file with a \".dmp\"/\".dump\" extension, which could be a step in a process of dump file exfiltration.",
    "references": [
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/27",
    "modified": "2023/09/12",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Description|contains": "7-Zip"
        },
        {
          "Image|endswith": [
            "\\7z.exe",
            "\\7zr.exe",
            "\\7za.exe"
          ]
        },
        {
          "OriginalFileName": [
            "7z.exe",
            "7za.exe"
          ]
        }
      ],
      "selection_extension": {
        "CommandLine|contains": [
          ".dmp",
          ".dump",
          ".hdmp"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of 7z with a command line in which \".dmp\" or \".dump\" appears accidentally",
      "Legitimate use of 7z to compress WER \".dmp\" files for troubleshooting"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Compress Data and Lock With Password for Exfiltration With 7-ZIP",
    "id": 222,
    "status": "test",
    "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md"
    ],
    "author": "frack113",
    "date": "2021/07/27",
    "modified": "2023/03/13",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Description|contains": "7-Zip"
        },
        {
          "Image|endswith": [
            "\\7z.exe",
            "\\7zr.exe",
            "\\7za.exe"
          ]
        },
        {
          "OriginalFileName": [
            "7z.exe",
            "7za.exe"
          ]
        }
      ],
      "selection_password": {
        "CommandLine|contains": " -p"
      },
      "selection_action": {
        "CommandLine|contains": [
          " a ",
          " u "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate activity is expected since compressing files with a password is common."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Password Protected Compressed File Extraction Via 7Zip",
    "id": 223,
    "status": "test",
    "description": "Detects usage of 7zip utilities (7z.exe, 7za.exe and 7zr.exe) to extract password protected zip files.",
    "references": [
      "https://blog.cyble.com/2022/06/07/bumblebee-loader-on-the-rise/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/10",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Description|contains": "7-Zip"
        },
        {
          "Image|endswith": [
            "\\7z.exe",
            "\\7zr.exe",
            "\\7za.exe"
          ]
        },
        {
          "OriginalFileName": [
            "7z.exe",
            "7za.exe"
          ]
        }
      ],
      "selection_password": {
        "CommandLine|contains|all": [
          " -p",
          " x ",
          " -o"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate activity is expected since extracting files with a password can be common in some environment."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious AddinUtil.EXE CommandLine Execution",
    "id": 224,
    "status": "experimental",
    "description": "Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) with suspicious Addinroot or Pipelineroot paths. An adversary may execute AddinUtil.exe with uncommon Addinroot/Pipelineroot paths that point to the adversaries Addins.Store payload.\n",
    "references": [
      "https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)",
    "date": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\addinutil.exe"
        },
        {
          "OriginalFileName": "AddInUtil.exe"
        }
      ],
      "selection_susp_1_flags": {
        "CommandLine|contains": [
          "-AddInRoot:",
          "-PipelineRoot:"
        ]
      },
      "selection_susp_1_paths": {
        "CommandLine|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\"
        ]
      },
      "selection_susp_2": {
        "CommandLine|contains": [
          "-AddInRoot:.",
          "-AddInRoot:\".\"",
          "-PipelineRoot:.",
          "-PipelineRoot:\".\""
        ],
        "CurrentDirectory|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\"
        ]
      },
      "condition": "selection_img and (all of selection_susp_1_* or selection_susp_2)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Child Process Of AddinUtil.EXE",
    "id": 225,
    "status": "experimental",
    "description": "Detects uncommon child processes of the Add-In deployment cache updating utility (AddInutil.exe) which could be a sign of potential abuse of the binary to proxy execution via a custom Addins.Store payload.\n",
    "references": [
      "https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html"
    ],
    "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)",
    "date": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\addinutil.exe"
      },
      "filter_main_werfault": {
        "Image|endswith": [
          ":\\Windows\\System32\\conhost.exe",
          ":\\Windows\\System32\\werfault.exe",
          ":\\Windows\\SysWOW64\\werfault.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uncommon AddinUtil.EXE CommandLine Execution",
    "id": 226,
    "status": "experimental",
    "description": "Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) with uncommon Addinroot or Pipelineroot paths. An adversary may execute AddinUtil.exe with uncommon Addinroot/Pipelineroot paths that point to the adversaries Addins.Store payload.\n",
    "references": [
      "https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html"
    ],
    "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)",
    "date": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\addinutil.exe"
        },
        {
          "OriginalFileName": "AddInUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-AddInRoot:",
          "-PipelineRoot:"
        ]
      },
      "filter_main_addinroot": {
        "CommandLine|contains": [
          "-AddInRoot:\"C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA",
          "-AddInRoot:C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA",
          "-PipelineRoot:\"C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA",
          "-PipelineRoot:C:\\Program Files (x86)\\Common Files\\Microsoft Shared\\VSTA"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "AddinUtil.EXE Execution From Uncommon Directory",
    "id": 227,
    "status": "experimental",
    "description": "Detects execution of the Add-In deployment cache updating utility (AddInutil.exe) from a non-standard directory.",
    "references": [
      "https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html"
    ],
    "author": "Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)",
    "date": "2023/09/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\addinutil.exe"
        },
        {
          "OriginalFileName": "AddInUtil.exe"
        }
      ],
      "filter_main_legit_location": {
        "Image|contains": [
          ":\\Windows\\Microsoft.NET\\Framework\\",
          ":\\Windows\\Microsoft.NET\\Framework64\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Adplus.EXE Abuse",
    "id": 228,
    "status": "experimental",
    "description": "Detects execution of \"AdPlus.exe\", a binary that is part of the Windows SDK that can be used as a LOLBIN in order to dump process memory and execute arbitrary commands.",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Adplus/",
      "https://twitter.com/nas_bench/status/1534916659676422152",
      "https://twitter.com/nas_bench/status/1534915321856917506"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/09",
    "modified": "2023/06/23",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\adplus.exe"
        },
        {
          "OriginalFileName": "Adplus.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -hang ",
          " -pn ",
          " -pmn ",
          " -p ",
          " -po ",
          " -c ",
          " -sc "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of Adplus for debugging purposes"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AgentExecutor PowerShell Execution",
    "id": 229,
    "related": [
      {
        "id": "c0b40568-b1e9-4b03-8d6c-b096da6da9ab",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of the AgentExecutor.exe binary. Which can be abused as a LOLBIN to execute powershell scripts with the ExecutionPolicy \"Bypass\" or any binary named \"powershell.exe\" located in the path provided by 6th positional argument",
    "author": "Nasreddine Bencherchali (Nextron Systems), memory-shards",
    "references": [
      "https://twitter.com/lefterispan/status/1286259016436514816",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Agentexecutor/",
      "https://docs.microsoft.com/en-us/mem/intune/apps/intune-management-extension",
      "https://twitter.com/jseerden/status/1247985304667066373/photo/1"
    ],
    "date": "2022/12/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image": "\\AgentExecutor.exe"
        },
        {
          "OriginalFileName": "AgentExecutor.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -powershell",
          " -remediationScript"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use via Intune management. You exclude script paths and names to reduce FP rate"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious AgentExecutor PowerShell Execution",
    "id": 230,
    "related": [
      {
        "id": "7efd2c8d-8b18-45b7-947d-adfe9ed04f61",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of the AgentExecutor.exe binary. Which can be abused as a LOLBIN to execute powershell scripts with the ExecutionPolicy \"Bypass\" or any binary named \"powershell.exe\" located in the path provided by 6th positional argument",
    "author": "Nasreddine Bencherchali (Nextron Systems), memory-shards",
    "references": [
      "https://twitter.com/lefterispan/status/1286259016436514816",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Agentexecutor/",
      "https://docs.microsoft.com/en-us/mem/intune/apps/intune-management-extension",
      "https://twitter.com/jseerden/status/1247985304667066373/photo/1"
    ],
    "date": "2022/12/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\AgentExecutor.exe"
        },
        {
          "OriginalFileName": "AgentExecutor.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -powershell",
          " -remediationScript"
        ]
      },
      "filter_main_pwsh": {
        "CommandLine|contains": [
          "C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\",
          "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Child Process Of Appvlp.EXE",
    "id": 231,
    "status": "test",
    "description": "Detects uncommon child processes of Appvlp.EXE\nAppvlp or the Application Virtualization Utility is included with Microsoft Office. Attackers are able to abuse \"AppVLP\" to execute shell commands.\nNormally, this binary is used for Application Virtualization, but it can also be abused to circumvent the ASR file path rule folder\nor to mark a file as a system file.\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Appvlp/"
    ],
    "author": "Sreeman",
    "date": "2020/03/13",
    "modified": "2023/11/09",
    "tags": [
      "attack.t1218",
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\appvlp.exe"
      },
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Windows\\SysWOW64\\rundll32.exe",
          ":\\Windows\\System32\\rundll32.exe"
        ]
      },
      "filter_optional_office_msoasb": {
        "Image|contains": ":\\Program Files\\Microsoft Office",
        "Image|endswith": "\\msoasb.exe"
      },
      "filter_optional_office_skype": {
        "Image|contains|all": [
          ":\\Program Files\\Microsoft Office",
          "\\SkypeSrv\\"
        ],
        "Image|endswith": "\\SKYPESERVER.EXE"
      },
      "filter_optional_office_msouc": {
        "Image|contains": ":\\Program Files\\Microsoft Office",
        "Image|endswith": "\\MSOUC.EXE"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "AspNetCompiler Execution",
    "id": 232,
    "related": [
      {
        "id": "9ccba514-7cb6-4c5c-b377-700758f2f120",
        "type": "similar"
      },
      {
        "id": "4c7f49ee-2638-43bb-b85b-ce676c30b260",
        "type": "similar"
      },
      {
        "id": "9f50fe98-fe5c-4a2d-86c7-fad7f63ed622",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of \"aspnet_compiler.exe\" which can be abused to compile and execute C# code.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Aspnet_Compiler/",
      "https://ijustwannared.team/2020/08/01/the-curious-case-of-aspnet_compiler-exe/"
    ],
    "author": "frack113",
    "date": "2021/11/24",
    "modified": "2023/08/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "C:\\Windows\\Microsoft.NET\\Framework\\",
          "C:\\Windows\\Microsoft.NET\\Framework64\\"
        ],
        "Image|endswith": "\\aspnet_compiler.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Child Process of AspNetCompiler",
    "id": 233,
    "related": [
      {
        "id": "4c7f49ee-2638-43bb-b85b-ce676c30b260",
        "type": "similar"
      },
      {
        "id": "9f50fe98-fe5c-4a2d-86c7-fad7f63ed622",
        "type": "similar"
      },
      {
        "id": "a01b8329-5953-4f73-ae2d-aa01e1f35f00",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of \"aspnet_compiler.exe\".",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Aspnet_Compiler/",
      "https://ijustwannared.team/2020/08/01/the-curious-case-of-aspnet_compiler-exe/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\aspnet_compiler.exe"
      },
      "selection_child": [
        {
          "Image|endswith": [
            "\\calc.exe",
            "\\notepad.exe"
          ]
        },
        {
          "Image|contains": [
            "\\Users\\Public\\",
            "\\AppData\\Local\\Temp\\",
            "\\AppData\\Local\\Roaming\\",
            ":\\Temp\\",
            ":\\Windows\\Temp\\",
            ":\\Windows\\System32\\Tasks\\",
            ":\\Windows\\Tasks\\"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious ASP.NET Compilation Via AspNetCompiler",
    "id": 234,
    "related": [
      {
        "id": "9ccba514-7cb6-4c5c-b377-700758f2f120",
        "type": "similar"
      },
      {
        "id": "4c7f49ee-2638-43bb-b85b-ce676c30b260",
        "type": "similar"
      },
      {
        "id": "a01b8329-5953-4f73-ae2d-aa01e1f35f00",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"aspnet_compiler.exe\" with potentially suspicious paths for compilation.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Aspnet_Compiler/",
      "https://ijustwannared.team/2020/08/01/the-curious-case-of-aspnet_compiler-exe/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "C:\\Windows\\Microsoft.NET\\Framework\\",
          "C:\\Windows\\Microsoft.NET\\Framework64\\"
        ],
        "Image|endswith": "\\aspnet_compiler.exe",
        "CommandLine|contains": [
          "\\Users\\Public\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Local\\Roaming\\",
          ":\\Temp\\",
          ":\\Windows\\Temp\\",
          ":\\Windows\\System32\\Tasks\\",
          ":\\Windows\\Tasks\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Hiding Files with Attrib.exe",
    "id": 235,
    "status": "test",
    "description": "Detects usage of attrib.exe to hide files from users.",
    "references": [
      "https://unit42.paloaltonetworks.com/unit42-sure-ill-take-new-combojack-malware-alters-clipboards-steal-cryptocurrency/",
      "https://www.uptycs.com/blog/lolbins-are-no-laughing-matter"
    ],
    "author": "Sami Ruohonen",
    "date": "2019/01/16",
    "modified": "2023/03/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\attrib.exe"
        },
        {
          "OriginalFileName": "ATTRIB.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " +h "
      },
      "filter_msiexec": {
        "CommandLine|contains": "\\desktop.ini "
      },
      "filter_intel": {
        "ParentImage|endswith": "\\cmd.exe",
        "CommandLine": "+R +H +S +A \\\\\\*.cui",
        "ParentCommandLine": "C:\\\\WINDOWS\\\\system32\\\\\\*.bat"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "IgfxCUIService.exe hiding *.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)",
      "Msiexec.exe hiding desktop.ini"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Set Files as System Files Using Attrib.EXE",
    "id": 236,
    "related": [
      {
        "id": "efec536f-72e8-4656-8960-5e85d091345b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of \"attrib\" with the \"+s\" flag to mark files as system files",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md#atomic-test-3---create-windows-system-file-with-attrib",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/attrib",
      "https://unit42.paloaltonetworks.com/unit42-sure-ill-take-new-combojack-malware-alters-clipboards-steal-cryptocurrency/"
    ],
    "author": "frack113",
    "date": "2022/02/04",
    "modified": "2023/03/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\attrib.exe"
        },
        {
          "OriginalFileName": "ATTRIB.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " +s "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Set Suspicious Files as System Files Using Attrib.EXE",
    "id": 237,
    "related": [
      {
        "id": "bb19e94c-59ae-4c15-8c12-c563d23fe52b",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the usage of attrib with the \"+s\" option to set scripts or executables located in suspicious locations as system files to hide them from users and make them unable to be deleted with simple rights. The rule limits the search to specific extensions and directories to avoid FPs\n",
    "references": [
      "https://app.any.run/tasks/c28cabc8-a19f-40f3-a78b-cae506a5c0d4",
      "https://app.any.run/tasks/cfc8870b-ccd7-4210-88cf-a8087476a6d0",
      "https://unit42.paloaltonetworks.com/unit42-sure-ill-take-new-combojack-malware-alters-clipboards-steal-cryptocurrency/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/03/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\attrib.exe"
        },
        {
          "OriginalFileName": "ATTRIB.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " +s"
      },
      "selection_paths": {
        "CommandLine|contains": [
          " %",
          "\\Users\\Public\\",
          "\\AppData\\Local\\",
          "\\ProgramData\\",
          "\\Downloads\\",
          "\\Windows\\Temp\\"
        ]
      },
      "selection_ext": {
        "CommandLine|contains": [
          ".bat",
          ".dll",
          ".exe",
          ".hta",
          ".ps1",
          ".vbe",
          ".vbs"
        ]
      },
      "filter": {
        "CommandLine|contains|all": [
          "\\Windows\\TEMP\\",
          ".exe"
        ]
      },
      "condition": "all of selection* and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Interactive AT Job",
    "id": 238,
    "status": "test",
    "description": "Detects an interactive AT job, which may be used as a form of privilege escalation.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1053.002/T1053.002.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/d8db43cf-ed52-4f5c-9fb3-c9a4b95a0b56.html"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2019/10/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1053.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\at.exe",
        "CommandLine|contains": "interactive"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely (at.exe deprecated as of Windows 8)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Audit Policy Tampering Via NT Resource Kit Auditpol",
    "id": 239,
    "related": [
      {
        "id": "0a13e132-651d-11eb-ae93-0242ac130002",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Threat actors can use an older version of the auditpol binary available inside the NT resource kit to change audit policy configuration to impair detection capability.\nThis can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.\n",
    "references": [
      "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Windows%202000%20Resource%20Kit%20Tools/AuditPol"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/18",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "/logon:none",
          "/system:none",
          "/sam:none",
          "/privilege:none",
          "/object:none",
          "/process:none",
          "/policy:none"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "The old auditpol utility isn't available by default on recent versions of Windows as it was replaced by a newer version. The FP rate should be very low except for tools that use a similar flag structure"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Audit Policy Tampering Via Auditpol",
    "id": 240,
    "related": [
      {
        "id": "c6c56ada-612b-42d1-9a29-adad3c5c2c1e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Threat actors can use auditpol binary to change audit policy configuration to impair detection capability.\nThis can be carried out by selectively disabling/removing certain audit policies as well as restoring a custom policy owned by the threat actor.\n",
    "references": [
      "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/"
    ],
    "author": "Janantha Marasinghe (https://github.com/blueteam0ps)",
    "date": "2021/02/02",
    "modified": "2023/02/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\auditpol.exe"
        },
        {
          "OriginalFileName": "AUDITPOL.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "disable",
          "clear",
          "remove",
          "restore"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrator or administrator scripts might leverage the flags mentioned in the detection section. Either way, it should always be monitored"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Indirect Inline Command Execution Via Bash.EXE",
    "id": 241,
    "status": "experimental",
    "description": "Detects execution of Microsoft bash launcher with the \"-c\" flag. This can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Bash/"
    ],
    "author": "frack113",
    "date": "2021/11/24",
    "modified": "2023/08/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            ":\\Windows\\System32\\bash.exe",
            ":\\Windows\\SysWOW64\\bash.exe"
          ]
        },
        {
          "OriginalFileName": "Bash.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -c "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Indirect Command Execution From Script File Via Bash.EXE",
    "id": 242,
    "related": [
      {
        "id": "5edc2273-c26f-406c-83f3-f4d948e740dd",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of Microsoft bash launcher without any flags to execute the content of a bash script directly. This can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Bash/",
      "https://linux.die.net/man/1/bash",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            ":\\Windows\\System32\\bash.exe",
            ":\\Windows\\SysWOW64\\bash.exe"
          ]
        },
        {
          "OriginalFileName": "Bash.exe"
        }
      ],
      "filter_main_cli_flag": {
        "CommandLine|contains": [
          "bash.exe -",
          "bash -"
        ]
      },
      "filter_main_no_cli": {
        "CommandLine": null
      },
      "filter_main_empty": {
        "CommandLine": ""
      },
      "filter_main_no_flag": {
        "CommandLine": [
          "bash.exe",
          "bash"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Boot Configuration Tampering Via Bcdedit.EXE",
    "id": 243,
    "status": "stable",
    "description": "Detects the use of the bcdedit command to tamper with the boot configuration data. This technique is often times used by malware or attackers as a destructive way before launching ransomware.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/c4732632-9c1d-4980-9fa8-1d98c93f918e.html"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2019/10/24",
    "modified": "2023/02/15",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bcdedit.exe"
        },
        {
          "OriginalFileName": "bcdedit.exe"
        }
      ],
      "selection_set": {
        "CommandLine|contains": "set"
      },
      "selection_cli": [
        {
          "CommandLine|contains|all": [
            "bootstatuspolicy",
            "ignoreallfailures"
          ]
        },
        {
          "CommandLine|contains|all": [
            "recoveryenabled",
            "no"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Ransomware or Unauthorized MBR Tampering Via Bcdedit.EXE",
    "id": 244,
    "status": "test",
    "description": "Detects potential malicious and unauthorized usage of bcdedit.exe",
    "references": [
      "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set",
      "https://twitter.com/malwrhunterteam/status/1372536434125512712/photo/2"
    ],
    "author": "@neu5ron",
    "date": "2019/02/07",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070",
      "attack.persistence",
      "attack.t1542.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bcdedit.exe"
        },
        {
          "OriginalFileName": "bcdedit.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "delete",
          "deletevalue",
          "import",
          "safeboot",
          "network"
        ]
      },
      "condition": "all of selection_*"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Child Process Of BgInfo.EXE",
    "id": 245,
    "related": [
      {
        "id": "aaf46cdc-934e-4284-b329-34aa701e3771",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/",
      "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/16",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\bginfo.exe",
          "\\bginfo64.exe"
        ]
      },
      "selection_child": [
        {
          "Image|endswith": [
            "\\calc.exe",
            "\\cmd.exe",
            "\\cscript.exe",
            "\\mshta.exe",
            "\\notepad.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\wscript.exe"
          ]
        },
        {
          "Image|contains": [
            "\\AppData\\Local\\",
            "\\AppData\\Roaming\\",
            ":\\Users\\Public\\",
            ":\\Temp\\",
            ":\\Windows\\Temp\\",
            ":\\PerfLogs\\"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Child Process Of BgInfo.EXE",
    "id": 246,
    "related": [
      {
        "id": "811f459f-9231-45d4-959a-0266c6311987",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects uncommon child processes of \"BgInfo.exe\" which could be a sign of potential abuse of the binary to proxy execution via external VBScript",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/",
      "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community",
    "date": "2019/10/26",
    "modified": "2023/08/16",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\bginfo.exe",
          "\\bginfo64.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download Via Bitsadmin",
    "id": 247,
    "status": "test",
    "description": "Detects usage of bitsadmin downloading a file",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/"
    ],
    "author": "Michael Haag, FPT.EagleEye",
    "date": "2017/03/09",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197",
      "attack.s0190",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains": " /transfer "
      },
      "selection_cli_1": {
        "CommandLine|contains": [
          " /create ",
          " /addfile "
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": "http"
      },
      "condition": "selection_img and (selection_cmd or all of selection_cli_*)"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Some legitimate apps use this, but limited."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Download From Direct IP Via Bitsadmin",
    "id": 248,
    "related": [
      {
        "id": "90f138c1-f578-4ac3-8c49-eecfd847c8b7",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of bitsadmin downloading a file using an URL that contains an IP",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/",
      "https://blog.talosintelligence.com/breaking-the-silence-recent-truebot-activity/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197",
      "attack.s0190",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " /transfer ",
          " /create ",
          " /addfile "
        ]
      },
      "selection_extension": {
        "CommandLine|contains": [
          "://1",
          "://2",
          "://3",
          "://4",
          "://5",
          "://6",
          "://7",
          "://8",
          "://9"
        ]
      },
      "filter_seven_zip": {
        "CommandLine|contains": "://7-"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Download From File-Sharing Website Via Bitsadmin",
    "id": 249,
    "status": "experimental",
    "description": "Detects usage of bitsadmin downloading a file from a suspicious domain",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/ransomware-hive-conti-avoslocker",
      "https://www.cisa.gov/uscert/ncas/alerts/aa22-321a",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197",
      "attack.s0190",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " /transfer ",
          " /create ",
          " /addfile "
        ]
      },
      "selection_domain": {
        "CommandLine|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Some legitimate apps use this, but limited."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File With Suspicious Extension Downloaded Via Bitsadmin",
    "id": 250,
    "status": "experimental",
    "description": "Detects usage of bitsadmin downloading a file with a suspicious extension",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/05/30",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197",
      "attack.s0190",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " /transfer ",
          " /create ",
          " /addfile "
        ]
      },
      "selection_extension": {
        "CommandLine|contains": [
          ".7z",
          ".asax",
          ".ashx",
          ".asmx",
          ".asp",
          ".aspx",
          ".bat",
          ".cfm",
          ".cgi",
          ".chm",
          ".cmd",
          ".dll",
          ".gif",
          ".jpeg",
          ".jpg",
          ".jsp",
          ".jspx",
          ".log",
          ".png",
          ".ps1",
          ".psm1",
          ".rar",
          ".scf",
          ".sct",
          ".txt",
          ".vbe",
          ".vbs",
          ".war",
          ".wsf",
          ".wsh",
          ".xll",
          ".zip"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Download Via Bitsadmin To A Suspicious Target Folder",
    "id": 251,
    "status": "experimental",
    "description": "Detects usage of bitsadmin downloading a file to a suspicious target folder",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/",
      "https://blog.talosintelligence.com/breaking-the-silence-recent-truebot-activity/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/05/30",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197",
      "attack.s0190",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " /transfer ",
          " /create ",
          " /addfile "
        ]
      },
      "selection_folder": {
        "CommandLine|contains": [
          ":\\Perflogs",
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\",
          "\\Desktop\\",
          "%ProgramData%",
          "%public%"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Download Via Bitsadmin To An Uncommon Target Folder",
    "id": 252,
    "status": "test",
    "description": "Detects usage of bitsadmin downloading a file to uncommon target folder",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/",
      "https://blog.talosintelligence.com/breaking-the-silence-recent-truebot-activity/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197",
      "attack.s0190",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " /transfer ",
          " /create ",
          " /addfile "
        ]
      },
      "selection_folder": {
        "CommandLine|contains": [
          "%AppData%",
          "%temp%",
          "%tmp%",
          "\\AppData\\Local\\",
          "C:\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Monitoring For Persistence Via BITS",
    "id": 253,
    "status": "test",
    "description": "BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished.\nWhen the job runs on the system the command specified in the BITS job will be executed.\nThis can be abused by actors to create a backdoor within the system and for persistence.\nIt will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded.\n",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html",
      "http://0xthem.blogspot.com/2014/03/t-emporal-persistence-with-and-schtasks.html",
      "https://isc.sans.edu/diary/Wipe+the+drive+Stealthy+Malware+Persistence+Mechanism+-+Part+1/15394"
    ],
    "author": "Sreeman",
    "date": "2020/10/29",
    "modified": "2024/01/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\bitsadmin.exe"
        },
        {
          "OriginalFileName": "bitsadmin.exe"
        }
      ],
      "selection_cli_notify_1": {
        "CommandLine|contains": "/SetNotifyCmdLine"
      },
      "selection_cli_notify_2": {
        "CommandLine|contains": [
          "%COMSPEC%",
          "cmd.exe",
          "regsvr32.exe"
        ]
      },
      "selection_cli_add_1": {
        "CommandLine|contains": "/Addfile"
      },
      "selection_cli_add_2": {
        "CommandLine|contains": [
          "http:",
          "https:",
          "ftp:",
          "ftps:"
        ]
      },
      "condition": "selection_img and (all of selection_cli_notify_* or all of selection_cli_add_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Data Stealing Via Chromium Headless Debugging",
    "id": 254,
    "related": [
      {
        "id": "b3d34dc5-2efd-4ae3-845f-8ec14921f449",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects chromium based browsers starting in headless and debugging mode and pointing to a user profile. This could be a sign of data stealing or remote control",
    "references": [
      "https://github.com/defaultnamehere/cookie_crimes/",
      "https://mango.pdf.zone/stealing-chrome-cookies-without-a-password",
      "https://embracethered.com/blog/posts/2020/cookie-crimes-on-mirosoft-edge/",
      "https://embracethered.com/blog/posts/2020/chrome-spy-remote-control/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/23",
    "tags": [
      "attack.credential_access",
      "attack.t1185"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "--remote-debugging-",
          "--user-data-dir",
          "--headless"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Browser Execution In Headless Mode",
    "id": 255,
    "related": [
      {
        "id": "0e8cfe08-02c9-4815-a2f8-0d157b7ed33e",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects execution of Chromium based browser in headless mode",
    "references": [
      "https://twitter.com/mrd0x/status/1478234484881436672?s=12",
      "https://www.trendmicro.com/en_us/research/23/e/managed-xdr-investigation-of-ducktail-in-trend-micro-vision-one.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/12",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe"
        ],
        "CommandLine|contains": "--headless"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download with Headless Browser",
    "id": 256,
    "related": [
      {
        "id": "ef9dcfed-690c-4c5d-a9d1-482cd422225c",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects execution of chromium based browser in headless mode using the \"dump-dom\" command line to download files",
    "references": [
      "https://twitter.com/mrd0x/status/1478234484881436672?s=12",
      "https://www.trendmicro.com/en_us/research/23/e/managed-xdr-investigation-of-ducktail-in-trend-micro-vision-one.html"
    ],
    "author": "Sreeman, Florian Roth (Nextron Systems)",
    "date": "2022/01/04",
    "modified": "2023/05/12",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe"
        ],
        "CommandLine|contains|all": [
          "--headless",
          "dump-dom",
          "http"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Chromium Browser Instance Executed With Custom Extension",
    "id": 257,
    "related": [
      {
        "id": "27ba3207-dd30-4812-abbf-5d20c57d474e",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects a Chromium based browser process with the 'load-extension' flag to start a instance with a custom extension",
    "references": [
      "https://redcanary.com/blog/chromeloader/",
      "https://emkc.org/s/RJjuLa",
      "https://www.mandiant.com/resources/blog/lnk-between-browsers"
    ],
    "author": "Aedan Russell, frack113, X__Junior (Nextron Systems)",
    "date": "2022/06/19",
    "modified": "2023/11/28",
    "tags": [
      "attack.persistence",
      "attack.t1176"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe"
        ],
        "CommandLine|contains": "--load-extension="
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Usage of Chrome Extensions in testing tools such as BurpSuite will trigger this alert"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Chromium Browser Headless Execution To Mockbin Like Site",
    "id": 258,
    "status": "experimental",
    "description": "Detects the execution of a Chromium based browser process with the \"headless\" flag and a URL pointing to the mockbin.org service (which can be used to exfiltrate data).",
    "references": [
      "https://www.zscaler.com/blogs/security-research/steal-it-campaign"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/09/11",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe"
        ]
      },
      "selection_headless": {
        "CommandLine|contains": "--headless"
      },
      "selection_url": {
        "CommandLine|contains": [
          "://run.mocky",
          "://mockbin"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Chromium Browser Instance Executed With Custom Extension",
    "id": 259,
    "related": [
      {
        "id": "88d6e60c-759d-4ac1-a447-c0f1466c2d21",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects a suspicious process spawning a Chromium based browser process with the 'load-extension' flag to start an instance with a custom extension",
    "references": [
      "https://redcanary.com/blog/chromeloader/",
      "https://emkc.org/s/RJjuLa",
      "https://www.mandiant.com/resources/blog/lnk-between-browsers"
    ],
    "author": "Aedan Russell, frack113, X__Junior (Nextron Systems)",
    "date": "2022/06/19",
    "modified": "2023/11/28",
    "tags": [
      "attack.persistence",
      "attack.t1176"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe"
        ],
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe"
        ],
        "CommandLine|contains": "--load-extension="
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Download From Browser Process Via Inline URL",
    "id": 260,
    "status": "test",
    "description": "Detects execution of a browser process with a URL argument pointing to a file with a potentially interesting extension. This can be abused to download arbitrary files or to hide from the user for example by launching the browser in a minimized state.",
    "references": [
      "https://twitter.com/mrd0x/status/1478116126005641220",
      "https://lolbas-project.github.io/lolbas/Binaries/Msedge/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2023/11/09",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe"
        ]
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_extensions": {
        "CommandLine|endswith": [
          ".7z",
          ".dat",
          ".dll",
          ".exe",
          ".hta",
          ".ps1",
          ".psm1",
          ".txt",
          ".vbe",
          ".vbs",
          ".zip"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Browser Started with Remote Debugging",
    "id": 261,
    "related": [
      {
        "id": "3e8207c5-fcd2-4ea6-9418-15d45b4890e4",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects browsers starting with the remote debugging flags. Which is a technique often used to perform browser injection attacks",
    "references": [
      "https://yoroi.company/wp-content/uploads/2022/05/EternityGroup_report_compressed.pdf",
      "https://www.mdsec.co.uk/2022/10/analysing-lastpass-part-1/",
      "https://github.com/defaultnamehere/cookie_crimes/",
      "https://github.com/wunderwuzzi23/firefox-cookiemonster"
    ],
    "author": "pH-T (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/27",
    "modified": "2022/12/23",
    "tags": [
      "attack.credential_access",
      "attack.t1185"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_chromium_based": {
        "CommandLine|contains": " --remote-debugging-"
      },
      "selection_firefox": {
        "Image|endswith": "\\firefox.exe",
        "CommandLine|contains": " -start-debugger-server"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Tor Client/Browser Execution",
    "id": 262,
    "status": "test",
    "description": "Detects the use of Tor or Tor-Browser to connect to onion routing networks",
    "references": [
      "https://www.logpoint.com/en/blog/detecting-tor-use-with-logpoint/"
    ],
    "author": "frack113",
    "date": "2022/02/20",
    "modified": "2023/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\tor.exe",
          "\\Tor Browser\\Browser\\firefox.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Calculator Usage",
    "id": 263,
    "status": "test",
    "description": "Detects suspicious use of 'calc.exe' with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion.\n",
    "references": [
      "https://twitter.com/ItsReallyNick/status/1094080242686312448"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/02/09",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": "\\calc.exe "
      },
      "selection_2": {
        "Image|endswith": "\\calc.exe"
      },
      "filter_main_known_locations": {
        "Image|contains": [
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection_1 or ( selection_2 and not filter_main_known_locations )"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Root Certificate Installed Via CertMgr.EXE",
    "id": 264,
    "related": [
      {
        "id": "42821614-9264-4761-acfc-5772c3286f76",
        "type": "derived"
      },
      {
        "id": "46591fae-7a4c-46ea-aec3-dff5e6d785dc",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of \"certmgr\" with the \"add\" flag in order to install a new certificate on the system.\nAdversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.004/T1553.004.md",
      "https://securelist.com/to-crypt-or-to-mine-that-is-the-question/86307/"
    ],
    "author": "oscd.community, @redcanary, Zach Stanford @svch0st",
    "date": "2023/03/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\CertMgr.exe"
        },
        {
          "OriginalFileName": "CERTMGT.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/add",
          "root"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Help Desk or IT may need to manually add a corporate Root CA on occasion. Need to test if GPO push doesn't trigger FP"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download via CertOC.EXE",
    "id": 265,
    "related": [
      {
        "id": "b86f6dea-0b2f-41f5-bdcc-a057bd19cd6a",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a user downloads a file by using CertOC.exe",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Certoc/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/05/16",
    "modified": "2023/10/18",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certoc.exe"
        },
        {
          "OriginalFileName": "CertOC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "-GetCACAPS",
          "http"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download From IP Based URL Via CertOC.EXE",
    "id": 266,
    "related": [
      {
        "id": "70ad0861-d1fe-491c-a45f-fa48148a300d",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects when a user downloads a file from an IP based URL using CertOC.exe",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Certoc/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/18",
    "tags": [
      "attack.command_and_control",
      "attack.execution",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certoc.exe"
        },
        {
          "OriginalFileName": "CertOC.exe"
        }
      ],
      "selection_ip": {
        "CommandLine|re": "://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
      },
      "selection_cli": {
        "CommandLine|contains": "-GetCACAPS"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DLL Loaded via CertOC.EXE",
    "id": 267,
    "related": [
      {
        "id": "84232095-ecca-4015-b0d7-7726507ee793",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a user installs certificates by using CertOC.exe to loads the target DLL file.",
    "references": [
      "https://twitter.com/sblmsrsn/status/1445758411803480072?s=20",
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-fe98e74189873d6df72a15df2eaa0315c59ba9cdaca93ecd68afc4ea09194ef2",
      "https://lolbas-project.github.io/lolbas/Binaries/Certoc/"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/10/23",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certoc.exe"
        },
        {
          "OriginalFileName": "CertOC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -LoadDLL ",
          " /LoadDLL "
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious DLL Loaded via CertOC.EXE",
    "id": 268,
    "related": [
      {
        "id": "242301bc-f92f-4476-8718-78004a6efd9f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a user installs certificates by using CertOC.exe to load the target DLL file.",
    "references": [
      "https://twitter.com/sblmsrsn/status/1445758411803480072?s=20",
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-fe98e74189873d6df72a15df2eaa0315c59ba9cdaca93ecd68afc4ea09194ef2",
      "https://lolbas-project.github.io/lolbas/Binaries/Certoc/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certoc.exe"
        },
        {
          "OriginalFileName": "CertOC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -LoadDLL ",
          " /LoadDLL "
        ]
      },
      "selection_paths": {
        "CommandLine|contains": [
          "\\Appdata\\Local\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Users\\Public\\",
          "C:\\Windows\\Tasks\\",
          "C:\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Root Certificate Installed Via Certutil.EXE",
    "id": 269,
    "related": [
      {
        "id": "42821614-9264-4761-acfc-5772c3286f76",
        "type": "derived"
      },
      {
        "id": "46591fae-7a4c-46ea-aec3-dff5e6d785dc",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of \"certutil\" with the \"addstore\" flag in order to install a new certificate on the system.\nAdversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.004/T1553.004.md"
    ],
    "author": "oscd.community, @redcanary, Zach Stanford @svch0st",
    "date": "2023/03/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli_add": {
        "CommandLine|contains": [
          "/addstore",
          "-addstore"
        ]
      },
      "selection_cli_store": {
        "CommandLine|contains": "root"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Help Desk or IT may need to manually add a corporate Root CA on occasion. Need to test if GPO push doesn't trigger FP"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Decoded From Base64/Hex Via Certutil.EXE",
    "id": 270,
    "status": "test",
    "description": "Detects the execution of certutil with either the \"decode\" or \"decodehex\" flags to decode base64 or hex encoded files. This can be abused by attackers to decode an encoded payload before execution",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil",
      "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/",
      "https://news.sophos.com/en-us/2021/04/13/compromised-exchange-server-hosting-cryptojacker-targeting-other-exchange-servers/",
      "https://twitter.com/JohnLaTwC/status/835149808817991680",
      "https://learn.microsoft.com/en-us/archive/blogs/pki/basic-crl-checking-with-certutil",
      "https://lolbas-project.github.io/lolbas/Binaries/Certutil/"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-decode ",
          "/decode ",
          "-decodehex ",
          "/decodehex "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Download Via Certutil.EXE",
    "id": 271,
    "related": [
      {
        "id": "13e6fe51-d478-4c7e-b0f2-6da9b400a829",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of certutil with certain flags that allow the utility to download files.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil",
      "https://forensicitguy.github.io/agenttesla-vba-certutil-download/",
      "https://news.sophos.com/en-us/2021/04/13/compromised-exchange-server-hosting-cryptojacker-targeting-other-exchange-servers/",
      "https://twitter.com/egre55/status/1087685529016193025",
      "https://lolbas-project.github.io/lolbas/Binaries/Certutil/"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          "urlcache ",
          "verifyctl "
        ]
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Downloaded From Direct IP Via Certutil.EXE",
    "id": 272,
    "related": [
      {
        "id": "19b08b1c-861d-4e75-a1ef-ea0c1baf202b",
        "type": "similar"
      },
      {
        "id": "42a5f1e7-9603-4f6d-97ae-3f37d130d794",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of certutil with certain flags that allow the utility to download files from direct IPs.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil",
      "https://forensicitguy.github.io/agenttesla-vba-certutil-download/",
      "https://news.sophos.com/en-us/2021/04/13/compromised-exchange-server-hosting-cryptojacker-targeting-other-exchange-servers/",
      "https://twitter.com/egre55/status/1087685529016193025",
      "https://lolbas-project.github.io/lolbas/Binaries/Certutil/",
      "https://twitter.com/_JohnHammond/status/1708910264261980634"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          "urlcache ",
          "verifyctl "
        ]
      },
      "selection_http": {
        "CommandLine|contains": [
          "://1",
          "://2",
          "://3",
          "://4",
          "://5",
          "://6",
          "://7",
          "://8",
          "://9"
        ]
      },
      "filter_main_seven_zip": {
        "CommandLine|contains": "://7-"
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Downloaded From File-Sharing Website Via Certutil.EXE",
    "id": 273,
    "related": [
      {
        "id": "19b08b1c-861d-4e75-a1ef-ea0c1baf202b",
        "type": "similar"
      },
      {
        "id": "13e6fe51-d478-4c7e-b0f2-6da9b400a829",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of certutil with certain flags that allow the utility to download files from file-sharing websites.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil",
      "https://forensicitguy.github.io/agenttesla-vba-certutil-download/",
      "https://news.sophos.com/en-us/2021/04/13/compromised-exchange-server-hosting-cryptojacker-targeting-other-exchange-servers/",
      "https://twitter.com/egre55/status/1087685529016193025",
      "https://lolbas-project.github.io/lolbas/Binaries/Certutil/",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          "urlcache ",
          "verifyctl "
        ]
      },
      "selection_http": {
        "CommandLine|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Encoded To Base64 Via Certutil.EXE",
    "id": 274,
    "status": "test",
    "description": "Detects the execution of certutil with the \"encode\" flag to encode a file to base64. This can be abused by threat actors and attackers for data exfiltration",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil",
      "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/",
      "https://lolbas-project.github.io/lolbas/Binaries/Certutil/"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/02/24",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-encode",
          "/encode"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "As this is a general purpose rule, legitimate usage of the encode functionality will trigger some false positives. Apply additional filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Encoded To Base64 Via Certutil.EXE",
    "id": 275,
    "related": [
      {
        "id": "e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of certutil with the \"encode\" flag to encode a file to base64 where the extensions of the file is suspicious",
    "references": [
      "https://www.virustotal.com/gui/file/35c22725a92d5cb1016b09421c0a6cdbfd860fd4778b3313669b057d4a131cb7/behavior",
      "https://www.virustotal.com/gui/file/427616528b7dbc4a6057ac89eb174a3a90f7abcf3f34e5a359b7a910d82f7a72/behavior",
      "https://www.virustotal.com/gui/file/34de4c8beded481a4084a1fd77855c3e977e8ac643e5c5842d0f15f7f9b9086f/behavior",
      "https://www.virustotal.com/gui/file/4abe1395a09fda06d897a9c4eb247278c1b6cddda5d126ce5b3f4f499e3b8fa2/behavior"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-encode",
          "/encode"
        ]
      },
      "selection_extension": {
        "CommandLine|contains": [
          ".acl",
          ".bat",
          ".doc",
          ".gif",
          ".jpeg",
          ".jpg",
          ".mp3",
          ".pdf",
          ".png",
          ".ppt",
          ".tmp",
          ".xls",
          ".xml"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File In Suspicious Location Encoded To Base64 Via Certutil.EXE",
    "id": 276,
    "related": [
      {
        "id": "e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of certutil with the \"encode\" flag to encode a file to base64 where the files are located in potentially suspicious locations",
    "references": [
      "https://www.virustotal.com/gui/file/35c22725a92d5cb1016b09421c0a6cdbfd860fd4778b3313669b057d4a131cb7/behavior",
      "https://www.virustotal.com/gui/file/427616528b7dbc4a6057ac89eb174a3a90f7abcf3f34e5a359b7a910d82f7a72/behavior",
      "https://www.virustotal.com/gui/file/34de4c8beded481a4084a1fd77855c3e977e8ac643e5c5842d0f15f7f9b9086f/behavior",
      "https://www.virustotal.com/gui/file/4abe1395a09fda06d897a9c4eb247278c1b6cddda5d126ce5b3f4f499e3b8fa2/behavior"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-encode",
          "/encode"
        ]
      },
      "selection_extension": {
        "CommandLine|contains": [
          "\\AppData\\Roaming\\",
          "\\Desktop\\",
          "\\Local\\Temp\\",
          "\\PerfLogs\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\",
          "$Recycle.Bin"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Certificate Exported Via Certutil.EXE",
    "id": 277,
    "status": "test",
    "description": "Detects the execution of the certutil with the \"exportPFX\" flag which allows the utility to export certificates.",
    "references": [
      "https://www.splunk.com/en_us/blog/security/a-golden-saml-journey-solarwinds-continued.html"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "modified": "2023/02/20",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-exportPFX ",
          "/exportPFX "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "There legitimate reasons to export certificates. Investigate the activity to determine if it's benign"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential NTLM Coercion Via Certutil.EXE",
    "id": 278,
    "status": "test",
    "description": "Detects possible NTLM coercion via certutil using the 'syncwithWU' flag",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/issues/243"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/01",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certutil.exe"
        },
        {
          "OriginalFileName": "CertUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -syncwithWU ",
          " \\\\\\\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Console CodePage Lookup Via CHCP",
    "id": 279,
    "status": "experimental",
    "description": "Detects use of chcp to look up the system locale value as part of host discovery",
    "references": [
      "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware/",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/chcp"
    ],
    "author": "_pete_0, TheDFIRReport",
    "date": "2022/02/21",
    "modified": "2024/02/16",
    "tags": [
      "attack.discovery",
      "attack.t1614.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\cmd.exe",
        "ParentCommandLine|contains": [
          " /c ",
          " -c ",
          " /r ",
          " -r ",
          " /k ",
          " -k "
        ],
        "Image|endswith": "\\chcp.com",
        "CommandLine|endswith": [
          "chcp",
          "chcp ",
          "chcp  "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "During Anaconda update the 'conda.exe' process will eventually execution the 'chcp' command.",
      "Discord was seen using chcp to look up code pages"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious CodePage Switch Via CHCP",
    "id": 280,
    "status": "test",
    "description": "Detects a code page switch in command line or batch scripts to a rare language",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/intl/code-page-identifiers",
      "https://twitter.com/cglyer/status/1183756892952248325"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community",
    "date": "2019/10/14",
    "modified": "2023/03/07",
    "tags": [
      "attack.t1036",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\chcp.com",
        "CommandLine|endswith": [
          " 936",
          " 1258"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Administrative activity (adjust code pages according to your organization's region)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Deleted Data Overwritten Via Cipher.EXE",
    "id": 281,
    "status": "test",
    "description": "Detects usage of the \"cipher\" built-in utility in order to overwrite deleted data from disk.\nAdversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources.\nData destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1485/T1485.md#atomic-test-3---overwrite-deleted-data-on-c-drive"
    ],
    "author": "frack113",
    "date": "2021/12/26",
    "modified": "2023/02/21",
    "tags": [
      "attack.impact",
      "attack.t1485"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "CIPHER.EXE"
        },
        {
          "Image|endswith": "\\cipher.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " /w:"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Access via TrolleyExpress Exclusion",
    "id": 282,
    "status": "test",
    "description": "Detects a possible process memory dump that uses the white-listed Citrix TrolleyExpress.exe filename as a way to dump the lsass process memory",
    "references": [
      "https://twitter.com/_xpn_/status/1491557187168178176",
      "https://www.youtube.com/watch?v=Ie831jF0bb0"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/10",
    "modified": "2022/05/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011",
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "\\TrolleyExpress 7",
          "\\TrolleyExpress 8",
          "\\TrolleyExpress 9",
          "\\TrolleyExpress.exe 7",
          "\\TrolleyExpress.exe 8",
          "\\TrolleyExpress.exe 9",
          "\\TrolleyExpress.exe -ma "
        ]
      },
      "renamed": {
        "Image|endswith": "\\TrolleyExpress.exe"
      },
      "filter_renamed": {
        "OriginalFileName|contains": "CtxInstall"
      },
      "filter_empty": {
        "OriginalFileName": null
      },
      "condition": "selection or ( renamed and not 1 of filter* )"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Data Copied To Clipboard Via Clip.EXE",
    "id": 283,
    "status": "test",
    "description": "Detects the execution of clip.exe in order to copy data to the clipboard. Adversaries may collect data stored in the clipboard from users copying information within or between applications.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/clip",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1115/T1115.md"
    ],
    "author": "frack113",
    "date": "2021/07/27",
    "modified": "2023/02/21",
    "tags": [
      "attack.collection",
      "attack.t1115"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\clip.exe"
        },
        {
          "OriginalFileName": "clip.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Cloudflared Portable Execution",
    "id": 284,
    "status": "experimental",
    "description": "Detects the execution of the \"cloudflared\" binary from a non standard location.\n",
    "references": [
      "https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/do-more-with-tunnels/trycloudflare/",
      "https://github.com/cloudflare/cloudflared",
      "https://www.intrinsec.com/akira_ransomware/",
      "https://www.guidepointsecurity.com/blog/tunnel-vision-cloudflared-abused-in-the-wild/",
      "https://github.com/cloudflare/cloudflared/releases"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.001"
    ],
    "date": "2023/12/20",
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\cloudflared.exe"
      },
      "filter_main_admin_location": {
        "Image|contains": [
          ":\\Program Files (x86)\\cloudflared\\",
          ":\\Program Files\\cloudflared\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate usage of Cloudflared portable versions"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Cloudflared Quick Tunnel Execution",
    "id": 285,
    "related": [
      {
        "id": "7050bba1-1aed-454e-8f73-3f46f09ce56a",
        "type": "similar"
      },
      {
        "id": "9a019ffc-3580-4c9d-8d87-079f7e8d3fd4",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects creation of an ad-hoc Cloudflare Quick Tunnel, which can be used to tunnel local services such as HTTP, RDP, SSH and SMB.\nThe free TryCloudflare Quick Tunnel will generate a random subdomain on trycloudflare[.]com, following a call to api[.]trycloudflare[.]com.\nThe tool has been observed in use by threat groups including Akira ransomware.\n",
    "references": [
      "https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/do-more-with-tunnels/trycloudflare/",
      "https://github.com/cloudflare/cloudflared",
      "https://www.intrinsec.com/akira_ransomware/",
      "https://www.guidepointsecurity.com/blog/tunnel-vision-cloudflared-abused-in-the-wild/"
    ],
    "author": "Sajid Nawaz Khan",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.001"
    ],
    "date": "2023/12/20",
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\cloudflared.exe",
            "\\cloudflared-windows-386.exe",
            "\\cloudflared-windows-amd64.exe"
          ]
        },
        {
          "Hashes|contains": [
            "SHA256=2fb6c04c4f95fb8d158af94c137f90ac820716deaf88d8ebec956254e046cb29",
            "SHA256=b3d21940a10fdef5e415ad70331ce257c24fe3bcf7722262302e0421791f87e8",
            "SHA256=1fbd8362b2d2d2e6a5750ae3db69cd1815e6c1d31da48a98b796450971a8e039",
            "SHA256=0409c9b12f9d0eda86e461ed9bdabeefb00172b26322079681a0bdf48e68dc28",
            "SHA256=7cfb411d04bac42ef93d1f0c93c0a481e38c6f4612b97ae89d4702595988edc7",
            "SHA256=5b3c2d846ab162dc6bc595cce3a49de5731afde5d6060be7066d21b013a28373",
            "SHA256=ce95df7f69664c3df19b76028e115931919a71517b776da7b42d353e2ff4a670",
            "SHA256=1293525a19cfe3bc8296b62fbfe19f083632ed644a1c18c10b045a1d3030d81a",
            "SHA256=af2b9161cfcb654b16408cd6b098afe9d1fb61a037d18d7090a119d4c0c8e0f0",
            "SHA256=39ddceb56a15798826a5fc4892fa2b474c444bb4d7a8bf2fa95e41cab10fa7a1",
            "SHA256=ccd11f2328023a0e7929e845d5b6e7bc783fb4650d65faef3ae090239d4bbce2",
            "SHA256=b6e5c5d2567ae8c69cc012ebcae30e6c9b5359d64a58d17ba75ec89f8bce71ac",
            "SHA256=f813484ea441404f18caad96f28138e8aaf0cb256163c09c2ab8a3acab87f69f",
            "SHA256=fc4a0802ab9c7409b892ca00636bec61e2acfc911bccfdeb9978b8ab5a2f828d",
            "SHA256=083150724b49604c8765c1ba19541fa260b133be0acb0647fcd936d81f054499",
            "SHA256=44303d6572956f28a0f2e4b188934fb9874f2584f5c81fa431a463cfbf28083b",
            "SHA256=5d38c46032a58e28ae5f7d174d8761ec3d64d186677f3ec53af5f51afb9bfd2f",
            "SHA256=e1e70fa42059911bc6685fafef957f9a73fc66f214d0704a9b932683a5204032",
            "SHA256=c01356092a365b84f84f0e66870bd1a05ba3feb53cafd973fa5fea2534bee234",
            "SHA256=b3f9c06151e30ee43d39e788a79cd918a314f24e04fe87f3de8272a2057b624f",
            "SHA256=cd81b2792f0739f473c31c9cb7cf2313154bfa28b839975802b90e8790bb5058",
            "SHA256=9ec7e6c8e1bfd883663d8d9d62c9e4f9ae373b731407181e32491b27a7218a2c",
            "SHA256=c2cfd23fdc6c0e1b1ffa0e545cbe556f18d11b362b4a89ba0713f6ab01c4827f",
            "SHA256=53f8adbd76c0eb16f5e43cadde422474d8a06f9c8f959389c1930042ad8beaa5",
            "SHA256=648c8d2f8001c113d2986dd00b7bbd181593d462bef73522cee212c4f71f95b3",
            "SHA256=ae047e2095e46c3f9c518b2be67ec753f4f0aad23b261a361fcb6144dcdb63b4",
            "SHA256=3153d2baa462978dd22ab33d1c2274ecc88c200225d6a3327f98d5b752d08f5c",
            "SHA256=f49cde976e628012c9db73e1c8d76081944ecf2297cdafeb78bb13290da274c4",
            "SHA256=d2513e58bb03ccc83affde685c6ef987924c37ce6707d8e9857e2524b0d7e90f",
            "SHA256=bb67c7623ba92fe64ffd9816b8d5b3b1ea3013960a30bd4cf6e295b3eb5b1bad",
            "SHA256=b34b3c3a91e3165d1481f0b3ec23eab93a1cfba94345a6cbfe5b18ddbd48eac7",
            "SHA256=f7848034e010d55f15e474ca998f96391e320ff29b00cfcc4c5e536529703e75",
            "SHA256=b6fc9493778cbe3bfc062d73f5cc604bc0ff058bc5e5dc6aac87f3a4008b54b6",
            "SHA256=f5c5e962577e2293c4ad10603816dce7cc273585969615fbf4e4bfa9eaff1688",
            "SHA256=d14c52d9220b606f428a8fe9f7c108b0d6f14cf71e7384749e98e6a95962e68f",
            "SHA256=d3a0e1a79158f3985cd49607ebe0cdfcc49cb9af96b8f43aefd0cdfe2f22e663",
            "SHA256=2fbbfc8299537ff80cadf9d0e27c223fe0ccb9052bf9d8763ad717bbfa521c77",
            "SHA256=19074674c6fbdaa573b3081745e5e26144fdf7a086d14e0e220d1814f1f13078"
          ]
        }
      ],
      "selection_param": [
        {
          "CommandLine|contains|all": [
            "-url",
            "tunnel"
          ]
        },
        {
          "CommandLine|contains": [
            ".exe -url",
            ".exe --url"
          ]
        }
      ],
      "selection_other": {
        "CommandLine|contains|all": [
          "-url",
          "-no-autoupdate"
        ]
      },
      "condition": "(selection_img and selection_param) or selection_other"
    },
    "falsepositives": [
      "Legitimate usage of Cloudflare Quick Tunnel"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Cloudflared Tunnel Connections Cleanup",
    "id": 286,
    "status": "experimental",
    "description": "Detects execution of the \"cloudflared\" tool with the tunnel \"cleanup\" flag in order to cleanup tunnel connections.",
    "references": [
      "https://github.com/cloudflare/cloudflared",
      "https://developers.cloudflare.com/cloudflare-one/connections/connect-apps"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/17",
    "modified": "2023/12/21",
    "tags": [
      "attack.command_and_control",
      "attack.t1102",
      "attack.t1090",
      "attack.t1572"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          " tunnel ",
          "cleanup "
        ],
        "CommandLine|contains": [
          "-config ",
          "-connector-id "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of Cloudflared."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Cloudflared Tunnel Execution",
    "id": 287,
    "status": "experimental",
    "description": "Detects execution of the \"cloudflared\" tool to connect back to a tunnel. This was seen used by threat actors to maintain persistence and remote access to compromised networks.",
    "references": [
      "https://blog.reconinfosec.com/emergence-of-akira-ransomware-group",
      "https://github.com/cloudflare/cloudflared",
      "https://developers.cloudflare.com/cloudflare-one/connections/connect-apps"
    ],
    "author": "Janantha Marasinghe, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/17",
    "modified": "2023/12/20",
    "tags": [
      "attack.command_and_control",
      "attack.t1102",
      "attack.t1090",
      "attack.t1572"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          " tunnel ",
          " run "
        ],
        "CommandLine|contains": [
          "-config ",
          "-credentials-contents ",
          "-credentials-file ",
          "-token "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of Cloudflared tunnel."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Generic Credentials Added Via Cmdkey.EXE",
    "id": 288,
    "status": "test",
    "description": "Detects usage of cmdkey to add generic credentials. As an example, this has to be used before connecting to an RDP session via command line interface.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.001/T1021.001.md#t1021001---remote-desktop-protocol"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/03",
    "modified": "2024/02/23",
    "tags": [
      "attack.credential_access",
      "attack.t1003.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmdkey.exe"
        },
        {
          "OriginalFileName": "cmdkey.exe"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains": [
          " /g",
          " -g"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": [
          " /u",
          " -u"
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains": [
          " /p",
          " -p"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage for administration purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Reconnaissance For Cached Credentials Via Cmdkey.EXE",
    "id": 289,
    "status": "test",
    "description": "Detects usage of cmdkey to look for cached credentials on the system",
    "references": [
      "https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation",
      "https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx",
      "https://github.com/redcanaryco/atomic-red-team/blob/b27a3cb25025161d49ac861cb216db68c46a3537/atomics/T1003.005/T1003.005.md#atomic-test-1---cached-credential-dump-via-cmdkey"
    ],
    "author": "jmallette, Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2023/02/03",
    "tags": [
      "attack.credential_access",
      "attack.t1003.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmdkey.exe"
        },
        {
          "OriginalFileName": "cmdkey.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /l",
          " -l"
        ]
      },
      "condition": "all of selection*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "User"
    ],
    "falsepositives": [
      "Legitimate administrative tasks"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change Default File Association Via Assoc",
    "id": 290,
    "related": [
      {
        "id": "ae6f14e6-14de-45b0-9f44-c0986f50dc89",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects file association changes using the builtin \"assoc\" command.\nWhen a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.001/T1546.001.md"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2019/10/21",
    "modified": "2023/03/06",
    "tags": [
      "attack.persistence",
      "attack.t1546.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "assoc"
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "Image",
      "CommandLine",
      "User",
      "LogonGuid",
      "Hashes",
      "ParentProcessGuid",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Admin activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Change Default File Association To Executable Via Assoc",
    "id": 291,
    "related": [
      {
        "id": "3d3aa6cd-6272-44d6-8afc-7e88dfef7061",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects when a program changes the default file association of any extension to an executable.\nWhen a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/assoc"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/03/06",
    "tags": [
      "attack.persistence",
      "attack.t1546.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "assoc ",
          "exefile"
        ]
      },
      "filter": {
        "CommandLine|contains": ".exe=exefile"
      },
      "condition": "all of selection_* and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Copy .DMP/.DUMP Files From Remote Share Via Cmd.EXE",
    "id": 292,
    "status": "experimental",
    "description": "Detects usage of the copy builtin cmd command to copy files with the \".dmp\"/\".dump\" extension from a remote share",
    "references": [
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/27",
    "modified": "2023/09/12",
    "tags": [
      "attack.credential_access"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "copy ",
          " \\\\\\\\"
        ],
        "CommandLine|contains": [
          ".dmp",
          ".dump",
          ".hdmp"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Curl Download And Execute Combination",
    "id": 293,
    "status": "test",
    "description": "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.",
    "references": [
      "https://medium.com/@reegun/curl-exe-is-the-new-rundll32-exe-lolbin-3f79c5f35983"
    ],
    "author": "Sreeman, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/01/13",
    "modified": "2024/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          " /c ",
          " -c "
        ],
        "CommandLine|contains|all": [
          "curl ",
          "http",
          "-o",
          "&"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Deletion Via Del",
    "id": 294,
    "status": "test",
    "description": "Detects execution of the builtin \"del\"/\"erase\" commands in order to delete files.\nAdversaries may delete files left behind by the actions of their intrusion activity.\nMalware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.\nRemoval of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase"
    ],
    "author": "frack113",
    "date": "2022/01/15",
    "modified": "2024/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_del": {
        "CommandLine|contains": [
          "del ",
          "erase "
        ]
      },
      "selection_flags": {
        "CommandLine|contains": [
          " /f",
          " -f",
          " /s",
          " -s",
          " /q",
          " -q"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives levels will differ Depending on the environment. You can use a combination of ParentImage and other keywords from the CommandLine field to filter legitimate activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Greedy File Deletion Using Del",
    "id": 295,
    "status": "experimental",
    "description": "Detects execution of the \"del\" builtin command to remove files using greedy/wildcard expression. This is often used by malware to delete content of folders that perhaps contains the initial malware infection or to delete evidence.",
    "references": [
      "https://www.joesandbox.com/analysis/509330/0/html#1044F3BDBE3BB6F734E357235F4D5898582D",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase"
    ],
    "author": "frack113 , X__Junior (Nextron Systems)",
    "date": "2021/12/02",
    "modified": "2023/09/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_del": {
        "CommandLine|contains": [
          "del ",
          "erase "
        ]
      },
      "selection_extensions": {
        "CommandLine|contains": [
          "\\\\\\*.au3",
          "\\\\\\*.dll",
          "\\\\\\*.exe",
          "\\\\\\*.js"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Files And Subdirectories Listing Using Dir",
    "id": 296,
    "status": "test",
    "description": "Detects usage of the \"dir\" command that is part of Windows batch/cmd to collect information about directories",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1217/T1217.md"
    ],
    "author": "frack113",
    "date": "2021/12/13",
    "modified": "2024/02/17",
    "tags": [
      "attack.discovery",
      "attack.t1217"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_dir": {
        "CommandLine|contains": "dir "
      },
      "selection_cli_1": {
        "CommandLine|contains": [
          " /s",
          " -s"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": [
          " /b",
          " -b"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Dosfuscation Activity",
    "id": 297,
    "status": "test",
    "description": "Detects possible payload obfuscation via the commandline",
    "references": [
      "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/dosfuscation-report.pdf",
      "https://github.com/danielbohannon/Invoke-DOSfuscation"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/02/15",
    "modified": "2023/03/06",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "^^",
          "^|^",
          ",;,",
          ";;;;",
          ";; ;;",
          "(,(,",
          "%COMSPEC:~",
          " c^m^d",
          "^c^m^d",
          " c^md",
          " cm^d",
          "^cm^d",
          " s^et ",
          " s^e^t ",
          " se^t "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Command Line Execution with Suspicious URL and AppData Strings",
    "id": 298,
    "status": "test",
    "description": "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)",
    "references": [
      "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
      "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community",
    "date": "2019/01/16",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.command_and_control",
      "attack.t1059.003",
      "attack.t1059.001",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains|all": [
          "http",
          "://",
          "%AppData%"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "High"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Privilege Escalation Using Symlink Between Osk and Cmd",
    "id": 299,
    "status": "test",
    "description": "Detects the creation of a symbolic link between \"cmd.exe\" and the accessibility on-screen keyboard binary (osk.exe) using \"mklink\". This technique provides an elevated command prompt to the user from the login screen without the need to log in.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/5c1e6f1b4fafd01c8d1ece85f510160fc1275fbf/atomics/T1546.008/T1546.008.md",
      "https://ss64.com/nt/mklink.html"
    ],
    "author": "frack113",
    "date": "2022/12/11",
    "modified": "2022/12/20",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.008"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "mklink",
          "\\osk.exe",
          "\\cmd.exe"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "VolumeShadowCopy Symlink Creation Via Mklink",
    "id": 300,
    "status": "stable",
    "description": "Shadow Copies storage symbolic link creation using operating systems utilities",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community",
    "date": "2019/10/22",
    "modified": "2023/03/06",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "mklink",
          "HarddiskVolumeShadowCopy"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrator working with shadow copies, access for backup purposes"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Execution From Internet Hosted WebDav Share",
    "id": 301,
    "status": "test",
    "description": "Detects the execution of the \"net use\" command to mount a WebDAV server and then immediately execute some content in it. As seen being used in malicious LNK files",
    "references": [
      "https://twitter.com/ShadowChasing1/status/1552595370961944576",
      "https://www.virustotal.com/gui/file/a63376ee1dba76361df73338928e528ca5b20171ea74c24581605366dcaa0104/behavior"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2022/09/01",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|contains": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.EXE"
        }
      ],
      "selection_base": {
        "CommandLine|contains|all": [
          " net use http",
          "& start /b ",
          "\\DavWWWRoot\\"
        ]
      },
      "selection_ext": {
        "CommandLine|contains": [
          ".exe ",
          ".dll ",
          ".bat ",
          ".vbs ",
          ".ps1 "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Cmd.EXE Missing Space Characters Execution Anomaly",
    "id": 302,
    "status": "test",
    "description": "Detects Windows command lines that miss a space before or after the /c flag when running a command using the cmd.exe.\nThis could be a sign of obfuscation of a fat finger problem (typo by the developer).\n",
    "references": [
      "https://twitter.com/cyb3rops/status/1562072617552678912",
      "https://ss64.com/nt/cmd.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/23",
    "modified": "2023/03/06",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": [
          "cmd.exe/c",
          "\\cmd/c",
          "\"cmd/c",
          "cmd.exe/k",
          "\\cmd/k",
          "\"cmd/k",
          "cmd.exe/r",
          "\\cmd/r",
          "\"cmd/r"
        ]
      },
      "selection2": {
        "CommandLine|contains": [
          "/cwhoami",
          "/cpowershell",
          "/cschtasks",
          "/cbitsadmin",
          "/ccertutil",
          "/kwhoami",
          "/kpowershell",
          "/kschtasks",
          "/kbitsadmin",
          "/kcertutil"
        ]
      },
      "selection3": {
        "CommandLine|contains": [
          "cmd.exe /c",
          "cmd /c",
          "cmd.exe /k",
          "cmd /k",
          "cmd.exe /r",
          "cmd /r"
        ]
      },
      "filter_generic": {
        "CommandLine|contains": [
          "cmd.exe /c ",
          "cmd /c ",
          "cmd.exe /k ",
          "cmd /k ",
          "cmd.exe /r ",
          "cmd /r "
        ]
      },
      "filter_fp": [
        {
          "CommandLine|contains": "AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\node_modules"
        },
        {
          "CommandLine|endswith": "cmd.exe/c ."
        },
        {
          "CommandLine": "cmd.exe /c"
        }
      ],
      "condition": "1 of selection* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NtdllPipe Like Activity Execution",
    "id": 303,
    "status": "test",
    "description": "Detects command that type the content of ntdll.dll to a different file or a pipe in order to evade AV / EDR detection. As seen being used in the POC NtdllPipe",
    "references": [
      "https://web.archive.org/web/20220306121156/https://www.x86matthew.com/view_post?id=ntdll_pipe"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/05",
    "modified": "2023/03/07",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "type %windir%\\system32\\ntdll.dll",
          "type %systemroot%\\system32\\ntdll.dll",
          "type c:\\windows\\system32\\ntdll.dll",
          "\\\\ntdll.dll > \\\\\\\\.\\\\pipe\\\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential CommandLine Path Traversal Via Cmd.EXE",
    "id": 304,
    "status": "test",
    "description": "Detects potential path traversal attempt via cmd.exe. Could indicate possible command/argument confusion/hijacking",
    "references": [
      "https://hackingiscool.pl/cmdhijack-command-argument-confusion-with-path-traversal-in-cmd-exe/",
      "https://twitter.com/Oddvarmoe/status/1270633613449723905"
    ],
    "author": "xknow @xknow_infosec, Tim Shelton",
    "date": "2020/06/11",
    "modified": "2023/03/06",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "ParentImage|endswith": "\\cmd.exe"
        },
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "cmd.exe"
        }
      ],
      "selection_flags": [
        {
          "ParentCommandLine|contains": [
            "/c",
            "/k",
            "/r"
          ]
        },
        {
          "CommandLine|contains": [
            "/c",
            "/k",
            "/r"
          ]
        }
      ],
      "selection_path_traversal": [
        {
          "ParentCommandLine": "/../../"
        },
        {
          "CommandLine|contains": "/../../"
        }
      ],
      "filter_java": {
        "CommandLine|contains": "\\Tasktop\\keycloak\\bin\\/../../jre\\bin\\java"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Java tools are known to produce false-positive when loading libraries"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Ping/Copy Command Combination",
    "id": 305,
    "status": "experimental",
    "description": "Detects uncommon one-liner command having ping and copy at the same time, which is usually used by malware.",
    "references": [
      "Internal Research"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/18",
    "modified": "2024/02/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_action": {
        "CommandLine|contains|all": [
          "ping",
          "copy "
        ]
      },
      "selection_cli_1": {
        "CommandLine|contains": [
          " -n ",
          " /n "
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": [
          " /y ",
          " -y "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Ping/Del Command Combination",
    "id": 306,
    "status": "test",
    "description": "Detects a method often used by ransomware. Which combines the \"ping\" to wait a couple of seconds and then \"del\" to delete the file in question. Its used to hide the file responsible for the initial infection for example",
    "references": [
      "https://blog.sygnia.co/kaseya-ransomware-supply-chain-attack",
      "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2022/06/23093553/Common-TTPs-of-the-modern-ransomware_low-res.pdf",
      "https://www.acronis.com/en-us/blog/posts/lockbit-ransomware/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/blackbyte-exbyte-ransomware"
    ],
    "author": "Ilya Krestinichev",
    "date": "2022/11/03",
    "modified": "2023/02/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_count": {
        "CommandLine|contains": [
          " -n ",
          " /n "
        ]
      },
      "selection_nul": {
        "CommandLine|contains": "Nul"
      },
      "selection_del_param": {
        "CommandLine|contains": [
          " /f ",
          " -f ",
          " /q ",
          " -q "
        ]
      },
      "selection_all": {
        "CommandLine|contains|all": [
          "ping",
          "del "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CMD Shell Output Redirect",
    "id": 307,
    "related": [
      {
        "id": "8e0bb260-d4b2-4fff-bb8d-3f82118e6892",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the use of the redirection character \">\" to redicrect information in commandline",
    "references": [
      "https://ss64.com/nt/syntax-redirection.html"
    ],
    "author": "frack113",
    "date": "2022/01/22",
    "modified": "2023/03/07",
    "tags": [
      "attack.discovery",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": [
        {
          "OriginalFileName": "Cmd.Exe"
        },
        {
          "Image|endswith": "\\cmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": ">"
      },
      "filter_idm_extension": {
        "CommandLine|contains": [
          "C:\\Program Files (x86)\\Internet Download Manager\\IDMMsgHost.exe",
          "chrome-extension://",
          "\\\\.\\pipe\\chrome.nativeMessaging"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Internet Download Manager extensions use named pipes and redirection via CLI. Filter it out if you use it in your environment"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious CMD Shell Output Redirect",
    "id": 308,
    "related": [
      {
        "id": "aa2efee7-34dd-446e-8a37-40790a66efd7",
        "type": "derived"
      },
      {
        "id": "4f4eaa9f-5ad4-410c-a4be-bc6132b0175a",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects inline Windows shell commands redirecting output via the \">\" symbol to a suspicious location",
    "references": [
      "https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/12",
    "modified": "2023/05/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains": [
          "> \\Users\\Public\\",
          "> %APPDATA%\\",
          "> %TEMP%\\",
          "> %TMP%\\",
          "> %USERPROFILE%\\",
          "> C:\\Temp\\",
          "> C:\\Users\\Public\\",
          "> C:\\Windows\\Temp\\",
          ">\\Users\\Public\\",
          ">%APPDATA%\\",
          ">%TEMP%\\",
          ">%TMP%\\",
          ">%USERPROFILE%\\",
          ">C:\\Temp\\",
          ">C:\\Users\\Public\\",
          ">C:\\Windows\\Temp\\"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": [
          " >",
          "\">",
          "'>"
        ],
        "CommandLine|contains|all": [
          "C:\\Users\\",
          "\\AppData\\Local\\"
        ]
      },
      "condition": "selection_img and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Legitimate admin or third party scripts used for diagnostic collection might generate some false positives"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Directory Removal Via Rmdir",
    "id": 309,
    "status": "test",
    "description": "Detects execution of the builtin \"rmdir\" command in order to delete directories.\nAdversaries may delete files left behind by the actions of their intrusion activity.\nMalware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.\nRemoval of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase"
    ],
    "author": "frack113",
    "date": "2022/01/15",
    "modified": "2023/03/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_rmdir": {
        "CommandLine|contains": "rmdir"
      },
      "selection_flags": {
        "CommandLine|contains": [
          "/s",
          "/q"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Copy From VolumeShadowCopy Via Cmd.EXE",
    "id": 310,
    "status": "test",
    "description": "Detects the execution of the builtin \"copy\" command that targets a shadow copy (sometimes used to copy registry hives that are in use)",
    "references": [
      "https://twitter.com/vxunderground/status/1423336151860002816?s=20",
      "https://www.virustotal.com/gui/file/03e9b8c2e86d6db450e5eceec057d7e369ee2389b9daecaf06331a95410aa5f8/detection",
      "https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/"
    ],
    "author": "Max Altgelt (Nextron Systems), Tobias Michalski (Nextron Systems)",
    "date": "2021/08/09",
    "modified": "2023/03/07",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "copy ",
          "\\\\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Backup scenarios using the commandline"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Read Contents From Stdin Via Cmd.EXE",
    "id": 311,
    "related": [
      {
        "id": "00a4bacd-6db4-46d5-9258-a7d5ebff4003",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detect the use of \"<\" to read and potentially execute a file via cmd.exe",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1059.003/T1059.003.md",
      "https://web.archive.org/web/20220306121156/https://www.x86matthew.com/view_post?id=ntdll_pipe"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/07",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": [
        {
          "OriginalFileName": "Cmd.Exe"
        },
        {
          "Image|endswith": "\\cmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "<"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Persistence Via Sticky Key Backdoor",
    "id": 312,
    "status": "test",
    "description": "By replacing the sticky keys executable with the local admins CMD executable, an attacker is able to access a privileged windows console session without authenticating to the system.\nWhen the sticky keys are \"activated\" the privilleged shell is launched.\n",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2017/03/apt29_domain_frontin.html",
      "https://www.clearskysec.com/wp-content/uploads/2020/02/ClearSky-Fox-Kitten-Campaign-v1.pdf",
      "https://learn.microsoft.com/en-us/archive/blogs/jonathantrull/detecting-sticky-key-backdoors"
    ],
    "author": "Sreeman",
    "date": "2020/02/18",
    "modified": "2023/03/07",
    "tags": [
      "attack.t1546.008",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "copy ",
          "/y ",
          "C:\\windows\\system32\\cmd.exe C:\\windows\\system32\\sethc.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Sticky Key Like Backdoor Execution",
    "id": 313,
    "related": [
      {
        "id": "baca5663-583c-45f9-b5dc-ea96a22ce542",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen",
    "references": [
      "https://learn.microsoft.com/en-us/archive/blogs/jonathantrull/detecting-sticky-key-backdoors"
    ],
    "author": "Florian Roth (Nextron Systems), @twjackomo, Jonhnathan Ribeiro, oscd.community",
    "date": "2018/03/15",
    "modified": "2023/03/07",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.008",
      "car.2014-11-003",
      "car.2014-11-008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\winlogon.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe",
          "\\wt.exe"
        ],
        "CommandLine|contains": [
          "sethc.exe",
          "utilman.exe",
          "osk.exe",
          "Magnify.exe",
          "Narrator.exe",
          "DisplaySwitch.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Unusual Parent Process For Cmd.EXE",
    "id": 314,
    "status": "experimental",
    "description": "Detects suspicious parent process for cmd.exe",
    "references": [
      "https://www.elastic.co/guide/en/security/current/unusual-parent-process-for-cmd.exe.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/21",
    "modified": "2023/12/05",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\cmd.exe",
        "ParentImage|endswith": [
          "\\csrss.exe",
          "\\ctfmon.exe",
          "\\dllhost.exe",
          "\\epad.exe",
          "\\FlashPlayerUpdateService.exe",
          "\\GoogleUpdate.exe",
          "\\jucheck.exe",
          "\\jusched.exe",
          "\\LogonUI.exe",
          "\\lsass.exe",
          "\\regsvr32.exe",
          "\\SearchIndexer.exe",
          "\\SearchProtocolHost.exe",
          "\\SIHClient.exe",
          "\\sihost.exe",
          "\\slui.exe",
          "\\spoolsv.exe",
          "\\sppsvc.exe",
          "\\taskhostw.exe",
          "\\unsecapp.exe",
          "\\WerFault.exe",
          "\\wermgr.exe",
          "\\wlanext.exe",
          "\\WUDFHost.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CMSTP Execution Process Creation",
    "id": 315,
    "status": "stable",
    "description": "Detects various indicators of Microsoft Connection Manager Profile Installer execution",
    "references": [
      "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"
    ],
    "author": "Nik Seetharaman",
    "date": "2018/07/16",
    "modified": "2020/12/23",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218.003",
      "attack.g0069",
      "car.2019-04-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\cmstp.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "Details"
    ],
    "falsepositives": [
      "Legitimate CMSTP use (unlikely in modern enterprise environments)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious High IntegrityLevel Conhost Legacy Option",
    "id": 316,
    "status": "test",
    "description": "ForceV1 asks for information directly from the kernel space. Conhost connects to the console application. High IntegrityLevel means the process is running with elevated privileges, such as an Administrator context.",
    "references": [
      "https://cybercryptosec.medium.com/covid-19-cyber-infection-c615ead7c29",
      "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware/",
      "https://learn.microsoft.com/en-us/windows/win32/secauthz/mandatory-integrity-control"
    ],
    "author": "frack113",
    "date": "2022/12/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": "High",
        "CommandLine|contains|all": [
          "conhost.exe",
          "0xffffffff",
          "-ForceV1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Very Likely, including launching cmd.exe via Run As Administrator"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Conhost.exe CommandLine Path Traversal",
    "id": 317,
    "status": "test",
    "description": "detects the usage of path traversal in conhost.exe indicating possible command/argument confusion/hijacking",
    "references": [
      "https://pentestlab.blog/2020/07/06/indirect-command-execution/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/14",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentCommandLine|contains": "conhost",
        "CommandLine|contains": "/../../"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Child Process Of Conhost.EXE",
    "id": 318,
    "status": "experimental",
    "description": "Detects uncommon \"conhost\" child processes. This could be a sign of \"conhost\" usage as a LOLBIN or potential process injection activity.",
    "references": [
      "http://www.hexacorn.com/blog/2020/05/25/how-to-con-your-host/"
    ],
    "author": "omkar72",
    "date": "2020/10/25",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\conhost.exe"
      },
      "filter_main_conhost": {
        "Image|endswith": ":\\Windows\\System32\\conhost.exe"
      },
      "filter_main_null": {
        "Image": null
      },
      "filter_main_empty": {
        "Image": ""
      },
      "filter_optional_provider": {
        "Provider_Name": "SystemTraceProvider-Process"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Conhost Spawned By Uncommon Parent Process",
    "id": 319,
    "status": "test",
    "description": "Detects when the Console Window Host (conhost.exe) process is spawned by an uncommon parent process, which could be indicative of potential code injection activity.",
    "references": [
      "https://www.elastic.co/guide/en/security/current/conhost-spawned-by-suspicious-parent-process.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/28",
    "modified": "2023/03/29",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\conhost.exe",
        "ParentImage|endswith": [
          "\\explorer.exe",
          "\\lsass.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\services.exe",
          "\\smss.exe",
          "\\spoolsv.exe",
          "\\svchost.exe",
          "\\userinit.exe",
          "\\wininit.exe",
          "\\winlogon.exe"
        ]
      },
      "filter_main_svchost": {
        "ParentCommandLine|contains": [
          "-k apphost -s AppHostSvc",
          "-k imgsvc",
          "-k localService -p -s RemoteRegistry",
          "-k LocalSystemNetworkRestricted -p -s NgcSvc",
          "-k NetSvcs -p -s NcaSvc",
          "-k netsvcs -p -s NetSetupSvc",
          "-k netsvcs -p -s wlidsvc",
          "-k NetworkService -p -s DoSvc",
          "-k wsappx -p -s AppXSvc",
          "-k wsappx -p -s ClipSVC"
        ]
      },
      "filter_optional_dropbox": {
        "ParentCommandLine|contains": [
          "C:\\Program Files (x86)\\Dropbox\\Client\\",
          "C:\\Program Files\\Dropbox\\Client\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Control Panel Items",
    "id": 320,
    "status": "test",
    "description": "Detects the malicious use of a control panel item",
    "references": [
      "https://ired.team/offensive-security/code-execution/code-execution-through-control-panel-add-ins"
    ],
    "author": "Kyaw Min Thein, Furkan Caliskan (@caliskanfurkan_)",
    "date": "2020/06/22",
    "modified": "2023/10/11",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218.002",
      "attack.persistence",
      "attack.t1546"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_reg_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_reg_cli": {
        "CommandLine|contains|all": [
          "add",
          "CurrentVersion\\Control Panel\\CPLs"
        ]
      },
      "selection_cpl": {
        "CommandLine|endswith": ".cpl"
      },
      "filter_cpl_sys": {
        "CommandLine|contains": [
          "\\System32\\",
          "%System%",
          "|C:\\Windows\\system32|"
        ]
      },
      "filter_cpl_igfx": {
        "CommandLine|contains|all": [
          "regsvr32 ",
          " /s ",
          "igfxCPL.cpl"
        ]
      },
      "condition": "all of selection_reg_* or (selection_cpl and not 1 of filter_cpl_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CreateDump Process Dump",
    "id": 321,
    "related": [
      {
        "id": "1a1ed54a-2ba4-4221-94d5-01dee560d71e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects uses of the createdump.exe LOLOBIN utility to dump process memory",
    "references": [
      "https://www.crowdstrike.com/blog/overwatch-exposes-aquatic-panda-in-possession-of-log-4-shell-exploit-tools/",
      "https://twitter.com/bopin2020/status/1366400799199272960"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/04",
    "modified": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\createdump.exe"
        },
        {
          "OriginalFileName": "FX_VER_INTERNALNAME_STR"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -u ",
          " --full ",
          " -f ",
          " --name ",
          ".dmp "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Command lines that use the same flags"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Dynamic .NET Compilation Via Csc.EXE",
    "id": 322,
    "status": "test",
    "description": "Detects execution of \"csc.exe\" to compile .NET code. Attackers often leverage this to compile code on the fly and use it in other stages.",
    "references": [
      "https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/",
      "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf",
      "https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/",
      "https://twitter.com/gN3mes1s/status/1206874118282448897",
      "https://github.com/redcanaryco/atomic-red-team/blob/b27a3cb25025161d49ac861cb216db68c46a3537/atomics/T1027.004/T1027.004.md#atomic-test-1---compile-after-delivery-using-cscexe"
    ],
    "author": "Florian Roth (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2019/08/24",
    "modified": "2023/10/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\csc.exe"
      },
      "selection_susp_location_1": {
        "CommandLine|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          "\\AppData\\Local\\Temp\\",
          "\\Temporary Internet",
          "\\Windows\\Temp\\"
        ]
      },
      "selection_susp_location_2": [
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Pictures\\"
          ]
        }
      ],
      "selection_susp_location_3": {
        "CommandLine|re": "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal(Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$"
      },
      "filter_main_programfiles": {
        "ParentImage|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\"
        ]
      },
      "filter_main_sdiagnhost": {
        "ParentImage": "C:\\Windows\\System32\\sdiagnhost.exe"
      },
      "filter_main_w3p": {
        "ParentImage": "C:\\Windows\\System32\\inetsrv\\w3wp.exe"
      },
      "filter_optional_chocolatey": {
        "ParentImage": "C:\\ProgramData\\chocolatey\\choco.exe"
      },
      "filter_optional_defender": {
        "ParentCommandLine|contains": "\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection"
      },
      "filter_optional_ansible": {
        "ParentCommandLine|contains": [
          "JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw",
          "cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA",
          "nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA"
        ]
      },
      "condition": "selection_img and 1 of selection_susp_location_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate software from program files - https://twitter.com/gN3mes1s/status/1206874118282448897",
      "Legitimate Microsoft software - https://twitter.com/gabriele_pippi/status/1206907900268072962",
      "Ansible"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Csc.EXE Execution Form Potentially Suspicious Parent",
    "id": 323,
    "status": "test",
    "description": "Detects a potentially suspicious parent of \"csc.exe\", which could be a sign of payload delivery.",
    "references": [
      "https://www.uptycs.com/blog/warzonerat-can-now-evade-with-process-hollowing",
      "https://reaqta.com/2017/11/short-journey-darkvnc/",
      "https://www.pwc.com/gx/en/issues/cybersecurity/cyber-threat-intelligence/yellow-liderc-ships-its-scripts-delivers-imaploader-malware.html"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2019/02/11",
    "modified": "2023/10/27",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007",
      "attack.defense_evasion",
      "attack.t1218.005",
      "attack.t1027.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\csc.exe"
        },
        {
          "OriginalFileName": "csc.exe"
        }
      ],
      "selection_parent_generic": {
        "ParentImage|endswith": [
          "\\cscript.exe",
          "\\excel.exe",
          "\\mshta.exe",
          "\\onenote.exe",
          "\\outlook.exe",
          "\\powerpnt.exe",
          "\\winword.exe",
          "\\wscript.exe"
        ]
      },
      "selection_parent_powershell": {
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "ParentCommandLine|contains": [
          "-Encoded ",
          "FromBase64String"
        ]
      },
      "selection_parent_susp_location": [
        {
          "ParentCommandLine|re": "([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\\\[Aa]pp[Dd]ata\\\\([Ll]ocal(Ll]ow)?|[Rr]oaming))\\\\[^\\\\]{1,256}$"
        },
        {
          "ParentCommandLine|contains": [
            ":\\PerfLogs\\",
            ":\\Users\\Public\\",
            ":\\Windows\\Temp\\",
            "\\Temporary Internet"
          ]
        },
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        },
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Pictures\\"
          ]
        }
      ],
      "filter_main_programfiles": {
        "ParentImage|startswith": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\"
        ]
      },
      "filter_main_sdiagnhost": {
        "ParentImage": "C:\\Windows\\System32\\sdiagnhost.exe"
      },
      "filter_main_w3p": {
        "ParentImage": "C:\\Windows\\System32\\inetsrv\\w3wp.exe"
      },
      "filter_optional_chocolatey": {
        "ParentImage": "C:\\ProgramData\\chocolatey\\choco.exe"
      },
      "filter_optional_defender": {
        "ParentCommandLine|contains": "\\ProgramData\\Microsoft\\Windows Defender Advanced Threat Protection"
      },
      "filter_optional_ansible": {
        "ParentCommandLine|contains": [
          "JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw",
          "cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA",
          "nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA"
        ]
      },
      "condition": "selection_img and 1 of selection_parent_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Use of CSharp Interactive Console",
    "id": 324,
    "status": "test",
    "description": "Detects the execution of CSharp interactive console by PowerShell",
    "references": [
      "https://redcanary.com/blog/detecting-attacks-leveraging-the-net-framework/"
    ],
    "author": "Michael R. (@nahamike01)",
    "date": "2020/03/08",
    "modified": "2022/07/14",
    "tags": [
      "attack.execution",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\csi.exe",
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\powershell_ise.exe"
        ],
        "OriginalFileName": "csi.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Possible depending on environment. Pair with other factors such as net connections, command-line args, etc."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Active Directory Structure Export Via Csvde.EXE",
    "id": 325,
    "status": "test",
    "description": "Detects the execution of \"csvde.exe\" in order to export organizational Active Directory structure.",
    "references": [
      "https://www.cybereason.com/blog/research/operation-ghostshell-novel-rat-targets-global-aerospace-and-telecoms-firms",
      "https://web.archive.org/web/20180725233601/https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf",
      "https://businessinsights.bitdefender.com/deep-dive-into-a-backdoordiplomacy-attack-a-study-of-an-attackers-toolkit"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/14",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\csvde.exe"
        },
        {
          "OriginalFileName": "csvde.exe"
        }
      ],
      "selection_remote": {
        "CommandLine|contains": " -f"
      },
      "filter_import": {
        "CommandLine|contains": " -i"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Cookies Session Hijacking",
    "id": 326,
    "status": "experimental",
    "description": "Detects execution of \"curl.exe\" with the \"-c\" flag in order to save cookie data.",
    "references": [
      "https://curl.se/docs/manpage.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_cli": [
        {
          "CommandLine|re": "\\s-c\\s"
        },
        {
          "CommandLine|contains": "--cookie-jar"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Curl Web Request With Potential Custom User-Agent",
    "id": 327,
    "status": "experimental",
    "description": "Detects execution of \"curl.exe\" with a potential custom \"User-Agent\". Attackers can leverage this to download or exfiltrate data via \"curl\" to a domain that only accept specific \"User-Agent\" strings",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers",
      "https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_header": {
        "CommandLine|re": "\\s-H\\s",
        "CommandLine|contains": "User-Agent:"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download From IP URL Via Curl.EXE",
    "id": 328,
    "related": [
      {
        "id": "5cb299fc-5fb1-4d07-b989-0644c68b6043",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects file downloads directly from IP address URL using curl.exe",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers",
      "https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv",
      "https://github.com/pr0xylife/IcedID/blob/8dd1e218460db4f750d955b4c65b2f918a1db906/icedID_09.28.2023.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/18",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_ip": {
        "CommandLine|re": "://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_flag": {
        "CommandLine|contains": [
          " -O",
          "--remote-name",
          "--output"
        ]
      },
      "filter_main_ext": {
        "CommandLine|endswith": [
          ".bat",
          ".bat\"",
          ".dat",
          ".dat\"",
          ".dll",
          ".dll\"",
          ".exe",
          ".exe\"",
          ".gif",
          ".gif\"",
          ".hta",
          ".hta\"",
          ".jpeg",
          ".jpeg\"",
          ".log",
          ".log\"",
          ".msi",
          ".msi\"",
          ".png",
          ".png\"",
          ".ps1",
          ".ps1\"",
          ".psm1",
          ".psm1\"",
          ".vbe",
          ".vbe\"",
          ".vbs",
          ".vbs\"",
          ".bat'",
          ".dat'",
          ".dll'",
          ".exe'",
          ".gif'",
          ".hta'",
          ".jpeg'",
          ".log'",
          ".msi'",
          ".png'",
          ".ps1'",
          ".psm1'",
          ".vbe'",
          ".vbs'"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Download From IP Via Curl.EXE",
    "id": 329,
    "status": "experimental",
    "description": "Detects potentially suspicious file downloads directly from IP addresses using curl.exe",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers",
      "https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv",
      "https://github.com/pr0xylife/IcedID/blob/8dd1e218460db4f750d955b4c65b2f918a1db906/icedID_09.28.2023.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_ip": {
        "CommandLine|re": "://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_flag": {
        "CommandLine|contains": [
          " -O",
          "--remote-name",
          "--output"
        ]
      },
      "selection_ext": {
        "CommandLine|endswith": [
          ".bat",
          ".bat\"",
          ".dat",
          ".dat\"",
          ".dll",
          ".dll\"",
          ".exe",
          ".exe\"",
          ".gif",
          ".gif\"",
          ".hta",
          ".hta\"",
          ".jpeg",
          ".jpeg\"",
          ".log",
          ".log\"",
          ".msi",
          ".msi\"",
          ".png",
          ".png\"",
          ".ps1",
          ".ps1\"",
          ".psm1",
          ".psm1\"",
          ".vbe",
          ".vbe\"",
          ".vbs",
          ".vbs\"",
          ".bat'",
          ".dat'",
          ".dll'",
          ".exe'",
          ".gif'",
          ".hta'",
          ".jpeg'",
          ".log'",
          ".msi'",
          ".png'",
          ".ps1'",
          ".psm1'",
          ".vbe'",
          ".vbs'"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Download From File Sharing Domain Via Curl.EXE",
    "id": 330,
    "status": "experimental",
    "description": "Detects potentially suspicious file download from file sharing domains using curl.exe",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers",
      "https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "modified": "2024/02/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_websites": {
        "CommandLine|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_flag": {
        "CommandLine|contains": [
          " -O",
          "--remote-name",
          "--output"
        ]
      },
      "selection_ext": {
        "CommandLine|endswith": [
          ".ps1",
          ".ps1'",
          ".ps1\"",
          ".dat",
          ".dat'",
          ".dat\"",
          ".msi",
          ".msi'",
          ".msi\"",
          ".bat",
          ".bat'",
          ".bat\"",
          ".exe",
          ".exe'",
          ".exe\"",
          ".vbs",
          ".vbs'",
          ".vbs\"",
          ".vbe",
          ".vbe'",
          ".vbe\"",
          ".hta",
          ".hta'",
          ".hta\"",
          ".dll",
          ".dll'",
          ".dll\"",
          ".psm1",
          ".psm1'",
          ".psm1\""
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Insecure Transfer Via Curl.EXE",
    "id": 331,
    "status": "experimental",
    "description": "Detects execution of \"curl.exe\" with the \"--insecure\" flag.",
    "references": [
      "https://curl.se/docs/manpage.html"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/30",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_cli": [
        {
          "CommandLine|re": "\\s-k\\s"
        },
        {
          "CommandLine|contains": "--insecure"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Access to badly maintained internal or development systems"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Insecure Proxy/DOH Transfer Via Curl.EXE",
    "id": 332,
    "status": "experimental",
    "description": "Detects execution of \"curl.exe\" with the \"insecure\" flag over proxy or DOH.",
    "references": [
      "https://curl.se/docs/manpage.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "--doh-insecure",
          "--proxy-insecure"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Access to badly maintained internal or development systems"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Local File Read Using Curl.EXE",
    "id": 333,
    "status": "experimental",
    "description": "Detects execution of \"curl.exe\" with the \"file://\" protocol handler in order to read local files.",
    "references": [
      "https://curl.se/docs/manpage.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "OriginalFileName": "curl.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "file:///"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Curl.EXE Download",
    "id": 334,
    "related": [
      {
        "id": "bbeaed61-1990-4773-bf57-b81dbad7db2d",
        "type": "derived"
      },
      {
        "id": "9a517fca-4ba3-4629-9278-a68694697b81",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a suspicious curl process start on Windows and outputs the requested document to a local file",
    "references": [
      "https://twitter.com/max_mal_/status/1542461200797163522",
      "https://web.archive.org/web/20200128160046/https://twitter.com/reegun21/status/1222093798009790464",
      "https://github.com/pr0xylife/Qakbot/blob/4f0795d79dabee5bc9dd69f17a626b48852e7869/Qakbot_AA_23.06.2022.txt",
      "https://www.volexity.com/blog/2022/07/28/sharptongue-deploys-clever-mail-stealing-browser-extension-sharpext/",
      "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1105/T1105.md#atomic-test-18---curl-download-file"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/07/03",
    "modified": "2023/02/21",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_curl": [
        {
          "Image|endswith": "\\curl.exe"
        },
        {
          "Product": "The curl executable"
        }
      ],
      "selection_susp_locations": {
        "CommandLine|contains": [
          "%AppData%",
          "%Public%",
          "%Temp%",
          "%tmp%",
          "\\AppData\\",
          "\\Desktop\\",
          "\\Temp\\",
          "\\Users\\Public\\",
          "C:\\PerfLogs\\",
          "C:\\ProgramData\\",
          "C:\\Windows\\Temp\\"
        ]
      },
      "selection_susp_extensions": {
        "CommandLine|endswith": [
          ".dll",
          ".gif",
          ".jpeg",
          ".jpg",
          ".png",
          ".temp",
          ".tmp",
          ".txt",
          ".vbe",
          ".vbs"
        ]
      },
      "filter_optional_git_windows": {
        "ParentImage": "C:\\Program Files\\Git\\usr\\bin\\sh.exe",
        "Image": "C:\\Program Files\\Git\\mingw64\\bin\\curl.exe",
        "CommandLine|contains|all": [
          "--silent --show-error --output ",
          "gfw-httpget-",
          "AppData"
        ]
      },
      "condition": "selection_curl and 1 of selection_susp_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote File Download Via Desktopimgdownldr Utility",
    "id": 335,
    "status": "test",
    "description": "Detects the desktopimgdownldr utility being used to download a remote file. An adversary may use desktopimgdownldr to download arbitrary files as an alternative to certutil.",
    "references": [
      "https://www.elastic.co/guide/en/security/current/remote-file-download-via-desktopimgdownldr-utility.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\desktopimgdownldr.exe",
        "ParentImage|endswith": "\\desktopimgdownldr.exe",
        "CommandLine|contains": "/lockscreenurl:http"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Desktopimgdownldr Command",
    "id": 336,
    "status": "test",
    "description": "Detects a suspicious Microsoft desktopimgdownldr execution with parameters used to download files from the Internet",
    "references": [
      "https://labs.sentinelone.com/living-off-windows-land-a-new-native-file-downldr/",
      "https://twitter.com/SBousseaden/status/1278977301745741825"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/07/03",
    "modified": "2021/11/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": " /lockscreenurl:"
      },
      "selection1_filter": {
        "CommandLine|contains": [
          ".jpg",
          ".jpeg",
          ".png"
        ]
      },
      "selection_reg": {
        "CommandLine|contains|all": [
          "reg delete",
          "\\PersonalizationCSP"
        ]
      },
      "condition": "( selection1 and not selection1_filter ) or selection_reg"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential DLL Sideloading Via DeviceEnroller.EXE",
    "id": 337,
    "related": [
      {
        "id": "ee4c5d06-3abc-48cc-8885-77f1c20f4451",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that does not exist. This non-existent DLL file is named \"ShellChromeAPI.dll\".\nAdversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter\n",
    "references": [
      "https://mobile.twitter.com/0gtweet/status/1564131230941122561",
      "https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html"
    ],
    "author": "@gott_cyber",
    "date": "2022/08/29",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\deviceenroller.exe"
        },
        {
          "OriginalFileName": "deviceenroller.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "/PhoneDeepLink"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary MSI Download Via Devinit.EXE",
    "id": 338,
    "status": "test",
    "description": "Detects a certain command line flag combination used by \"devinit.exe\", which can be abused as a LOLBIN to download arbitrary MSI packages on a Windows system",
    "references": [
      "https://twitter.com/mrd0x/status/1460815932402679809",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Devinit/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2023/04/06",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          " -t msi-install ",
          " -i http"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Child Process Of ClickOnce Application",
    "id": 339,
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of a ClickOnce deployment application",
    "references": [
      "https://posts.specterops.io/less-smartscreen-more-caffeine-ab-using-clickonce-for-trusted-code-execution-1446ea8051c5"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/12",
    "tags": [
      "attack.execution",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|contains": "\\AppData\\Local\\Apps\\2.0\\",
        "Image|endswith": [
          "\\calc.exe",
          "\\cmd.exe",
          "\\cscript.exe",
          "\\explorer.exe",
          "\\mshta.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\nltest.exe",
          "\\notepad.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\reg.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\schtasks.exe",
          "\\werfault.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DirLister Execution",
    "id": 340,
    "status": "test",
    "description": "Detect the usage of \"DirLister.exe\" a utility for quickly listing folder or drive contents. It was seen used by BlackCat ransomware to create a list of accessible directories and files.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1083/T1083.md",
      "https://news.sophos.com/en-us/2022/07/14/blackcat-ransomware-attacks-not-merely-a-byproduct-of-bad-luck/"
    ],
    "author": "frack113",
    "date": "2022/08/20",
    "modified": "2023/02/04",
    "tags": [
      "attack.discovery",
      "attack.t1083"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "DirLister.exe"
        },
        {
          "Image|endswith": "\\dirlister.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use by users"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Child Process Of DiskShadow.EXE",
    "id": 341,
    "related": [
      {
        "id": "fa1a7e52-3d02-435b-81b8-00da14dd66c1",
        "type": "similar"
      },
      {
        "id": "1dde5376-a648-492e-9e54-4241dd9b0c7f",
        "type": "similar"
      },
      {
        "id": "56b1dde8-b274-435f-a73a-fb75eb81262a",
        "type": "similar"
      },
      {
        "id": "0c2f8629-7129-4a8a-9897-7e0768f13ff2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of \"Diskshadow.exe\". This could be an attempt to bypass parent/child relationship detection or application whitelisting rules.",
    "references": [
      "https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/",
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/ntds.dit-enumeration",
      "https://medium.com/@cyberjyot/lolbin-execution-via-diskshadow-f6ff681a27a4",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/diskshadow",
      "https://www.lifars.com/wp-content/uploads/2022/01/GriefRansomware_Whitepaper-2.pdf",
      "https://www.zscaler.com/blogs/security-research/technical-analysis-crytox-ransomware",
      "https://research.checkpoint.com/2022/evilplayout-attack-against-irans-state-broadcaster/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\diskshadow.exe",
        "Image|endswith": [
          "\\certutil.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False postitve can occur in cases where admin scripts levreage the \"exec\" flag to execute applications"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Diskshadow Script Mode - Uncommon Script Extension Execution",
    "id": 342,
    "related": [
      {
        "id": "fa1a7e52-3d02-435b-81b8-00da14dd66c1",
        "type": "similar"
      },
      {
        "id": "9f546b25-5f12-4c8d-8532-5893dcb1e4b8",
        "type": "similar"
      },
      {
        "id": "56b1dde8-b274-435f-a73a-fb75eb81262a",
        "type": "similar"
      },
      {
        "id": "0c2f8629-7129-4a8a-9897-7e0768f13ff2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"Diskshadow.exe\" in script mode to execute an script with a potentially uncommon extension.\nInitial baselining of the allowed extension list is required.\n",
    "references": [
      "https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/",
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/ntds.dit-enumeration",
      "https://medium.com/@cyberjyot/lolbin-execution-via-diskshadow-f6ff681a27a4",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/diskshadow",
      "https://www.lifars.com/wp-content/uploads/2022/01/GriefRansomware_Whitepaper-2.pdf",
      "https://www.zscaler.com/blogs/security-research/technical-analysis-crytox-ransomware",
      "https://research.checkpoint.com/2022/evilplayout-attack-against-irans-state-broadcaster/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "diskshadow.exe"
        },
        {
          "Image|endswith": "\\diskshadow.exe"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": [
          "/s ",
          "-s "
        ]
      },
      "filter_main_ext": {
        "CommandLine|contains": ".txt"
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False postitve might occur with legitimate or uncommon extensions used internally. Initial baseline is required."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Diskshadow Script Mode - Execution From Potential Suspicious Location",
    "id": 343,
    "related": [
      {
        "id": "1dde5376-a648-492e-9e54-4241dd9b0c7f",
        "type": "similar"
      },
      {
        "id": "9f546b25-5f12-4c8d-8532-5893dcb1e4b8",
        "type": "similar"
      },
      {
        "id": "56b1dde8-b274-435f-a73a-fb75eb81262a",
        "type": "similar"
      },
      {
        "id": "0c2f8629-7129-4a8a-9897-7e0768f13ff2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"Diskshadow.exe\" in script mode using the \"/s\" flag where the script is located in a potentially suspicious location.",
    "references": [
      "https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/",
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/ntds.dit-enumeration",
      "https://medium.com/@cyberjyot/lolbin-execution-via-diskshadow-f6ff681a27a4",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/diskshadow",
      "https://www.lifars.com/wp-content/uploads/2022/01/GriefRansomware_Whitepaper-2.pdf",
      "https://www.zscaler.com/blogs/security-research/technical-analysis-crytox-ransomware",
      "https://research.checkpoint.com/2022/evilplayout-attack-against-irans-state-broadcaster/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "diskshadow.exe"
        },
        {
          "Image|endswith": "\\diskshadow.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "/s ",
          "-s "
        ]
      },
      "selection_paths": {
        "CommandLine|contains": [
          ":\\Temp\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\",
          "\\AppData\\Roaming\\",
          "\\ProgramData\\",
          "\\Users\\Public\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives may occur if you execute the script from one of the paths mentioned in the rule. Apply additional filters that fits your org needs."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Dllhost.EXE Execution Anomaly",
    "id": 344,
    "status": "experimental",
    "description": "Detects a \"dllhost\" process spawning with no commandline arguments which is very rare to happen and could indicate process injection activity or malware mimicking similar system processes.",
    "references": [
      "https://redcanary.com/blog/child-processes/",
      "https://nasbench.medium.com/what-is-the-dllhost-exe-process-actually-running-ef9fe4c19c08",
      "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/goofy-guineapig/NCSC-MAR-Goofy-Guineapig.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/27",
    "modified": "2023/05/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dllhost.exe",
        "CommandLine": [
          "dllhost.exe",
          "dllhost"
        ]
      },
      "filter_main_null": {
        "CommandLine": null
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DLL Sideloading by VMware Xfer Utility",
    "id": 345,
    "status": "test",
    "description": "Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the non-default directory which may be an attempt to sideload arbitrary DLL",
    "references": [
      "https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\VMwareXferlogs.exe"
      },
      "filter": {
        "Image|startswith": "C:\\Program Files\\VMware\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Discovery Activity Via Dnscmd.EXE",
    "id": 346,
    "status": "test",
    "description": "Detects an attempt to leverage dnscmd.exe to enumerate the DNS zones of a domain. DNS zones used to host the DNS records for a particular domain.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/dnscmd",
      "https://docs.microsoft.com/en-us/azure/dns/dns-zones-records",
      "https://lolbas-project.github.io/lolbas/Binaries/Dnscmd/"
    ],
    "author": "@gott_cyber",
    "date": "2022/07/31",
    "modified": "2023/02/04",
    "tags": [
      "attack.discovery",
      "attack.execution",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\dnscmd.exe"
      },
      "selection_cli": {
        "CommandLine|contains": [
          "/enumrecords",
          "/enumzones",
          "/ZonePrint",
          "/info"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New DNS ServerLevelPluginDll Installed Via Dnscmd.EXE",
    "id": 347,
    "related": [
      {
        "id": "e61e8a88-59a9-451c-874e-70fcc9740d67",
        "type": "derived"
      },
      {
        "id": "cbe51394-cd93-4473-b555-edf0144952d9",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the installation of a DNS plugin DLL via ServerLevelPluginDll parameter in registry, which can be used to execute code in context of the DNS server (restart required)",
    "references": [
      "https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83",
      "https://blog.3or.de/hunting-dns-server-level-plugin-dll-injection.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/05/08",
    "modified": "2023/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002",
      "attack.t1112"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dnscmd.exe",
        "CommandLine|contains|all": [
          "/config",
          "/serverlevelplugindll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DNS Exfiltration and Tunneling Tools Execution",
    "id": 348,
    "status": "test",
    "description": "Well-known DNS Exfiltration tools execution",
    "references": [
      "https://github.com/iagox86/dnscat2",
      "https://github.com/yarrick/iodine"
    ],
    "author": "Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.exfiltration",
      "attack.t1048.001",
      "attack.command_and_control",
      "attack.t1071.004",
      "attack.t1132.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\iodine.exe"
        },
        {
          "Image|contains": "\\dnscat2"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Unusual Child Process of dns.exe",
    "id": 349,
    "status": "test",
    "description": "Detects an unexpected process spawning from dns.exe which may indicate activity related to remote code execution or other forms of exploitation as seen in CVE-2020-1350 (SigRed)",
    "references": [
      "https://www.elastic.co/guide/en/security/current/unusual-child-process-of-dns.exe.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/27",
    "modified": "2023/02/05",
    "tags": [
      "attack.initial_access",
      "attack.t1133"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\dns.exe"
      },
      "filter": {
        "Image|endswith": "\\conhost.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Binary Proxy Execution Via Dotnet-Trace.EXE",
    "id": 350,
    "status": "experimental",
    "description": "Detects commandline arguments for executing a child process via dotnet-trace.exe",
    "references": [
      "https://twitter.com/bohops/status/1740022869198037480"
    ],
    "author": "Jimmy Bayne (@bohops)",
    "date": "2024/01/02",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\dotnet-trace.exe"
        },
        {
          "OriginalFileName": "dotnet-trace.dll"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "-- ",
          "collect"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of the utility in order to debug and trace a program."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Recon Activity Using DriverQuery.EXE",
    "id": 351,
    "related": [
      {
        "id": "a20def93-0709-4eae-9bd2-31206e21e6b2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detect usage of the \"driverquery\" utility to perform reconnaissance on installed drivers",
    "references": [
      "https://thedfirreport.com/2023/01/09/unwrapping-ursnifs-gifts/",
      "https://www.vmray.com/cyber-security-blog/analyzing-ursnif-behavior-malware-sandbox/",
      "https://www.fireeye.com/blog/threat-research/2020/01/saigon-mysterious-ursnif-fork.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/19",
    "modified": "2023/09/29",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "driverquery.exe"
        },
        {
          "OriginalFileName": "drvqry.exe"
        }
      ],
      "selection_parent": [
        {
          "ParentImage|endswith": [
            "\\cscript.exe",
            "\\mshta.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "ParentImage|contains": [
            "\\AppData\\Local\\",
            "\\Users\\Public\\",
            "\\Windows\\Temp\\"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage by some scripts might trigger this as well"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DriverQuery.EXE Execution",
    "id": 352,
    "related": [
      {
        "id": "9fc3072c-dc8f-4bf7-b231-18950000fadd",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detect usage of the \"driverquery\" utility. Which can be used to perform reconnaissance on installed drivers",
    "references": [
      "https://thedfirreport.com/2023/01/09/unwrapping-ursnifs-gifts/",
      "https://www.vmray.com/cyber-security-blog/analyzing-ursnif-behavior-malware-sandbox/",
      "https://www.fireeye.com/blog/threat-research/2020/01/saigon-mysterious-ursnif-fork.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/19",
    "modified": "2023/09/29",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "driverquery.exe"
        },
        {
          "OriginalFileName": "drvqry.exe"
        }
      ],
      "filter_main_other": [
        {
          "ParentImage|endswith": [
            "\\cscript.exe",
            "\\mshta.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "ParentImage|contains": [
            "\\AppData\\Local\\",
            "\\Users\\Public\\",
            "\\Windows\\Temp\\"
          ]
        }
      ],
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate use by third party tools in order to investigate installed drivers"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Over Permissive Permissions Granted Using Dsacls.EXE",
    "id": 353,
    "status": "test",
    "description": "Detects usage of Dsacls to grant over permissive permissions",
    "references": [
      "https://ss64.com/nt/dsacls.html",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc771151(v=ws.11)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\dsacls.exe"
        },
        {
          "OriginalFileName": "DSACLS.EXE"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": " /G "
      },
      "selection_permissions": {
        "CommandLine|contains": [
          "GR",
          "GE",
          "GW",
          "GA",
          "WP",
          "WD"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administrators granting over permissive permissions to users"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Password Spraying Attempt Using Dsacls.EXE",
    "id": 354,
    "status": "test",
    "description": "Detects possible password spraying attempts using Dsacls",
    "references": [
      "https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/using-dsacls-to-check-ad-object-permissions#password-spraying-anyone",
      "https://ss64.com/nt/dsacls.html",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc771151(v=ws.11)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\dsacls.exe"
        },
        {
          "OriginalFileName": "DSACLS.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/user:",
          "/passwd:"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate use of dsacls to bind to an LDAP session"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Dism Remove Online Package",
    "id": 355,
    "status": "test",
    "description": "Deployment Image Servicing and Management tool. DISM is used to enumerate, install, uninstall, configure, and update features and packages in Windows images",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md#atomic-test-26---disable-windows-defender-with-dism",
      "https://www.trendmicro.com/en_us/research/22/h/ransomware-actor-abuses-genshin-impact-anti-cheat-driver-to-kill-antivirus.html"
    ],
    "author": "frack113",
    "date": "2022/01/16",
    "modified": "2022/08/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_dismhost": {
        "Image|endswith": "\\DismHost.exe",
        "ParentCommandLine|contains|all": [
          "/Online",
          "/Disable-Feature"
        ]
      },
      "selection_dism": {
        "Image|endswith": "\\Dism.exe",
        "CommandLine|contains|all": [
          "/Online",
          "/Disable-Feature"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Domain Trust Discovery Via Dsquery",
    "id": 356,
    "related": [
      {
        "id": "b23fcb74-b1cb-4ff7-a31d-bfe2a7ba453b",
        "type": "similar"
      },
      {
        "id": "77815820-246c-47b8-9741-e0def3f57308",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of \"dsquery.exe\" for domain trust discovery",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1482/T1482.md",
      "https://posts.specterops.io/an-introduction-to-manual-active-directory-querying-with-dsquery-and-ldapsearch-84943c13d7eb?gi=41b97a644843"
    ],
    "author": "E.M. Anhaus, Tony Lambert, oscd.community, omkar72",
    "date": "2019/10/24",
    "modified": "2023/02/02",
    "tags": [
      "attack.discovery",
      "attack.t1482"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\dsquery.exe"
        },
        {
          "OriginalFileName": "dsquery.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "trustedDomain"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the utilities by legitimate user for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Kernel Dump Using Dtrace",
    "id": 357,
    "status": "test",
    "description": "Detects suspicious way to dump the kernel on Windows systems using dtrace.exe, which is available on Windows systems since Windows 10 19H1",
    "references": [
      "https://twitter.com/0gtweet/status/1474899714290208777?s=12",
      "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/dtrace"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/12/28",
    "tags": [
      "attack.discovery",
      "attack.t1082"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_plain": {
        "Image|endswith": "\\dtrace.exe",
        "CommandLine|contains": "lkd(0)"
      },
      "selection_obfuscated": {
        "CommandLine|contains|all": [
          "syscall:::return",
          "lkd("
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DumpMinitool Execution",
    "id": 358,
    "status": "experimental",
    "description": "Detects the use of \"DumpMinitool.exe\" a tool that allows the dump of process memory via the use of the \"MiniDumpWriteDump\"",
    "references": [
      "https://twitter.com/mrd0x/status/1511415432888131586",
      "https://twitter.com/mrd0x/status/1511489821247684615",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/DumpMinitool/",
      "https://gist.github.com/nasbench/6d58c3c125e2fa1b8f7a09754c1b087f"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2022/04/06",
    "modified": "2023/04/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\DumpMinitool.exe",
            "\\DumpMinitool.x86.exe",
            "\\DumpMinitool.arm64.exe"
          ]
        },
        {
          "OriginalFileName": [
            "DumpMinitool.exe",
            "DumpMinitool.x86.exe",
            "DumpMinitool.arm64.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " Full",
          " Mini",
          " WithHeap"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious DumpMinitool Execution",
    "id": 359,
    "status": "experimental",
    "description": "Detects suspicious ways to use the \"DumpMinitool.exe\" binary",
    "references": [
      "https://twitter.com/mrd0x/status/1511415432888131586",
      "https://twitter.com/mrd0x/status/1511489821247684615",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/DumpMinitool/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/06",
    "modified": "2023/04/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\DumpMinitool.exe",
            "\\DumpMinitool.x86.exe",
            "\\DumpMinitool.arm64.exe"
          ]
        },
        {
          "OriginalFileName": [
            "DumpMinitool.exe",
            "DumpMinitool.x86.exe",
            "DumpMinitool.arm64.exe"
          ]
        }
      ],
      "filter_folder": {
        "Image|contains": [
          "\\Microsoft Visual Studio\\",
          "\\Extensions\\"
        ]
      },
      "susp_flags": {
        "CommandLine|contains": ".txt"
      },
      "cmd_has_flags": {
        "CommandLine|contains": [
          " Full",
          " Mini",
          " WithHeap"
        ]
      },
      "filter_cmd_misses_flags": {
        "CommandLine|contains": "--dumpType"
      },
      "condition": "selection and ( ( not filter_folder ) or susp_flags or ( cmd_has_flags and not filter_cmd_misses_flags ) )"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Esentutl Gather Credentials",
    "id": 360,
    "status": "test",
    "description": "Conti recommendation to its affiliates to use esentutl to access NTDS dumped file. Trickbot also uses this utilities to get MSEdge info via its module pwgrab.",
    "references": [
      "https://twitter.com/vxunderground/status/1423336151860002816",
      "https://attack.mitre.org/software/S0404/",
      "https://thedfirreport.com/2021/08/01/bazarcall-to-conti-ransomware-via-trickbot-and-cobalt-strike/"
    ],
    "author": "sam0x90",
    "date": "2021/08/06",
    "modified": "2022/10/09",
    "tags": [
      "attack.credential_access",
      "attack.t1003",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "esentutl",
          " /p"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "User",
      "CommandLine",
      "ParentCommandLine",
      "CurrentDirectory"
    ],
    "falsepositives": [
      "To be determined"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Copying Sensitive Files with Credential Data",
    "id": 361,
    "status": "test",
    "description": "Files with well-known filenames (sensitive files with credential data) copying",
    "references": [
      "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/",
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/"
    ],
    "author": "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/22",
    "modified": "2022/11/11",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002",
      "attack.t1003.003",
      "car.2013-07-001",
      "attack.s0404"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_esent_img": [
        {
          "Image|endswith": "\\esentutl.exe"
        },
        {
          "OriginalFileName": "\\esentutl.exe"
        }
      ],
      "selection_esent_cli": {
        "CommandLine|contains": [
          "vss",
          " /m ",
          " /y "
        ]
      },
      "selection_susp_paths": {
        "CommandLine|contains": [
          "\\windows\\ntds\\ntds.dit",
          "\\config\\sam",
          "\\config\\security",
          "\\config\\system ",
          "\\repair\\sam",
          "\\repair\\system",
          "\\repair\\security",
          "\\config\\RegBack\\sam",
          "\\config\\RegBack\\system",
          "\\config\\RegBack\\security"
        ]
      },
      "condition": "all of selection_esent_* or selection_susp_paths"
    },
    "falsepositives": [
      "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Esentutl Steals Browser Information",
    "id": 362,
    "status": "test",
    "description": "One way Qbot steals sensitive information is by extracting browser data from Internet Explorer and Microsoft Edge by using the built-in utility esentutl.exe",
    "references": [
      "https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/",
      "https://redcanary.com/threat-detection-report/threats/qbot/",
      "https://thedfirreport.com/2022/10/31/follina-exploit-leads-to-domain-compromise/"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "modified": "2022/10/31",
    "tags": [
      "attack.collection",
      "attack.t1005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\esentutl.exe"
        },
        {
          "OriginalFileName": "esentutl.exe"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": [
          "/r",
          "-r"
        ]
      },
      "selection_webcache": {
        "CommandLine|contains": "\\Windows\\WebCache"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Event Viewer Child Process",
    "id": 363,
    "related": [
      {
        "id": "7c81fec3-1c1d-43b0-996a-46753041b1b6",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects uncommon or suspicious child processes of \"eventvwr.exe\" which might indicate a UAC bypass attempt",
    "references": [
      "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/",
      "https://www.hybrid-analysis.com/sample/e122bc8bf291f15cab182a5d2d27b8db1e7019e4e96bb5cdbd1dfe7446f3f51f?environmentId=100"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/19",
    "modified": "2023/09/28",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "car.2019-04-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\eventvwr.exe"
      },
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Windows\\System32\\mmc.exe",
          ":\\Windows\\System32\\WerFault.exe",
          ":\\Windows\\SysWOW64\\WerFault.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Cabinet File Expansion",
    "id": 364,
    "status": "test",
    "description": "Detects the expansion or decompression of cabinet files from potentially suspicious or uncommon locations, e.g. seen in Iranian MeteorExpress related attacks",
    "references": [
      "https://labs.sentinelone.com/meteorexpress-mysterious-wiper-paralyzes-iranian-trains-with-epic-troll",
      "https://blog.malwarebytes.com/threat-intelligence/2021/08/new-variant-of-konni-malware-used-in-campaign-targetting-russia/"
    ],
    "author": "Bhabesh Raj, X__Junior (Nextron Systems)",
    "date": "2021/07/30",
    "modified": "2023/11/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": {
        "Image|endswith": "\\expand.exe",
        "CommandLine|contains": [
          "/F:",
          "-F:"
        ]
      },
      "selection_folders_1": {
        "CommandLine|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          "\\Temporary Internet",
          ":\\ProgramData",
          "\\AppData\\Local\\Temp",
          "\\AppData\\Roaming\\Temp",
          ":\\Windows\\Temp"
        ]
      },
      "selection_folders_2": [
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        }
      ],
      "filter_optional_dell": {
        "ParentImage": "C:\\Program Files (x86)\\Dell\\UpdateService\\ServiceShell.exe",
        "CommandLine|contains": "C:\\ProgramData\\Dell\\UpdateService\\Temp\\"
      },
      "condition": "selection_cmd and 1 of selection_folders_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "System administrator Usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Explorer Process Tree Break",
    "id": 365,
    "status": "test",
    "description": "Detects a command line process that uses explorer.exe to launch arbitrary commands or binaries,\nwhich is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer spawning from \"svchost\"\n",
    "references": [
      "https://twitter.com/CyberRaiju/status/1273597319322058752",
      "https://twitter.com/bohops/status/1276357235954909188?s=12",
      "https://twitter.com/nas_bench/status/1535322450858233858",
      "https://securityboulevard.com/2019/09/deobfuscating-ostap-trickbots-34000-line-javascript-downloader/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), @gott_cyber",
    "date": "2019/06/29",
    "modified": "2022/09/20",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|contains": "/factory,{75dff2b7-6936-4c06-a8bb-676a7b00b24b}"
        },
        {
          "CommandLine|contains|all": [
            "explorer.exe",
            " /root,"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Proxy Execution Via Explorer.exe",
    "id": 366,
    "status": "test",
    "description": "Attackers can use explorer.exe for evading defense mechanisms",
    "references": [
      "https://twitter.com/CyberRaiju/status/1273597319322058752"
    ],
    "author": "Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative",
    "date": "2020/10/05",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\explorer.exe",
        "ParentImage|endswith": "\\cmd.exe",
        "CommandLine|contains": "explorer.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate explorer.exe run from cmd.exe"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Explorer NOUACCHECK Flag",
    "id": 367,
    "status": "test",
    "description": "Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks",
    "references": [
      "https://twitter.com/ORCA6665/status/1496478087244095491"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/23",
    "modified": "2022/04/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\explorer.exe",
        "CommandLine|contains": "/NOUACCHECK"
      },
      "filter_dc_logon": [
        {
          "ParentCommandLine": "C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule"
        },
        {
          "ParentImage": "C:\\Windows\\System32\\svchost.exe"
        }
      ],
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Domain Controller User Logon",
      "Unknown how many legitimate software products use that method"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote File Download Via Findstr.EXE",
    "id": 368,
    "related": [
      {
        "id": "bf6c39fc-e203-45b9-9538-05397c1b4f3f",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"findstr\" with specific flags and a remote share path. This specific set of CLI flags would allow \"findstr\" to download the content of the file located on the remote share as described in the LOLBAS entry.\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Findstr/",
      "https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/10/05",
    "modified": "2023/11/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1564.004",
      "attack.t1552.001",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_findstr": [
        {
          "CommandLine|contains": "findstr"
        },
        {
          "Image|endswith": "findstr.exe"
        },
        {
          "OriginalFileName": "FINDSTR.EXE"
        }
      ],
      "selection_cli_download_1": {
        "CommandLine|contains": [
          " /v ",
          " -v "
        ]
      },
      "selection_cli_download_2": {
        "CommandLine|contains": [
          " /l ",
          " -l "
        ]
      },
      "selection_cli_download_3": {
        "CommandLine|contains": "\\\\\\\\"
      },
      "condition": "selection_findstr and all of selection_cli_download_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Findstr GPP Passwords",
    "id": 369,
    "status": "test",
    "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller. This value can be decrypted with gpp-decrypt.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.006/T1552.006.md#atomic-test-1---gpp-passwords-findstr"
    ],
    "author": "frack113",
    "date": "2021/12/27",
    "modified": "2023/11/11",
    "tags": [
      "attack.credential_access",
      "attack.t1552.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\find.exe",
            "\\findstr.exe"
          ]
        },
        {
          "OriginalFileName": [
            "FIND.EXE",
            "FINDSTR.EXE"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "cpassword",
          "\\sysvol\\",
          ".xml"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Findstr Launching .lnk File",
    "id": 370,
    "status": "test",
    "description": "Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack",
    "references": [
      "https://www.bleepingcomputer.com/news/security/hhsgov-open-redirect-used-by-coronavirus-phishing-to-spread-malware/"
    ],
    "author": "Trent Liffick",
    "date": "2020/05/01",
    "modified": "2024/01/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1202",
      "attack.t1027.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\find.exe",
            "\\findstr.exe"
          ]
        },
        {
          "OriginalFileName": [
            "FIND.EXE",
            "FINDSTR.EXE"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|endswith": [
          ".lnk",
          ".lnk\"",
          ".lnk'"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LSASS Process Reconnaissance Via Findstr.EXE",
    "id": 371,
    "status": "experimental",
    "description": "Detects findstring commands that include the keyword lsass, which indicates recon actviity for the LSASS process PID",
    "references": [
      "https://blog.talosintelligence.com/2022/08/recent-cyber-attack.html?m=1"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2023/11/11",
    "tags": [
      "attack.credential_access",
      "attack.t1552.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_findstr_img": [
        {
          "Image|endswith": [
            "\\find.exe",
            "\\findstr.exe"
          ]
        },
        {
          "OriginalFileName": [
            "FIND.EXE",
            "FINDSTR.EXE"
          ]
        }
      ],
      "selection_findstr_cli": {
        "CommandLine|contains": "lsass"
      },
      "selection_special": {
        "CommandLine|contains": [
          " /i \"lsass",
          " /i lsass.exe",
          "findstr \"lsass",
          "findstr lsass",
          "findstr.exe \"lsass",
          "findstr.exe lsass"
        ]
      },
      "condition": "all of selection_findstr_* or selection_special"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Permission Misconfiguration Reconnaissance Via Findstr.EXE",
    "id": 372,
    "status": "experimental",
    "description": "Detects usage of findstr with the \"EVERYONE\" or \"BUILTIN\" keywords. This is seen being used in combination with \"icacls\" to look for misconfigured files or folders permissions",
    "references": [
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2023/11/11",
    "tags": [
      "attack.credential_access",
      "attack.t1552.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_findstr_img": [
        {
          "Image|endswith": [
            "\\find.exe",
            "\\findstr.exe"
          ]
        },
        {
          "OriginalFileName": [
            "FIND.EXE",
            "FINDSTR.EXE"
          ]
        }
      ],
      "selection_findstr_cli": {
        "CommandLine|contains": [
          "\"Everyone\"",
          "'Everyone'",
          "\"BUILTIN\\\\\"",
          "'BUILTIN\\'"
        ]
      },
      "selection_special": {
        "CommandLine|contains|all": [
          "icacls ",
          "findstr ",
          "Everyone"
        ]
      },
      "condition": "all of selection_findstr_* or selection_special"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Recon Command Output Piped To Findstr.EXE",
    "id": 373,
    "related": [
      {
        "id": "fe63010f-8823-4864-a96b-a7b4a0f7b929",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the excution of a potential recon command where the results are piped to \"findstr\". This is meant to trigger on inline calls of \"cmd.exe\" via the \"/c\" or \"/k\" for example. Attackers often time use this to extract specific information they require in their chain.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/02cb591f75064ffe1e0df9ac3ed5972a2e491c97/atomics/T1057/T1057.md#atomic-test-6---discover-specific-process---tasklist",
      "https://www.hhs.gov/sites/default/files/manage-engine-vulnerability-sector-alert-tlpclear.pdf",
      "https://www.trendmicro.com/en_us/research/22/d/spring4shell-exploited-to-deploy-cryptocurrency-miners.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2023/07/06",
    "modified": "2023/11/11",
    "tags": [
      "attack.discovery",
      "attack.t1057"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "ipconfig /all | find ",
          "ipconfig /all | findstr ",
          "ipconfig | find ",
          "ipconfig | findstr ",
          "ipconfig.exe /all | find ",
          "ipconfig.exe /all | findstr ",
          "ipconfig.exe | find ",
          "ipconfig.exe | findstr ",
          "net start | find",
          "net start | findstr",
          "net.exe start | find",
          "net.exe start | findstr",
          "net1 start | find",
          "net1 start | findstr",
          "net1.exe start | find",
          "net1.exe start | findstr",
          "netstat -ano | find",
          "netstat -ano | findstr",
          "netstat | find",
          "netstat | findstr",
          "netstat.exe -ano | find",
          "netstat.exe -ano | findstr",
          "netstat.exe | find",
          "netstat.exe | findstr",
          "ping | find",
          "ping | findstr",
          "ping.exe | find",
          "ping.exe | findstr",
          "systeminfo | find ",
          "systeminfo | findstr ",
          "systeminfo.exe | find ",
          "systeminfo.exe | findstr ",
          "tasklist | find ",
          "tasklist | findstr ",
          "tasklist.exe | find ",
          "tasklist.exe | findstr ",
          "whoami /all | find ",
          "whoami /all | findstr ",
          "whoami.exe /all | find ",
          "whoami.exe /all | findstr "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Security Tools Keyword Lookup Via Findstr.EXE",
    "id": 374,
    "related": [
      {
        "id": "fe63010f-8823-4864-a96b-a7b4a0f7b929",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"findstr\" to search for common names of security tools. Attackers often pipe the results of recon commands such as \"tasklist\" or \"whoami\" to \"findstr\" in order to filter out the results.\nThis detection focuses on the keywords that the attacker might use as a filter.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/987e3ca988ae3cff4b9f6e388c139c05bf44bbb8/atomics/T1518.001/T1518.001.md#atomic-test-1---security-software-discovery",
      "https://www.microsoft.com/en-us/security/blog/2023/10/18/multiple-north-korean-threat-actors-exploiting-the-teamcity-cve-2023-42793-vulnerability/",
      "https://www.hhs.gov/sites/default/files/manage-engine-vulnerability-sector-alert-tlpclear.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2023/10/20",
    "modified": "2023/11/14",
    "tags": [
      "attack.discovery",
      "attack.t1518.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\find.exe",
            "\\findstr.exe"
          ]
        },
        {
          "OriginalFileName": [
            "FIND.EXE",
            "FINDSTR.EXE"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|endswith": [
          " avira",
          " avira\"",
          " cb",
          " cb\"",
          " cylance",
          " cylance\"",
          " defender",
          " defender\"",
          " kaspersky",
          " kaspersky\"",
          " kes",
          " kes\"",
          " mc",
          " mc\"",
          " sec",
          " sec\"",
          " sentinel",
          " sentinel\"",
          " symantec",
          " symantec\"",
          " virus",
          " virus\""
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Insensitive Subfolder Search Via Findstr.EXE",
    "id": 375,
    "related": [
      {
        "id": "bf6c39fc-e203-45b9-9538-05397c1b4f3f",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of findstr with the \"s\" and \"i\" flags for a \"subfolder\" and \"insensitive\" search respectively. Attackers sometimes leverage this built-in utility to search the system for interesting files or filter through results of commands.\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Findstr/",
      "https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/10/05",
    "modified": "2023/11/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1564.004",
      "attack.t1552.001",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_findstr": [
        {
          "CommandLine|contains": "findstr"
        },
        {
          "Image|endswith": "findstr.exe"
        },
        {
          "OriginalFileName": "FINDSTR.EXE"
        }
      ],
      "selection_cli_search_subfolder": {
        "CommandLine|contains": [
          " /s ",
          " -s "
        ]
      },
      "selection_cli_search_insensitive": {
        "CommandLine|contains": [
          " /i ",
          " -i "
        ]
      },
      "condition": "selection_findstr and all of selection_cli_search_*"
    },
    "falsepositives": [
      "Administrative or software activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Sysmon Discovery Via Default Driver Altitude Using Findstr.EXE",
    "id": 376,
    "status": "test",
    "description": "Detects usage of \"findstr\" with the argument \"385201\". Which could indicate potential discovery of an installed Sysinternals Sysmon service using the default driver altitude (even if the name is changed).",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1518.001/T1518.001.md#atomic-test-5---security-software-discovery---sysmon-service"
    ],
    "author": "frack113",
    "date": "2021/12/16",
    "modified": "2023/11/14",
    "tags": [
      "attack.discovery",
      "attack.t1518.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\find.exe",
            "\\findstr.exe"
          ]
        },
        {
          "OriginalFileName": [
            "FIND.EXE",
            "FINDSTR.EXE"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " 385201"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Finger.exe Suspicious Invocation",
    "id": 377,
    "status": "test",
    "description": "Detects suspicious aged finger.exe tool execution often used in malware attacks nowadays",
    "references": [
      "https://twitter.com/bigmacjpg/status/1349727699863011328?s=12",
      "https://app.any.run/tasks/40115012-a919-4208-bfed-41e82cb3dadf/",
      "http://hyp3rlinx.altervista.org/advisories/Windows_TCPIP_Finger_Command_C2_Channel_and_Bypassing_Security_Software.txt"
    ],
    "author": "Florian Roth (Nextron Systems), omkar72, oscd.community",
    "date": "2021/02/24",
    "modified": "2022/08/16",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "finger.exe"
        },
        {
          "Image|endswith": "\\finger.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Admin activity (unclear what they do nowadays with finger.exe)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Filter Driver Unloaded Via Fltmc.EXE",
    "id": 378,
    "related": [
      {
        "id": "4d7cda18-1b12-4e52-b45c-d28653210df8",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detect filter driver unloading activity via fltmc.exe",
    "references": [
      "https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon",
      "https://www.cybereason.com/blog/threat-analysis-report-lockbit-2.0-all-paths-lead-to-ransom"
    ],
    "author": "Nasreddine Bencherchali",
    "date": "2023/02/13",
    "modified": "2023/03/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070",
      "attack.t1562",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\fltMC.exe"
        },
        {
          "OriginalFileName": "fltMC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "unload"
      },
      "filter_avira": {
        "CommandLine|endswith": "unload rtp_filesystem_filter"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon Driver Unloaded Via Fltmc.EXE",
    "id": 379,
    "related": [
      {
        "id": "4931188c-178e-4ee7-a348-39e8a7a56821",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects possible Sysmon filter driver unloaded via fltmc.exe",
    "references": [
      "https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon"
    ],
    "author": "Kirill Kiryanov, oscd.community",
    "date": "2019/10/23",
    "modified": "2023/02/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070",
      "attack.t1562",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\fltMC.exe"
        },
        {
          "OriginalFileName": "fltMC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "unload",
          "sysmon"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Forfiles.EXE Child Process Masquerading",
    "id": 380,
    "status": "experimental",
    "description": "Detects the execution of \"forfiles\" from a non-default location, in order to potentially spawn a custom \"cmd.exe\" from the current working directory.\n",
    "references": [
      "https://www.hexacorn.com/blog/2023/12/31/1-little-known-secret-of-forfiles-exe/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Anish Bogati",
    "date": "2024/01/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentCommandLine|endswith": [
          ".exe",
          ".exe\""
        ],
        "Image|endswith": "\\cmd.exe",
        "CommandLine|startswith": "/c echo \""
      },
      "filter_main_parent_not_sys": {
        "ParentImage|contains": [
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ],
        "ParentImage|endswith": "\\forfiles.exe",
        "Image|contains": [
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ],
        "Image|endswith": "\\cmd.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Forfiles Command Execution",
    "id": 381,
    "related": [
      {
        "id": "a85cf4e3-56ee-4e79-adeb-789f8fb209a8",
        "type": "obsoletes"
      },
      {
        "id": "fa47597e-90e9-41cd-ab72-c3b74cfb0d02",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the execution of \"forfiles\" with the \"/c\" flag.\nWhile this is an expected behavior of the tool, it can be abused in order to proxy execution through it with any binary.\nCan be used to bypass application whitelisting.\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Forfiles/",
      "https://pentestlab.blog/2020/07/06/indirect-command-execution/"
    ],
    "author": "Tim Rauch, Elastic, E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2022/06/14",
    "modified": "2024/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\forfiles.exe"
        },
        {
          "OriginalFileName": "forfiles.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /c ",
          " -c "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use via a batch script or by an administrator."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Fsutil Drive Enumeration",
    "id": 382,
    "status": "test",
    "description": "Attackers may leverage fsutil to enumerated connected drives.",
    "references": [
      "Turla has used fsutil fsinfo drives to list connected drives.",
      "https://github.com/elastic/detection-rules/blob/414d32027632a49fb239abb8fbbb55d3fa8dd861/rules/windows/discovery_peripheral_device.toml"
    ],
    "author": "Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'",
    "date": "2022/03/29",
    "modified": "2022/07/14",
    "tags": [
      "attack.discovery",
      "attack.t1120"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\fsutil.exe"
        },
        {
          "OriginalFileName": "fsutil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "drives"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Certain software or administrative tasks may trigger false positives."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Fsutil Behavior Set SymlinkEvaluation",
    "id": 383,
    "status": "test",
    "description": "A symbolic link is a type of file that contains a reference to another file.\nThis is probably done to make sure that the ransomware is able to follow shortcuts on the machine in order to find the original file to encrypt\n",
    "references": [
      "https://www.cybereason.com/blog/cybereason-vs.-blackcat-ransomware",
      "https://docs.microsoft.com/fr-fr/windows-server/administration/windows-commands/fsutil-behavior"
    ],
    "author": "frack113",
    "date": "2022/03/02",
    "modified": "2023/01/19",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\fsutil.exe"
        },
        {
          "OriginalFileName": "fsutil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "behavior ",
          "set ",
          "SymlinkEvaluation"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Fsutil Suspicious Invocation",
    "id": 384,
    "status": "stable",
    "description": "Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc).\nMight be used by ransomwares during the attack (seen by NotPetya and others).\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070/T1070.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/c91f422a-5214-4b17-8664-c5fcf115c0a2.html",
      "https://github.com/albertzsigovits/malware-notes/blob/558898932c1579ff589290092a2c8febefc3a4c9/Ransomware/Lockbit.md",
      "https://blog.cluster25.duskrise.com/2023/05/22/back-in-black-blackbyte-nt"
    ],
    "author": "Ecco, E.M. Anhaus, oscd.community",
    "date": "2019/09/26",
    "modified": "2023/09/09",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1070",
      "attack.t1485"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\fsutil.exe"
        },
        {
          "OriginalFileName": "fsutil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "deletejournal",
          "createjournal",
          "setZeroData"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Admin activity",
      "Scripts and administrative tools used in the monitored environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via GfxDownloadWrapper.EXE",
    "id": 385,
    "status": "test",
    "description": "Detects execution of GfxDownloadWrapper.exe with a URL as an argument to download file.",
    "references": [
      "https://lolbas-project.github.io/lolbas/HonorableMentions/GfxDownloadWrapper/"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2020/10/09",
    "modified": "2023/10/18",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\GfxDownloadWrapper.exe",
        "CommandLine|contains": [
          "http://",
          "https://"
        ]
      },
      "filter_main_known_urls": {
        "CommandLine|contains": "https://gameplayapi.intel.com/"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Git Clone",
    "id": 386,
    "status": "test",
    "description": "Detects execution of \"git\" in order to clone a remote repository that contain suspicious keywords which might be suspicious",
    "references": [
      "https://gist.githubusercontent.com/MichaelKoczwara/12faba9c061c12b5814b711166de8c2f/raw/e2068486692897b620c25fde1ea258c8218fe3d3/history.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/03",
    "modified": "2023/01/10",
    "tags": [
      "attack.reconnaissance",
      "attack.t1593.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\git.exe",
            "\\git-remote-https.exe"
          ]
        },
        {
          "OriginalFileName": "git.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " clone ",
          "git-remote-https "
        ]
      },
      "selection_keyword": {
        "CommandLine|contains": [
          "exploit",
          "Vulns",
          "vulnerability",
          "RemoteCodeExecution",
          "Invoke-",
          "CVE-",
          "poc-",
          "ProofOfConcept",
          "proxyshell",
          "log4shell",
          "eternalblue",
          "eternal-blue",
          "MS17-"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious GoogleUpdate Child Process",
    "id": 387,
    "related": [
      {
        "id": "bdbab15a-3826-48fa-a1b7-723cd8f32fcc",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of \"GoogleUpdate.exe\"",
    "references": [
      "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/goofy-guineapig/NCSC-MAR-Goofy-Guineapig.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "modified": "2023/05/22",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\GoogleUpdate.exe"
      },
      "filter_main_known_legit": [
        {
          "Image|contains": "\\Google"
        },
        {
          "Image|endswith": [
            "\\setup.exe",
            "chrome_updater.exe",
            "chrome_installer.exe"
          ]
        }
      ],
      "filter_main_image_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Decryption Using Gpg4win",
    "id": 388,
    "status": "experimental",
    "description": "Detects usage of Gpg4win to decrypt files",
    "references": [
      "https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html",
      "https://www.gpg4win.de/documentation.html",
      "https://news.sophos.com/en-us/2022/01/19/zloader-installs-remote-access-backdoors-and-delivers-cobalt-strike/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_metadata": [
        {
          "Image|endswith": [
            "\\gpg.exe",
            "\\gpg2.exe"
          ]
        },
        {
          "Description": "GnuPG\u00e2\u20ac\u2122s OpenPGP tool"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -d ",
          "passphrase"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Encryption Using Gpg4win",
    "id": 389,
    "status": "experimental",
    "description": "Detects usage of Gpg4win to encrypt files",
    "references": [
      "https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html",
      "https://www.gpg4win.de/documentation.html",
      "https://news.sophos.com/en-us/2022/01/19/zloader-installs-remote-access-backdoors-and-delivers-cobalt-strike/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_metadata": [
        {
          "Image|endswith": [
            "\\gpg.exe",
            "\\gpg2.exe"
          ]
        },
        {
          "Description": "GnuPG\u00e2\u20ac\u2122s OpenPGP tool"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -c ",
          "passphrase"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Portable Gpg.EXE Execution",
    "id": 390,
    "status": "experimental",
    "description": "Detects the execution of \"gpg.exe\" from uncommon location. Often used by ransomware and loaders to decrypt/encrypt data.",
    "references": [
      "https://www.trendmicro.com/vinfo/vn/threat-encyclopedia/malware/ransom.bat.zarlock.a",
      "https://securelist.com/locked-out/68960/",
      "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1486/T1486.md"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/06",
    "modified": "2023/11/10",
    "tags": [
      "attack.impact",
      "attack.t1486"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\gpg.exe",
            "\\gpg2.exe"
          ]
        },
        {
          "OriginalFileName": "gpg.exe"
        },
        {
          "Description": "GnuPG\u00e2\u20ac\u2122s OpenPGP tool"
        }
      ],
      "filter_main_legit_location": {
        "Image|contains": [
          ":\\Program Files (x86)\\GNU\\GnuPG\\bin\\",
          ":\\Program Files (x86)\\GnuPG VS-Desktop\\",
          ":\\Program Files (x86)\\GnuPG\\bin\\",
          ":\\Program Files (x86)\\Gpg4win\\bin\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Encryption/Decryption Via Gpg4win From Suspicious Locations",
    "id": 391,
    "status": "experimental",
    "description": "Detects usage of Gpg4win to encrypt/decrypt files located in potentially suspicious locations.",
    "references": [
      "https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html",
      "https://news.sophos.com/en-us/2022/01/19/zloader-installs-remote-access-backdoors-and-delivers-cobalt-strike/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2022/11/30",
    "modified": "2023/08/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_metadata": [
        {
          "Image|endswith": [
            "\\gpg.exe",
            "\\gpg2.exe"
          ]
        },
        {
          "Product": "GNU Privacy Guard (GnuPG)"
        },
        {
          "Description": "GnuPG\u00e2\u20ac\u2122s OpenPGP tool"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "-passphrase"
      },
      "selection_paths": {
        "CommandLine|contains": [
          ":\\PerfLogs\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Gpresult Display Group Policy Information",
    "id": 392,
    "status": "test",
    "description": "Detects cases in which a user uses the built-in Windows utility gpresult to display the Resultant Set of Policy (RSoP) information",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1615/T1615.md",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult",
      "https://unit42.paloaltonetworks.com/emissary-trojan-changelog-did-operation-lotus-blossom-cause-it-to-evolve/",
      "https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf"
    ],
    "author": "frack113",
    "date": "2022/05/01",
    "tags": [
      "attack.discovery",
      "attack.t1615"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\gpresult.exe",
        "CommandLine|contains": [
          "/z",
          "/v"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary Binary Execution Using GUP Utility",
    "id": 393,
    "status": "test",
    "description": "Detects execution of the Notepad++ updater (gup) to launch other commands or executables",
    "references": [
      "https://twitter.com/nas_bench/status/1535322445439180803"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/10",
    "modified": "2023/03/02",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\gup.exe",
        "Image|endswith": "\\explorer.exe"
      },
      "filter": {
        "Image|endswith": "\\explorer.exe",
        "CommandLine|contains": "\\Notepad++\\notepad++.exe"
      },
      "filter_parent": {
        "ParentImage|contains": "\\Notepad++\\updater\\"
      },
      "filter_null": {
        "CommandLine": null
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Other parent binaries using GUP not currently identified"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download Using Notepad++ GUP Utility",
    "id": 394,
    "status": "test",
    "description": "Detects execution of the Notepad++ updater (gup) from a process other than Notepad++ to download files.",
    "references": [
      "https://twitter.com/nas_bench/status/1535322182863179776"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/10",
    "modified": "2023/03/02",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\GUP.exe"
        },
        {
          "OriginalFileName": "gup.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -unzipTo ",
          "http"
        ]
      },
      "filter": {
        "ParentImage|endswith": "\\notepad++.exe"
      },
      "condition": "all of selection* and not filter"
    },
    "falsepositives": [
      "Other parent processes other than notepad++ using GUP that are not currently identified"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious GUP Usage",
    "id": 395,
    "status": "test",
    "description": "Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/02/06",
    "modified": "2022/08/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\GUP.exe"
      },
      "filter_programfiles": {
        "Image|endswith": [
          "\\Program Files\\Notepad++\\updater\\GUP.exe",
          "\\Program Files (x86)\\Notepad++\\updater\\GUP.exe"
        ]
      },
      "filter_user": {
        "Image|contains": "\\Users\\",
        "Image|endswith": [
          "\\AppData\\Local\\Notepad++\\updater\\GUP.exe",
          "\\AppData\\Roaming\\Notepad++\\updater\\GUP.exe"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Execution of tools named GUP.exe and located in folders different than Notepad++\\updater"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HH.EXE Execution",
    "id": 396,
    "status": "test",
    "description": "Detects the execution of \"hh.exe\" to open \".chm\" files.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.001/T1218.001.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html",
      "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Dan Beavin), oscd.community",
    "date": "2019/10/24",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "HH.exe"
        },
        {
          "Image|endswith": "\\hh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": ".chm"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives are expected with legitimate \".CHM\""
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Remote CHM File Download/Execution Via HH.EXE",
    "id": 397,
    "status": "experimental",
    "description": "Detects the usage of \"hh.exe\" to execute/download remotely hosted \".chm\" files.",
    "references": [
      "https://www.splunk.com/en_us/blog/security/follina-for-protocol-handlers.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/1cf4dd51f83dcb0ebe6ade902d6157ad2dbc6ac8/atomics/T1218.001/T1218.001.md",
      "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/29",
    "modified": "2024/01/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "HH.exe"
        },
        {
          "Image|endswith": "\\hh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "http://",
          "https://",
          "\\\\\\\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HTML Help HH.EXE Suspicious Child Process",
    "id": 398,
    "status": "test",
    "description": "Detects a suspicious child process of a Microsoft HTML Help (HH.exe)",
    "references": [
      "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
      "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
      "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
    ],
    "author": "Maxim Pavlunin, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/04/01",
    "modified": "2023/04/12",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.initial_access",
      "attack.t1047",
      "attack.t1059.001",
      "attack.t1059.003",
      "attack.t1059.005",
      "attack.t1059.007",
      "attack.t1218",
      "attack.t1218.001",
      "attack.t1218.010",
      "attack.t1218.011",
      "attack.t1566",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\hh.exe",
        "Image|endswith": [
          "\\CertReq.exe",
          "\\CertUtil.exe",
          "\\cmd.exe",
          "\\cscript.exe",
          "\\installutil.exe",
          "\\MSbuild.exe",
          "\\MSHTA.EXE",
          "\\msiexec.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\schtasks.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious HH.EXE Execution",
    "id": 399,
    "status": "test",
    "description": "Detects a suspicious execution of a Microsoft HTML Help (HH.exe)",
    "references": [
      "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/",
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7",
      "https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/",
      "https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37"
    ],
    "author": "Maxim Pavlunin",
    "date": "2020/04/01",
    "modified": "2023/04/12",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.initial_access",
      "attack.t1047",
      "attack.t1059.001",
      "attack.t1059.003",
      "attack.t1059.005",
      "attack.t1059.007",
      "attack.t1218",
      "attack.t1218.001",
      "attack.t1218.010",
      "attack.t1218.011",
      "attack.t1566",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "HH.exe"
        },
        {
          "Image|endswith": "\\hh.exe"
        }
      ],
      "selection_paths": {
        "CommandLine|contains": [
          ".application",
          "\\AppData\\Local\\Temp\\",
          "\\Content.Outlook\\",
          "\\Downloads\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - ADCSPwn Execution",
    "id": 400,
    "status": "test",
    "description": "Detects command line parameters used by ADCSPwn, a tool to escalate privileges in an active directory network by coercing authenticate from machine accounts and relaying to the certificate service",
    "references": [
      "https://github.com/bats3c/ADCSPwn"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/31",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1557.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          " --adcs ",
          " --port "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Bloodhound/Sharphound Execution",
    "id": 401,
    "status": "test",
    "description": "Detects command line parameters used by Bloodhound and Sharphound hack tools",
    "references": [
      "https://github.com/BloodHoundAD/BloodHound",
      "https://github.com/BloodHoundAD/SharpHound"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/12/20",
    "modified": "2023/02/04",
    "tags": [
      "attack.discovery",
      "attack.t1087.001",
      "attack.t1087.002",
      "attack.t1482",
      "attack.t1069.001",
      "attack.t1069.002",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Product|contains": "SharpHound"
        },
        {
          "Description|contains": "SharpHound"
        },
        {
          "Company|contains": [
            "SpecterOps",
            "evil corp"
          ]
        },
        {
          "Image|contains": [
            "\\Bloodhound.exe",
            "\\SharpHound.exe"
          ]
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains": [
          " -CollectionMethod All ",
          " --CollectionMethods Session ",
          " --Loop --Loopduration ",
          " --PortScanTimeout ",
          ".exe -c All -d ",
          "Invoke-Bloodhound",
          "Get-BloodHoundData"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          " -JsonFolder ",
          " -ZipFileName "
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          " DCOnly ",
          " --NoSaveCache "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Other programs that use these command line option and accepts an 'All' parameter"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - F-Secure C3 Load by Rundll32",
    "id": 402,
    "status": "test",
    "description": "F-Secure C3 produces DLLs with a default exported StartNodeRelay function.",
    "references": [
      "https://github.com/FSecureLABS/C3/blob/11a081fd3be2aaf2a879f6b6e9a96ecdd24966ef/Src/NodeRelayDll/NodeRelayDll.cpp#L12"
    ],
    "author": "Alfie Champion (ajpc500)",
    "date": "2021/06/02",
    "modified": "2023/03/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "rundll32.exe",
          ".dll",
          "StartNodeRelay"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - Certify Execution",
    "id": 403,
    "status": "experimental",
    "description": "Detects Certify a tool for Active Directory certificate abuse based on PE metadata characteristics and common command line arguments.",
    "references": [
      "https://github.com/GhostPack/Certify"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2023/04/17",
    "modified": "2023/04/25",
    "tags": [
      "attack.discovery",
      "attack.credential_access",
      "attack.t1649"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\Certify.exe"
        },
        {
          "OriginalFileName": "Certify.exe"
        },
        {
          "Description|contains": "Certify"
        }
      ],
      "selection_cli_commands": {
        "CommandLine|contains": [
          ".exe cas ",
          ".exe find ",
          ".exe pkiobjects ",
          ".exe request ",
          ".exe download "
        ]
      },
      "selection_cli_options": {
        "CommandLine|contains": [
          " /vulnerable",
          " /template:",
          " /altname:",
          " /domain:",
          " /path:",
          " /ca:"
        ]
      },
      "condition": "selection_img or all of selection_cli_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Certipy Execution",
    "id": 404,
    "status": "experimental",
    "description": "Detects Certipy a tool for Active Directory Certificate Services enumeration and abuse based on PE metadata characteristics and common command line arguments.",
    "references": [
      "https://github.com/ly4k/Certipy"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2023/04/17",
    "tags": [
      "attack.discovery",
      "attack.credential_access",
      "attack.t1649"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\Certipy.exe"
        },
        {
          "OriginalFileName": "Certipy.exe"
        },
        {
          "Description|contains": "Certipy"
        }
      ],
      "selection_cli_commands": {
        "CommandLine|contains": [
          " auth ",
          " find ",
          " forge ",
          " relay ",
          " req ",
          " shadow "
        ]
      },
      "selection_cli_flags": {
        "CommandLine|contains": [
          " -bloodhound",
          " -ca-pfx ",
          " -dc-ip ",
          " -kirbi",
          " -old-bloodhound",
          " -pfx ",
          " -target",
          " -username ",
          " -vulnerable",
          "auth -pfx",
          "shadow auto",
          "shadow list"
        ]
      },
      "condition": "selection_img or all of selection_cli_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Operator Bloopers Cobalt Strike Commands",
    "id": 405,
    "related": [
      {
        "id": "4f154fb6-27d1-4813-a759-78b93e0b9c48",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects use of Cobalt Strike commands accidentally entered in the CMD shell",
    "references": [
      "https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/cobalt-4-5-user-guide.pdf",
      "https://thedfirreport.com/2021/10/04/bazarloader-and-the-conti-leaks/",
      "https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/"
    ],
    "author": "_pete_0, TheDFIRReport",
    "date": "2022/05/06",
    "modified": "2023/01/30",
    "tags": [
      "attack.execution",
      "attack.t1059.003",
      "stp.1u"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "Cmd.Exe"
        },
        {
          "Image|endswith": "\\cmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|startswith": [
          "cmd ",
          "cmd.exe",
          "c:\\windows\\system32\\cmd.exe"
        ],
        "CommandLine|contains": [
          "psinject",
          "spawnas",
          "make_token",
          "remote-exec",
          "rev2self",
          "dcsync",
          "logonpasswords",
          "execute-assembly",
          "getsystem"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Operator Bloopers Cobalt Strike Modules",
    "id": 406,
    "related": [
      {
        "id": "647c7b9e-d784-4fda-b9a0-45c565a7b729",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects Cobalt Strike module/commands accidentally entered in CMD shell",
    "references": [
      "https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/cobalt-4-5-user-guide.pdf",
      "https://thedfirreport.com/2021/10/04/bazarloader-and-the-conti-leaks/",
      "https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/"
    ],
    "author": "_pete_0, TheDFIRReport",
    "date": "2022/05/06",
    "modified": "2023/01/30",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "Cmd.Exe"
        },
        {
          "Image|endswith": "\\cmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "Invoke-UserHunter",
          "Invoke-ShareFinder",
          "Invoke-Kerberoast",
          "Invoke-SMBAutoBrute",
          "Invoke-Nightmare",
          "zerologon",
          "av_query"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CobaltStrike Load by Rundll32",
    "id": 407,
    "status": "test",
    "description": "Rundll32 can be use by Cobalt Strike with StartW function to load DLLs from the command line.",
    "references": [
      "https://www.cobaltstrike.com/help-windows-executable",
      "https://redcanary.com/threat-detection-report/",
      "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/"
    ],
    "author": "Wojciech Lesicki",
    "date": "2021/06/01",
    "modified": "2022/09/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_rundll": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        },
        {
          "CommandLine|contains": [
            "rundll32.exe",
            "rundll32 "
          ]
        }
      ],
      "selection_params": {
        "CommandLine|contains": ".dll",
        "CommandLine|endswith": [
          " StartW",
          ",StartW"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential CobaltStrike Process Patterns",
    "id": 408,
    "status": "test",
    "description": "Detects potential process patterns related to Cobalt Strike beacon activity",
    "references": [
      "https://hausec.com/2021/07/26/cobalt-strike-and-tradecraft/",
      "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/07/27",
    "modified": "2023/03/29",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_generic_1": {
        "CommandLine|endswith": "cmd.exe /C whoami",
        "ParentImage|startswith": "C:\\Temp\\"
      },
      "selection_generic_2": {
        "ParentImage|endswith": [
          "\\runonce.exe",
          "\\dllhost.exe"
        ],
        "CommandLine|contains|all": [
          "cmd.exe /c echo",
          "> \\\\\\\\.\\\\pipe"
        ]
      },
      "selection_conhost_1": {
        "ParentCommandLine|contains|all": [
          "cmd.exe /C echo",
          " > \\\\\\\\.\\\\pipe"
        ],
        "CommandLine|endswith": "conhost.exe 0xffffffff -ForceV1"
      },
      "selection_conhost_2": {
        "ParentCommandLine|endswith": "/C whoami",
        "CommandLine|endswith": "conhost.exe 0xffffffff -ForceV1"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CoercedPotato Execution",
    "id": 409,
    "status": "experimental",
    "description": "Detects the use of CoercedPotato, a tool for privilege escalation",
    "references": [
      "https://github.com/hackvens/CoercedPotato",
      "https://blog.hackvens.fr/articles/CoercedPotato.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/10/11",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_loader_img": {
        "Image|endswith": "\\CoercedPotato.exe"
      },
      "selection_params": {
        "CommandLine|contains": " --exploitId "
      },
      "selection_loader_imphash": [
        {
          "Imphash": [
            "a75d7669db6b2e107a44c4057ff7f7d6",
            "f91624350e2c678c5dcbe5e1f24e22c9",
            "14c81850a079a87e83d50ca41c709a15"
          ]
        },
        {
          "Hashes": [
            "IMPHASH=A75D7669DB6B2E107A44C4057FF7F7D6",
            "IMPHASH=F91624350E2C678C5DCBE5E1F24E22C9",
            "IMPHASH=14C81850A079A87E83D50CA41C709A15"
          ]
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Covenant PowerShell Launcher",
    "id": 410,
    "status": "test",
    "description": "Detects suspicious command lines used in Covenant luanchers",
    "references": [
      "https://posts.specterops.io/covenant-v0-5-eee0507b85ba"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community",
    "date": "2020/06/04",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1059.001",
      "attack.t1564.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains|all": [
          "-Sta",
          "-Nop",
          "-Window",
          "Hidden"
        ],
        "CommandLine|contains": [
          "-Command",
          "-EncodedCommand"
        ]
      },
      "selection_2": {
        "CommandLine|contains": [
          "sv o (New-Object IO.MemorySteam);sv d ",
          "mshta file.hta",
          "GruntHTTP",
          "-EncodedCommand cwB2ACAAbwAgA"
        ]
      },
      "condition": "1 of selection_*"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CrackMapExec Execution",
    "id": 411,
    "status": "test",
    "description": "This rule detect common flag combinations used by CrackMapExec in order to detect its use even if the binary has been replaced.",
    "references": [
      "https://mpgn.gitbook.io/crackmapexec/smb-protocol/authentication/checking-credentials-local",
      "https://www.mandiant.com/resources/telegram-malware-iranian-espionage",
      "https://www.infosecmatter.com/crackmapexec-module-library/?cmem=mssql-mimikatz",
      "https://www.infosecmatter.com/crackmapexec-module-library/?cmem=smb-pe_inject"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/25",
    "modified": "2023/03/08",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.credential_access",
      "attack.discovery",
      "attack.t1047",
      "attack.t1053",
      "attack.t1059.003",
      "attack.t1059.001",
      "attack.t1110",
      "attack.t1201"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_binary": {
        "Image|endswith": "\\crackmapexec.exe"
      },
      "selection_special": {
        "CommandLine|contains": " -M pe_inject "
      },
      "selection_execute": {
        "CommandLine|contains|all": [
          " --local-auth",
          " -u ",
          " -x "
        ]
      },
      "selection_hash": {
        "CommandLine|contains|all": [
          " --local-auth",
          " -u ",
          " -p ",
          " -H 'NTHASH'"
        ]
      },
      "selection_module_mssql": {
        "CommandLine|contains|all": [
          " mssql ",
          " -u ",
          " -p ",
          " -M ",
          " -d "
        ]
      },
      "selection_module_smb1": {
        "CommandLine|contains|all": [
          " smb ",
          " -u ",
          " -H ",
          " -M ",
          " -o "
        ]
      },
      "selection_module_smb2": {
        "CommandLine|contains|all": [
          " smb ",
          " -u ",
          " -p ",
          " --local-auth"
        ]
      },
      "part_localauth_1": {
        "CommandLine|contains|all": [
          " --local-auth",
          " -u ",
          " -p "
        ]
      },
      "part_localauth_2": {
        "CommandLine|contains|all": [
          " 10.",
          " 192.168.",
          "/24 "
        ]
      },
      "condition": "1 of selection_* or all of part_localauth*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CrackMapExec Execution Patterns",
    "id": 412,
    "status": "stable",
    "description": "Detects various execution patterns of the CrackMapExec pentesting framework",
    "references": [
      "https://github.com/byt3bl33d3r/CrackMapExec"
    ],
    "author": "Thomas Patzke",
    "date": "2020/05/22",
    "modified": "2023/11/06",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.t1053",
      "attack.t1059.003",
      "attack.t1059.001",
      "attack.s0106"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "cmd.exe /Q /c * 1> \\\\\\\\*\\\\*\\\\* 2>&1",
          "cmd.exe /C * > \\\\\\\\*\\\\*\\\\* 2>&1",
          "cmd.exe /C * > *\\\\Temp\\\\* 2>&1",
          "powershell.exe -exec bypass -noni -nop -w 1 -C \"",
          "powershell.exe -noni -nop -w 1 -enc "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CrackMapExec Process Patterns",
    "id": 413,
    "status": "test",
    "description": "Detects suspicious process patterns found in logs when CrackMapExec is used",
    "references": [
      "https://mpgn.gitbook.io/crackmapexec/smb-protocol/obtaining-credentials/dump-lsass"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/12",
    "modified": "2023/02/13",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_lsass_dump1": {
        "CommandLine|contains|all": [
          "tasklist /fi ",
          "Imagename eq lsass.exe"
        ],
        "CommandLine|contains": [
          "cmd.exe /c ",
          "cmd.exe /r ",
          "cmd.exe /k ",
          "cmd /c ",
          "cmd /r ",
          "cmd /k "
        ],
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "selection_lsass_dump2": {
        "CommandLine|contains|all": [
          "do rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump",
          "\\Windows\\Temp\\",
          " full",
          "%%B"
        ]
      },
      "selection_procdump": {
        "CommandLine|contains|all": [
          "tasklist /v /fo csv",
          "findstr /i \"lsass\""
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CrackMapExec PowerShell Obfuscation",
    "id": 414,
    "status": "test",
    "description": "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.",
    "references": [
      "https://github.com/byt3bl33d3r/CrackMapExec",
      "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242"
    ],
    "author": "Thomas Patzke",
    "date": "2020/05/22",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1027.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "join*split",
          "( $ShellId[1]+$ShellId[13]+'x')",
          "( $PSHome[*]+$PSHOME[*]+",
          "( $env:Public[13]+$env:Public[5]+'x')",
          "( $env:ComSpec[4,*,25]-Join'')",
          "[1,3]+'x'-Join'')"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - CreateMiniDump Execution",
    "id": 415,
    "status": "test",
    "description": "Detects the use of CreateMiniDump hack tool used to dump the LSASS process memory for credential extraction on the attacker's machine",
    "references": [
      "https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-lsass-passwords-without-mimikatz-minidumpwritedump-av-signature-bypass"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/12/22",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\CreateMiniDump.exe"
        },
        {
          "Imphash": "4a07f944a83e8a7c2525efa35dd30e2f"
        },
        {
          "Hashes|contains": "IMPHASH=4a07f944a83e8a7c2525efa35dd30e2f"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - DInjector PowerShell Cradle Execution",
    "id": 416,
    "status": "test",
    "description": "Detects the use of the Dinject PowerShell cradle based on the specific flags",
    "references": [
      "https://github.com/snovvcrash/DInjector"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/12/07",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          " /am51",
          " /password"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - Dumpert Process Dumper Execution",
    "id": 417,
    "status": "test",
    "description": "Detects the use of Dumpert process dumper, which dumps the lsass.exe process memory",
    "references": [
      "https://github.com/outflanknl/Dumpert",
      "https://unit42.paloaltonetworks.com/actors-still-exploiting-sharepoint-vulnerability/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/02/04",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Hashes|contains": "09D278F9DE118EF09163C6140255C690"
        },
        {
          "CommandLine|contains": "Dumpert.dll"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Very unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - EDRSilencer Execution",
    "id": 418,
    "status": "experimental",
    "description": "Detects the execution of EDRSilencer, a tool that leverages Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server based on PE metadata information.\n",
    "references": [
      "https://github.com/netero1010/EDRSilencer"
    ],
    "author": "@gott_cyber",
    "date": "2024/01/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\EDRSilencer.exe"
        },
        {
          "OriginalFileName": "EDRSilencer.exe"
        },
        {
          "Description|contains": "EDRSilencer"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Empire PowerShell Launch Parameters",
    "id": 419,
    "status": "test",
    "description": "Detects suspicious powershell command line parameters used in Empire",
    "references": [
      "https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165",
      "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191",
      "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178",
      "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/04/20",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          " -NoP -sta -NonI -W Hidden -Enc ",
          " -noP -sta -w 1 -enc ",
          " -NoP -NonI -W Hidden -enc ",
          " -noP -sta -w 1 -enc",
          " -enc  SQB",
          " -nop -exec bypass -EncodedCommand "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Other tools that incidentally use the same command line parameters"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Empire PowerShell UAC Bypass",
    "id": 420,
    "status": "stable",
    "description": "Detects some Empire PowerShell UAC bypass methods",
    "references": [
      "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
      "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64"
    ],
    "author": "Ecco",
    "date": "2019/08/30",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "car.2019-04-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          " -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update)",
          " -NoP -NonI -c $x=$((gp HKCU:Software\\Microsoft\\Windows Update).Update);"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - WinRM Access Via Evil-WinRM",
    "id": 421,
    "status": "test",
    "description": "Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.006/T1021.006.md#atomic-test-3---winrm-access-with-evil-winrm",
      "https://github.com/Hackplayers/evil-winrm"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "modified": "2023/02/13",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_mstsc": {
        "Image|endswith": "\\ruby.exe",
        "CommandLine|contains|all": [
          "-i ",
          "-u ",
          "-p "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Hacktool Execution - Imphash",
    "id": 422,
    "status": "test",
    "description": "Detects the execution of different Windows based hacktools via their import hash (imphash) even if the files have been renamed",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/04",
    "modified": "2024/02/07",
    "tags": [
      "attack.credential_access",
      "attack.t1588.002",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Imphash": [
            "bcca3c247b619dcd13c8cdff5f123932",
            "3a19059bd7688cb88e70005f18efc439",
            "bf6223a49e45d99094406777eb6004ba",
            "23867a89c2b8fc733be6cf5ef902f2d1",
            "a37ff327f8d48e8a4d2f757e1b6e70bc",
            "f9a28c458284584a93b14216308d31bd",
            "6118619783fc175bc7ebecff0769b46e",
            "959a83047e80ab68b368fdb3f4c6e4ea",
            "563233bfa169acc7892451f71ad5850a",
            "87575cb7a0e0700eb37f2e3668671a08",
            "13f08707f759af6003837a150a371ba1",
            "1781f06048a7e58b323f0b9259be798b",
            "233f85f2d4bc9d6521a6caae11a1e7f5",
            "24af2584cbf4d60bbe5c6d1b31b3be6d",
            "632969ddf6dbf4e0f53424b75e4b91f2",
            "713c29b396b907ed71a72482759ed757",
            "749a7bb1f0b4c4455949c0b2bf7f9e9f",
            "8628b2608957a6b0c6330ac3de28ce2e",
            "8b114550386e31895dfab371e741123d",
            "94cb940a1a6b65bed4d5a8f849ce9793",
            "9d68781980370e00e0bd939ee5e6c141",
            "b18a1401ff8f444056d29450fbc0a6ce",
            "cb567f9498452721d77a451374955f5f",
            "730073214094cd328547bf1f72289752",
            "17b461a082950fc6332228572138b80c",
            "dc25ee78e2ef4d36faa0badf1e7461c9",
            "819b19d53ca6736448f9325a85736792",
            "829da329ce140d873b4a8bde2cbfaa7e",
            "c547f2e66061a8dffb6f5a3ff63c0a74",
            "0588081ab0e63ba785938467e1b10cca",
            "0d9ec08bac6c07d9987dfd0f1506587c",
            "bc129092b71c89b4d4c8cdf8ea590b29",
            "4da924cf622d039d58bce71cdf05d242",
            "e7a3a5c377e2d29324093377d7db1c66",
            "9a9dbec5c62f0380b4fa5fd31deffedf",
            "af8a3976ad71e5d5fdfb67ddb8dadfce",
            "0c477898bbf137bbd6f2a54e3b805ff4",
            "0ca9f02b537bcea20d4ea5eb1a9fe338",
            "3ab3655e5a14d4eefc547f4781bf7f9e",
            "e6f9d5152da699934b30daab206471f6",
            "3ad59991ccf1d67339b319b15a41b35d",
            "ffdd59e0318b85a3e480874d9796d872",
            "0cf479628d7cc1ea25ec7998a92f5051",
            "07a2d4dcbd6cb2c6a45e6b101f0b6d51",
            "d6d0f80386e1380d05cb78e871bc72b1",
            "38d9e015591bbfd4929e0d0f47fa0055",
            "0e2216679ca6e1094d63322e3412d650",
            "ada161bf41b8e5e9132858cb54cab5fb",
            "2a1bc4913cd5ecb0434df07cb675b798",
            "11083e75553baae21dc89ce8f9a195e4",
            "a23d29c9e566f2fa8ffbb79267f5df80",
            "4a07f944a83e8a7c2525efa35dd30e2f",
            "767637c23bb42cd5d7397cf58b0be688",
            "14c4e4c72ba075e9069ee67f39188ad8",
            "3c782813d4afce07bbfc5a9772acdbdc",
            "7d010c6bb6a3726f327f7e239166d127",
            "89159ba4dd04e4ce5559f132a9964eb3",
            "6f33f4a5fc42b8cec7314947bd13f30f",
            "5834ed4291bdeb928270428ebbaf7604",
            "5a8a8a43f25485e7ee1b201edcbc7a38",
            "dc7d30b90b2d8abf664fbed2b1b59894",
            "41923ea1f824fe63ea5beb84db7a3e74",
            "3de09703c8e79ed2ca3f01074719906b",
            "a53a02b997935fd8eedcb5f7abab9b9f",
            "e96a73c7bf33a464c510ede582318bf2",
            "32089b8851bbf8bc2d014e9f37288c83",
            "09D278F9DE118EF09163C6140255C690",
            "03866661686829d806989e2fc5a72606",
            "e57401fbdadcd4571ff385ab82bd5d6d",
            "84B763C45C0E4A3E7CA5548C710DB4EE",
            "19584675d94829987952432e018d5056",
            "330768a4f172e10acb6287b87289d83b",
            "885c99ccfbe77d1cbfcb9c4e7c1a3313",
            "22a22bc9e4e0d2f189f1ea01748816ac",
            "7fa30e6bb7e8e8a69155636e50bf1b28",
            "96df3a3731912449521f6f8d183279b1",
            "7e6cf3ff4576581271ac8a313b2aab46",
            "51791678f351c03a0eb4e2a7b05c6e17",
            "25ce42b079282632708fc846129e98a5",
            "021bcca20ba3381b11bdde26b4e62f20",
            "59223b5f52d8799d38e0754855cbdf42",
            "81e75d8f1d276c156653d3d8813e4a43",
            "17244e8b6b8227e57fe709ccad421420",
            "5b76da3acdedc8a5cdf23a798b5936b4",
            "cb2b65bb77d995cc1c0e5df1c860133c",
            "40445337761d80cf465136fafb1f63e6",
            "8a790f401b29fa87bc1e56f7272b3aa6",
            "b50199e952c875241b9ce06c971ce3c1"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=BCCA3C247B619DCD13C8CDFF5F123932",
            "IMPHASH=3A19059BD7688CB88E70005F18EFC439",
            "IMPHASH=bf6223a49e45d99094406777eb6004ba",
            "IMPHASH=23867A89C2B8FC733BE6CF5EF902F2D1",
            "IMPHASH=A37FF327F8D48E8A4D2F757E1B6E70BC",
            "IMPHASH=F9A28C458284584A93B14216308D31BD",
            "IMPHASH=6118619783FC175BC7EBECFF0769B46E",
            "IMPHASH=959A83047E80AB68B368FDB3F4C6E4EA",
            "IMPHASH=563233BFA169ACC7892451F71AD5850A",
            "IMPHASH=87575CB7A0E0700EB37F2E3668671A08",
            "IMPHASH=13F08707F759AF6003837A150A371BA1",
            "IMPHASH=1781F06048A7E58B323F0B9259BE798B",
            "IMPHASH=233F85F2D4BC9D6521A6CAAE11A1E7F5",
            "IMPHASH=24AF2584CBF4D60BBE5C6D1B31B3BE6D",
            "IMPHASH=632969DDF6DBF4E0F53424B75E4B91F2",
            "IMPHASH=713C29B396B907ED71A72482759ED757",
            "IMPHASH=749A7BB1F0B4C4455949C0B2BF7F9E9F",
            "IMPHASH=8628B2608957A6B0C6330AC3DE28CE2E",
            "IMPHASH=8B114550386E31895DFAB371E741123D",
            "IMPHASH=94CB940A1A6B65BED4D5A8F849CE9793",
            "IMPHASH=9D68781980370E00E0BD939EE5E6C141",
            "IMPHASH=B18A1401FF8F444056D29450FBC0A6CE",
            "IMPHASH=CB567F9498452721D77A451374955F5F",
            "IMPHASH=730073214094CD328547BF1F72289752",
            "IMPHASH=17B461A082950FC6332228572138B80C",
            "IMPHASH=DC25EE78E2EF4D36FAA0BADF1E7461C9",
            "IMPHASH=819B19D53CA6736448F9325A85736792",
            "IMPHASH=829DA329CE140D873B4A8BDE2CBFAA7E",
            "IMPHASH=C547F2E66061A8DFFB6F5A3FF63C0A74",
            "IMPHASH=0588081AB0E63BA785938467E1B10CCA",
            "IMPHASH=0D9EC08BAC6C07D9987DFD0F1506587C",
            "IMPHASH=BC129092B71C89B4D4C8CDF8EA590B29",
            "IMPHASH=4DA924CF622D039D58BCE71CDF05D242",
            "IMPHASH=E7A3A5C377E2D29324093377D7DB1C66",
            "IMPHASH=9A9DBEC5C62F0380B4FA5FD31DEFFEDF",
            "IMPHASH=AF8A3976AD71E5D5FDFB67DDB8DADFCE",
            "IMPHASH=0C477898BBF137BBD6F2A54E3B805FF4",
            "IMPHASH=0CA9F02B537BCEA20D4EA5EB1A9FE338",
            "IMPHASH=3AB3655E5A14D4EEFC547F4781BF7F9E",
            "IMPHASH=E6F9D5152DA699934B30DAAB206471F6",
            "IMPHASH=3AD59991CCF1D67339B319B15A41B35D",
            "IMPHASH=FFDD59E0318B85A3E480874D9796D872",
            "IMPHASH=0CF479628D7CC1EA25EC7998A92F5051",
            "IMPHASH=07A2D4DCBD6CB2C6A45E6B101F0B6D51",
            "IMPHASH=D6D0F80386E1380D05CB78E871BC72B1",
            "IMPHASH=38D9E015591BBFD4929E0D0F47FA0055",
            "IMPHASH=0E2216679CA6E1094D63322E3412D650",
            "IMPHASH=ADA161BF41B8E5E9132858CB54CAB5FB",
            "IMPHASH=2A1BC4913CD5ECB0434DF07CB675B798",
            "IMPHASH=11083E75553BAAE21DC89CE8F9A195E4",
            "IMPHASH=A23D29C9E566F2FA8FFBB79267F5DF80",
            "IMPHASH=4A07F944A83E8A7C2525EFA35DD30E2F",
            "IMPHASH=767637C23BB42CD5D7397CF58B0BE688",
            "IMPHASH=14C4E4C72BA075E9069EE67F39188AD8",
            "IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC",
            "IMPHASH=7D010C6BB6A3726F327F7E239166D127",
            "IMPHASH=89159BA4DD04E4CE5559F132A9964EB3",
            "IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F",
            "IMPHASH=5834ED4291BDEB928270428EBBAF7604",
            "IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38",
            "IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894",
            "IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74",
            "IMPHASH=3DE09703C8E79ED2CA3F01074719906B",
            "IMPHASH=A53A02B997935FD8EEDCB5F7ABAB9B9F",
            "IMPHASH=E96A73C7BF33A464C510EDE582318BF2",
            "IMPHASH=32089B8851BBF8BC2D014E9F37288C83",
            "IMPHASH=09D278F9DE118EF09163C6140255C690",
            "IMPHASH=03866661686829d806989e2fc5a72606",
            "IMPHASH=e57401fbdadcd4571ff385ab82bd5d6d",
            "IMPHASH=84B763C45C0E4A3E7CA5548C710DB4EE",
            "IMPHASH=19584675D94829987952432E018D5056",
            "IMPHASH=330768A4F172E10ACB6287B87289D83B",
            "IMPHASH=885C99CCFBE77D1CBFCB9C4E7C1A3313",
            "IMPHASH=22A22BC9E4E0D2F189F1EA01748816AC",
            "IMPHASH=7FA30E6BB7E8E8A69155636E50BF1B28",
            "IMPHASH=96DF3A3731912449521F6F8D183279B1",
            "IMPHASH=7E6CF3FF4576581271AC8A313B2AAB46",
            "IMPHASH=51791678F351C03A0EB4E2A7B05C6E17",
            "IMPHASH=25CE42B079282632708FC846129E98A5",
            "IMPHASH=021BCCA20BA3381B11BDDE26B4E62F20",
            "IMPHASH=59223B5F52D8799D38E0754855CBDF42",
            "IMPHASH=81E75D8F1D276C156653D3D8813E4A43",
            "IMPHASH=17244E8B6B8227E57FE709CCAD421420",
            "IMPHASH=5B76DA3ACDEDC8A5CDF23A798B5936B4",
            "IMPHASH=CB2B65BB77D995CC1C0E5DF1C860133C",
            "IMPHASH=40445337761D80CF465136FAFB1F63E6",
            "IMPHASH=8A790F401B29FA87BC1E56F7272B3AA6",
            "IMPHASH=B50199E952C875241B9CE06C971CE3C1"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of one of these tools"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Hacktool Execution - PE Metadata",
    "id": 423,
    "status": "test",
    "description": "Detects the execution of different Windows based hacktools via PE metadata (company, product, etc.) even if the files have been renamed",
    "references": [
      "https://github.com/cube0x0",
      "https://www.virustotal.com/gui/search/metadata%253ACube0x0/files"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/27",
    "modified": "2024/01/15",
    "tags": [
      "attack.credential_access",
      "attack.t1588.002",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Company": "Cube0x0"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - GMER Rootkit Detector and Remover Execution",
    "id": 424,
    "status": "test",
    "description": "Detects the execution GMER tool based on image and hash fields.",
    "references": [
      "http://www.gmer.net/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/05",
    "modified": "2023/02/13",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\gmer.exe"
      },
      "selection_sysmon_hash": {
        "Hashes|contains": [
          "MD5=E9DC058440D321AA17D0600B3CA0AB04",
          "SHA1=539C228B6B332F5AA523E5CE358C16647D8BBE57",
          "SHA256=E8A3E804A96C716A3E9B69195DB6FFB0D33E2433AF871E4D4E1EAB3097237173"
        ]
      },
      "selection_other": [
        {
          "md5": "e9dc058440d321aa17d0600b3ca0ab04"
        },
        {
          "sha1": "539c228b6b332f5aa523e5ce358c16647d8bbe57"
        },
        {
          "sha256": "e8a3e804a96c716a3e9b69195db6ffb0d33e2433af871e4d4e1eab3097237173"
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - HandleKatz LSASS Dumper Execution",
    "id": 425,
    "status": "test",
    "description": "Detects the use of HandleKatz, a tool that demonstrates the usage of cloned handles to Lsass in order to create an obfuscated memory dump of the same",
    "references": [
      "https://github.com/codewhitesec/HandleKatz"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/18",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_loader_img": {
        "Image|endswith": "\\loader.exe",
        "CommandLine|contains": "--pid:"
      },
      "selection_loader_imphash": [
        {
          "Imphash": [
            "38d9e015591bbfd4929e0d0f47fa0055",
            "0e2216679ca6e1094d63322e3412d650"
          ]
        },
        {
          "Hashes": [
            "IMPHASH=38D9E015591BBFD4929E0D0F47FA0055",
            "IMPHASH=0E2216679CA6E1094D63322E3412D650"
          ]
        }
      ],
      "selection_flags": {
        "CommandLine|contains|all": [
          "--pid:",
          "--outfile:"
        ],
        "CommandLine|contains": [
          ".dmp",
          "lsass",
          ".obf",
          "dump"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Hashcat Password Cracker Execution",
    "id": 426,
    "status": "test",
    "description": "Execute Hashcat.exe with provided SAM file from registry of Windows and Password list to crack against",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1110.002/T1110.002.md#atomic-test-1---password-cracking-with-hashcat",
      "https://hashcat.net/wiki/doku.php?id=hashcat"
    ],
    "author": "frack113",
    "date": "2021/12/27",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1110.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\hashcat.exe"
      },
      "selection_cli": {
        "CommandLine|contains|all": [
          "-a ",
          "-m 1000 ",
          "-r "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Tools that use similar command line flags and values"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Htran/NATBypass Execution",
    "id": 427,
    "status": "test",
    "description": "Detects executable names or flags used by Htran or Htran-like tools (e.g. NATBypass)",
    "references": [
      "https://github.com/HiwinCN/HTran",
      "https://github.com/cw1997/NATBypass"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/12/27",
    "modified": "2023/02/04",
    "tags": [
      "attack.command_and_control",
      "attack.t1090",
      "attack.s0040"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\htran.exe",
          "\\lcx.exe"
        ]
      },
      "selection_cli": {
        "CommandLine|contains": [
          ".exe -tran ",
          ".exe -slave "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Hydra Password Bruteforce Execution",
    "id": 428,
    "status": "test",
    "description": "Detects command line parameters used by Hydra password guessing hack tool",
    "references": [
      "https://github.com/vanhauser-thc/thc-hydra"
    ],
    "author": "Vasiliy Burov",
    "date": "2020/10/05",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1110",
      "attack.t1110.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "-u ",
          "-p "
        ],
        "CommandLine|contains": [
          "^USER^",
          "^PASS^"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Software that uses the caret encased keywords PASS and USER in its command line"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Potential Impacket Lateral Movement Activity",
    "id": 429,
    "related": [
      {
        "id": "e31f89f7-36fb-4697-8ab6-48823708353b",
        "type": "obsoletes"
      }
    ],
    "status": "stable",
    "description": "Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework",
    "references": [
      "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/wmiexec.py",
      "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/atexec.py",
      "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/smbexec.py",
      "https://github.com/SecureAuthCorp/impacket/blob/8b1a99f7c715702eafe3f24851817bb64721b156/examples/dcomexec.py",
      "https://www.elastic.co/guide/en/security/current/suspicious-cmd-execution-via-wmi.html"
    ],
    "author": "Ecco, oscd.community, Jonhnathan Ribeiro, Tim Rauch",
    "date": "2019/09/03",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.lateral_movement",
      "attack.t1021.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_other": {
        "ParentImage|endswith": [
          "\\wmiprvse.exe",
          "\\mmc.exe",
          "\\explorer.exe",
          "\\services.exe"
        ],
        "CommandLine|contains|all": [
          "cmd.exe",
          "/Q",
          "/c",
          "\\\\\\\\127.0.0.1\\\\",
          "&1"
        ]
      },
      "selection_atexec": {
        "ParentCommandLine|contains": [
          "svchost.exe -k netsvcs",
          "taskeng.exe"
        ],
        "CommandLine|contains|all": [
          "cmd.exe",
          "/C",
          "Windows\\Temp\\",
          "&1"
        ]
      },
      "condition": "1 of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Impacket Tools Execution",
    "id": 430,
    "status": "test",
    "description": "Detects the execution of different compiled Windows binaries of the impacket toolset (based on names or part of their names - could lead to false positives)",
    "references": [
      "https://github.com/ropnop/impacket_static_binaries/releases/tag/0.9.21-dev-binaries"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/24",
    "modified": "2023/02/07",
    "tags": [
      "attack.execution",
      "attack.t1557.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|contains": [
            "\\goldenPac",
            "\\karmaSMB",
            "\\kintercept",
            "\\ntlmrelayx",
            "\\rpcdump",
            "\\samrdump",
            "\\secretsdump",
            "\\smbexec",
            "\\smbrelayx",
            "\\wmiexec",
            "\\wmipersist"
          ]
        },
        {
          "Image|endswith": [
            "\\atexec_windows.exe",
            "\\dcomexec_windows.exe",
            "\\dpapi_windows.exe",
            "\\findDelegation_windows.exe",
            "\\GetADUsers_windows.exe",
            "\\GetNPUsers_windows.exe",
            "\\getPac_windows.exe",
            "\\getST_windows.exe",
            "\\getTGT_windows.exe",
            "\\GetUserSPNs_windows.exe",
            "\\ifmap_windows.exe",
            "\\mimikatz_windows.exe",
            "\\netview_windows.exe",
            "\\nmapAnswerMachine_windows.exe",
            "\\opdump_windows.exe",
            "\\psexec_windows.exe",
            "\\rdp_check_windows.exe",
            "\\sambaPipe_windows.exe",
            "\\smbclient_windows.exe",
            "\\smbserver_windows.exe",
            "\\sniff_windows.exe",
            "\\sniffer_windows.exe",
            "\\split_windows.exe",
            "\\ticketer_windows.exe"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the impacket tools"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Impersonate Execution",
    "id": 431,
    "status": "test",
    "description": "Detects execution of the Impersonate tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively",
    "references": [
      "https://sensepost.com/blog/2022/abusing-windows-tokens-to-compromise-active-directory-without-touching-lsass/",
      "https://github.com/sensepost/impersonate"
    ],
    "author": "Sai Prashanth Pulisetti @pulisettis",
    "date": "2022/12/21",
    "modified": "2023/02/08",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1134.001",
      "attack.t1134.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_commandline_exe": {
        "CommandLine|contains": "impersonate.exe"
      },
      "selection_commandline_opt": {
        "CommandLine|contains": [
          " list ",
          " exec ",
          " adduser "
        ]
      },
      "selection_hash_plain": {
        "Hashes|contains": [
          "MD5=9520714AB576B0ED01D1513691377D01",
          "SHA256=E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A",
          "IMPHASH=0A358FFC1697B7A07D0E817AC740DF62"
        ]
      },
      "selection_hash_ext": [
        {
          "md5": "9520714AB576B0ED01D1513691377D01"
        },
        {
          "sha256": "E81CC96E2118DC4FBFE5BAD1604E0AC7681960143E2101E1A024D52264BB0A8A"
        },
        {
          "Imphash": "0A358FFC1697B7A07D0E817AC740DF62"
        }
      ],
      "condition": "all of selection_commandline_* or 1 of selection_hash_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "HackTool - Inveigh Execution",
    "id": 432,
    "status": "test",
    "description": "Detects the use of Inveigh a cross-platform .NET IPv4/IPv6 machine-in-the-middle tool",
    "references": [
      "https://github.com/Kevin-Robertson/Inveigh",
      "https://thedfirreport.com/2020/11/23/pysa-mespinoza-ransomware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/24",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\Inveigh.exe"
        },
        {
          "OriginalFileName": [
            "\\Inveigh.exe",
            "\\Inveigh.dll"
          ]
        },
        {
          "Description": "Inveigh"
        },
        {
          "CommandLine|contains": [
            " -SpooferIP",
            " -ReplyToIPs ",
            " -ReplyToDomains ",
            " -ReplyToMACs ",
            " -SnifferIP"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Very unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation CLIP+ Launcher",
    "id": 433,
    "status": "test",
    "description": "Detects Obfuscated use of Clip.exe to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/11/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "cmd",
          "&&",
          "clipboard]::",
          "-f"
        ],
        "CommandLine|contains": [
          "/c",
          "/r"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Obfuscated IEX Invocation",
    "id": 434,
    "status": "test",
    "description": "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block",
    "references": [
      "https://github.com/danielbohannon/Invoke-Obfuscation/blob/f20e7f843edd0a3a7716736e9eddfa423395dd26/Out-ObfuscatedStringCommand.ps1#L873-L888"
    ],
    "author": "Daniel Bohannon (@Mandiant/@FireEye), oscd.community",
    "date": "2019/11/08",
    "modified": "2022/12/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|re": "\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\["
        },
        {
          "CommandLine|re": "\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\["
        },
        {
          "CommandLine|re": "\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\["
        },
        {
          "CommandLine|re": "\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}"
        },
        {
          "CommandLine|re": "\\*mdr\\*\\W\\s*\\)\\.Name"
        },
        {
          "CommandLine|re": "\\$VerbosePreference\\.ToString\\("
        },
        {
          "CommandLine|re": "\\[String\\]\\s*\\$VerbosePreference"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation STDIN+ Launcher",
    "id": 435,
    "status": "test",
    "description": "Detects Obfuscated use of stdin to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/11/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_main": {
        "CommandLine|contains|all": [
          "cmd",
          "powershell"
        ],
        "CommandLine|contains": [
          "/c",
          "/r"
        ]
      },
      "selection_other": [
        {
          "CommandLine|contains": "noexit"
        },
        {
          "CommandLine|contains|all": [
            "input",
            "$"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR+ Launcher",
    "id": 436,
    "status": "test",
    "description": "Detects Obfuscated use of Environment Variables to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/11/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "cmd",
          "\"set",
          "-f"
        ],
        "CommandLine|contains": [
          "/c",
          "/r"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation COMPRESS OBFUSCATION",
    "id": 437,
    "status": "test",
    "description": "Detects Obfuscated Powershell via COMPRESS OBFUSCATION",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/12/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "new-object",
          "text.encoding]::ascii"
        ],
        "CommandLine|contains": [
          "system.io.compression.deflatestream",
          "system.io.streamreader",
          "readtoend("
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Stdin",
    "id": 438,
    "status": "test",
    "description": "Detects Obfuscated Powershell via Stdin in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/12",
    "modified": "2022/11/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "set",
          "&&"
        ],
        "CommandLine|contains": [
          "environment",
          "invoke",
          "input"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Clip",
    "id": 439,
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Clip.exe in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/11/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "echo",
          "clip",
          "&&"
        ],
        "CommandLine|contains": [
          "clipboard",
          "invoke",
          "i`",
          "n`",
          "v`",
          "o`",
          "k`",
          "e`"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use MSHTA",
    "id": 440,
    "status": "test",
    "description": "Detects Obfuscated Powershell via use MSHTA in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/08",
    "modified": "2022/03/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "set",
          "&&",
          "mshta",
          "vbscript:createobject",
          ".run",
          "(window.close)"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION",
    "id": 441,
    "status": "test",
    "description": "Detects Obfuscated Powershell via VAR++ LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/11/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "&&set",
          "cmd",
          "/c",
          "-f"
        ],
        "CommandLine|contains": [
          "{0}",
          "{1}",
          "{2}",
          "{3}",
          "{4}",
          "{5}"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Jlaive In-Memory Assembly Execution",
    "id": 442,
    "status": "test",
    "description": "Detects the use of Jlaive to execute assemblies in a copied PowerShell",
    "references": [
      "https://jstnk9.github.io/jstnk9/research/Jlaive-Antivirus-Evasion-Tool",
      "https://web.archive.org/web/20220514073704/https://github.com/ch2sh/Jlaive"
    ],
    "author": "Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)",
    "date": "2022/05/24",
    "modified": "2023/02/22",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "parent_selection": {
        "ParentImage|endswith": "\\cmd.exe",
        "ParentCommandLine|endswith": ".bat"
      },
      "selection1": {
        "Image|endswith": "\\xcopy.exe",
        "CommandLine|contains|all": [
          "powershell.exe",
          ".bat.exe"
        ]
      },
      "selection2": {
        "Image|endswith": "\\xcopy.exe",
        "CommandLine|contains|all": [
          "pwsh.exe",
          ".bat.exe"
        ]
      },
      "selection3": {
        "Image|endswith": "\\attrib.exe",
        "CommandLine|contains|all": [
          "+s",
          "+h",
          ".bat.exe"
        ]
      },
      "condition": "parent_selection and (1 of selection*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "HackTool - Koadic Execution",
    "id": 443,
    "status": "test",
    "description": "Detects command line parameters used by Koadic hack tool",
    "references": [
      "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/",
      "https://github.com/offsecginger/koadic/blob/457f9a3ff394c989cdb4c599ab90eb34fb2c762c/data/stager/js/stdlib.js",
      "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/"
    ],
    "author": "wagga, Jonhnathan Ribeiro, oscd.community",
    "date": "2020/01/12",
    "modified": "2023/02/11",
    "tags": [
      "attack.execution",
      "attack.t1059.003",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/q",
          "/c",
          "chcp"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - KrbRelay Execution",
    "id": 444,
    "status": "test",
    "description": "Detects the use of KrbRelay, a Kerberos relaying tool",
    "references": [
      "https://github.com/cube0x0/KrbRelay"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/27",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1558.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\KrbRelay.exe"
        },
        {
          "OriginalFileName": "KrbRelay.exe"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains|all": [
          " -spn ",
          " -clsid ",
          " -rbcd "
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          "shadowcred",
          "clsid",
          "spn"
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          "spn ",
          "session ",
          "clsid "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - KrbRelayUp Execution",
    "id": 445,
    "status": "test",
    "description": "Detects KrbRelayUp used to perform a universal no-fix local privilege escalation in Windows domain environments where LDAP signing is not enforced",
    "references": [
      "https://github.com/Dec0ne/KrbRelayUp"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/26",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1558.003",
      "attack.lateral_movement",
      "attack.t1550.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\KrbRelayUp.exe"
        },
        {
          "OriginalFileName": "KrbRelayUp.exe"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains|all": [
          " relay ",
          " -Domain ",
          " -ComputerName "
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          " krbscm ",
          " -sc "
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          " spawn ",
          " -d ",
          " -cn ",
          " -cp "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - LocalPotato Execution",
    "id": 446,
    "status": "test",
    "description": "Detects the execution of the LocalPotato POC based on basic PE metadata information and default CLI examples",
    "references": [
      "https://www.localpotato.com/localpotato_html/LocalPotato.html",
      "https://github.com/decoder-it/LocalPotato"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "cve.2023.21746"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\LocalPotato.exe"
      },
      "selection_cli": {
        "CommandLine|contains|all": [
          ".exe -i C:\\",
          "-o Windows\\"
        ]
      },
      "selection_hash_plain": {
        "Hashes|contains": [
          "IMPHASH=E1742EE971D6549E8D4D81115F88F1FC",
          "IMPHASH=DD82066EFBA94D7556EF582F247C8BB5"
        ]
      },
      "selection_hash_ext": {
        "Imphash": [
          "E1742EE971D6549E8D4D81115F88F1FC",
          "DD82066EFBA94D7556EF582F247C8BB5"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Meterpreter/CobaltStrike Activity",
    "id": 447,
    "status": "test",
    "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
      "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
    ],
    "author": "Teymur Kheirkhabarov, Ecco, Florian Roth",
    "date": "2019/10/26",
    "modified": "2023/02/05",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1134.001",
      "attack.t1134.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "ParentImage|endswith": "\\services.exe"
      },
      "selection_technique_1": {
        "CommandLine|contains|all": [
          "/c",
          "echo",
          "\\pipe\\"
        ],
        "CommandLine|contains": [
          "cmd",
          "%COMSPEC%"
        ]
      },
      "selection_technique_2": {
        "CommandLine|contains|all": [
          "rundll32",
          ".dll,a",
          "/p:"
        ]
      },
      "filter_defender": {
        "CommandLine|contains": "MpCmdRun"
      },
      "condition": "selection_img and 1 of selection_technique_* and not 1 of filter_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Commandlines containing components like cmd accidentally",
      "Jobs and services started with cmd"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Mimikatz Execution",
    "id": 448,
    "status": "test",
    "description": "Detection well-known mimikatz command line arguments",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "https://tools.thehacker.recipes/mimikatz/modules"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community, David ANDRE (additional keywords), Tim Shelton",
    "date": "2019/10/22",
    "modified": "2023/02/21",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.t1003.002",
      "attack.t1003.004",
      "attack.t1003.005",
      "attack.t1003.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_tools_name": {
        "CommandLine|contains": [
          "DumpCreds",
          "mimikatz"
        ]
      },
      "selection_function_names": {
        "CommandLine|contains": [
          "::aadcookie",
          "::detours",
          "::memssp",
          "::mflt",
          "::ncroutemon",
          "::ngcsign",
          "::printnightmare",
          "::skeleton",
          "::preshutdown",
          "::mstsc",
          "::multirdp"
        ]
      },
      "selection_module_names": {
        "CommandLine|contains": [
          "rpc::",
          "token::",
          "crypto::",
          "dpapi::",
          "sekurlsa::",
          "kerberos::",
          "lsadump::",
          "privilege::",
          "process::",
          "vault::"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - PCHunter Execution",
    "id": 449,
    "status": "test",
    "description": "Detects suspicious use of PCHunter, a tool like Process Hacker to view and manipulate processes, kernel options and other low level stuff",
    "references": [
      "http://www.xuetr.com/",
      "https://www.crowdstrike.com/blog/falcon-overwatch-report-finds-increase-in-ecrime/",
      "https://www.hexacorn.com/blog/2018/04/20/kernel-hacking-tool-you-might-have-never-heard-of-xuetr-pchunter/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali",
    "date": "2022/10/10",
    "modified": "2023/02/13",
    "tags": [
      "attack.execution",
      "attack.discovery",
      "attack.t1082",
      "attack.t1057",
      "attack.t1012",
      "attack.t1083",
      "attack.t1007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_image": {
        "Image|endswith": [
          "\\PCHunter64.exe",
          "\\PCHunter32.exe"
        ]
      },
      "selection_pe": [
        {
          "OriginalFileName": "PCHunter.exe"
        },
        {
          "Description": "Epoolsoft Windows Information View Tools"
        }
      ],
      "selection_hashes": {
        "Hashes|contains": [
          "SHA1=5F1CBC3D99558307BC1250D084FA968521482025",
          "MD5=987B65CD9B9F4E9A1AFD8F8B48CF64A7",
          "SHA256=2B214BDDAAB130C274DE6204AF6DBA5AEEC7433DA99AA950022FA306421A6D32",
          "IMPHASH=444D210CEA1FF8112F256A4997EED7FF",
          "SHA1=3FB89787CB97D902780DA080545584D97FB1C2EB",
          "MD5=228DD0C2E6287547E26FFBD973A40F14",
          "SHA256=55F041BF4E78E9BFA6D4EE68BE40E496CE3A1353E1CA4306598589E19802522C",
          "IMPHASH=0479F44DF47CFA2EF1CCC4416A538663"
        ]
      },
      "selection_hash_values": [
        {
          "md5": [
            "228dd0c2e6287547e26ffbd973a40f14",
            "987b65cd9b9f4e9a1afd8f8b48cf64a7"
          ]
        },
        {
          "sha1": [
            "5f1cbc3d99558307bc1250d084fa968521482025",
            "3fb89787cb97d902780da080545584d97fb1c2eb"
          ]
        },
        {
          "sha256": [
            "2b214bddaab130c274de6204af6dba5aeec7433da99aa950022fa306421a6d32",
            "55f041bf4e78e9bfa6d4ee68be40e496ce3a1353e1ca4306598589e19802522c"
          ]
        },
        {
          "Imphash": [
            "444d210cea1ff8112f256a4997eed7ff",
            "0479f44df47cfa2ef1ccc4416a538663"
          ]
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Default PowerSploit/Empire Scheduled Task Creation",
    "id": 450,
    "status": "test",
    "description": "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.",
    "references": [
      "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
      "https://github.com/EmpireProject/Empire/blob/08cbd274bef78243d7a8ed6443b8364acd1fc48b/lib/modules/powershell/persistence/userland/schtasks.py"
    ],
    "author": "Markus Neis, @Karneades",
    "date": "2018/03/06",
    "modified": "2023/03/03",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.s0111",
      "attack.g0022",
      "attack.g0060",
      "car.2013-08-001",
      "attack.t1053.005",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          "/Create",
          "powershell.exe -NonI",
          "/TN Updater /TR"
        ],
        "CommandLine|contains": [
          "/SC ONLOGON",
          "/SC DAILY /ST",
          "/SC ONIDLE",
          "/SC HOURLY"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - PowerTool Execution",
    "id": 451,
    "status": "test",
    "description": "Detects the execution of the tool PowerTool which has the ability to kill a process, delete its process file, unload drivers, and delete the driver files",
    "references": [
      "https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/",
      "https://www.trendmicro.com/en_us/research/22/i/play-ransomware-s-attack-playbook-unmasks-it-as-another-hive-aff.html",
      "https://twitter.com/gbti_sa/status/1249653895900602375?lang=en",
      "https://www.softpedia.com/get/Antivirus/Removal-Tools/ithurricane-PowerTool.shtml"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/29",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\PowerTool.exe",
            "\\PowerTool64.exe"
          ]
        },
        {
          "OriginalFileName": "PowerTool.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - PurpleSharp Execution",
    "id": 452,
    "status": "test",
    "description": "Detects the execution of the PurpleSharp adversary simulation tool",
    "references": [
      "https://github.com/mvelazc0/PurpleSharp"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/06/18",
    "modified": "2023/02/05",
    "tags": [
      "attack.t1587",
      "attack.resource_development"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|contains": "\\purplesharp"
        },
        {
          "OriginalFileName": "PurpleSharp.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "xyz123456.exe",
          "PurpleSharp"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - Pypykatz Credentials Dumping Activity",
    "id": 453,
    "status": "test",
    "description": "Detects the usage of \"pypykatz\" to obtain stored credentials. Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database through Windows registry where the SAM database is stored",
    "references": [
      "https://github.com/skelsec/pypykatz",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md#atomic-test-2---registry-parse-with-pypykatz"
    ],
    "author": "frack113",
    "date": "2022/01/05",
    "modified": "2023/02/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\pypykatz.exe",
          "\\python.exe"
        ],
        "CommandLine|contains|all": [
          "live",
          "registry"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Quarks PwDump Execution",
    "id": 454,
    "status": "test",
    "description": "Detects usage of the Quarks PwDump tool via commandline arguments",
    "references": [
      "https://github.com/quarkslab/quarkspwdump",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/seedworm-apt-iran-middle-east"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/05",
    "modified": "2023/02/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\QuarksPwDump.exe"
      },
      "selection_cli": {
        "CommandLine": [
          " -dhl",
          " --dump-hash-local",
          " -dhdc",
          " --dump-hash-domain-cached",
          " --dump-bitlocker",
          " -dhd ",
          " --dump-hash-domain ",
          "--ntds-file"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - RedMimicry Winnti Playbook Execution",
    "id": 455,
    "status": "test",
    "description": "Detects actions caused by the RedMimicry Winnti playbook a automated breach emulations utility",
    "references": [
      "https://redmimicry.com/posts/redmimicry-winnti/"
    ],
    "author": "Alexander Rausch",
    "date": "2020/06/24",
    "modified": "2023/03/01",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1106",
      "attack.t1059.003",
      "attack.t1218.011"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\rundll32.exe",
          "\\cmd.exe"
        ],
        "CommandLine|contains": [
          "gthread-3.6.dll",
          "\\Windows\\Temp\\tmp.bat",
          "sigcmm-2.4.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential SMB Relay Attack Tool Execution",
    "id": 456,
    "status": "test",
    "description": "Detects different hacktools used for relay attacks on Windows for privilege escalation",
    "references": [
      "https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/",
      "https://pentestlab.blog/2017/04/13/hot-potato/",
      "https://github.com/ohpe/juicy-potato",
      "https://hunter2.gitbook.io/darthsidious/other/war-stories/domain-admin-in-30-minutes",
      "https://hunter2.gitbook.io/darthsidious/execution/responder-with-ntlm-relay-and-empire",
      "https://www.localpotato.com/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/24",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1557.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": {
        "Image|contains": [
          "PetitPotam",
          "RottenPotato",
          "HotPotato",
          "JuicyPotato",
          "\\just_dce_",
          "Juicy Potato",
          "\\temp\\rot.exe",
          "\\Potato.exe",
          "\\SpoolSample.exe",
          "\\Responder.exe",
          "\\smbrelayx",
          "\\ntlmrelayx",
          "\\LocalPotato"
        ]
      },
      "selection_script": {
        "CommandLine|contains": [
          "Invoke-Tater",
          " smbrelay",
          " ntlmrelay",
          "cme smb ",
          " /ntlm:NTLMhash ",
          "Invoke-PetitPotam",
          ".exe -t * -p "
        ]
      },
      "selection_juicypotato_enum": {
        "CommandLine|contains": ".exe -c \"{",
        "CommandLine|endswith": "}\" -z"
      },
      "filter_hotpotatoes": {
        "Image|contains": [
          "HotPotatoes6",
          "HotPotatoes7",
          "HotPotatoes "
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate files with these rare hacktool names"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - Rubeus Execution",
    "id": 457,
    "related": [
      {
        "id": "7ec2c172-dceb-4c10-92c9-87c1881b7e18",
        "type": "similar"
      }
    ],
    "status": "stable",
    "description": "Detects the execution of the hacktool Rubeus via PE information of command line parameters",
    "references": [
      "https://blog.harmj0y.net/redteaming/from-kekeo-to-rubeus",
      "https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html",
      "https://github.com/GhostPack/Rubeus"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/12/19",
    "modified": "2023/04/20",
    "tags": [
      "attack.credential_access",
      "attack.t1003",
      "attack.t1558.003",
      "attack.lateral_movement",
      "attack.t1550.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\Rubeus.exe"
        },
        {
          "OriginalFileName": "Rubeus.exe"
        },
        {
          "Description": "Rubeus"
        },
        {
          "CommandLine|contains": [
            "asreproast ",
            "dump /service:krbtgt ",
            "dump /luid:0x",
            "kerberoast ",
            "createnetonly /program:",
            "ptt /ticket:",
            "/impersonateuser:",
            "renew /ticket:",
            "asktgt /user:",
            "harvest /interval:",
            "s4u /user:",
            "s4u /ticket:",
            "hash /password:",
            "golden /aes256:",
            "silver /user:"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - SafetyKatz Execution",
    "id": 458,
    "status": "test",
    "description": "Detects the execution of the hacktool SafetyKatz via PE information and default Image name",
    "references": [
      "https://github.com/GhostPack/SafetyKatz"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/20",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\SafetyKatz.exe"
        },
        {
          "OriginalFileName": "SafetyKatz.exe"
        },
        {
          "Description": "SafetyKatz"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - SecurityXploded Execution",
    "id": 459,
    "status": "stable",
    "description": "Detects the execution of SecurityXploded Tools",
    "references": [
      "https://securityxploded.com/",
      "https://cyberx-labs.com/blog/gangnam-industrial-style-apt-campaign-targets-korean-industrial-companies/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/12/19",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1555"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Company": "SecurityXploded"
        },
        {
          "Image|endswith": "PasswordDump.exe"
        },
        {
          "OriginalFileName|endswith": "PasswordDump.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - PPID Spoofing SelectMyParent Tool Execution",
    "id": 460,
    "status": "test",
    "description": "Detects the use of parent process ID spoofing tools like Didier Stevens tool SelectMyParent",
    "references": [
      "https://pentestlab.blog/2020/02/24/parent-pid-spoofing/",
      "https://www.picussecurity.com/resource/blog/how-to-detect-parent-pid-ppid-spoofing-attacks",
      "https://www.ired.team/offensive-security/defense-evasion/parent-process-id-ppid-spoofing",
      "https://www.virustotal.com/gui/search/filename%253A*spoof*%2520filename%253A*ppid*/files"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/23",
    "modified": "2023/03/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1134.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\SelectMyParent.exe"
        },
        {
          "CommandLine|contains": [
            "PPID-spoof",
            "ppid_spoof",
            "spoof-ppid",
            "spoof_ppid",
            "ppidspoof",
            "spoofppid",
            "spoofedppid",
            " -spawnto "
          ]
        },
        {
          "OriginalFileName|contains": [
            "PPID-spoof",
            "ppid_spoof",
            "spoof-ppid",
            "spoof_ppid",
            "ppidspoof",
            "spoofppid",
            "spoofedppid"
          ]
        },
        {
          "Description": "SelectMyParent"
        },
        {
          "Imphash": [
            "04d974875bd225f00902b4cad9af3fbc",
            "a782af154c9e743ddf3f3eb2b8f3d16e",
            "89059503d7fbf470e68f7e63313da3ad",
            "ca28337632625c8281ab8a130b3d6bad"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=04D974875BD225F00902B4CAD9AF3FBC",
            "IMPHASH=A782AF154C9E743DDF3F3EB2B8F3D16E",
            "IMPHASH=89059503D7FBF470E68F7E63313DA3AD",
            "IMPHASH=CA28337632625C8281AB8A130B3D6BAD"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharPersist Execution",
    "id": 461,
    "status": "test",
    "description": "Detects the execution of the hacktool SharPersist - used to deploy various different kinds of persistence mechanisms",
    "references": [
      "https://www.mandiant.com/resources/blog/sharpersist-windows-persistence-toolkit",
      "https://github.com/mandiant/SharPersist"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/15",
    "modified": "2023/02/04",
    "tags": [
      "attack.persistence",
      "attack.t1053"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\SharPersist.exe"
        },
        {
          "Product": "SharPersist"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains": [
          " -t schtask -c ",
          " -t startupfolder -c "
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          " -t reg -c ",
          " -m add"
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          " -t service -c ",
          " -m add"
        ]
      },
      "selection_cli_4": {
        "CommandLine|contains|all": [
          " -t schtask -c ",
          " -m add"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpEvtMute Execution",
    "id": 462,
    "related": [
      {
        "id": "49329257-089d-46e6-af37-4afce4290685",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the use of SharpEvtHook, a tool that tampers with the Windows event logs",
    "references": [
      "https://github.com/bats3c/EvtMute"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/07",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\SharpEvtMute.exe"
        },
        {
          "Description": "SharpEvtMute"
        },
        {
          "CommandLine|contains": [
            "--Filter \"rule ",
            "--Encoded --Filter \\\""
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpLdapWhoami Execution",
    "id": 463,
    "status": "test",
    "description": "Detects SharpLdapWhoami, a whoami alternative that queries the LDAP service on a domain controller",
    "references": [
      "https://github.com/bugch3ck/SharpLdapWhoami"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/29",
    "modified": "2023/02/04",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_name": {
        "Image|endswith": "\\SharpLdapWhoami.exe"
      },
      "selection_pe": [
        {
          "OriginalFileName|contains": "SharpLdapWhoami"
        },
        {
          "Product": "SharpLdapWhoami"
        }
      ],
      "selection_flags1": {
        "CommandLine|endswith": [
          " /method:ntlm",
          " /method:kerb",
          " /method:nego",
          " /m:nego",
          " /m:ntlm",
          " /m:kerb"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Programs that use the same command line flags"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpMove Tool Execution",
    "id": 464,
    "status": "experimental",
    "description": "Detects the execution of SharpMove, a .NET utility performing multiple tasks such as \"Task Creation\", \"SCM\" query, VBScript execution using WMI via its PE metadata and command line options.\n",
    "references": [
      "https://github.com/0xthirteen/SharpMove/",
      "https://pentestlab.blog/tag/sharpmove/"
    ],
    "author": "Luca Di Bartolomeo (CrimpSec)",
    "date": "2024/01/29",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\SharpMove.exe"
        },
        {
          "OriginalFileName": "SharpMove.exe"
        }
      ],
      "selection_cli_computer": {
        "CommandLine|contains": "computername="
      },
      "selection_cli_actions": {
        "CommandLine|contains": [
          "action=create",
          "action=dcom",
          "action=executevbs",
          "action=hijackdcom",
          "action=modschtask",
          "action=modsvc",
          "action=query",
          "action=scm",
          "action=startservice",
          "action=taskscheduler"
        ]
      },
      "condition": "selection_img or all of selection_cli_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpUp PrivEsc Tool Execution",
    "id": 465,
    "status": "test",
    "description": "Detects the use of SharpUp, a tool for local privilege escalation",
    "references": [
      "https://github.com/GhostPack/SharpUp"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/20",
    "modified": "2023/02/13",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1615",
      "attack.t1569.002",
      "attack.t1574.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\SharpUp.exe"
        },
        {
          "Description": "SharpUp"
        },
        {
          "CommandLine|contains": [
            "HijackablePaths",
            "UnquotedServicePath",
            "ProcessDLLHijack",
            "ModifiableServiceBinaries",
            "ModifiableScheduledTask",
            "DomainGPPPassword",
            "CachedGPPPassword"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - SharpView Execution",
    "id": 466,
    "related": [
      {
        "id": "dcd74b95-3f36-4ed9-9598-0490951643aa",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems",
    "references": [
      "https://github.com/tevora-threat/SharpView/",
      "https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/PowerView.ps1",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-4---system-discovery-using-sharpview"
    ],
    "author": "frack113",
    "date": "2021/12/10",
    "modified": "2023/02/14",
    "tags": [
      "attack.discovery",
      "attack.t1049",
      "attack.t1069.002",
      "attack.t1482",
      "attack.t1135",
      "attack.t1033"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "SharpView.exe"
        },
        {
          "Image|endswith": "\\SharpView.exe"
        },
        {
          "CommandLine|contains": [
            "Add-RemoteConnection",
            "Convert-ADName",
            "ConvertFrom-SID",
            "ConvertFrom-UACValue",
            "Convert-SidToName",
            "Export-PowerViewCSV",
            "Find-DomainObjectPropertyOutlier",
            "Find-DomainProcess",
            "Find-DomainShare",
            "Find-DomainUserEvent",
            "Find-DomainUserLocation",
            "Find-ForeignGroup",
            "Find-ForeignUser",
            "Find-GPOComputerAdmin",
            "Find-GPOLocation",
            "Find-Interesting",
            "Find-LocalAdminAccess",
            "Find-ManagedSecurityGroups",
            "Get-CachedRDPConnection",
            "Get-DFSshare",
            "Get-DomainComputer",
            "Get-DomainController",
            "Get-DomainDFSShare",
            "Get-DomainDNSRecord",
            "Get-DomainFileServer",
            "Get-DomainForeign",
            "Get-DomainGPO",
            "Get-DomainGroup",
            "Get-DomainGUIDMap",
            "Get-DomainManagedSecurityGroup",
            "Get-DomainObject",
            "Get-DomainOU",
            "Get-DomainPolicy",
            "Get-DomainSID",
            "Get-DomainSite",
            "Get-DomainSPNTicket",
            "Get-DomainSubnet",
            "Get-DomainTrust",
            "Get-DomainUserEvent",
            "Get-ForestDomain",
            "Get-ForestGlobalCatalog",
            "Get-ForestTrust",
            "Get-GptTmpl",
            "Get-GroupsXML",
            "Get-LastLoggedOn",
            "Get-LoggedOnLocal",
            "Get-NetComputer",
            "Get-NetDomain",
            "Get-NetFileServer",
            "Get-NetForest",
            "Get-NetGPO",
            "Get-NetGroupMember",
            "Get-NetLocalGroup",
            "Get-NetLoggedon",
            "Get-NetOU",
            "Get-NetProcess",
            "Get-NetRDPSession",
            "Get-NetSession",
            "Get-NetShare",
            "Get-NetSite",
            "Get-NetSubnet",
            "Get-NetUser",
            "Get-PathAcl",
            "Get-PrincipalContext",
            "Get-RegistryMountedDrive",
            "Get-RegLoggedOn",
            "Get-WMIRegCachedRDPConnection",
            "Get-WMIRegLastLoggedOn",
            "Get-WMIRegMountedDrive",
            "Get-WMIRegProxy",
            "Invoke-ACLScanner",
            "Invoke-CheckLocalAdminAccess",
            "Invoke-Kerberoast",
            "Invoke-MapDomainTrust",
            "Invoke-RevertToSelf",
            "Invoke-Sharefinder",
            "Invoke-UserImpersonation",
            "Remove-DomainObjectAcl",
            "Remove-RemoteConnection",
            "Request-SPNTicket",
            "Set-DomainObject",
            "Test-AdminAccess"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpChisel Execution",
    "id": 467,
    "related": [
      {
        "id": "8b0e12da-d3c3-49db-bb4f-256703f380e5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the Sharp Chisel via the commandline arguments",
    "references": [
      "https://github.com/shantanu561993/SharpChisel",
      "https://www.sentinelone.com/labs/wading-through-muddy-waters-recent-activity-of-an-iranian-state-sponsored-threat-actor/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/05",
    "modified": "2023/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\SharpChisel.exe"
        },
        {
          "Product": "SharpChisel"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpImpersonation Execution",
    "id": 468,
    "related": [
      {
        "id": "cf0c254b-22f1-4b2b-8221-e137b3c0af94",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of the SharpImpersonation tool. Which can be used to manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively",
    "references": [
      "https://s3cur3th1ssh1t.github.io/SharpImpersonation-Introduction/",
      "https://github.com/S3cur3Th1sSh1t/SharpImpersonation"
    ],
    "author": "Sai Prashanth Pulisetti @pulisettis, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/27",
    "modified": "2023/02/13",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1134.001",
      "attack.t1134.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\SharpImpersonation.exe"
        },
        {
          "OriginalFileName": "SharpImpersonation.exe"
        }
      ],
      "selection_cli": [
        {
          "CommandLine|contains|all": [
            " user:",
            " binary:"
          ]
        },
        {
          "CommandLine|contains|all": [
            " user:",
            " shellcode:"
          ]
        },
        {
          "CommandLine|contains": [
            " technique:CreateProcessAsUserW",
            " technique:ImpersonateLoggedOnuser"
          ]
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SharpLDAPmonitor Execution",
    "id": 469,
    "status": "test",
    "description": "Detects execution of the SharpLDAPmonitor. Which can monitor the creation, deletion and changes to LDAP objects.",
    "references": [
      "https://github.com/p0dalirius/LDAPmonitor"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/30",
    "modified": "2023/02/14",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\SharpLDAPmonitor.exe"
        },
        {
          "OriginalFileName": "SharpLDAPmonitor.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/user:",
          "/pass:",
          "/dcip:"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "HackTool - SILENTTRINITY Stager Execution",
    "id": 470,
    "related": [
      {
        "id": "75c505b1-711d-4f68-a357-8c3fe37dbf2d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects SILENTTRINITY stager use via PE metadata",
    "references": [
      "https://github.com/byt3bl33d3r/SILENTTRINITY"
    ],
    "author": "Aleksey Potapov, oscd.community",
    "date": "2019/10/22",
    "modified": "2023/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1071"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Description|contains": "st2stager"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Sliver C2 Implant Activity Pattern",
    "id": 471,
    "status": "test",
    "description": "Detects process activity patterns as seen being used by Sliver C2 framework implants",
    "references": [
      "https://github.com/BishopFox/sliver/blob/79f2d48fcdfc2bee4713b78d431ea4b27f733f30/implant/sliver/shell/shell_windows.go#L36",
      "https://www.microsoft.com/security/blog/2022/08/24/looking-for-the-sliver-lining-hunting-for-emerging-command-and-control-frameworks/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2022/08/25",
    "modified": "2023/03/05",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "-NoExit -Command [Console]::OutputEncoding=[Text.UTF8Encoding]::UTF8"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - Stracciatella Execution",
    "id": 472,
    "status": "experimental",
    "description": "Detects Stracciatella which executes a Powershell runspace from within C# (aka SharpPick technique) with AMSI, ETW and Script Block Logging disabled based on PE metadata characteristics.",
    "references": [
      "https://github.com/mgeeky/Stracciatella"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2023/04/17",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1059",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\Stracciatella.exe"
        },
        {
          "OriginalFileName": "Stracciatella.exe"
        },
        {
          "Description": "Stracciatella"
        },
        {
          "Hashes|contains": [
            "SHA256=9d25e61ec1527e2a69d7c2a4e3fe2fe15890710c198a66a9f25d99fdf6c7b956",
            "SHA256=fd16609bd9830c63b9413671678bb159b89c357d21942ddbb6b93add808d121a"
          ]
        },
        {
          "sha256": [
            "9d25e61ec1527e2a69d7c2a4e3fe2fe15890710c198a66a9f25d99fdf6c7b956",
            "fd16609bd9830c63b9413671678bb159b89c357d21942ddbb6b93add808d121a"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - SysmonEOP Execution",
    "id": 473,
    "status": "test",
    "description": "Detects the execution of the PoC that can be used to exploit Sysmon CVE-2022-41120",
    "references": [
      "https://github.com/Wh04m1001/SysmonEoP"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/12/04",
    "modified": "2023/02/04",
    "tags": [
      "cve.2022.41120",
      "attack.t1068",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\SysmonEOP.exe"
      },
      "selection_hash": [
        {
          "Hashes": [
            "IMPHASH=22F4089EB8ABA31E1BB162C6D9BF72E5",
            "IMPHASH=5123FA4C4384D431CD0D893EEB49BBEC"
          ]
        },
        {
          "Imphash": [
            "22f4089eb8aba31e1bb162c6d9bf72e5",
            "5123fa4c4384d431cd0d893eeb49bbec"
          ]
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - TruffleSnout Execution",
    "id": 474,
    "status": "test",
    "description": "Detects the use of TruffleSnout.exe an iterative AD discovery toolkit for offensive operators, situational awareness and targeted low noise enumeration.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1482/T1482.md",
      "https://github.com/dsnezhkov/TruffleSnout",
      "https://github.com/dsnezhkov/TruffleSnout/blob/master/TruffleSnout/Docs/USAGE.md"
    ],
    "author": "frack113",
    "date": "2022/08/20",
    "modified": "2023/02/13",
    "tags": [
      "attack.discovery",
      "attack.t1482"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "TruffleSnout.exe"
        },
        {
          "Image|endswith": "\\TruffleSnout.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - UACMe Akagi Execution",
    "id": 475,
    "status": "test",
    "description": "Detects the execution of UACMe, a tool used for UAC bypasses, via default PE metadata",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/11/19",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": [
        {
          "Product": "UACMe"
        },
        {
          "Company": [
            "REvol Corp",
            "APT 92",
            "UG North",
            "Hazardous Environments",
            "CD Project Rekt"
          ]
        },
        {
          "Description": [
            "UACMe main module",
            "Pentesting utility"
          ]
        },
        {
          "OriginalFileName": [
            "Akagi.exe",
            "Akagi64.exe"
          ]
        }
      ],
      "selection_img": {
        "Image|endswith": [
          "\\Akagi64.exe",
          "\\Akagi.exe"
        ]
      },
      "selection_hashes_sysmon": {
        "Hashes|contains": [
          "IMPHASH=767637C23BB42CD5D7397CF58B0BE688",
          "IMPHASH=14C4E4C72BA075E9069EE67F39188AD8",
          "IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC",
          "IMPHASH=7D010C6BB6A3726F327F7E239166D127",
          "IMPHASH=89159BA4DD04E4CE5559F132A9964EB3",
          "IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F",
          "IMPHASH=5834ED4291BDEB928270428EBBAF7604",
          "IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38",
          "IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894",
          "IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74",
          "IMPHASH=3DE09703C8E79ED2CA3F01074719906B"
        ]
      },
      "selection_hashes_other": {
        "Imphash": [
          "767637c23bb42cd5d7397cf58b0be688",
          "14c4e4c72ba075e9069ee67f39188ad8",
          "3c782813d4afce07bbfc5a9772acdbdc",
          "7d010c6bb6a3726f327f7e239166d127",
          "89159ba4dd04e4ce5559f132a9964eb3",
          "6f33f4a5fc42b8cec7314947bd13f30f",
          "5834ed4291bdeb928270428ebbaf7604",
          "5a8a8a43f25485e7ee1b201edcbc7a38",
          "dc7d30b90b2d8abf664fbed2b1b59894",
          "41923ea1f824fe63ea5beb84db7a3e74",
          "3de09703c8e79ed2ca3f01074719906b"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Windows Credential Editor (WCE) Execution",
    "id": 476,
    "status": "test",
    "description": "Detects the use of Windows Credential Editor (WCE)",
    "references": [
      "https://www.ampliasecurity.com/research/windows-credentials-editor/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/12/31",
    "modified": "2023/02/04",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": [
        {
          "Imphash": [
            "a53a02b997935fd8eedcb5f7abab9b9f",
            "e96a73c7bf33a464c510ede582318bf2"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=a53a02b997935fd8eedcb5f7abab9b9f",
            "IMPHASH=e96a73c7bf33a464c510ede582318bf2"
          ]
        }
      ],
      "selection_2": {
        "CommandLine|endswith": ".exe -S",
        "ParentImage|endswith": "\\services.exe"
      },
      "filter": {
        "Image|endswith": "\\clussvc.exe"
      },
      "condition": "1 of selection_* and not filter"
    },
    "falsepositives": [
      "Another service that uses a single -s command line switch"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HackTool - winPEAS Execution",
    "id": 477,
    "status": "test",
    "description": "WinPEAS is a script that search for possible paths to escalate privileges on Windows hosts. The checks are explained on book.hacktricks.xyz",
    "references": [
      "https://github.com/carlospolop/PEASS-ng",
      "https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation"
    ],
    "author": "Georg Lauenstein (sure[secure])",
    "date": "2022/09/19",
    "modified": "2023/03/23",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1082",
      "attack.t1087",
      "attack.t1046"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "winPEAS.exe"
        },
        {
          "Image|endswith": [
            "\\winPEASany_ofs.exe",
            "\\winPEASany.exe",
            "\\winPEASx64_ofs.exe",
            "\\winPEASx64.exe",
            "\\winPEASx86_ofs.exe",
            "\\winPEASx86.exe"
          ]
        }
      ],
      "selection_cli_option": {
        "CommandLine|contains": [
          " applicationsinfo",
          " browserinfo",
          " eventsinfo",
          " fileanalysis",
          " filesinfo",
          " processinfo",
          " servicesinfo",
          " windowscreds"
        ]
      },
      "selection_cli_dl": {
        "CommandLine|contains": "https://github.com/carlospolop/PEASS-ng/releases/latest/download/"
      },
      "selection_cli_specific": [
        {
          "ParentCommandLine|endswith": " -linpeas"
        },
        {
          "CommandLine|endswith": " -linpeas"
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - WinPwn Execution",
    "id": 478,
    "related": [
      {
        "id": "851fd622-b675-4d26-b803-14bc7baa517a",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects commandline keywords indicative of potential usge of the tool WinPwn. A tool for Windows and Active Directory reconnaissance and exploitation.\n",
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/12/04",
    "references": [
      "https://github.com/S3cur3Th1sSh1t/WinPwn",
      "https://www.publicnow.com/view/EB87DB49C654D9B63995FAD4C9DE3D3CC4F6C3ED?1671634841",
      "https://reconshell.com/winpwn-tool-for-internal-windows-pentesting-and-ad-security/",
      "https://github.com/redcanaryco/atomic-red-team/blob/4d6c4e8e23d465af7a2388620cfe3f8c76e16cf0/atomics/T1082/T1082.md",
      "https://grep.app/search?q=winpwn&filter[repo][0]=redcanaryco/atomic-red-team"
    ],
    "tags": [
      "attack.credential_access",
      "attack.defense_evasion",
      "attack.discovery",
      "attack.execution",
      "attack.privilege_escalation",
      "attack.t1046",
      "attack.t1082",
      "attack.t1106",
      "attack.t1518",
      "attack.t1548.002",
      "attack.t1552.001",
      "attack.t1555",
      "attack.t1555.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Offline_Winpwn",
          "WinPwn ",
          "WinPwn.exe",
          "WinPwn.ps1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - Wmiexec Default Powershell Command",
    "id": 479,
    "status": "test",
    "description": "Detects the execution of PowerShell with a specific flag sequence that is used by the Wmiexec script",
    "references": [
      "https://github.com/fortra/impacket/blob/f4b848fa27654ca95bc0f4c73dbba8b9c2c9f30a/examples/wmiexec.py"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/08",
    "tags": [
      "attack.defense_evasion",
      "attack.lateral_movement"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "-NoP -NoL -sta -NonI -W Hidden -Exec Bypass -Enc"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - XORDump Execution",
    "id": 480,
    "status": "test",
    "description": "Detects suspicious use of XORDump process memory dumping utility",
    "references": [
      "https://github.com/audibleblink/xordump"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/28",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\xordump.exe"
        },
        {
          "CommandLine|contains": [
            " -process lsass.exe ",
            " -m comsvcs ",
            " -m dbghelp ",
            " -m dbgcore "
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Another tool that uses the command line switches of XORdump"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious ZipExec Execution",
    "id": 481,
    "status": "test",
    "description": "ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into a password-protected zip file.",
    "references": [
      "https://twitter.com/SBousseaden/status/1451237393017839616",
      "https://github.com/Tylous/ZipExec"
    ],
    "author": "frack113",
    "date": "2021/11/07",
    "modified": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "run": {
        "CommandLine|contains|all": [
          "/generic:Microsoft_Windows_Shell_ZipFolder:filename=",
          ".zip",
          "/pass:",
          "/user:"
        ]
      },
      "delete": {
        "CommandLine|contains|all": [
          "/delete",
          "Microsoft_Windows_Shell_ZipFolder:filename=",
          ".zip"
        ]
      },
      "condition": "run or delete"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution of Hostname",
    "id": 482,
    "status": "test",
    "description": "Use of hostname to get information",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1082/T1082.md#atomic-test-6---hostname-discovery-windows",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/hostname"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "tags": [
      "attack.discovery",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\HOSTNAME.EXE"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious HWP Sub Processes",
    "id": 483,
    "status": "test",
    "description": "Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation",
    "references": [
      "https://www.securitynewspaper.com/2016/11/23/technical-teardown-exploit-malware-hwp-files/",
      "https://www.hybrid-analysis.com/search?query=context:74940dcc5b38f9f9b1a0fea760d344735d7d91b610e6d5bd34533dd0153402c5&from_sample=5db135000388385a7644131f&block_redirect=1",
      "https://twitter.com/cyberwar_15/status/1187287262054076416",
      "https://blog.alyac.co.kr/1901",
      "https://en.wikipedia.org/wiki/Hangul_(word_processor)"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/10/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001",
      "attack.execution",
      "attack.t1203",
      "attack.t1059.003",
      "attack.g0032"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\Hwp.exe",
        "Image|endswith": "\\gbb.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Fake Instance Of Hxtsr.EXE Executed",
    "id": 484,
    "status": "test",
    "description": "HxTsr.exe is a Microsoft compressed executable file called Microsoft Outlook Communications.\nHxTsr.exe is part of Outlook apps, because it resides in a hidden \"WindowsApps\" subfolder of \"C:\\Program Files\".\nAny instances of hxtsr.exe not in this folder may be malware camouflaging itself as HxTsr.exe\n",
    "references": [
      "Internal Research"
    ],
    "author": "Sreeman",
    "date": "2020/04/17",
    "modified": "2024/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\hxtsr.exe"
      },
      "filter_main_hxtsr": {
        "Image|contains": ":\\program files\\windowsapps\\microsoft.windowscommunicationsapps_",
        "Image|endswith": "\\hxtsr.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use Icacls to Hide File to Everyone",
    "id": 485,
    "status": "test",
    "description": "Detect use of icacls to deny access for everyone in Users folder sometimes used to hide malicious files",
    "references": [
      "https://app.any.run/tasks/1df999e6-1cb8-45e3-8b61-499d1b7d5a9b/"
    ],
    "author": "frack113",
    "date": "2022/07/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_icacls": [
        {
          "OriginalFileName": "iCACLS.EXE"
        },
        {
          "Image|endswith": "\\icacls.exe"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains|all": [
          "C:\\Users\\",
          "/deny",
          "*S-1-1-0:"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download And Execution Via IEExec.EXE",
    "id": 486,
    "status": "test",
    "description": "Detects execution of the IEExec utility to download and execute files",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ieexec/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/05/16",
    "modified": "2023/11/09",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\IEExec.exe"
        },
        {
          "OriginalFileName": "IEExec.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Self Extracting Package Creation Via Iexpress.EXE From Potentially Suspicious Location",
    "id": 487,
    "status": "experimental",
    "description": "Detects the use of iexpress.exe to create binaries via Self Extraction Directive (SED) files located in potentially suspicious locations.\nThis behavior has been observed in-the-wild by different threat actors.\n",
    "references": [
      "https://strontic.github.io/xcyclopedia/library/iexpress.exe-D594B2A33EFAFD0EABF09E3FDC05FCEA.html",
      "https://en.wikipedia.org/wiki/IExpress",
      "https://decoded.avast.io/janvojtesek/raspberry-robins-roshtyak-a-little-lesson-in-trickery/",
      "https://www.virustotal.com/gui/file/602f4ae507fa8de57ada079adff25a6c2a899bd25cd092d0af7e62cdb619c93c/behavior"
    ],
    "author": "Joseliyo Sanchez, @Joseliyo_Jstnk, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\iexpress.exe"
        },
        {
          "OriginalFileName": "IEXPRESS.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " /n "
      },
      "selection_paths": {
        "CommandLine|contains": [
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Windows\\System32\\Tasks\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrators building packages using iexpress.exe"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Windows IIS HTTP Logging",
    "id": 488,
    "status": "test",
    "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union)",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.002/T1562.002.md#atomic-test-1---disable-windows-iis-http-logging"
    ],
    "author": "frack113",
    "date": "2022/01/09",
    "modified": "2023/01/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\appcmd.exe"
        },
        {
          "OriginalFileName": "appcmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "set",
          "config",
          "section:httplogging",
          "dontLog:true"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Microsoft IIS Service Account Password Dumped",
    "id": 489,
    "status": "test",
    "description": "Detects the Internet Information Services (IIS) command-line tool, AppCmd, being used to list passwords",
    "references": [
      "https://www.elastic.co/guide/en/security/current/microsoft-iis-service-account-password-dumped.html",
      "https://twitter.com/0gtweet/status/1588815661085917186?cxt=HHwWhIDUyaDbzYwsAAAA",
      "https://www.netspi.com/blog/technical/network-penetration-testing/decrypting-iis-passwords-to-break-out-of-the-dmz-part-2/"
    ],
    "author": "Tim Rauch, Janantha Marasinghe, Elastic (original idea)",
    "date": "2022/11/08",
    "modified": "2023/01/22",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_base_name": [
        {
          "Image|endswith": "\\appcmd.exe"
        },
        {
          "OriginalFileName": "appcmd.exe"
        }
      ],
      "selection_base_list": {
        "CommandLine|contains": "list "
      },
      "selection_standalone": {
        "CommandLine|contains": [
          " /config",
          " /xml",
          " -config",
          " -xml"
        ]
      },
      "selection_cmd_flags": {
        "CommandLine|contains": [
          " /@t",
          " /text",
          " /show",
          " -@t",
          " -text",
          " -show"
        ]
      },
      "selection_cmd_grep": {
        "CommandLine|contains": [
          ":\\*",
          "password"
        ]
      },
      "condition": "all of selection_base_* and (selection_standalone or all of selection_cmd_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "IIS Native-Code Module Command Line Installation",
    "id": 490,
    "status": "test",
    "description": "Detects suspicious IIS native-code module installations via command line",
    "references": [
      "https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/",
      "https://www.microsoft.com/security/blog/2022/07/26/malicious-iis-extensions-quietly-open-persistent-backdoors-into-servers/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/12/11",
    "modified": "2023/01/22",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\appcmd.exe"
        },
        {
          "OriginalFileName": "appcmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "install",
          "module"
        ],
        "CommandLine|contains": [
          "/name:",
          "-name:"
        ]
      },
      "filter_iis_setup": {
        "ParentImage": "C:\\Windows\\System32\\inetsrv\\iissetup.exe"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown as it may vary from organisation to organisation how admins use to install IIS modules"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious IIS URL GlobalRules Rewrite Via AppCmd",
    "id": 491,
    "status": "test",
    "description": "Detects usage of \"appcmd\" to create new global URL rewrite rules. This behaviour has been observed being used by threat actors to add new rules so they can access their webshells.",
    "references": [
      "https://twitter.com/malmoeb/status/1616702107242971144",
      "https://learn.microsoft.com/en-us/answers/questions/739120/how-to-add-re-write-global-rule-with-action-type-r"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/22",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\appcmd.exe"
        },
        {
          "OriginalFileName": "appcmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "set",
          "config",
          "section:system.webServer/rewrite/globalRules",
          "commit:"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of appcmd to add new URL rewrite rules"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Microsoft IIS Connection Strings Decryption",
    "id": 492,
    "status": "test",
    "description": "Detects use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command.",
    "references": [
      "https://www.elastic.co/guide/en/security/current/microsoft-iis-connection-strings-decryption.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/28",
    "modified": "2022/12/30",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_name": [
        {
          "Image|endswith": "\\aspnet_regiis.exe"
        },
        {
          "OriginalFileName": "aspnet_regiis.exe"
        }
      ],
      "selection_args": {
        "CommandLine|contains|all": [
          "connectionStrings",
          " -pdf"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious IIS Module Registration",
    "id": 493,
    "status": "test",
    "description": "Detects a suspicious IIS module registration as described in Microsoft threat report on IIS backdoors",
    "references": [
      "https://www.microsoft.com/security/blog/2022/07/26/malicious-iis-extensions-quietly-open-persistent-backdoors-into-servers/"
    ],
    "author": "Florian Roth (Nextron Systems), Microsoft (idea)",
    "date": "2022/08/04",
    "modified": "2023/01/23",
    "tags": [
      "attack.persistence",
      "attack.t1505.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\w3wp.exe"
      },
      "selection_cli_1": {
        "CommandLine|contains": "appcmd.exe add module"
      },
      "selection_cli_2": {
        "CommandLine|contains": " system.enterpriseservices.internal.publish",
        "Image|endswith": "\\powershell.exe"
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          "gacutil",
          " /I"
        ]
      },
      "condition": "selection_parent and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ImagingDevices Unusual Parent/Child Processes",
    "id": 494,
    "status": "test",
    "description": "Detects unusual parent or children of the ImagingDevices.exe (Windows Contacts) process as seen being used with Bumblebee activity",
    "references": [
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/27",
    "modified": "2022/12/29",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\WmiPrvSE.exe",
          "\\svchost.exe",
          "\\dllhost.exe"
        ],
        "Image|endswith": "\\ImagingDevices.exe"
      },
      "selection_child": {
        "ParentImage|endswith": "\\ImagingDevices.exe"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via IMEWDBLD.EXE",
    "id": 495,
    "related": [
      {
        "id": "8d7e392e-9b28-49e1-831d-5949c6281228",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of \"IMEWDBLD.exe\" to download arbitrary files",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1105/T1105.md#atomic-test-10---windows---powershell-download",
      "https://lolbas-project.github.io/lolbas/Binaries/IMEWDBLD/"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\IMEWDBLD.exe"
        },
        {
          "OriginalFileName": "imewdbld.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "InfDefaultInstall.exe .inf Execution",
    "id": 496,
    "status": "test",
    "description": "Executes SCT script using scrobj.dll from a command in entered into a specially prepared INF file.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md#atomic-test-4---infdefaultinstallexe-inf-execution",
      "https://lolbas-project.github.io/lolbas/Binaries/Infdefaultinstall/"
    ],
    "author": "frack113",
    "date": "2021/07/13",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "InfDefaultInstall.exe ",
          ".inf"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download Via InstallUtil.EXE",
    "id": 497,
    "status": "test",
    "description": "Detects use of .NET InstallUtil.exe in order to download arbitrary files. The files will be written to \"%LOCALAPPDATA%\\Microsoft\\Windows\\INetCache\\IE\\\"\n",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/239"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\InstallUtil.exe"
        },
        {
          "OriginalFileName": "InstallUtil.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "ftp://",
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution of InstallUtil Without Log",
    "id": 498,
    "status": "test",
    "description": "Uses the .NET InstallUtil.exe application in order to execute image without log",
    "references": [
      "https://securelist.com/moonbounce-the-dark-side-of-uefi-firmware/105468/",
      "https://docs.microsoft.com/en-us/dotnet/framework/tools/installutil-exe-installer-tool"
    ],
    "author": "frack113",
    "date": "2022/01/23",
    "modified": "2022/02/04",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\InstallUtil.exe",
        "Image|contains": "Microsoft.NET\\Framework",
        "CommandLine|contains|all": [
          "/logfile= ",
          "/LogToConsole=false"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Shells Spawn by Java Utility Keytool",
    "id": 499,
    "status": "test",
    "description": "Detects suspicious shell spawn from Java utility keytool process (e.g. adselfservice plus exploitation)",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-december-2021",
      "https://www.synacktiv.com/en/publications/how-to-exploit-cve-2021-40539-on-manageengine-adselfservice-plus.html"
    ],
    "author": "Andreas Hunkeler (@Karneades)",
    "date": "2021/12/22",
    "modified": "2023/01/21",
    "tags": [
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\keytool.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\sh.exe",
          "\\bash.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\schtasks.exe",
          "\\certutil.exe",
          "\\whoami.exe",
          "\\bitsadmin.exe",
          "\\wscript.exe",
          "\\cscript.exe",
          "\\scrcons.exe",
          "\\regsvr32.exe",
          "\\hh.exe",
          "\\wmic.exe",
          "\\mshta.exe",
          "\\rundll32.exe",
          "\\forfiles.exe",
          "\\scriptrunner.exe",
          "\\mftrace.exe",
          "\\AppVLP.exe",
          "\\systeminfo.exe",
          "\\reg.exe",
          "\\query.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Child Process Of Manage Engine ServiceDesk",
    "id": 500,
    "status": "experimental",
    "description": "Detects suspicious child processes of the \"Manage Engine ServiceDesk Plus\" Java web service",
    "references": [
      "https://www.horizon3.ai/manageengine-cve-2022-47966-technical-deep-dive/",
      "https://github.com/horizon3ai/CVE-2022-47966/blob/3a51c6b72ebbd87392babd955a8fbeaee2090b35/CVE-2022-47966.py",
      "https://blog.viettelcybersecurity.com/saml-show-stopper/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/01/18",
    "modified": "2023/08/29",
    "tags": [
      "attack.command_and_control",
      "attack.t1102"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|contains|all": [
          "\\ManageEngine\\ServiceDesk\\",
          "\\java.exe"
        ],
        "Image|endswith": [
          "\\AppVLP.exe",
          "\\bash.exe",
          "\\bitsadmin.exe",
          "\\calc.exe",
          "\\certutil.exe",
          "\\cscript.exe",
          "\\curl.exe",
          "\\forfiles.exe",
          "\\mftrace.exe",
          "\\mshta.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\notepad.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\query.exe",
          "\\reg.exe",
          "\\schtasks.exe",
          "\\scrcons.exe",
          "\\sh.exe",
          "\\systeminfo.exe",
          "\\whoami.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "filter_main_net": {
        "Image|endswith": [
          "\\net.exe",
          "\\net1.exe"
        ],
        "CommandLine|contains": " stop"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate sub processes started by Manage Engine ServiceDesk Pro"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Java Running with Remote Debugging",
    "id": 501,
    "status": "test",
    "description": "Detects a JAVA process running with remote debugging allowing more than just localhost to connect",
    "references": [
      "https://dzone.com/articles/remote-debugging-java-applications-with-jdwp"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2023/02/01",
    "tags": [
      "attack.t1203",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_jdwp_transport": {
        "CommandLine|contains": "transport=dt_socket,address="
      },
      "selection_old_jvm_version": {
        "CommandLine|contains": [
          "jre1.",
          "jdk1."
        ]
      },
      "exclusion": {
        "CommandLine|contains": [
          "address=127.0.0.1",
          "address=localhost"
        ]
      },
      "condition": "all of selection_* and not exclusion"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Processes Spawned by Java.EXE",
    "id": 502,
    "related": [
      {
        "id": "dff1e1cc-d3fd-47c8-bfc2-aeb878a754c0",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious processes spawned from a Java host process which could indicate a sign of exploitation (e.g. log4j)",
    "references": [
      "https://www.lunasec.io/docs/blog/log4j-zero-day/"
    ],
    "author": "Andreas Hunkeler (@Karneades), Florian Roth",
    "date": "2021/12/17",
    "modified": "2024/01/18",
    "tags": [
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\java.exe",
        "Image|endswith": [
          "\\AppVLP.exe",
          "\\bitsadmin.exe",
          "\\certutil.exe",
          "\\cscript.exe",
          "\\curl.exe",
          "\\forfiles.exe",
          "\\hh.exe",
          "\\mftrace.exe",
          "\\mshta.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\query.exe",
          "\\reg.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\schtasks.exe",
          "\\scrcons.exe",
          "\\scriptrunner.exe",
          "\\sh.exe",
          "\\systeminfo.exe",
          "\\whoami.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate calls to system binaries",
      "Company specific internal usage"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Shell Process Spawned by Java.EXE",
    "id": 503,
    "related": [
      {
        "id": "0d34ed8b-1c12-4ff2-828c-16fc860b766d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects shell spawned from Java host process, which could be a sign of exploitation (e.g. log4j exploitation)",
    "references": [
      "https://www.lunasec.io/docs/blog/log4j-zero-day/"
    ],
    "author": "Andreas Hunkeler (@Karneades), Nasreddine Bencherchali",
    "date": "2021/12/17",
    "modified": "2024/01/18",
    "tags": [
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\java.exe",
        "Image|endswith": [
          "\\bash.exe",
          "\\cmd.exe",
          "\\powershell.exe",
          "\\pwsh.exe"
        ]
      },
      "filter_main_build": {
        "ParentImage|contains": "build",
        "CommandLine|contains": "build"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate calls to system binaries",
      "Company specific internal usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious SysAidServer Child",
    "id": 504,
    "status": "test",
    "description": "Detects suspicious child processes of SysAidServer (as seen in MERCURY threat actor intrusions)",
    "references": [
      "https://www.microsoft.com/security/blog/2022/08/25/mercury-leveraging-log4j-2-vulnerabilities-in-unpatched-systems-to-target-israeli-organizations/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/26",
    "tags": [
      "attack.lateral_movement",
      "attack.t1210"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "ParentCommandLine|contains": "SysAidServer"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Kernel Debugger Execution",
    "id": 505,
    "status": "experimental",
    "description": "Detects execution of the Windows Kernel Debugger \"kd.exe\".",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\kd.exe"
        },
        {
          "OriginalFileName": "kd.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Rare occasions of legitimate cases where kernel debugging is necessary in production. Investigation is required"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Computer Password Change Via Ksetup.EXE",
    "id": 506,
    "status": "test",
    "description": "Detects password change for the computer's domain account or host principal via \"ksetup.exe\"",
    "references": [
      "https://twitter.com/Oddvarmoe/status/1641712700605513729",
      "https://learn.microsoft.com/en-gb/windows-server/administration/windows-commands/ksetup"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/06",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ksetup.exe"
        },
        {
          "OriginalFileName": "ksetup.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " /setcomputerpassword "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Logged-On User Password Change Via Ksetup.EXE",
    "id": 507,
    "status": "test",
    "description": "Detects password change for the logged-on user's via \"ksetup.exe\"",
    "references": [
      "https://learn.microsoft.com/en-gb/windows-server/administration/windows-commands/ksetup"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/06",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ksetup.exe"
        },
        {
          "OriginalFileName": "ksetup.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " /ChangePassword "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Active Directory Structure Export Via Ldifde.EXE",
    "id": 508,
    "status": "test",
    "description": "Detects the execution of \"ldifde.exe\" in order to export organizational Active Directory structure.",
    "references": [
      "https://businessinsights.bitdefender.com/deep-dive-into-a-backdoordiplomacy-attack-a-study-of-an-attackers-toolkit",
      "https://www.documentcloud.org/documents/5743766-Global-Threat-Report-2019.html",
      "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731033(v=ws.11)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/14",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_ldif": [
        {
          "Image|endswith": "\\ldifde.exe"
        },
        {
          "OriginalFileName": "ldifde.exe"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains": "-f"
      },
      "filter_import": {
        "CommandLine|contains": " -i"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Import LDAP Data Interchange Format File Via Ldifde.EXE",
    "id": 509,
    "status": "test",
    "description": "Detects the execution of \"Ldifde.exe\" with the import flag \"-i\". The can be abused to include HTTP-based arguments which will allow the arbitrary download of files from a remote server.\n",
    "references": [
      "https://twitter.com/0gtweet/status/1564968845726580736",
      "https://strontic.github.io/xcyclopedia/library/ldifde.exe-979DE101F5059CEC1D2C56967CA2BAC0.html",
      "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731033(v=ws.11)"
    ],
    "author": "@gott_cyber",
    "date": "2022/09/02",
    "modified": "2023/03/14",
    "tags": [
      "attack.command_and_control",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ldifde.exe"
        },
        {
          "OriginalFileName": "ldifde.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "-i",
          "-f"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Since the content of the files are unknown, false positives are expected"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Rebuild Performance Counter Values Via Lodctr.EXE",
    "id": 510,
    "status": "experimental",
    "description": "Detects the execution of \"lodctr.exe\" to rebuild the performance counter registry values. This can be abused by attackers by providing a malicious config file to overwrite performance counter configuration to confuse and evade monitoring and security solutions.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/identity-protection/virtual-smart-cards/virtual-smart-card-tpmvscmgr"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/15",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\lodctr.exe",
        "OriginalFileName": "LODCTR.EXE"
      },
      "selection_cli": {
        "CommandLine|contains": [
          " /r",
          " -r"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage by an administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Windows Trace ETW Session Tamper Via Logman.EXE",
    "id": 511,
    "status": "test",
    "description": "Detects the execution of \"logman\" utility in order to disable or delete Windows trace sessions",
    "references": [
      "https://twitter.com/0gtweet/status/1359039665232306183?s=21",
      "https://ss64.com/nt/logman.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/02/11",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001",
      "attack.t1070.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\logman.exe"
        },
        {
          "OriginalFileName": "Logman.exe"
        }
      ],
      "selection_action": {
        "CommandLine|contains": [
          "stop ",
          "delete "
        ]
      },
      "selection_service": {
        "CommandLine|contains": [
          "Circular Kernel Context Logger",
          "EventLog-",
          "SYSMON TRACE",
          "SysmonDnsEtwSession"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate deactivation by administrative staff",
      "Installer tools that disable services, e.g. before log collection agent installation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WinDbg/CDB LOLBIN Usage",
    "id": 512,
    "status": "test",
    "description": "Detects usage of \"cdb.exe\" to launch 64-bit shellcode or arbitrary processes or commands from a debugger script file",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Cdb/",
      "https://web.archive.org/web/20170715043507/http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html",
      "https://twitter.com/nas_bench/status/1534957360032120833"
    ],
    "author": "Beyu Denis, oscd.community, Nasreddine Bencherchali",
    "date": "2019/10/26",
    "modified": "2023/01/04",
    "tags": [
      "attack.execution",
      "attack.t1106",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cdb.exe"
        },
        {
          "OriginalFileName": "CDB.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -c ",
          " -cf "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate use of debugging tools"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Custom Class Execution via Xwizard",
    "id": 513,
    "status": "test",
    "description": "Detects the execution of Xwizard tool with specific arguments which utilized to run custom class properties.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Xwizard/"
    ],
    "author": "Ensar \u00c5\u017eamil, @sblmsrsn, @oscd_initiative",
    "date": "2020/10/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\xwizard.exe",
        "CommandLine|re": "\\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Cmdl32 Execution",
    "id": 514,
    "status": "test",
    "description": "lolbas Cmdl32 is use to download a payload to evade antivirus",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Cmdl32/",
      "https://twitter.com/SwiftOnSecurity/status/1455897435063074824"
    ],
    "author": "frack113",
    "date": "2021/11/03",
    "modified": "2022/06/12",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmdl32.exe"
        },
        {
          "OriginalFileName": "CMDL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/vpn ",
          "/lan "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious ConfigSecurityPolicy Execution",
    "id": 515,
    "status": "test",
    "description": "Upload file, credentials or data exfiltration with Binary part of Windows Defender",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/ConfigSecurityPolicy/"
    ],
    "author": "frack113",
    "date": "2021/11/26",
    "modified": "2022/05/16",
    "tags": [
      "attack.exfiltration",
      "attack.t1567"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "lolbas": [
        {
          "CommandLine|contains": "ConfigSecurityPolicy.exe"
        },
        {
          "Image|endswith": "\\ConfigSecurityPolicy.exe"
        },
        {
          "OriginalFileName": "ConfigSecurityPolicy.exe"
        }
      ],
      "remote": {
        "CommandLine|contains": [
          "https://",
          "http://",
          "ftp://"
        ]
      },
      "condition": "lolbas and remote"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious CustomShellHost Execution",
    "id": 516,
    "status": "test",
    "description": "Detects the execution of CustomShellHost binary where the child isn't located in 'C:\\Windows\\explorer.exe'",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/180",
      "https://lolbas-project.github.io/lolbas/Binaries/CustomShellHost/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\CustomShellHost.exe"
      },
      "filter": {
        "Image": "C:\\Windows\\explorer.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LOLBAS Data Exfiltration by DataSvcUtil.exe",
    "id": 517,
    "status": "test",
    "description": "Detects when a user performs data exfiltration by using DataSvcUtil.exe",
    "references": [
      "https://gist.github.com/teixeira0xfffff/837e5bfed0d1b0a29a7cb1e5dbdd9ca6",
      "https://docs.microsoft.com/en-us/dotnet/framework/data/wcf/wcf-data-service-client-utility-datasvcutil-exe",
      "https://docs.microsoft.com/en-us/dotnet/framework/data/wcf/generating-the-data-service-client-library-wcf-data-services",
      "https://docs.microsoft.com/en-us/dotnet/framework/data/wcf/how-to-add-a-data-service-reference-wcf-data-services",
      "https://lolbas-project.github.io/lolbas/Binaries/DataSvcUtil/"
    ],
    "author": "Ialle Teixeira @teixeira0xfffff, Austin Songer @austinsonger",
    "date": "2021/09/30",
    "modified": "2022/05/16",
    "tags": [
      "attack.exfiltration",
      "attack.t1567"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cli": {
        "CommandLine|contains": [
          "/in:",
          "/out:",
          "/uri:"
        ]
      },
      "selection_img": [
        {
          "Image|endswith": "\\DataSvcUtil.exe"
        },
        {
          "OriginalFileName": "DataSvcUtil.exe"
        }
      ],
      "condition": "all of selection*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "DataSvcUtil.exe being used may be performed by a system administrator.",
      "Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
      "DataSvcUtil.exe being executed from unfamiliar users should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ZOHO Dctask64 Process Injection",
    "id": 518,
    "status": "test",
    "description": "Detects suspicious process injection using ZOHO's dctask64.exe",
    "references": [
      "https://twitter.com/gN3mes1s/status/1222088214581825540",
      "https://twitter.com/gN3mes1s/status/1222095963789111296",
      "https://twitter.com/gN3mes1s/status/1222095371175911424"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/01/28",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dctask64.exe"
      },
      "filter": {
        "CommandLine|contains": "DesktopCentral_Agent\\agent"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "ParentImage"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Lolbin Defaultpack.exe Use As Proxy",
    "id": 519,
    "status": "test",
    "description": "Detect usage of the \"defaultpack.exe\" binary as a proxy to launch other programs",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/DefaultPack/",
      "https://www.echotrail.io/insights/search/defaultpack.exe"
    ],
    "author": "frack113",
    "date": "2022/12/31",
    "tags": [
      "attack.t1218",
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\defaultpack.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DeviceCredentialDeployment Execution",
    "id": 520,
    "status": "test",
    "description": "Detects the execution of DeviceCredentialDeployment to hide a process from view",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/147"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\DeviceCredentialDeployment.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Devtoolslauncher.exe Executes Specified Binary",
    "id": 521,
    "status": "test",
    "description": "The Devtoolslauncher.exe executes other binary",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Devtoolslauncher/",
      "https://twitter.com/_felamos/status/1179811992841797632"
    ],
    "author": "Beyu Denis, oscd.community (rule), @_felamos (idea)",
    "date": "2019/10/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\devtoolslauncher.exe",
        "CommandLine|contains": "LaunchForDeploy"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of devtoolslauncher.exe by legitimate user"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Diantz Alternate Data Stream Execution",
    "id": 522,
    "status": "test",
    "description": "Compress target file into a cab file stored in the Alternate Data Stream (ADS) of the target file.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Diantz/"
    ],
    "author": "frack113",
    "date": "2021/11/26",
    "modified": "2022/12/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "diantz.exe",
          ".cab"
        ],
        "CommandLine|re": ":[^\\\\]"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Very Possible"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Diantz Download and Compress Into a CAB File",
    "id": 523,
    "status": "test",
    "description": "Download and compress a remote file and store it in a cab file on local machine.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Diantz/"
    ],
    "author": "frack113",
    "date": "2021/11/26",
    "modified": "2022/08/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "diantz.exe",
          " \\\\\\\\",
          ".cab"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Xwizard DLL Sideloading",
    "id": 524,
    "status": "test",
    "description": "Detects the execution of Xwizard tool from the non-default directory which can be used to sideload a custom xwizards.dll",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Xwizard/",
      "http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/09/20",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\xwizard.exe"
      },
      "filter": {
        "Image|startswith": "C:\\Windows\\System32\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Windows installed on non-C drive"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Application Whitelisting Bypass via Dnx.exe",
    "id": 525,
    "status": "test",
    "description": "Execute C# code located in the consoleapp folder",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Csi/",
      "https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/"
    ],
    "author": "Beyu Denis, oscd.community",
    "date": "2019/10/26",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1027.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dnx.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of dnx.exe by legitimate user"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Dotnet.exe Exec Dll and Execute Unsigned Code LOLBIN",
    "id": 526,
    "status": "test",
    "description": "dotnet.exe will execute any DLL and execute unsigned code",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Dotnet/",
      "https://twitter.com/_felamos/status/1204705548668555264",
      "https://bohops.com/2019/08/19/dotnet-core-a-vector-for-awl-bypass-defense-evasion/"
    ],
    "author": "Beyu Denis, oscd.community",
    "date": "2020/10/18",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\dotnet.exe"
        },
        {
          "OriginalFileName": ".NET Host"
        }
      ],
      "selection_cli": {
        "CommandLine|endswith": [
          ".dll",
          ".csproj"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "System administrator Usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Memory Dump Via Dotnet-Dump",
    "id": 527,
    "status": "test",
    "description": "Detects the execution of \"dotnet-dump\" with the \"collect\" flag. The execution could indicate potential process dumping of critical processes such as LSASS",
    "references": [
      "https://learn.microsoft.com/en-us/dotnet/core/diagnostics/dotnet-dump#dotnet-dump-collect",
      "https://twitter.com/bohops/status/1635288066909966338"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\dotnet-dump.exe"
        },
        {
          "OriginalFileName": "dotnet-dump.dll"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "collect"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Process dumping is the expected behavior of the tool. So false positives are expected in legitimate usage. The PID/Process Name of the process being dumped needs to be investigated"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Dump64.exe Execution",
    "id": 528,
    "status": "test",
    "description": "Detects when a user bypasses Defender by renaming a tool to dump64.exe and placing it in a Visual Studio folder",
    "references": [
      "https://twitter.com/mrd0x/status/1460597833917251595"
    ],
    "author": "Austin Songer @austinsonger, Florian Roth",
    "date": "2021/11/26",
    "modified": "2023/03/24",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dump64.exe"
      },
      "procdump_flags": {
        "CommandLine|contains": [
          " -ma ",
          "accepteula"
        ]
      },
      "filter": {
        "Image|contains": "\\Installer\\Feedback\\dump64.exe"
      },
      "condition": "( selection and not filter ) or ( selection and procdump_flags )"
    },
    "falsepositives": [
      "Dump64.exe in other folders than the excluded one"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Extexport Execution",
    "id": 529,
    "status": "test",
    "description": "Extexport.exe loads dll and is execute from other folder the original path",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Extexport/"
    ],
    "author": "frack113",
    "date": "2021/11/26",
    "modified": "2022/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|contains": "Extexport.exe"
        },
        {
          "Image|endswith": "\\Extexport.exe"
        },
        {
          "OriginalFileName": "extexport.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Extrac32 Execution",
    "id": 530,
    "status": "test",
    "description": "Download or Copy file with Extrac32",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Extrac32/"
    ],
    "author": "frack113",
    "date": "2021/11/26",
    "modified": "2022/08/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_lolbas": [
        {
          "CommandLine|contains": "extrac32.exe"
        },
        {
          "Image|endswith": "\\extrac32.exe"
        },
        {
          "OriginalFileName": "extrac32.exe"
        }
      ],
      "selection_archive": {
        "CommandLine|contains": ".cab"
      },
      "selection_options": {
        "CommandLine|contains": [
          "/C",
          "/Y",
          " \\\\\\\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Extrac32 Alternate Data Stream Execution",
    "id": 531,
    "status": "test",
    "description": "Extract data from cab file and hide it in an alternate data stream",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Extrac32/"
    ],
    "author": "frack113",
    "date": "2021/11/26",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "extrac32.exe",
          ".cab"
        ],
        "CommandLine|re": ":[^\\\\]"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Format.com FileSystem LOLBIN",
    "id": 532,
    "status": "test",
    "description": "Detects the execution of format.com with a suspicious filesystem selection that could indicate a defense evasion activity in which format.com is used to load malicious DLL files or other programs",
    "references": [
      "https://twitter.com/0gtweet/status/1477925112561209344",
      "https://twitter.com/wdormann/status/1478011052130459653?s=20"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/04",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\format.com",
        "CommandLine|contains": "/fs:"
      },
      "filter": {
        "CommandLine|contains": [
          "/fs:FAT",
          "/fs:exFAT",
          "/fs:NTFS",
          "/fs:UDF",
          "/fs:ReFS"
        ]
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use of FSharp Interpreters",
    "id": 533,
    "status": "test",
    "description": "The FSharp Interpreters, FsiAnyCpu.exe and FSi.exe, can be used for AWL bypass and is listed in Microsoft recommended block rules.",
    "references": [
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-block-rules",
      "https://bohops.com/2020/11/02/exploring-the-wdac-microsoft-recommended-block-rules-part-ii-wfc-fsi/",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/FsiAnyCpu/",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Fsi/"
    ],
    "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io",
    "date": "2022/06/02",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\fsianycpu.exe"
        },
        {
          "OriginalFileName": "fsianycpu.exe"
        },
        {
          "Image|endswith": "\\fsi.exe"
        },
        {
          "OriginalFileName": "fsi.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use by a software developer."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LOLBIN Execution Of The FTP.EXE Binary",
    "id": 534,
    "status": "test",
    "description": "Detects execution of ftp.exe script execution with the \"-s\" or \"/s\" flag and any child processes ran by ftp.exe",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ftp/"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2020/10/09",
    "modified": "2023/08/11",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\ftp.exe"
      },
      "selection_ftp_img": [
        {
          "Image|endswith": "\\ftp.exe"
        },
        {
          "OriginalFileName": "ftp.exe"
        }
      ],
      "selection_ftp_cli": {
        "CommandLine|contains": [
          "-s:",
          "/s:"
        ]
      },
      "condition": "selection_parent or all of selection_ftp_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Reconnaissance Activity Via GatherNetworkInfo.VBS",
    "id": 535,
    "related": [
      {
        "id": "f92a6f1e-a512-4a15-9735-da09e78d7273",
        "type": "similar"
      },
      {
        "id": "07aa184a-870d-413d-893a-157f317f6f58",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine",
    "references": [
      "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
      "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
    ],
    "author": "blueteamer8699",
    "date": "2022/01/03",
    "modified": "2023/02/08",
    "tags": [
      "attack.discovery",
      "attack.execution",
      "attack.t1615",
      "attack.t1059.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\cscript.exe",
            "\\wscript.exe"
          ]
        },
        {
          "OriginalFileName": [
            "cscript.exe",
            "wscript.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "gatherNetworkInfo.vbs"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Gpscript Execution",
    "id": 536,
    "status": "experimental",
    "description": "Detects the execution of the LOLBIN gpscript, which executes logon or startup scripts configured in Group Policy",
    "references": [
      "https://oddvar.moe/2018/04/27/gpscript-exe-another-lolbin-to-the-list/",
      "https://lolbas-project.github.io/lolbas/Binaries/Gpscript/"
    ],
    "author": "frack113",
    "date": "2022/05/16",
    "modified": "2023/06/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\gpscript.exe"
        },
        {
          "OriginalFileName": "GPSCRIPT.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /logon",
          " /startup"
        ]
      },
      "filter_main_svchost": {
        "ParentCommandLine": "C:\\windows\\system32\\svchost.exe -k netsvcs -p -s gpsvc"
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate uses of logon scripts distributed via group policy"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Ie4uinit Lolbin Use From Invalid Path",
    "id": 537,
    "status": "test",
    "description": "Detect use of ie4uinit.exe to execute commands from a specially prepared ie4uinit.inf file from a directory other than the usual directories",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ie4uinit/",
      "https://bohops.com/2018/03/10/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence-part-2/"
    ],
    "author": "frack113",
    "date": "2022/05/07",
    "modified": "2022/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "lolbin": [
        {
          "Image|endswith": "\\ie4uinit.exe"
        },
        {
          "OriginalFileName": "IE4UINIT.EXE"
        }
      ],
      "filter_correct": {
        "CurrentDirectory": [
          "c:\\windows\\system32\\",
          "c:\\windows\\sysWOW64\\"
        ]
      },
      "filter_missing": {
        "CurrentDirectory": null
      },
      "condition": "lolbin and not 1 of filter_*"
    },
    "falsepositives": [
      "ViberPC updater calls this binary with the following commandline \"ie4uinit.exe -ClearIconCache\""
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Ilasm Lolbin Use Compile C-Sharp",
    "id": 538,
    "status": "test",
    "description": "Detect use of Ilasm.exe to compile c# code into dll or exe.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ilasm/",
      "https://www.echotrail.io/insights/search/ilasm.exe"
    ],
    "author": "frack113",
    "date": "2022/05/07",
    "modified": "2022/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\ilasm.exe"
        },
        {
          "OriginalFileName": "ilasm.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "JSC Convert Javascript To Executable",
    "id": 539,
    "status": "test",
    "description": "Detects the execution of the LOLBIN jsc.exe used by .NET to compile javascript code to .exe or .dll format",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Jsc/"
    ],
    "author": "frack113",
    "date": "2022/05/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\jsc.exe",
        "CommandLine|contains": ".js"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Kavremover Dropped Binary LOLBIN Usage",
    "id": 540,
    "status": "test",
    "description": "Detects the execution of a signed binary dropped by Kaspersky Lab Products Remover (kavremover) which can be abused as a LOLBIN to execute arbitrary commands and binaries.",
    "references": [
      "https://nasbench.medium.com/lolbined-using-kaspersky-endpoint-security-kes-installer-to-execute-arbitrary-commands-1c999f1b7fea"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": " run run-cmd "
      },
      "filter": {
        "ParentImage|endswith": [
          "\\kavremover.exe",
          "\\cleanapi.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Launch-VsDevShell.PS1 Proxy Execution",
    "id": 541,
    "status": "test",
    "description": "Detects the use of the 'Launch-VsDevShell.ps1' Microsoft signed script to execute commands.",
    "references": [
      "https://twitter.com/nas_bench/status/1535981653239255040"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_script": {
        "CommandLine|contains": "Launch-VsDevShell.ps1"
      },
      "selection_flags": {
        "CommandLine|contains": [
          "VsWherePath ",
          "VsInstallationPath "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of the script by a developer"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Manage-bde.wsf Abuse To Proxy Execution",
    "id": 542,
    "status": "test",
    "description": "Detects potential abuse of the \"manage-bde.wsf\" script as a LOLBIN to proxy execution",
    "references": [
      "https://lolbas-project.github.io/lolbas/Scripts/Manage-bde/",
      "https://gist.github.com/bohops/735edb7494fe1bd1010d67823842b712",
      "https://twitter.com/bohops/status/980659399495741441",
      "https://twitter.com/JohnLaTwC/status/1223292479270600706",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1216/T1216.md"
    ],
    "author": "oscd.community, Natalia Shornikova, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/10/13",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_wscript_img": [
        {
          "Image|endswith": "\\wscript.exe"
        },
        {
          "OriginalFileName": "wscript.exe"
        }
      ],
      "selection_wscript_cli": {
        "CommandLine|contains": "manage-bde.wsf"
      },
      "selection_parent": {
        "ParentImage|endswith": [
          "\\cscript.exe",
          "\\wscript.exe"
        ],
        "ParentCommandLine|contains": "manage-bde.wsf"
      },
      "selection_filter_cmd": {
        "Image|endswith": "\\cmd.exe"
      },
      "condition": "all of selection_wscript_* or (selection_parent and not selection_filter_cmd)"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Mavinject Inject DLL Into Running Process",
    "id": 543,
    "related": [
      {
        "id": "17eb8e57-9983-420d-ad8a-2c4976c22eb8",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects process injection using the signed Windows tool \"Mavinject\" via the \"INJECTRUNNING\" flag",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.004/T1056.004.md",
      "https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e",
      "https://twitter.com/gN3mes1s/status/941315826107510784",
      "https://reaqta.com/2017/12/mavinject-microsoft-injector/",
      "https://twitter.com/Hexacorn/status/776122138063409152",
      "https://github.com/SigmaHQ/sigma/issues/3742",
      "https://github.com/keyboardcrunch/SentinelOne-ATTACK-Queries/blob/6a228d23eefe963ca81f2d52f94b815f61ef5ee0/Tactics/DefenseEvasion.md#t1055-process-injection"
    ],
    "author": "frack113, Florian Roth",
    "date": "2021/07/12",
    "modified": "2022/12/05",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055.001",
      "attack.t1218.013"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": " /INJECTRUNNING "
      },
      "filter": {
        "ParentImage": "C:\\Windows\\System32\\AppVClient.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "MpiExec Lolbin",
    "id": 544,
    "status": "test",
    "description": "Detects a certain command line flag combination used by mpiexec.exe LOLBIN from HPC pack that can be used to execute any other binary",
    "references": [
      "https://twitter.com/mrd0x/status/1465058133303246867",
      "https://docs.microsoft.com/en-us/powershell/high-performance-computing/mpiexec?view=hpc19-ps"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2022/03/04",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_binary": [
        {
          "Image|endswith": "\\mpiexec.exe"
        },
        {
          "Imphash": "d8b52ef6aaa3a81501bdfff9dbb96217"
        },
        {
          "Hashes|contains": "IMPHASH=d8b52ef6aaa3a81501bdfff9dbb96217"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " /n 1 ",
          " -n 1 "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Execute Files with Msdeploy.exe",
    "id": 545,
    "status": "test",
    "description": "Detects file execution using the msdeploy.exe lolbin",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Msdeploy/",
      "https://twitter.com/pabraeken/status/995837734379032576",
      "https://twitter.com/pabraeken/status/999090532839313408"
    ],
    "author": "Beyu Denis, oscd.community",
    "date": "2020/10/18",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "verb:sync",
          "-source:RunCommand",
          "-dest:runCommand"
        ],
        "Image|endswith": "\\msdeploy.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "System administrator Usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execute MSDT Via Answer File",
    "id": 546,
    "status": "test",
    "description": "Detects execution of \"msdt.exe\" using an answer file which is simulating the legitimate way of calling msdt via \"pcwrun.exe\" (For example from the compatibility tab)",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Msdt/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cli": {
        "Image|endswith": "\\msdt.exe",
        "CommandLine|contains": "\\WINDOWS\\diagnostics\\index\\PCWDiagnostic.xml"
      },
      "selection_answer": {
        "CommandLine|contains": [
          " -af ",
          " /af "
        ]
      },
      "filter": {
        "ParentImage|endswith": "\\pcwrun.exe"
      },
      "condition": "all of selection* and not filter"
    },
    "falsepositives": [
      "Possible undocumented parents of \"msdt\" other than \"pcwrun\""
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use of OpenConsole",
    "id": 547,
    "status": "test",
    "description": "Detects usage of OpenConsole binary as a LOLBIN to launch other binaries to bypass application Whitelisting",
    "references": [
      "https://twitter.com/nas_bench/status/1537563834478645252"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/16",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "OpenConsole.exe"
        },
        {
          "Image|endswith": "\\OpenConsole.exe"
        }
      ],
      "filter": {
        "Image|startswith": "C:\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate use by an administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "OpenWith.exe Executes Specified Binary",
    "id": 548,
    "status": "test",
    "description": "The OpenWith.exe executes other binary",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/blob/4db780e0f0b2e2bb8cb1fa13e09196da9b9f1834/yml/LOLUtilz/OSBinaries/Openwith.yml",
      "https://twitter.com/harr0ey/status/991670870384021504"
    ],
    "author": "Beyu Denis, oscd.community (rule), @harr0ey (idea)",
    "date": "2019/10/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\OpenWith.exe",
        "CommandLine|contains": "/c"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use of Pcalua For Execution",
    "id": 549,
    "related": [
      {
        "id": "fa47597e-90e9-41cd-ab72-c3b74cfb0d02",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execition of commands and binaries from the context of The program compatibility assistant (Pcalua.exe). This can be used as a LOLBIN in order to bypass application whitelisting.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Pcalua/",
      "https://pentestlab.blog/2020/07/06/indirect-command-execution/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2022/06/14",
    "modified": "2023/01/04",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\pcalua.exe",
        "CommandLine|contains": " -a"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use by a via a batch script or by an administrator."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Indirect Command Execution By Program Compatibility Wizard",
    "id": 550,
    "status": "test",
    "description": "Detect indirect command execution via Program Compatibility Assistant pcwrun.exe",
    "references": [
      "https://twitter.com/pabraeken/status/991335019833708544",
      "https://lolbas-project.github.io/lolbas/Binaries/Pcwrun/"
    ],
    "author": "A. Sungurov , oscd.community",
    "date": "2020/10/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\pcwrun.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "ParentCommandLine",
      "CommandLine"
    ],
    "falsepositives": [
      "Need to use extra processing with 'unique_count' / 'filter' to focus on outliers as opposed to commonly seen artifacts",
      "Legit usage of scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Execute Pcwrun.EXE To Leverage Follina",
    "id": 551,
    "status": "test",
    "description": "Detects indirect command execution via Program Compatibility Assistant \"pcwrun.exe\" leveraging the follina (CVE-2022-30190) vulnerability",
    "references": [
      "https://twitter.com/nas_bench/status/1535663791362519040"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\pcwrun.exe",
        "CommandLine|contains": "../"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Code Execution via Pcwutl.dll",
    "id": 552,
    "status": "test",
    "description": "Detects launch of executable by calling the LaunchApplication function from pcwutl.dll library.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Libraries/Pcwutl/",
      "https://twitter.com/harr0ey/status/989617817849876488"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/05",
    "modified": "2023/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "pcwutl",
          "LaunchApplication"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Use of Program Compatibility Troubleshooter Helper"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execute Code with Pester.bat as Parent",
    "id": 553,
    "related": [
      {
        "id": "59e938ff-0d6d-4dc3-b13f-36cc28734d4e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)",
    "references": [
      "https://twitter.com/Oddvarmoe/status/993383596244258816",
      "https://twitter.com/_st0pp3r_/status/1560072680887525378"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2022/08/20",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_module": {
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "ParentCommandLine|contains": "\\WindowsPowerShell\\Modules\\Pester\\"
      },
      "selection_cli": {
        "ParentCommandLine|contains": [
          "{ Invoke-Pester -EnableExit ;",
          "{ Get-Help \""
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of Pester for writing tests for Powershell scripts and modules"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execute Code with Pester.bat",
    "id": 554,
    "status": "test",
    "description": "Detects code execution via Pester.bat (Pester - Powershell Modulte for testing)",
    "references": [
      "https://twitter.com/Oddvarmoe/status/993383596244258816",
      "https://github.com/api0cradle/LOLBAS/blob/d148d278f5f205ce67cfaf49afdfb68071c7252a/OSScripts/pester.md"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/08",
    "modified": "2023/11/09",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "powershell_module": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains|all": [
          "Pester",
          "Get-Help"
        ]
      },
      "cmd_execution": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains|all": [
          "pester",
          ";"
        ]
      },
      "get_help": {
        "CommandLine|contains": [
          "help",
          "\\?"
        ]
      },
      "condition": "powershell_module or (cmd_execution and get_help)"
    },
    "falsepositives": [
      "Legitimate use of Pester for writing tests for Powershell scripts and modules"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PrintBrm ZIP Creation of Extraction",
    "id": 555,
    "status": "test",
    "description": "Detects the execution of the LOLBIN PrintBrm.exe, which can be used to create or extract ZIP files. PrintBrm.exe should not be run on a normal workstation.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/PrintBrm/"
    ],
    "author": "frack113",
    "date": "2022/05/02",
    "tags": [
      "attack.command_and_control",
      "attack.t1105",
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\PrintBrm.exe",
        "CommandLine|contains|all": [
          " -f",
          ".zip"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Pubprn.vbs Proxy Execution",
    "id": 556,
    "status": "test",
    "description": "Detects the use of the 'Pubprn.vbs' Microsoft signed script to execute commands.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Scripts/Pubprn/"
    ],
    "author": "frack113",
    "date": "2022/05/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\pubprn.vbs",
          "script:"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DLL Execution via Rasautou.exe",
    "id": 557,
    "status": "test",
    "description": "Detects using Rasautou.exe for loading arbitrary .DLL specified in -d option and executes the export specified in -p.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Rasautou/",
      "https://github.com/fireeye/DueDLLigence",
      "https://www.fireeye.com/blog/threat-research/2019/10/staying-hidden-on-the-endpoint-evading-detection-with-shellcode.html"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation",
      "definition": "Since options '-d' and '-p' were removed in Windows 10 this rule is relevant only for Windows before 10. And as Windows 7 doesn't log command line in 4688 by default, to detect this attack you need Sysmon 1 configured or KB3004375 installed for command-line auditing (https://support.microsoft.com/en-au/help/3004375/microsoft-security-advisory-update-to-improve-windows-command-line-aud)"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rasautou.exe"
        },
        {
          "OriginalFileName": "rasdlui.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -d ",
          " -p "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "REGISTER_APP.VBS Proxy Execution",
    "id": 558,
    "status": "test",
    "description": "Detects the use of a Microsoft signed script 'REGISTER_APP.VBS' to register a VSS/VDS Provider as a COM+ application.",
    "references": [
      "https://twitter.com/sblmsrsn/status/1456613494783160325?s=20"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\register_app.vbs",
          "-register"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the script. Always investigate what's being registered to confirm if it's benign"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of Remote.exe",
    "id": 559,
    "status": "test",
    "description": "Remote.exe is part of WinDbg in the Windows SDK and can be used for AWL bypass and running remote files.",
    "references": [
      "https://blog.thecybersecuritytutor.com/Exeuction-AWL-Bypass-Remote-exe-LOLBin/",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Remote/"
    ],
    "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io",
    "date": "2022/06/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\remote.exe"
        },
        {
          "OriginalFileName": "remote.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Approved installs of Windows SDK with Debugging Tools for Windows (WinDbg)."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Replace.exe Usage",
    "id": 560,
    "status": "test",
    "description": "Detects the use of Replace.exe which can be used to replace file with another file",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Replace/",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/replace"
    ],
    "author": "frack113",
    "date": "2022/03/06",
    "modified": "2022/06/22",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\replace.exe"
      },
      "argument": {
        "CommandLine|contains": [
          "/a",
          "-a"
        ]
      },
      "condition": "selection and argument"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Lolbin Runexehelper Use As Proxy",
    "id": 561,
    "status": "test",
    "description": "Detect usage of the \"runexehelper.exe\" binary as a proxy to launch other programs",
    "references": [
      "https://twitter.com/0gtweet/status/1206692239839289344",
      "https://lolbas-project.github.io/lolbas/Binaries/Runexehelper/"
    ],
    "author": "frack113",
    "date": "2022/12/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\runexehelper.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Runscripthelper.exe",
    "id": 562,
    "status": "test",
    "description": "Detects execution of powershell scripts via Runscripthelper.exe",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Runscripthelper/"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/07/11",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\Runscripthelper.exe",
        "CommandLine|contains": "surfacecheck"
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of Scriptrunner.exe",
    "id": 563,
    "status": "test",
    "description": "The \"ScriptRunner.exe\" binary can be abused to proxy execution through it and bypass possible whitelisting",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Scriptrunner/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/01",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ScriptRunner.exe"
        },
        {
          "OriginalFileName": "ScriptRunner.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -appvscript "
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate use when App-v is deployed"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of Setres.exe",
    "id": 564,
    "status": "test",
    "description": "Detects the use of Setres.exe to set the screen resolution and then potentially launch a file named \"choice\" (with any executable extension such as \".cmd\" or \".exe\") from the current execution path",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Setres/",
      "https://twitter.com/0gtweet/status/1583356502340870144",
      "https://strontic.github.io/xcyclopedia/library/setres.exe-0E30E4C09637D7A128A37B59A3BC4D09.html",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731033(v=ws.11)"
    ],
    "author": "@gott_cyber",
    "date": "2022/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\setres.exe",
        "Image|endswith": "\\choice"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of Setres"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Using SettingSyncHost.exe as LOLBin",
    "id": 565,
    "status": "test",
    "description": "Detects using SettingSyncHost.exe to run hijacked binary",
    "references": [
      "https://www.hexacorn.com/blog/2020/02/02/settingsynchost-exe-as-a-lolbin"
    ],
    "author": "Anton Kutepov, oscd.community",
    "date": "2020/02/05",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1574.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "system_utility": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "parent_is_settingsynchost": {
        "ParentCommandLine|contains|all": [
          "cmd.exe /c",
          "RoamDiag.cmd",
          "-outputpath"
        ]
      },
      "condition": "not system_utility and parent_is_settingsynchost"
    },
    "fields": [
      "TargetFilename",
      "Image"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use Of The SFTP.EXE Binary As A LOLBIN",
    "id": 566,
    "status": "test",
    "description": "Detects the usage of the \"sftp.exe\" binary as a LOLBIN by abusing the \"-D\" flag",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/264"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/10",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\sftp.exe",
        "CommandLine|contains": [
          " -D ..",
          " -D C:\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sideloading Link.EXE",
    "id": 567,
    "status": "test",
    "description": "Detects the execution utitilies often found in Visual Studio tools that hardcode the call to the binary \"link.exe\". They can be abused to sideload any binary with the same name",
    "references": [
      "https://twitter.com/0gtweet/status/1560732860935729152"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\link.exe",
        "CommandLine|contains": "LINK /"
      },
      "filter_visual_studio": {
        "ParentImage|startswith": [
          "C:\\Program Files\\Microsoft Visual Studio\\",
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\"
        ],
        "ParentImage|contains": "\\VC\\Tools\\MSVC\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Sigverif Execution",
    "id": 568,
    "status": "test",
    "description": "Detects the execution of sigverif binary as a parent process which could indicate it being used as a LOLBIN to proxy execution",
    "references": [
      "https://www.hexacorn.com/blog/2018/04/27/i-shot-the-sigverif-exe-the-gui-based-lolbin/",
      "https://twitter.com/0gtweet/status/1457676633809330184"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\sigverif.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Lolbin Ssh.exe Use As Proxy",
    "id": 569,
    "status": "test",
    "description": "Detect usage of the \"ssh.exe\" binary as a proxy to launch other programs",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ssh/",
      "https://github.com/LOLBAS-Project/LOLBAS/pull/211/files",
      "https://gtfobins.github.io/gtfobins/ssh/",
      "https://man.openbsd.org/ssh_config#ProxyCommand",
      "https://man.openbsd.org/ssh_config#LocalCommand"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2022/12/29",
    "modified": "2023/01/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage": "C:\\Windows\\System32\\OpenSSH\\sshd.exe"
      },
      "selection_cli_img": {
        "Image|endswith": "\\ssh.exe"
      },
      "selection_cli_flags": [
        {
          "CommandLine|contains": "ProxyCommand="
        },
        {
          "CommandLine|contains|all": [
            "PermitLocalCommand",
            "LocalCommand"
          ]
        }
      ],
      "condition": "selection_parent or all of selection_cli_*"
    },
    "falsepositives": [
      "Legitimate usage for administration purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious LOLBIN AccCheckConsole",
    "id": 570,
    "status": "test",
    "description": "Detects suspicious LOLBIN AccCheckConsole execution with parameters as used to load an arbitrary DLL",
    "references": [
      "https://gist.github.com/bohops/2444129419c8acf837aedda5f0e7f340",
      "https://twitter.com/bohops/status/1477717351017680899?s=12",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/AccCheckConsole/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/06",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\AccCheckConsole.exe"
        },
        {
          "OriginalFileName": "AccCheckConsole.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -window ",
          ".dll"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate use of the UI Accessibility Checker"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Atbroker Execution",
    "id": 571,
    "status": "test",
    "description": "Atbroker executing non-deafualt Assistive Technology applications",
    "references": [
      "http://www.hexacorn.com/blog/2016/07/22/beyond-good-ol-run-key-part-42/",
      "https://lolbas-project.github.io/lolbas/Binaries/Atbroker/"
    ],
    "author": "Mateusz Wydra, oscd.community",
    "date": "2020/10/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "AtBroker.exe",
        "CommandLine|contains": "start"
      },
      "filter": {
        "CommandLine|contains": [
          "animations",
          "audiodescription",
          "caretbrowsing",
          "caretwidth",
          "colorfiltering",
          "cursorscheme",
          "filterkeys",
          "focusborderheight",
          "focusborderwidth",
          "highcontrast",
          "keyboardcues",
          "keyboardpref",
          "magnifierpane",
          "messageduration",
          "minimumhitradius",
          "mousekeys",
          "Narrator",
          "osk",
          "overlappedcontent",
          "showsounds",
          "soundsentry",
          "stickykeys",
          "togglekeys",
          "windowarranging",
          "windowtracking",
          "windowtrackingtimeout",
          "windowtrackingzorder"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate, non-default assistive technology applications execution"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Certreq Command to Download",
    "id": 572,
    "status": "test",
    "description": "Detects a suspicious certreq execution taken from the LOLBAS examples, which can be abused to download (small) files",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Certreq/"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/11/24",
    "modified": "2022/06/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\certreq.exe"
        },
        {
          "OriginalFileName": "CertReq.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -Post ",
          " -config ",
          " http",
          " C:\\windows\\win.ini "
        ]
      },
      "condition": "all of selection*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Driver Install by pnputil.exe",
    "id": 573,
    "status": "test",
    "description": "Detects when a possible suspicious driver is being installed via pnputil.exe lolbin",
    "references": [
      "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/pnputil-command-syntax",
      "https://strontic.github.io/xcyclopedia/library/pnputil.exe-60EDC5E6BDBAEE441F2E3AEACD0340D2.html"
    ],
    "author": "Hai Vaknin @LuxNoBulIshit, Avihay eldad  @aloneliassaf, Austin Songer @austinsonger",
    "date": "2021/09/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.t1547"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "-i",
          "/install",
          "-a",
          "/add-driver",
          ".inf"
        ],
        "Image|endswith": "\\pnputil.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Pnputil.exe being used may be performed by a system administrator.",
      "Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
      "Pnputil.exe being executed from unfamiliar users should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Application Whitelisting Bypass via Dxcap.exe",
    "id": 574,
    "status": "test",
    "description": "Detects execution of of Dxcap.exe",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Dxcap/",
      "https://twitter.com/harr0ey/status/992008180904419328"
    ],
    "author": "Beyu Denis, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/26",
    "modified": "2022/06/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\DXCap.exe"
        },
        {
          "OriginalFileName": "DXCap.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -c "
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Legitimate execution of dxcap.exe by legitimate user"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious GrpConv Execution",
    "id": 575,
    "status": "test",
    "description": "Detects the suspicious execution of a utility to convert Windows 3.x .grp files or for persistence purposes by malicious software or actors",
    "references": [
      "https://twitter.com/0gtweet/status/1526833181831200770"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/19",
    "tags": [
      "attack.persistence",
      "attack.t1547"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "grpconv.exe -o",
          "grpconv -o"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Dumping Process via Sqldumper.exe",
    "id": 576,
    "status": "test",
    "description": "Detects process dump via legitimate sqldumper.exe binary",
    "references": [
      "https://twitter.com/countuponsec/status/910977826853068800",
      "https://twitter.com/countuponsec/status/910969424215232518",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Sqldumper/"
    ],
    "author": "Kirill Kiryanov, oscd.community",
    "date": "2020/10/08",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\sqldumper.exe",
        "CommandLine|contains": [
          "0x0110",
          "0x01100:40"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate MSSQL Server actions"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SyncAppvPublishingServer Execute Arbitrary PowerShell Code",
    "id": 577,
    "related": [
      {
        "id": "fde7929d-8beb-4a4c-b922-be9974671667",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://lolbas-project.github.io/lolbas/Binaries/Syncappvpublishingserver/"
    ],
    "author": "frack113",
    "date": "2021/07/12",
    "modified": "2022/10/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\SyncAppvPublishingServer.exe"
        },
        {
          "OriginalFileName": "syncappvpublishingserver.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "\"n; "
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "App-V clients"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SyncAppvPublishingServer VBS Execute Arbitrary PowerShell Code",
    "id": 578,
    "status": "test",
    "description": "Executes arbitrary PowerShell code using SyncAppvPublishingServer.vbs",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1216/T1216.md",
      "https://lolbas-project.github.io/lolbas/Binaries/Syncappvpublishingserver/"
    ],
    "author": "frack113",
    "date": "2021/07/16",
    "modified": "2022/06/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\SyncAppvPublishingServer.vbs",
          ";"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL Injection Or Execution Using Tracker.exe",
    "id": 579,
    "status": "test",
    "description": "Detects potential DLL injection and execution using \"Tracker.exe\"",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Tracker/"
    ],
    "author": "Avneet Singh @v3t0_, oscd.community",
    "date": "2020/10/18",
    "modified": "2023/01/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\tracker.exe"
        },
        {
          "Description": "Tracker"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /d ",
          " /c "
        ]
      },
      "filter_msbuild1": {
        "CommandLine|contains": " /ERRORREPORT:PROMPT "
      },
      "filter_msbuild2": {
        "ParentImage|endswith": [
          "\\Msbuild\\Current\\Bin\\MSBuild.exe",
          "\\Msbuild\\Current\\Bin\\amd64\\MSBuild.exe"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of TTDInject.exe",
    "id": 580,
    "status": "test",
    "description": "Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809 and newer to debug time travel (underlying call of tttracer.exe)",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ttdinject/"
    ],
    "author": "frack113",
    "date": "2022/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "ttdinject.exe"
        },
        {
          "OriginalFileName": "TTDInject.EXE"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Time Travel Debugging Utility Usage",
    "id": 581,
    "related": [
      {
        "id": "e76c8240-d68f-4773-8880-5c6f63595aaf",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects usage of Time Travel Debugging Utility. Adversaries can execute malicious processes and dump processes, such as lsass.exe, via tttracer.exe.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Tttracer/",
      "https://twitter.com/mattifestation/status/1196390321783025666",
      "https://twitter.com/oulusoyum/status/1191329746069655553"
    ],
    "author": "Ensar \u00c5\u017eamil, @sblmsrsn, @oscd_initiative",
    "date": "2020/10/06",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.credential_access",
      "attack.t1218",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\tttracer.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage by software developers/testers"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Download/Upload Activity Using Type Command",
    "id": 582,
    "status": "test",
    "description": "Detects usage of the \"type\" command to download/upload data from WebDAV server",
    "references": [
      "https://mr0range.com/a-new-lolbin-using-the-windows-type-command-to-upload-download-files-81d7b6179e22"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/14",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_upload": {
        "CommandLine|contains|all": [
          "type ",
          " > \\\\\\\\"
        ]
      },
      "selection_download": {
        "CommandLine|contains|all": [
          "type \\\\\\\\",
          " > "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Lolbin Unregmp2.exe Use As Proxy",
    "id": 583,
    "status": "test",
    "description": "Detect usage of the \"unregmp2.exe\" binary as a proxy to launch a custom version of \"wmpnscfg.exe\"",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Unregmp2/"
    ],
    "author": "frack113",
    "date": "2022/12/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\unregmp2.exe"
        },
        {
          "OriginalFileName": "unregmp2.exe"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains": " /HideWMP"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "UtilityFunctions.ps1 Proxy Dll",
    "id": 584,
    "status": "test",
    "description": "Detects the use of a Microsoft signed script executing a managed DLL with PowerShell.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Scripts/UtilityFunctions/"
    ],
    "author": "frack113",
    "date": "2022/05/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "UtilityFunctions.ps1",
          "RegSnapin "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of VisualUiaVerifyNative.exe",
    "id": 585,
    "status": "test",
    "description": "VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass and is listed in Microsoft's recommended block rules.",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/VisualUiaVerifyNative/",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-block-rules",
      "https://bohops.com/2020/10/15/exploring-the-wdac-microsoft-recommended-block-rules-visualuiaverifynative/",
      "https://github.com/MicrosoftDocs/windows-itpro-docs/commit/937db704b9148e9cee7c7010cad4d00ce9c4fdad"
    ],
    "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io",
    "date": "2022/06/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\VisualUiaVerifyNative.exe"
        },
        {
          "OriginalFileName": "VisualUiaVerifyNative.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate testing of Microsoft UI parts."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Visual Basic Command Line Compiler Usage",
    "id": 586,
    "status": "test",
    "description": "Detects successful code compilation via Visual Basic Command Line Compiler that utilizes Windows Resource to Object Converter.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Vbc/"
    ],
    "author": "Ensar \u00c5\u017eamil, @sblmsrsn, @oscd_initiative",
    "date": "2020/10/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\vbc.exe",
        "Image|endswith": "\\cvtres.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Utilization of this tool should not be seen in enterprise environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use of VSIISExeLauncher.exe",
    "id": 587,
    "status": "test",
    "description": "The \"VSIISExeLauncher.exe\" binary part of the Visual Studio/VS Code can be used to execute arbitrary binaries",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/VSIISExeLauncher/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\VSIISExeLauncher.exe"
        },
        {
          "OriginalFileName": "VSIISExeLauncher.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -p ",
          " -a "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of Wfc.exe",
    "id": 588,
    "status": "test",
    "description": "The Workflow Command-line Compiler can be used for AWL bypass and is listed in Microsoft's recommended block rules.",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wfc/",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-block-rules"
    ],
    "author": "Christopher Peacock @SecurePeacock, SCYTHE @scythe_io",
    "date": "2022/06/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\wfc.exe"
        },
        {
          "OriginalFileName": "wfc.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use by a software developer"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wlrmdr Lolbin Use as Launcher",
    "id": 589,
    "status": "test",
    "description": "Detects use of Wlrmdr.exe in which the -u parameter is passed to ShellExecute",
    "references": [
      "https://twitter.com/0gtweet/status/1493963591745220608?s=20&t=xUg9DsZhJy1q9bPTUWgeIQ"
    ],
    "author": "frack113, manasmbellani",
    "date": "2022/02/16",
    "modified": "2022/12/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_child_img": [
        {
          "Image|endswith": "\\wlrmdr.exe"
        },
        {
          "OriginalFileName": "WLRMNDR.EXE"
        }
      ],
      "selection_child_cli": {
        "CommandLine|contains|all": [
          "-s ",
          "-f ",
          "-t ",
          "-m ",
          "-a ",
          "-u "
        ]
      },
      "selection_parent": {
        "ParentImage|endswith": "\\wlrmdr.exe"
      },
      "filter": {
        "ParentImage": "C:\\Windows\\System32\\winlogon.exe"
      },
      "filter_null": {
        "ParentImage": "-"
      },
      "condition": "selection_parent or (all of selection_child_* and not 1 of filter*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Microsoft Workflow Compiler Execution",
    "id": 590,
    "status": "test",
    "description": "Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.",
    "references": [
      "https://posts.specterops.io/arbitrary-unsigned-code-execution-vector-in-microsoft-workflow-compiler-exe-3d9294bc5efb",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://lolbas-project.github.io/lolbas/Binaries/Microsoft.Workflow.Compiler/"
    ],
    "author": "Nik Seetharaman, frack113",
    "date": "2019/01/16",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1127",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\Microsoft.Workflow.Compiler.exe"
        },
        {
          "OriginalFileName": "Microsoft.Workflow.Compiler.exe"
        }
      ],
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate MWC use (unlikely in modern enterprise environments)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Register_App.Vbs LOLScript Abuse",
    "id": 591,
    "status": "test",
    "description": "Detects potential abuse of the \"register_app.vbs\" script that is part of the Windows SDK. The script offers the capability to register new VSS/VDS Provider as a COM+ application. Attackers can use this to install malicious DLLs for persistence and execution.",
    "references": [
      "https://twitter.com/sblmsrsn/status/1456613494783160325?s=20",
      "https://github.com/microsoft/Windows-classic-samples/blob/7cbd99ac1d2b4a0beffbaba29ea63d024ceff700/Samples/Win7Samples/winbase/vss/vsssampleprovider/register_app.vbs"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/11/05",
    "modified": "2022/07/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\cscript.exe",
            "\\wscript.exe"
          ]
        },
        {
          "OriginalFileName": [
            "cscript.exe",
            "wscript.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": ".vbs -register "
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Other VB scripts that leverage the same starting command line flags"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Via LSASS Process Clone",
    "id": 592,
    "status": "test",
    "description": "Detects a suspicious LSASS process process clone that could be a sign of credential dumping activity",
    "references": [
      "https://www.matteomalvica.com/blog/2019/12/02/win-defender-atp-cred-bypass/",
      "https://twitter.com/Hexacorn/status/1420053502554951689",
      "https://twitter.com/SBousseaden/status/1464566846594691073?s=20"
    ],
    "author": "Florian Roth (Nextron Systems), Samir Bousseaden",
    "date": "2021/11/27",
    "modified": "2023/03/02",
    "tags": [
      "attack.credential_access",
      "attack.t1003",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\Windows\\System32\\lsass.exe",
        "Image|endswith": "\\Windows\\System32\\lsass.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Potential Mftrace.EXE Abuse",
    "id": 593,
    "status": "experimental",
    "description": "Detects child processes of the \"Trace log generation tool for Media Foundation Tools\" (Mftrace.exe) which can abused to execute arbitrary binaries.",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Mftrace/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/09",
    "modified": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\mftrace.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use for tracing purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "MMC20 Lateral Movement",
    "id": 594,
    "status": "test",
    "description": "Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe",
    "references": [
      "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/",
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view?usp=sharing"
    ],
    "author": "@2xxeformyshirt (Security Risk Advisors) - rule; Teymur Kheirkhabarov (idea)",
    "date": "2020/03/04",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.t1021.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\svchost.exe",
        "Image|endswith": "\\mmc.exe",
        "CommandLine|contains": "-Embedding"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "MMC Spawning Windows Shell",
    "id": 595,
    "status": "test",
    "description": "Detects a Windows command line executable started from MMC",
    "references": [
      "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/"
    ],
    "author": "Karneades, Swisscom CSIRT",
    "date": "2019/08/05",
    "modified": "2022/07/14",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "ParentImage|endswith": "\\mmc.exe"
      },
      "selection2": [
        {
          "Image|endswith": [
            "\\cmd.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\wscript.exe",
            "\\cscript.exe",
            "\\sh.exe",
            "\\bash.exe",
            "\\reg.exe",
            "\\regsvr32.exe"
          ]
        },
        {
          "Image|contains": "\\BITSADMIN"
        }
      ],
      "condition": "all of selection*"
    },
    "fields": [
      "CommandLine",
      "Image",
      "ParentCommandLine"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodePage Modification Via MODE.COM To Russian Language",
    "id": 596,
    "related": [
      {
        "id": "d48c5ffa-3b02-4c0f-9a9e-3c275650dd0e",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects a CodePage modification using the \"mode.com\" utility to Russian language.\nThis behavior has been used by threat actors behind Dharma ransomware.\n",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/intl/code-page-identifiers",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/mode",
      "https://strontic.github.io/xcyclopedia/library/mode.com-59D1ED51ACB8C3D50F1306FD75F20E99.html",
      "https://www.virustotal.com/gui/file/5e75ef02517afd6e8ba6462b19217dc4a5a574abb33d10eb0f2bab49d8d48c22/behavior"
    ],
    "author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
    "date": "2024/01/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mode.com"
        },
        {
          "OriginalFileName": "MODE.COM"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " con ",
          " cp ",
          " select="
        ],
        "CommandLine|endswith": [
          "=1251",
          "=866"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Russian speaking people changing the CodePage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Suspicious Mofcomp Execution",
    "id": 597,
    "status": "experimental",
    "description": "Detects execution of the \"mofcomp\" utility as a child of a suspicious shell or script running utility or by having a suspicious path in the commandline.\nThe \"mofcomp\" utility parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository.\nAttackers abuse this utility to install malicious MOF scripts\n",
    "references": [
      "https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/",
      "https://github.com/The-DFIR-Report/Sigma-Rules/blob/75260568a7ffe61b2458ca05f6f25914efb44337/win_mofcomp_execution.yml",
      "https://docs.microsoft.com/en-us/windows/win32/wmisdk/mofcomp"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/12",
    "modified": "2023/04/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mofcomp.exe"
        },
        {
          "OriginalFileName": "mofcomp.exe"
        }
      ],
      "selection_case": [
        {
          "ParentImage|endswith": [
            "\\cmd.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\wsl.exe",
            "\\wscript.exe",
            "\\cscript.exe"
          ]
        },
        {
          "CommandLine|contains": [
            "\\AppData\\Local\\Temp",
            "\\Users\\Public\\",
            "\\WINDOWS\\Temp\\",
            "%temp%",
            "%tmp%",
            "%appdata%"
          ]
        }
      ],
      "filter_main_wmiprvse": {
        "ParentImage": "C:\\Windows\\System32\\wbem\\WmiPrvSE.exe",
        "CommandLine|contains": "C:\\Windows\\TEMP\\",
        "CommandLine|endswith": ".mof"
      },
      "filter_optional_null_parent": {
        "CommandLine|contains": "C:\\Windows\\TEMP\\",
        "CommandLine|endswith": ".mof"
      },
      "condition": "all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Mpclient.DLL Sideloading Via Defender Binaries",
    "id": 598,
    "related": [
      {
        "id": "418dc89a-9808-4b87-b1d7-e5ae0cb6effc",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potential sideloading of \"mpclient.dll\" by Windows Defender processes (\"MpCmdRun\" and \"NisSrv\") from their non-default directory.",
    "references": [
      "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool"
    ],
    "author": "Bhabesh Raj",
    "date": "2022/08/01",
    "modified": "2023/08/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\MpCmdRun.exe",
          "\\NisSrv.exe"
        ]
      },
      "filter_main_known_locations": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Windows Defender\\",
          "C:\\Program Files\\Microsoft Security Client\\",
          "C:\\Program Files\\Windows Defender\\",
          "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Download Via Windows Defender MpCmpRun.EXE",
    "id": 599,
    "status": "test",
    "description": "Detects the use of Windows Defender MpCmdRun.EXE to download files",
    "references": [
      "https://web.archive.org/web/20200903194959/https://twitter.com/djmtshepana/status/1301608169496612866",
      "https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/"
    ],
    "author": "Matthew Matchen",
    "date": "2020/09/04",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "MpCmdRun.exe"
        },
        {
          "Image|endswith": "\\MpCmdRun.exe"
        },
        {
          "CommandLine|contains": "MpCmdRun.exe"
        },
        {
          "Description": "Microsoft Malware Protection Command Line Utility"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "DownloadFile",
          "url"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Defender Definition Files Removed",
    "id": 600,
    "status": "test",
    "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities by removing Windows Defender Definition Files",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/"
    ],
    "author": "frack113",
    "date": "2021/07/07",
    "modified": "2023/07/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\MpCmdRun.exe"
        },
        {
          "OriginalFileName": "MpCmdRun.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " -RemoveDefinitions",
          " -All"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Msbuild Execution By Uncommon Parent Process",
    "id": 601,
    "status": "test",
    "description": "Detects suspicious execution of 'Msbuild.exe' by a uncommon parent process",
    "references": [
      "https://app.any.run/tasks/abdf586e-df0c-4d39-89a7-06bf24913401/",
      "https://www.echotrail.io/insights/search/msbuild.exe"
    ],
    "author": "frack113",
    "date": "2022/11/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\MSBuild.exe"
        },
        {
          "OriginalFileName": "MSBuild.exe"
        }
      ],
      "filter_parent": {
        "ParentImage|endswith": [
          "\\devenv.exe",
          "\\cmd.exe",
          "\\msbuild.exe",
          "\\python.exe",
          "\\explorer.exe",
          "\\nuget.exe"
        ]
      },
      "condition": "selection and not filter_parent"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Arbitrary Command Execution Using Msdt.EXE",
    "id": 602,
    "status": "test",
    "description": "Detects processes leveraging the \"ms-msdt\" handler or the \"msdt.exe\" binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability",
    "references": [
      "https://twitter.com/nao_sec/status/1530196847679401984",
      "https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/",
      "https://twitter.com/_JohnHammond/status/1531672601067675648"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/05/29",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\msdt.exe"
        },
        {
          "OriginalFileName": "msdt.exe"
        }
      ],
      "selection_cmd_inline": {
        "CommandLine|contains": "IT_BrowseForFile="
      },
      "selection_cmd_answerfile_flag": {
        "CommandLine|contains": " PCWDiagnostic"
      },
      "selection_cmd_answerfile_param": {
        "CommandLine|contains": [
          " /af ",
          " -af "
        ]
      },
      "condition": "selection_img and (selection_cmd_inline or all of selection_cmd_answerfile_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Cabinet File Execution Via Msdt.EXE",
    "id": 603,
    "related": [
      {
        "id": "6545ce61-a1bd-4119-b9be-fcbee42c0cf3",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of msdt.exe using the \"cab\" flag which could indicates suspicious diagcab files with embedded answer files leveraging CVE-2022-30190",
    "references": [
      "https://twitter.com/nas_bench/status/1537896324837781506",
      "https://github.com/GossiTheDog/ThreatHunting/blob/e85884abbf05d5b41efc809ea6532b10b45bd05c/AdvancedHuntingQueries/DogWalk-DiagCab",
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-9015912909545e72ed42cbac4d1e96295e8964579c406d23fd9c47a8091576a0",
      "https://irsl.medium.com/the-trouble-with-microsofts-troubleshooters-6e32fc80b8bd"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), GossiTheDog, frack113",
    "date": "2022/06/21",
    "modified": "2023/02/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\msdt.exe"
        },
        {
          "OriginalFileName": "msdt.exe"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains": [
          " /cab ",
          " -cab "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of \".diagcab\" files"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious MSDT Parent Process",
    "id": 604,
    "status": "test",
    "description": "Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190 / Follina exploitation",
    "references": [
      "https://twitter.com/nao_sec/status/1530196847679401984",
      "https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/"
    ],
    "author": "Nextron Systems",
    "date": "2022/06/01",
    "modified": "2023/02/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\schtasks.exe",
          "\\wmic.exe",
          "\\wscript.exe",
          "\\wsl.exe"
        ]
      },
      "selection_msdt": [
        {
          "Image|endswith": "\\msdt.exe"
        },
        {
          "OriginalFileName": "msdt.exe"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via MSEDGE_PROXY.EXE",
    "id": 605,
    "status": "experimental",
    "description": "Detects usage of \"msedge_proxy.exe\" to download arbitrary files",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/msedge_proxy/"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\msedge_proxy.exe"
        },
        {
          "OriginalFileName": "msedge_proxy.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remotely Hosted HTA File Executed Via Mshta.EXE",
    "id": 606,
    "status": "test",
    "description": "Detects execution of the \"mshta\" utility with an argument containing the \"http\" keyword, which could indicate that an attacker is executing a remotely hosted malicious hta file",
    "references": [
      "https://www.trendmicro.com/en_us/research/22/e/avoslocker-ransomware-variant-abuses-driver-file-to-disable-anti-Virus-scans-log4shell.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/08",
    "modified": "2023/02/06",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mshta.exe"
        },
        {
          "OriginalFileName": "MSHTA.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "http://",
          "https://",
          "ftp://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wscript Shell Run In CommandLine",
    "id": 607,
    "status": "experimental",
    "description": "Detects the presence of the keywords \"Wscript\", \"Shell\" and \"Run\" in the command, which could indicate a suspicious activity",
    "references": [
      "https://web.archive.org/web/20220830122045/http://blog.talosintelligence.com/2022/08/modernloader-delivers-multiple-stealers.html",
      "https://blog.talosintelligence.com/modernloader-delivers-multiple-stealers-cryptominers-and-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/31",
    "modified": "2023/05/15",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "Wscript.",
          ".Shell",
          ".Run"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Inline scripting can be used by some rare third party applications or administrators. Investigate and apply additional filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious JavaScript Execution Via Mshta.EXE",
    "id": 608,
    "status": "test",
    "description": "Detects execution of javascript code using \"mshta.exe\".",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.005/T1218.005.md"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2019/10/24",
    "modified": "2023/02/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mshta.exe"
        },
        {
          "OriginalFileName": "MSHTA.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "javascript"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential LethalHTA Technique Execution",
    "id": 609,
    "status": "test",
    "description": "Detects potential LethalHTA technique where the \"mshta.exe\" is spawned by an \"svchost.exe\" process",
    "references": [
      "https://codewhitesec.blogspot.com/2018/07/lethalhta.html"
    ],
    "author": "Markus Neis",
    "date": "2018/06/07",
    "modified": "2023/02/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\svchost.exe",
        "Image|endswith": "\\mshta.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious MSHTA Child Process",
    "id": 610,
    "status": "test",
    "description": "Detects a suspicious process spawning from an \"mshta.exe\" process, which could be indicative of a malicious HTA script execution",
    "references": [
      "https://www.trustedsec.com/july-2015/malicious-htas/"
    ],
    "author": "Michael Haag",
    "date": "2019/01/16",
    "modified": "2023/02/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.005",
      "car.2013-02-003",
      "car.2013-03-001",
      "car.2014-04-003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\mshta.exe"
      },
      "selection_child": [
        {
          "Image|endswith": [
            "\\cmd.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\wscript.exe",
            "\\cscript.exe",
            "\\sh.exe",
            "\\bash.exe",
            "\\reg.exe",
            "\\regsvr32.exe",
            "\\bitsadmin.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Cmd.Exe",
            "PowerShell.EXE",
            "pwsh.dll",
            "wscript.exe",
            "cscript.exe",
            "Bash.exe",
            "reg.exe",
            "REGSVR32.EXE",
            "bitsadmin.exe"
          ]
        }
      ],
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Printer software / driver installations",
      "HP software"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "MSHTA Suspicious Execution 01",
    "id": 611,
    "status": "test",
    "description": "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism",
    "references": [
      "http://blog.sevagas.com/?Hacking-around-HTA-files",
      "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356",
      "https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script",
      "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997",
      "https://twitter.com/mattifestation/status/1326228491302563846"
    ],
    "author": "Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)",
    "date": "2019/02/22",
    "modified": "2022/11/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1140",
      "attack.t1218.005",
      "attack.execution",
      "attack.t1059.007",
      "cve.2020.1599"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\mshta.exe",
        "CommandLine|contains": [
          "vbscript",
          ".jpg",
          ".png",
          ".lnk",
          ".xls",
          ".doc",
          ".zip",
          ".dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Mshta.EXE Execution Patterns",
    "id": 612,
    "status": "test",
    "description": "Detects suspicious mshta process execution patterns",
    "references": [
      "https://en.wikipedia.org/wiki/HTML_Application",
      "https://www.echotrail.io/insights/search/mshta.exe",
      "https://app.any.run/tasks/34221348-072d-4b70-93f3-aa71f6ebecad/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/07/17",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.t1106"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mshta.exe"
        },
        {
          "OriginalFileName": "MSHTA.EXE"
        }
      ],
      "selection_susp": {
        "ParentImage|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe"
        ],
        "CommandLine|contains": [
          "\\AppData\\Local\\",
          "C:\\ProgramData\\",
          "C:\\Users\\Public\\",
          "C:\\Windows\\Temp\\"
        ]
      },
      "filter_img": [
        {
          "Image|startswith": [
            "C:\\Windows\\System32\\",
            "C:\\Windows\\SysWOW64\\"
          ]
        },
        {
          "CommandLine|contains": [
            ".htm",
            ".hta"
          ]
        },
        {
          "CommandLine|endswith": [
            "mshta.exe",
            "mshta"
          ]
        }
      ],
      "condition": "all of selection_* or (selection_img and not filter_img)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DllUnregisterServer Function Call Via Msiexec.EXE",
    "id": 613,
    "status": "test",
    "description": "Detects MsiExec loading a DLL and calling its DllUnregisterServer function",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md",
      "https://lolbas-project.github.io/lolbas/Binaries/Msiexec/",
      "https://twitter.com/_st0pp3r_/status/1583914515996897281"
    ],
    "author": "frack113",
    "date": "2022/04/24",
    "modified": "2023/02/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\msiexec.exe"
        },
        {
          "OriginalFileName": "\\msiexec.exe"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": [
          " /z ",
          " -z "
        ]
      },
      "selection_dll": {
        "CommandLine|contains": ".dll"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious MsiExec Embedding Parent",
    "id": 614,
    "status": "test",
    "description": "Adversaries may abuse msiexec.exe to proxy the execution of malicious payloads",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md"
    ],
    "author": "frack113",
    "date": "2022/04/16",
    "modified": "2022/07/14",
    "tags": [
      "attack.t1218.007",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\cmd.exe"
        ],
        "ParentCommandLine|contains|all": [
          "MsiExec.exe",
          "-Embedding "
        ]
      },
      "filter_splunk_ufw": {
        "Image|endswith": ":\\Windows\\System32\\cmd.exe",
        "CommandLine|contains": "C:\\Program Files\\SplunkUniversalForwarder\\bin\\"
      },
      "filter_vs": [
        {
          "CommandLine|contains": "\\DismFoDInstall.cmd"
        },
        {
          "ParentCommandLine|contains|all": [
            "\\MsiExec.exe -Embedding ",
            "Global\\MSI0000"
          ]
        }
      ],
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Msiexec Execute Arbitrary DLL",
    "id": 615,
    "status": "test",
    "description": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\nMsiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md",
      "https://twitter.com/_st0pp3r_/status/1583914515996897281"
    ],
    "author": "frack113",
    "date": "2022/01/16",
    "modified": "2022/12/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\msiexec.exe",
        "CommandLine|contains": [
          " /y",
          " -y"
        ]
      },
      "filter_apple": {
        "CommandLine|contains": [
          "\\MsiExec.exe\" /Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll",
          "\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll",
          "\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll",
          "\\MsiExec.exe\" /Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll",
          "\\MsiExec.exe\" /Y \"C:\\Windows\\CCM\\",
          "\\MsiExec.exe\" /Y C:\\Windows\\CCM\\",
          "\\MsiExec.exe\" -Y \"C:\\Program Files\\Bonjour\\mdnsNSP.dll",
          "\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Bonjour\\mdnsNSP.dll",
          "\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Apple Software Update\\ScriptingObjectModel.dll",
          "\\MsiExec.exe\" -Y \"C:\\Program Files (x86)\\Apple Software Update\\SoftwareUpdateAdmin.dll",
          "\\MsiExec.exe\" -Y \"C:\\Windows\\CCM\\",
          "\\MsiExec.exe\" -Y C:\\Windows\\CCM\\"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Msiexec Quiet Installation",
    "id": 616,
    "status": "test",
    "description": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.\nMsiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md",
      "https://twitter.com/_st0pp3r_/status/1583914244344799235"
    ],
    "author": "frack113",
    "date": "2022/01/16",
    "modified": "2023/03/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\msiexec.exe"
        },
        {
          "OriginalFileName": "msiexec.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "/i",
          "-i",
          "/package",
          "-package",
          "/a",
          "-a",
          "/j",
          "-j"
        ]
      },
      "selection_quiet": {
        "CommandLine|contains": [
          "/q",
          "-q"
        ]
      },
      "filter_user_temp": {
        "ParentImage|startswith": "C:\\Users\\",
        "ParentImage|contains": "\\AppData\\Local\\Temp\\"
      },
      "filter_system_temp": {
        "ParentImage|startswith": "C:\\Windows\\Temp\\"
      },
      "filter_ccm": {
        "ParentImage": "C:\\Windows\\CCM\\Ccm32BitLauncher.exe",
        "IntegrityLevel": "System"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "WindowsApps installing updates via the quiet flag"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Msiexec Quiet Install From Remote Location",
    "id": 617,
    "related": [
      {
        "id": "f7b5f842-a6af-4da5-9e95-e32478f3cd2f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of Msiexec.exe to install packages hosted remotely quietly",
    "references": [
      "https://www.microsoft.com/en-us/security/blog/2022/10/27/raspberry-robin-worm-part-of-larger-ecosystem-facilitating-pre-ransomware-activity/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\msiexec.exe"
        },
        {
          "OriginalFileName": "msiexec.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "/i",
          "-i",
          "/package",
          "-package",
          "/a",
          "-a",
          "/j",
          "-j"
        ]
      },
      "selection_quiet": {
        "CommandLine|contains": [
          "/q",
          "-q"
        ]
      },
      "selection_remote": {
        "CommandLine|contains": [
          "http",
          "\\\\\\\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential MsiExec Masquerading",
    "id": 618,
    "status": "test",
    "description": "Detects the execution of msiexec.exe from an uncommon directory",
    "references": [
      "https://twitter.com/200_okay_/status/1194765831911215104"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/11/14",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\msiexec.exe"
        },
        {
          "OriginalFileName": "\\msiexec.exe"
        }
      ],
      "filter": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "MsiExec Web Install",
    "id": 619,
    "related": [
      {
        "id": "8150732a-0c9d-4a99-82b9-9efb9b90c40c",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious msiexec process starts with web addresses as parameter",
    "references": [
      "https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/02/09",
    "modified": "2022/01/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007",
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          " msiexec",
          "://"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via MSOHTMED.EXE",
    "id": 620,
    "status": "test",
    "description": "Detects usage of \"MSOHTMED\" to download arbitrary files",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/238/files"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\MSOHTMED.exe"
        },
        {
          "OriginalFileName": "MsoHtmEd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "ftp://",
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via MSPUB.EXE",
    "id": 621,
    "status": "test",
    "description": "Detects usage of \"MSPUB\" (Microsoft Publisher) to download arbitrary files",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/238/files"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\MSPUB.exe"
        },
        {
          "OriginalFileName": "MSPUB.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "ftp://",
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Process Injection Via Msra.EXE",
    "id": 622,
    "status": "test",
    "description": "Detects potential process injection via Microsoft Remote Asssistance (Msra.exe) by looking at suspicious child processes spawned from the aforementioned process. It has been a target used by many threat actors and used for discovery and persistence tactics",
    "references": [
      "https://www.microsoft.com/security/blog/2021/12/09/a-closer-look-at-qakbots-latest-building-blocks-and-how-to-knock-them-down/",
      "https://www.fortinet.com/content/dam/fortinet/assets/analyst-reports/ar-qakbot.pdf"
    ],
    "author": "Alexander McDonald",
    "date": "2022/06/24",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\msra.exe",
        "ParentCommandLine|endswith": "msra.exe",
        "Image|endswith": [
          "\\arp.exe",
          "\\cmd.exe",
          "\\net.exe",
          "\\netstat.exe",
          "\\nslookup.exe",
          "\\route.exe",
          "\\schtasks.exe",
          "\\whoami.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Msra.exe"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Detection of PowerShell Execution via Sqlps.exe",
    "id": 623,
    "status": "test",
    "description": "This rule detects execution of a PowerShell code through the sqlps.exe utility, which is included in the standard set of utilities supplied with the MSSQL Server.\nScript blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.\n",
    "references": [
      "https://docs.microsoft.com/en-us/sql/tools/sqlps-utility?view=sql-server-ver15",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Sqlps/",
      "https://twitter.com/bryon_/status/975835709587075072"
    ],
    "author": "Agro (@agro_sev) oscd.community",
    "date": "2020/10/10",
    "modified": "2022/12/09",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\sqlps.exe"
      },
      "selection_image": [
        {
          "Image|endswith": "\\sqlps.exe"
        },
        {
          "OriginalFileName": "sqlps.exe"
        }
      ],
      "filter_image": {
        "ParentImage|endswith": "\\sqlagent.exe"
      },
      "condition": "selection_parent or (selection_image and not filter_image)"
    },
    "falsepositives": [
      "Direct PS command execution through SQLPS.exe is uncommon, childprocess sqlps.exe spawned by sqlagent.exe is a legitimate action."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SQL Client Tools PowerShell Session Detection",
    "id": 624,
    "status": "test",
    "description": "This rule detects execution of a PowerShell code through the sqltoolsps.exe utility, which is included in the standard set of utilities supplied with the Microsoft SQL Server Management studio.\nScript blocks are not logged in this case, so this utility helps to bypass protection mechanisms based on the analysis of these logs.\n",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/blob/8283d8d91552213ded165fd36deb6cb9534cb443/yml/OtherMSBinaries/Sqltoolsps.yml",
      "https://twitter.com/pabraeken/status/993298228840992768"
    ],
    "author": "Agro (@agro_sev) oscd.communitly",
    "date": "2020/10/13",
    "modified": "2022/02/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\sqltoolsps.exe"
        },
        {
          "ParentImage|endswith": "\\sqltoolsps.exe"
        },
        {
          "OriginalFileName": "\\sqltoolsps.exe"
        }
      ],
      "filter": {
        "ParentImage|endswith": "\\smss.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Direct PS command execution through SQLToolsPS.exe is uncommon, childprocess sqltoolsps.exe spawned by smss.exe is a legitimate action."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Child Process Of SQL Server",
    "id": 625,
    "related": [
      {
        "id": "344482e4-a477-436c-aa70-7536d18a48c7",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious child processes of the SQLServer process. This could indicate potential RCE or SQL Injection.",
    "references": [
      "Internal Research"
    ],
    "author": "FPT.EagleEye Team, wagga",
    "date": "2020/12/11",
    "modified": "2023/05/04",
    "tags": [
      "attack.t1505.003",
      "attack.t1190",
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\sqlservr.exe",
        "Image|endswith": [
          "\\bash.exe",
          "\\bitsadmin.exe",
          "\\cmd.exe",
          "\\netstat.exe",
          "\\nltest.exe",
          "\\ping.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\sh.exe",
          "\\systeminfo.exe",
          "\\tasklist.exe",
          "\\wsl.exe"
        ]
      },
      "filter_optional_datev": {
        "ParentImage|startswith": "C:\\Program Files\\Microsoft SQL Server\\",
        "ParentImage|endswith": "DATEV_DBENGINE\\MSSQL\\Binn\\sqlservr.exe",
        "Image": "C:\\Windows\\System32\\cmd.exe",
        "CommandLine|startswith": "\"C:\\Windows\\system32\\cmd.exe\" "
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Child Process Of Veeam Dabatase",
    "id": 626,
    "related": [
      {
        "id": "869b9ca7-9ea2-4a5a-8325-e80e62f75445",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious child processes of the Veeam service process. This could indicate potential RCE or SQL Injection.",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/04",
    "tags": [
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\sqlservr.exe",
        "ParentCommandLine|contains": "VEEAMSQL"
      },
      "selection_child_1": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wsl.exe",
          "\\wt.exe"
        ],
        "CommandLine|contains": [
          "-ex ",
          "bypass",
          "cscript",
          "DownloadString",
          "http://",
          "https://",
          "mshta",
          "regsvr32",
          "rundll32",
          "wscript",
          "copy "
        ]
      },
      "selection_child_2": {
        "Image|endswith": [
          "\\net.exe",
          "\\net1.exe",
          "\\netstat.exe",
          "\\nltest.exe",
          "\\ping.exe",
          "\\tasklist.exe",
          "\\whoami.exe"
        ]
      },
      "condition": "selection_parent and 1 of selection_child_*"
    },
    "level": "critical",
    "enable": true
  },
  {
    "title": "Potential MSTSC Shadowing Activity",
    "id": 627,
    "status": "test",
    "description": "Detects RDP session hijacking by using MSTSC shadowing",
    "references": [
      "https://twitter.com/kmkz_security/status/1220694202301976576",
      "https://github.com/kmkz/Pentesting/blob/47592e5e160d3b86c2024f09ef04ceb87d204995/Post-Exploitation-Cheat-Sheet"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/01/24",
    "modified": "2023/02/05",
    "tags": [
      "attack.lateral_movement",
      "attack.t1563.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "noconsentprompt",
          "shadow:"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Remote Desktop Connection Initiated Via Mstsc.EXE",
    "id": 628,
    "status": "test",
    "description": "Detects the usage of \"mstsc.exe\" with the \"/v\" flag to initiate a connection to a remote server.\nAdversaries may use valid accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.001/T1021.001.md#t1021001---remote-desktop-protocol",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mstsc"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "modified": "2023/02/03",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mstsc.exe"
        },
        {
          "OriginalFileName": "mstsc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " /v:"
      },
      "filter_optional_wsl": {
        "ParentImage": "C:\\Windows\\System32\\lxss\\wslhost.exe",
        "CommandLine|contains": "C:\\ProgramData\\Microsoft\\WSL\\wslg.rdp"
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "WSL (Windows Sub System For Linux)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Mstsc.EXE Execution With Local RDP File",
    "id": 629,
    "status": "experimental",
    "description": "Detects potential RDP connection via Mstsc using a local \".rdp\" file",
    "references": [
      "https://www.blackhillsinfosec.com/rogue-rdp-revisiting-initial-access-methods/",
      "https://blog.thickmints.dev/mintsights/detecting-rogue-rdp/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Christopher Peacock @securepeacock",
    "date": "2023/04/18",
    "modified": "2023/04/30",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mstsc.exe"
        },
        {
          "OriginalFileName": "mstsc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|endswith": [
          ".rdp",
          ".rdp\""
        ]
      },
      "filter_optional_wsl": {
        "ParentImage": "C:\\Windows\\System32\\lxss\\wslhost.exe",
        "CommandLine|contains": "C:\\ProgramData\\Microsoft\\WSL\\wslg.rdp"
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Likely with legitimate usage of \".rdp\" files"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Mstsc.EXE Execution With Local RDP File",
    "id": 630,
    "status": "experimental",
    "description": "Detects potential RDP connection via Mstsc using a local \".rdp\" file located in suspicious locations.",
    "references": [
      "https://www.blackhillsinfosec.com/rogue-rdp-revisiting-initial-access-methods/",
      "https://blog.thickmints.dev/mintsights/detecting-rogue-rdp/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/18",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\mstsc.exe"
        },
        {
          "OriginalFileName": "mstsc.exe"
        }
      ],
      "selection_extension": {
        "CommandLine|endswith": [
          ".rdp",
          ".rdp\""
        ]
      },
      "selection_paths": {
        "CommandLine|contains": [
          ":\\Users\\Public\\",
          ":\\Windows\\System32\\spool\\drivers\\color",
          ":\\Windows\\System32\\Tasks_Migrated ",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          ":\\Windows\\Tracing\\",
          "\\AppData\\Local\\Temp\\",
          "\\Downloads\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Likelihood is related to how often the paths are used in the environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Mstsc.EXE Execution From Uncommon Parent",
    "id": 631,
    "status": "experimental",
    "description": "Detects potential RDP connection via Mstsc using a local \".rdp\" file located in suspicious locations.",
    "references": [
      "https://www.blackhillsinfosec.com/rogue-rdp-revisiting-initial-access-methods/",
      "https://blog.thickmints.dev/mintsights/detecting-rogue-rdp/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/18",
    "modified": "2023/04/18",
    "tags": [
      "attack.lateral_movement"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\brave.exe",
          "\\CCleanerBrowser.exe",
          "\\chrome.exe",
          "\\chromium.exe",
          "\\firefox.exe",
          "\\iexplore.exe",
          "\\microsoftedge.exe",
          "\\msedge.exe",
          "\\opera.exe",
          "\\vivaldi.exe",
          "\\whale.exe",
          "\\outlook.exe"
        ]
      },
      "selection_img": [
        {
          "Image|endswith": "\\mstsc.exe"
        },
        {
          "OriginalFileName": "mstsc.exe"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Msxsl.EXE Execution",
    "id": 632,
    "status": "test",
    "description": "Detects the execution of the MSXSL utility. This can be used to execute Extensible Stylesheet Language (XSL) files. These files are commonly used to describe the processing and rendering of data within XML files.\nAdversaries can abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1220/T1220.md",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Msxsl/"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2019/10/21",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1220"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\msxsl.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Msxsl is not installed by default and is deprecated, so unlikely on most systems."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote XSL Execution Via Msxsl.EXE",
    "id": 633,
    "status": "experimental",
    "description": "Detects the execution of the \"msxsl\" binary with an \"http\" keyword in the command line. This might indicate a potential remote execution of XSL files.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1220/T1220.md",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Msxsl/"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1220"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\msxsl.exe",
        "CommandLine|contains": "http"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Msxsl is not installed by default and is deprecated, so unlikely on most systems."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Firewall Rule Added Via Netsh.EXE",
    "id": 634,
    "status": "test",
    "description": "Detects the addition of a new rule to the Windows firewall via netsh",
    "references": [
      "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf"
    ],
    "author": "Markus Neis, Sander Wiebing",
    "date": "2019/01/29",
    "modified": "2023/02/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004",
      "attack.s0246"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " firewall ",
          " add "
        ]
      },
      "filter_optional_dropbox": {
        "CommandLine|contains": [
          "advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=?:\\Program Files (x86)\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any",
          "advfirewall firewall add rule name=Dropbox dir=in action=allow \"program=?:\\Program Files\\Dropbox\\Client\\Dropbox.exe\" enable=yes profile=Any"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate administration activity",
      "Software installations"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Program Location Whitelisted In Firewall Via Netsh.EXE",
    "id": 635,
    "status": "test",
    "description": "Detects Netsh command execution that whitelists a program located in a suspicious location in the Windows Firewall",
    "references": [
      "https://www.virusradar.com/en/Win32_Kasidet.AD/description",
      "https://www.hybrid-analysis.com/sample/07e789f4f2f3259e7559fdccb36e96814c2dbff872a21e1fa03de9ee377d581f?environmentId=100"
    ],
    "author": "Sander Wiebing, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community",
    "date": "2020/05/25",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": [
        {
          "CommandLine|contains|all": [
            "firewall",
            "add",
            "allowedprogram"
          ]
        },
        {
          "CommandLine|contains|all": [
            "advfirewall",
            "firewall",
            "add",
            "rule",
            "action=allow",
            "program="
          ]
        }
      ],
      "selection_paths": {
        "CommandLine|contains": [
          ":\\$Recycle.bin\\",
          ":\\RECYCLER.BIN\\",
          ":\\RECYCLERS.BIN\\",
          ":\\SystemVolumeInformation\\",
          ":\\Temp\\",
          ":\\Users\\Default\\",
          ":\\Users\\Desktop\\",
          ":\\Users\\Public\\",
          ":\\Windows\\addins\\",
          ":\\Windows\\cursors\\",
          ":\\Windows\\debug\\",
          ":\\Windows\\drivers\\",
          ":\\Windows\\fonts\\",
          ":\\Windows\\help\\",
          ":\\Windows\\system32\\tasks\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\Downloads\\",
          "\\Local Settings\\Temporary Internet Files\\",
          "\\Temporary Internet Files\\Content.Outlook\\",
          "%Public%\\",
          "%TEMP%",
          "%TMP%"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RDP Connection Allowed Via Netsh.EXE",
    "id": 636,
    "status": "test",
    "description": "Detects usage of the netsh command to open and allow connections to port 3389 (RDP). As seen used by Sarwent Malware",
    "references": [
      "https://labs.sentinelone.com/sarwent-malware-updates-command-detonation/"
    ],
    "author": "Sander Wiebing",
    "date": "2020/05/23",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "firewall ",
          "add ",
          "tcp ",
          "3389"
        ],
        "CommandLine|contains": [
          "portopening",
          "allow"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Firewall Rule Deleted Via Netsh.EXE",
    "id": 637,
    "status": "test",
    "description": "Detects the removal of a port or application rule in the Windows Firewall configuration using netsh",
    "references": [
      "https://app.any.run/tasks/8bbd5b4c-b82d-4e6d-a3ea-d454594a37cc/"
    ],
    "author": "frack113",
    "date": "2022/08/14",
    "modified": "2023/02/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "firewall",
          "delete "
        ]
      },
      "filter_optional_dropbox": {
        "ParentImage|endswith": "\\Dropbox.exe",
        "CommandLine|contains": "name=Dropbox"
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate administration activity",
      "Software installations and removal"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Firewall Disabled via Netsh.EXE",
    "id": 638,
    "status": "test",
    "description": "Detects netsh commands that turns off the Windows firewall",
    "references": [
      "https://www.winhelponline.com/blog/enable-and-disable-windows-firewall-quickly-using-command-line/",
      "https://app.any.run/tasks/210244b9-0b6b-4a2c-83a3-04bd3175d017/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md#atomic-test-1---disable-microsoft-defender-firewall"
    ],
    "author": "Fatih Sirin",
    "date": "2019/11/01",
    "modified": "2023/02/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004",
      "attack.s0108"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains|all": [
          "firewall",
          "set",
          "opmode",
          "disable"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          "advfirewall",
          "set",
          "state",
          "off"
        ]
      },
      "condition": "selection_img and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Legitimate administration activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Netsh Allow Group Policy on Microsoft Defender Firewall",
    "id": 639,
    "status": "test",
    "description": "Adversaries may modify system firewalls in order to bypass controls limiting network usage",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md#atomic-test-3---allow-smb-and-rdp-on-microsoft-defender-firewall",
      "https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/netsh-advfirewall-firewall-control-firewall-behavior"
    ],
    "author": "frack113",
    "date": "2022/01/09",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "advfirewall",
          "firewall",
          "set",
          "rule",
          "group=",
          "new",
          "enable=Yes"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Firewall Configuration Discovery Via Netsh.EXE",
    "id": 640,
    "status": "experimental",
    "description": "Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1016/T1016.md#atomic-test-2---list-windows-firewall-rules",
      "https://ss64.com/nt/netsh.html"
    ],
    "author": "frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'",
    "date": "2021/12/07",
    "modified": "2023/12/11",
    "tags": [
      "attack.discovery",
      "attack.t1016"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "netsh ",
          "show ",
          "firewall "
        ],
        "CommandLine|contains": [
          "config ",
          "state ",
          "rule ",
          "name=all"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Firewall Rule Update Via Netsh.EXE",
    "id": 641,
    "status": "test",
    "description": "Detects execution of netsh with the \"advfirewall\" and the \"set\" option in order to set new values for properties of a existing rule",
    "references": [
      "https://ss64.com/nt/netsh.html"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/18",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " firewall ",
          " set "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration activity",
      "Software installations and removal"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Netsh Helper DLL",
    "id": 642,
    "related": [
      {
        "id": "c90362e0-2df3-4e61-94fe-b37615814cb1",
        "type": "similar"
      },
      {
        "id": "e7b18879-676e-4a0e-ae18-27039185a8e7",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of netsh with \"add helper\" flag in order to add a custom helper DLL. This technique can be abused to add a malicious helper DLL that can be used as a persistence proxy that gets called when netsh.exe is executed.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.007/T1546.007.md",
      "https://github.com/outflanknl/NetshHelperBeacon",
      "https://web.archive.org/web/20160928212230/https://www.adaptforward.com/2016/09/using-netshell-to-execute-evil-dlls-and-persist-on-a-host/"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2019/10/25",
    "modified": "2023/11/28",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.007",
      "attack.s0108"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "netsh.exe"
        },
        {
          "Image|endswith": "\\netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "add",
          "helper"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Network Trace Capture Started Via Netsh.EXE",
    "id": 643,
    "status": "test",
    "description": "Detects the execution of netsh with the \"trace\" flag in order to start a network capture",
    "references": [
      "https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/",
      "https://klausjochem.me/2016/02/03/netsh-the-cyber-attackers-tool-of-choice/"
    ],
    "author": "Kutepov Anton, oscd.community",
    "date": "2019/10/24",
    "modified": "2023/02/13",
    "tags": [
      "attack.discovery",
      "attack.credential_access",
      "attack.t1040"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "trace",
          "start"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Port Forwarding Rule Added Via Netsh.EXE",
    "id": 644,
    "status": "test",
    "description": "Detects the execution of netsh commands that configure a new port forwarding (PortProxy) rule",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html",
      "https://adepts.of0x.cc/netsh-portproxy-code/",
      "https://www.dfirnotes.net/portproxy_detection/"
    ],
    "author": "Florian Roth (Nextron Systems), omkar72, oscd.community, Swachchhanda Shrawan Poudel",
    "date": "2019/01/29",
    "modified": "2023/09/01",
    "tags": [
      "attack.lateral_movement",
      "attack.defense_evasion",
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains|all": [
          "interface",
          "portproxy",
          "add",
          "v4tov4"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          "i ",
          "p ",
          "a ",
          "v "
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          "connectp",
          "listena",
          "c="
        ]
      },
      "condition": "selection_img and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Legitimate administration activity",
      "WSL2 network bridge PowerShell script used for WSL/Kubernetes/Docker (e.g. https://github.com/microsoft/WSL/issues/4150#issuecomment-504209723)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "RDP Port Forwarding Rule Added Via Netsh.EXE",
    "id": 645,
    "status": "test",
    "description": "Detects the execution of netsh to configure a port forwarding of port 3389 (RDP) rule",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html"
    ],
    "author": "Florian Roth (Nextron Systems), oscd.community",
    "date": "2019/01/29",
    "modified": "2023/02/13",
    "tags": [
      "attack.lateral_movement",
      "attack.defense_evasion",
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " i",
          " p",
          "=3389",
          " c"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Harvesting Of Wifi Credentials Via Netsh.EXE",
    "id": 646,
    "status": "test",
    "description": "Detect the harvesting of wifi credentials using netsh.exe",
    "references": [
      "https://blog.malwarebytes.com/threat-analysis/2020/04/new-agenttesla-variant-steals-wifi-credentials/"
    ],
    "author": "Andreas Hunkeler (@Karneades), oscd.community",
    "date": "2020/04/20",
    "modified": "2023/02/13",
    "tags": [
      "attack.discovery",
      "attack.credential_access",
      "attack.t1040"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\netsh.exe"
        },
        {
          "OriginalFileName": "netsh.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "wlan",
          " s",
          " p",
          " k",
          "=clear"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Group And Account Reconnaissance Activity Using Net.EXE",
    "id": 647,
    "status": "test",
    "description": "Detects suspicious reconnaissance command line activity on Windows systems using Net.EXE\nCheck if the user that executed the commands is suspicious (e.g. service accounts, LOCAL_SYSTEM)\n",
    "references": [
      "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
      "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/",
      "https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/"
    ],
    "author": "Florian Roth (Nextron Systems), omkar72, @svch0st, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2023/03/02",
    "tags": [
      "attack.discovery",
      "attack.t1087.001",
      "attack.t1087.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_group_root": {
        "CommandLine|contains": [
          " group ",
          " localgroup "
        ]
      },
      "selection_group_flags": {
        "CommandLine|contains": [
          "domain admins",
          " administrator",
          " administrateur",
          "enterprise admins",
          "Exchange Trusted Subsystem",
          "Remote Desktop Users",
          "Utilisateurs du Bureau \u00c3\u00a0 distance",
          "Usuarios de escritorio remoto",
          " /do"
        ]
      },
      "filter_group_add": {
        "CommandLine|contains": " /add"
      },
      "selection_accounts_root": {
        "CommandLine|contains": " accounts "
      },
      "selection_accounts_flags": {
        "CommandLine|contains": " /do"
      },
      "condition": "selection_img and ((all of selection_group_* and not filter_group_add) or all of selection_accounts_*)"
    },
    "falsepositives": [
      "Inventory tool runs",
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Unmount Share Via Net.EXE",
    "id": 648,
    "status": "test",
    "description": "Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.005/T1070.005.md"
    ],
    "author": "oscd.community, @redcanary, Zach Stanford @svch0st",
    "date": "2020/10/08",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "share",
          "/delete"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Administrators or Power users may remove their shares via cmd line"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Start Windows Service Via Net.EXE",
    "id": 649,
    "status": "test",
    "description": "Detects the usage of the \"net.exe\" command to start a service using the \"start\" flag",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1569.002/T1569.002.md"
    ],
    "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/21",
    "modified": "2023/03/05",
    "tags": [
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " start "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administrator or user executes a service for legitimate reasons."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Stop Windows Service Via Net.EXE",
    "id": 650,
    "related": [
      {
        "id": "eb87818d-db5d-49cc-a987-d5da331fbd90",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the stopping of a Windows service via the \"net\" utility.",
    "references": [
      "https://ss64.com/nt/net-service.html"
    ],
    "author": "Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/05",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        },
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " stop "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "There are many legitimate reasons to stop a service. This rule isn't looking for any suspicious behaviour in particular. Filter legitimate activity accordingly"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "New User Created Via Net.EXE",
    "id": 651,
    "related": [
      {
        "id": "b9f0e6f5-09b4-4358-bae4-08408705bd5c",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Identifies the creation of local users via the net.exe command.",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/014c3f51-89c6-40f1-ac9c-5688f26090ab.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1136.001/T1136.001.md"
    ],
    "author": "Endgame, JHasenbusch (adapted to Sigma for oscd.community)",
    "date": "2018/10/30",
    "modified": "2023/02/21",
    "tags": [
      "attack.persistence",
      "attack.t1136.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "user",
          "add"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate user creation.",
      "Better use event IDs for user creation rather than command line rules."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New User Created Via Net.EXE With Never Expire Option",
    "id": 652,
    "related": [
      {
        "id": "cd219ff3-fa99-45d4-8380-a7d15116c6dc",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects creation of local users via the net.exe command with the option \"never expire\"",
    "references": [
      "https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/12",
    "modified": "2023/02/21",
    "tags": [
      "attack.persistence",
      "attack.t1136.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "user",
          "add",
          "expires:never"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Admin Share Mount Via Net.EXE",
    "id": 653,
    "related": [
      {
        "id": "f117933c-980c-4f78-b384-e3d838111165",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when an admin share is mounted using net.exe",
    "references": [
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
    ],
    "author": "oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, wagga",
    "date": "2020/10/05",
    "modified": "2023/02/21",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " use ",
          " \\\\\\\\*\\\\*$"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrators"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Internet Hosted WebDav Share Mount Via Net.EXE",
    "id": 654,
    "status": "experimental",
    "description": "Detects when an internet hosted webdav share is mounted using the \"net.exe\" utility",
    "references": [
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/21",
    "modified": "2023/07/25",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " use ",
          " http"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Share Mount Via Net.EXE",
    "id": 655,
    "related": [
      {
        "id": "3abd6094-7027-475f-9630-8ab9be7b9725",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a share is mounted using the \"net.exe\" utility",
    "references": [
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/02",
    "modified": "2023/02/21",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " use ",
          " \\\\\\\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate activity by administrators and scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "System Network Connections Discovery Via Net.EXE",
    "id": 656,
    "status": "test",
    "description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-1---system-network-connections-discovery"
    ],
    "author": "frack113",
    "date": "2021/12/10",
    "modified": "2023/02/21",
    "tags": [
      "attack.discovery",
      "attack.t1049"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": [
        {
          "CommandLine|endswith": [
            " use",
            " sessions"
          ]
        },
        {
          "CommandLine|contains": [
            " use ",
            " sessions "
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Password Provided In Command Line Of Net.EXE",
    "id": 657,
    "status": "test",
    "description": "Detects a when net.exe is called with a password in the command line",
    "references": [
      "Internal Research"
    ],
    "author": "Tim Shelton (HAWK.IO)",
    "date": "2021/12/09",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1078"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " use ",
          ":*\\\\",
          "/USER:* *"
        ]
      },
      "filter_main_empty": {
        "CommandLine|endswith": " "
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Share And Session Enumeration Using Net.EXE",
    "id": 658,
    "status": "stable",
    "description": "Detects attempts to enumerate file shares, printer shares and sessions using \"net.exe\" with the \"view\" flag.",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/b8a94d2f-dc75-4630-9d73-1edc6bd26fff.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md"
    ],
    "author": "Endgame, JHasenbusch (ported for oscd.community)",
    "date": "2018/10/30",
    "modified": "2023/02/21",
    "tags": [
      "attack.discovery",
      "attack.t1018"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        },
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "view"
      },
      "filter": {
        "CommandLine|contains": "\\\\\\\\"
      },
      "condition": "all of selection_* and not filter"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate use of net.exe utility by legitimate user"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Nltest.EXE Execution",
    "id": 659,
    "related": [
      {
        "id": "5cc90652-4cbd-4241-aa3b-4b462fa5a248",
        "type": "similar"
      },
      {
        "id": "eeb66bbb-3dde-4582-815a-584aee9fe6d1",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects nltest commands that can be used for information discovery",
    "references": [
      "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/nltest.htm"
    ],
    "author": "Arun Chauhan",
    "date": "2023/02/03",
    "tags": [
      "attack.discovery",
      "attack.t1016",
      "attack.t1018",
      "attack.t1482"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\nltest.exe"
        },
        {
          "OriginalFileName": "nltestrk.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administration activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Recon Activity Via Nltest.EXE",
    "id": 660,
    "related": [
      {
        "id": "410ad193-a728-4107-bc79-4419789fcbf8",
        "type": "similar"
      },
      {
        "id": "903076ff-f442-475a-b667-4f246bcc203b",
        "type": "similar"
      },
      {
        "id": "77815820-246c-47b8-9741-e0def3f57308",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects nltest commands that can be used for information discovery",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731935(v=ws.11)",
      "https://thedfirreport.com/2021/08/16/trickbot-leads-up-to-fake-1password-installation/",
      "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/",
      "https://book.hacktricks.xyz/windows/basic-cmd-for-pentesters",
      "https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/",
      "https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html",
      "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
      "https://github.com/redcanaryco/atomic-red-team/blob/5360c9d9ffa3b25f6495f7a16e267b719eba2c37/atomics/T1482/T1482.md#atomic-test-2---windows---discover-domain-trusts-with-nltest"
    ],
    "author": "Craig Young, oscd.community, Georg Lauenstein",
    "date": "2021/07/24",
    "modified": "2023/12/15",
    "tags": [
      "attack.discovery",
      "attack.t1016",
      "attack.t1482"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_nltest": [
        {
          "Image|endswith": "\\nltest.exe"
        },
        {
          "OriginalFileName": "nltestrk.exe"
        }
      ],
      "selection_recon": [
        {
          "CommandLine|contains|all": [
            "server",
            "query"
          ]
        },
        {
          "CommandLine|contains": [
            "/user",
            "all_trusts",
            "dclist:",
            "dnsgetdc:",
            "domain_trusts",
            "dsgetdc:",
            "parentdomain",
            "trusted_domains"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration use but user and host must be investigated"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Arbitrary Code Execution Via Node.EXE",
    "id": 661,
    "status": "test",
    "description": "Detects the execution node.exe which is shipped with multiple software such as VMware, Adobe...etc. In order to execute arbitrary code. For example to establish reverse shell as seen in Log4j attacks...etc",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html",
      "https://www.sprocketsecurity.com/resources/crossing-the-log4j-horizon-a-vulnerability-with-no-return",
      "https://www.rapid7.com/blog/post/2022/01/18/active-exploitation-of-vmware-horizon-servers/",
      "https://nodejs.org/api/cli.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\node.exe",
        "CommandLine|contains": [
          " -e ",
          " --eval "
        ]
      },
      "action_reverse_shell": {
        "CommandLine|contains|all": [
          ".exec(",
          "net.socket",
          ".connect",
          "child_process"
        ]
      },
      "condition": "selection and 1 of action_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Node Process Executions",
    "id": 662,
    "status": "test",
    "description": "Detects the execution of other scripts using the Node executable packaged with Adobe Creative Cloud",
    "references": [
      "https://twitter.com/mttaggart/status/1511804863293784064"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2022/04/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1127",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\Adobe Creative Cloud Experience\\libs\\node.exe"
      },
      "filter": {
        "CommandLine|contains": "Adobe Creative Cloud Experience\\js"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "Image",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Network Reconnaissance Activity",
    "id": 663,
    "status": "test",
    "description": "Detects a set of suspicious network related commands often used in recon stages",
    "references": [
      "https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/07",
    "tags": [
      "attack.discovery",
      "attack.t1087",
      "attack.t1082",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "nslookup",
          "_ldap._tcp.dc._msdcs."
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Nslookup PowerShell Download Cradle - ProcessCreation",
    "id": 664,
    "related": [
      {
        "id": "72671447-4352-4413-bb91-b85569687135",
        "type": "obsoletes"
      },
      {
        "id": "999bff6d-dc15-44c9-9f5c-e1051bfc86e1",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious powershell download cradle using nslookup. This cradle uses nslookup to extract payloads from DNS records",
    "references": [
      "https://twitter.com/Alh4zr3d/status/1566489367232651264"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/05",
    "modified": "2022/12/19",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|contains": "\\nslookup.exe"
        },
        {
          "OriginalFileName": "\\nslookup.exe"
        }
      ],
      "selection_cmd": {
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          " -q=txt ",
          " -querytype=txt "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Usage Of Active Directory Diagnostic Tool (ntdsutil.exe)",
    "id": 665,
    "related": [
      {
        "id": "2afafd61-6aae-4df4-baed-139fa1f4c345",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects execution of ntdsutil.exe to perform different actions such as restoring snapshots...etc.",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731620(v=ws.11)",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/espionage-asia-governments"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/14",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ntdsutil.exe"
        },
        {
          "OriginalFileName": "ntdsutil.exe"
        }
      ],
      "selection_cli": [
        {
          "CommandLine|contains|all": [
            "snapshot",
            "mount "
          ]
        },
        {
          "CommandLine|contains|all": [
            "ac",
            " i",
            " ntds"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage to restore snapshots",
      "Legitimate admin activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)",
    "id": 666,
    "status": "test",
    "description": "Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)",
    "references": [
      "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm"
    ],
    "author": "Thomas Patzke",
    "date": "2019/01/16",
    "modified": "2022/03/11",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\ntdsutil.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "NTDS maintenance"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Driver/DLL Installation Via Odbcconf.EXE",
    "id": 667,
    "related": [
      {
        "id": "cb0fe7c5-f3a3-484d-aa25-d350a7912729",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" with \"INSTALLDRIVER\" which installs a new ODBC driver. Attackers abuse this to install and run malicious DLLs.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://web.archive.org/web/20191023232753/https://twitter.com/Hexacorn/status/1187143326673330176",
      "https://www.hexacorn.com/blog/2020/08/23/odbcconf-lolbin-trifecta/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "INSTALLDRIVER ",
          ".dll"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate driver DLLs being registered via \"odbcconf\" will generate false positives. Investigate the path of the DLL and its contents to determine if the action is authorized."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Driver/DLL Installation Via Odbcconf.EXE",
    "id": 668,
    "related": [
      {
        "id": "3f5491e2-8db8-496b-9e95-1029fce852d4",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" with the \"INSTALLDRIVER\" action where the driver doesn't contain a \".dll\" extension. This is often used as a defense evasion method.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://web.archive.org/web/20191023232753/https://twitter.com/Hexacorn/status/1187143326673330176",
      "https://www.hexacorn.com/blog/2020/08/23/odbcconf-lolbin-trifecta/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "INSTALLDRIVER "
      },
      "filter_main_dll_ext": {
        "CommandLine|contains": ".dll"
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Odbcconf.EXE Suspicious DLL Location",
    "id": 669,
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" where the path of the DLL being registered is located in a potentially suspicious location.",
    "references": [
      "https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16",
      "https://www.trendmicro.com/en_us/research/17/h/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses.html",
      "https://securityintelligence.com/posts/raspberry-robin-worm-dridex-malware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/22",
    "modified": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          ":\\PerfLogs\\",
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Registration\\CRMLog",
          ":\\Windows\\System32\\com\\dmp\\",
          ":\\Windows\\System32\\FxsTmp\\",
          ":\\Windows\\System32\\Microsoft\\Crypto\\RSA\\MachineKeys\\",
          ":\\Windows\\System32\\spool\\drivers\\color\\",
          ":\\Windows\\System32\\spool\\PRINTERS\\",
          ":\\Windows\\System32\\spool\\SERVERS\\",
          ":\\Windows\\System32\\Tasks_Migrated\\",
          ":\\Windows\\System32\\Tasks\\Microsoft\\Windows\\SyncCenter\\",
          ":\\Windows\\SysWOW64\\com\\dmp\\",
          ":\\Windows\\SysWOW64\\FxsTmp\\",
          ":\\Windows\\SysWOW64\\Tasks\\Microsoft\\Windows\\PLA\\System\\",
          ":\\Windows\\SysWOW64\\Tasks\\Microsoft\\Windows\\SyncCenter\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          ":\\Windows\\Tracing\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New DLL Registered Via Odbcconf.EXE",
    "id": 670,
    "related": [
      {
        "id": "ba4cfc11-d0fa-4d94-bf20-7c332c412e76",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" with \"REGSVR\" in order to register a new DLL (equivalent to running regsvr32). Attackers abuse this to install and run malicious DLLs.",
    "references": [
      "https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16",
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://redcanary.com/blog/raspberry-robin/",
      "https://web.archive.org/web/20191023232753/https://twitter.com/Hexacorn/status/1187143326673330176",
      "https://www.hexacorn.com/blog/2020/08/23/odbcconf-lolbin-trifecta/",
      "https://www.trendmicro.com/en_us/research/17/h/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses.html"
    ],
    "author": "Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "REGSVR ",
          ".dll"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate DLLs being registered via \"odbcconf\" will generate false positives. Investigate the path of the DLL and its content to determine if the action is authorized."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious DLL Registered Via Odbcconf.EXE",
    "id": 671,
    "related": [
      {
        "id": "9f0a8bf3-a65b-440a-8c1e-5cb1547c8e70",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" with the \"REGSVR\" action where the DLL in question doesn't contain a \".dll\" extension. Which is often used as a method to evade defenses.",
    "references": [
      "https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16",
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://www.trendmicro.com/en_us/research/17/h/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "REGSVR "
      },
      "filter_main_dll_ext": {
        "CommandLine|contains": ".dll"
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Response File Execution Via Odbcconf.EXE",
    "id": 672,
    "related": [
      {
        "id": "2d32dd6f-3196-4093-b9eb-1ad8ab088ca5",
        "type": "similar"
      },
      {
        "id": "65d2be45-8600-4042-b4c0-577a1ff8a60e",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" with the \"-f\" flag in order to load a response file which might contain a malicious action.",
    "references": [
      "https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16",
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://www.cybereason.com/blog/threat-analysis-report-bumblebee-loader-the-high-road-to-enterprise-domain-control",
      "https://www.hexacorn.com/blog/2020/08/23/odbcconf-lolbin-trifecta/"
    ],
    "author": "Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -f ",
          " /f "
        ]
      },
      "selection_rsp_ext": {
        "CommandLine|contains": ".rsp"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "The rule is looking for any usage of response file, which might generate false positive when this function is used legitimately. Investigate the contents of the \".rsp\" file to determine if it is malicious and apply additional filters if necessary."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Response File Execution Via Odbcconf.EXE",
    "id": 673,
    "related": [
      {
        "id": "5f03babb-12db-4eec-8c82-7b4cb5580868",
        "type": "derived"
      },
      {
        "id": "65d2be45-8600-4042-b4c0-577a1ff8a60e",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"odbcconf\" with the \"-f\" flag in order to load a response file with a non-\".rsp\" extension.",
    "references": [
      "https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16",
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://www.trendmicro.com/en_us/research/17/h/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/22",
    "modified": "2023/05/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\odbcconf.exe"
        },
        {
          "OriginalFileName": "odbcconf.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -f ",
          " /f "
        ]
      },
      "filter_main_rsp_ext": {
        "CommandLine|contains": ".rsp"
      },
      "filter_main_runonce_odbc": {
        "ParentImage": "C:\\Windows\\System32\\runonce.exe",
        "Image": "C:\\Windows\\System32\\odbcconf.exe",
        "CommandLine|contains": ".exe /E /F \"C:\\WINDOWS\\system32\\odbcconf.tmp\""
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Child Process Spawned By Odbcconf.EXE",
    "id": 674,
    "status": "experimental",
    "description": "Detects an uncommon child process of \"odbcconf.exe\" binary which normally shouldn't have any child processes.",
    "references": [
      "https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16",
      "https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/",
      "https://medium.com/@cyberjyot/t1218-008-dll-execution-using-odbcconf-exe-803fa9e08dac"
    ],
    "author": "Harjot Singh @cyb3rjy0t",
    "date": "2023/05/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\odbcconf.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "In rare occurrences where \"odbcconf\" crashes. It might spawn a \"werfault\" process",
      "Other child processes will depend on the DLL being registered by actions like \"regsvr\". In case where the DLLs have external calls (which should be rare). Other child processes might spawn and additional filters need to be applied."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Arbitrary File Download Using Office Application",
    "id": 675,
    "related": [
      {
        "id": "0c79148b-118e-472b-bdb7-9b57b444cc19",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects potential arbitrary file download using a Microsoft Office application",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Winword/",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Powerpnt/",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Excel/",
      "https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community",
    "date": "2022/05/17",
    "modified": "2023/06/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\EXCEL.EXE",
            "\\POWERPNT.EXE",
            "\\WINWORD.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Excel.exe",
            "POWERPNT.EXE",
            "WinWord.exe"
          ]
        }
      ],
      "selection_http": {
        "CommandLine|contains": [
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Excel.EXE DCOM Lateral Movement Via ActivateMicrosoftApp",
    "id": 676,
    "status": "experimental",
    "description": "Detects suspicious child processes of Excel which could be an indicator of lateral movement leveraging the \"ActivateMicrosoftApp\" Excel DCOM object.\n",
    "references": [
      "https://posts.specterops.io/lateral-movement-abuse-the-power-of-dcom-excel-application-3c016d0d9922",
      "https://github.com/grayhatkiller/SharpExShell",
      "https://learn.microsoft.com/en-us/office/vba/api/excel.xlmsapplication"
    ],
    "author": "Aaron Stratton",
    "date": "2023/11/13",
    "tags": [
      "attack.t1021.003",
      "attack.lateral_movement"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\excel.exe"
      },
      "selection_child": [
        {
          "OriginalFileName": [
            "foxprow.exe",
            "schdplus.exe",
            "winproj.exe"
          ]
        },
        {
          "Image|endswith": [
            "\\foxprow.exe",
            "\\schdplus.exe",
            "\\winproj.exe"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Office Document Executed From Trusted Location",
    "id": 677,
    "status": "experimental",
    "description": "Detects the execution of an Office application that points to a document that is located in a trusted location. Attackers often used this to avoid macro security and execute their malicious code.",
    "references": [
      "Internal Research",
      "https://twitter.com/Max_Mal_/status/1633863678909874176",
      "https://techcommunity.microsoft.com/t5/microsoft-365-blog/new-security-hardening-policies-for-trusted-documents/ba-p/3023465",
      "https://twitter.com/_JohnHammond/status/1588155401752788994"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/21",
    "modified": "2023/10/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\explorer.exe",
          "\\dopus.exe"
        ]
      },
      "selection_img": [
        {
          "Image|endswith": [
            "\\EXCEL.EXE",
            "\\POWERPNT.EXE",
            "\\WINWORD.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Excel.exe",
            "POWERPNT.EXE",
            "WinWord.exe"
          ]
        }
      ],
      "selection_trusted_location": {
        "CommandLine|contains": [
          "\\AppData\\Roaming\\Microsoft\\Templates",
          "\\AppData\\Roaming\\Microsoft\\Word\\Startup\\",
          "\\Microsoft Office\\root\\Templates\\",
          "\\Microsoft Office\\Templates\\"
        ]
      },
      "filter_main_dotx": {
        "CommandLine|endswith": [
          ".dotx",
          ".xltx",
          ".potx"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Microsoft OneNote Child Process",
    "id": 678,
    "related": [
      {
        "id": "438025f9-5856-4663-83f7-52f878a70a50",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious child processes of the Microsoft OneNote application. This may indicate an attempt to execute malicious embedded objects from a .one file.",
    "references": [
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-e34e43eb5666427602ddf488b2bf3b545bd9aae81af3e6f6c7949f9652abdf18",
      "https://micahbabinski.medium.com/detecting-onenote-one-malware-delivery-407e9321ecf0"
    ],
    "author": "Tim Rauch (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), Elastic (idea)",
    "date": "2022/10/21",
    "modified": "2023/02/10",
    "tags": [
      "attack.t1566",
      "attack.t1566.001",
      "attack.initial_access"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\onenote.exe"
      },
      "selection_opt_img": [
        {
          "OriginalFileName": [
            "bitsadmin.exe",
            "CertOC.exe",
            "CertUtil.exe",
            "Cmd.Exe",
            "CMSTP.EXE",
            "cscript.exe",
            "curl.exe",
            "HH.exe",
            "IEExec.exe",
            "InstallUtil.exe",
            "javaw.exe",
            "Microsoft.Workflow.Compiler.exe",
            "msdt.exe",
            "MSHTA.EXE",
            "msiexec.exe",
            "Msxsl.exe",
            "odbcconf.exe",
            "pcalua.exe",
            "PowerShell.EXE",
            "RegAsm.exe",
            "RegSvcs.exe",
            "REGSVR32.exe",
            "RUNDLL32.exe",
            "schtasks.exe",
            "ScriptRunner.exe",
            "wmic.exe",
            "WorkFolders.exe",
            "wscript.exe"
          ]
        },
        {
          "Image|endswith": [
            "\\AppVLP.exe",
            "\\bash.exe",
            "\\bitsadmin.exe",
            "\\certoc.exe",
            "\\certutil.exe",
            "\\cmd.exe",
            "\\cmstp.exe",
            "\\control.exe",
            "\\cscript.exe",
            "\\curl.exe",
            "\\forfiles.exe",
            "\\hh.exe",
            "\\ieexec.exe",
            "\\installutil.exe",
            "\\javaw.exe",
            "\\mftrace.exe",
            "\\Microsoft.Workflow.Compiler.exe",
            "\\msbuild.exe",
            "\\msdt.exe",
            "\\mshta.exe",
            "\\msidb.exe",
            "\\msiexec.exe",
            "\\msxsl.exe",
            "\\odbcconf.exe",
            "\\pcalua.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\regasm.exe",
            "\\regsvcs.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\schtasks.exe",
            "\\scrcons.exe",
            "\\scriptrunner.exe",
            "\\sh.exe",
            "\\svchost.exe",
            "\\verclsid.exe",
            "\\wmic.exe",
            "\\workfolders.exe",
            "\\wscript.exe"
          ]
        }
      ],
      "selection_opt_explorer": {
        "Image|endswith": "\\explorer.exe",
        "CommandLine|contains": [
          ".hta",
          ".vb",
          ".wsh",
          ".js",
          ".ps",
          ".scr",
          ".pif",
          ".bat",
          ".cmd"
        ]
      },
      "selection_opt_paths": {
        "Image|contains": [
          "\\AppData\\",
          "\\Users\\Public\\",
          "\\ProgramData\\",
          "\\Windows\\Tasks\\",
          "\\Windows\\Temp\\",
          "\\Windows\\System32\\Tasks\\"
        ]
      },
      "filter_teams": {
        "Image|endswith": "\\AppData\\Local\\Microsoft\\Teams\\current\\Teams.exe",
        "CommandLine|endswith": "-Embedding"
      },
      "filter_onedrive": {
        "Image|contains": "\\AppData\\Local\\Microsoft\\OneDrive\\",
        "Image|endswith": "\\FileCoAuth.exe",
        "CommandLine|endswith": "-Embedding"
      },
      "condition": "selection_parent and 1 of selection_opt_* and not 1 of filter_*"
    },
    "falsepositives": [
      "File located in the AppData folder with trusted signature"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Outlook EnableUnsafeClientMailRules Setting Enabled",
    "id": 679,
    "related": [
      {
        "id": "6763c6c8-bd01-4687-bc8d-4fa52cf8ba08",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects an attacker trying to enable the outlook security setting \"EnableUnsafeClientMailRules\" which allows outlook to run applications or execute macros",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html",
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=44",
      "https://support.microsoft.com/en-us/topic/how-to-control-the-rule-actions-to-start-an-application-or-run-a-macro-in-outlook-2016-and-outlook-2013-e4964b72-173c-959d-5d7b-ead562979048"
    ],
    "author": "Markus Neis, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2018/12/27",
    "modified": "2023/02/09",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "\\Outlook\\Security\\EnableUnsafeClientMailRules"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Execution From Outlook Temporary Folder",
    "id": 680,
    "status": "test",
    "description": "Detects a suspicious program execution in Outlook temp folder",
    "author": "Florian Roth (Nextron Systems)",
    "references": [
      "Internal Research"
    ],
    "date": "2019/10/01",
    "modified": "2022/10/09",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": "\\Temporary Internet Files\\Content.Outlook\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Outlook Child Process",
    "id": 681,
    "related": [
      {
        "id": "438025f9-5856-4663-83f7-52f878a70a50",
        "type": "derived"
      },
      {
        "id": "e212d415-0e93-435f-9e1a-f29005bb4723",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a suspicious process spawning from an Outlook process.",
    "references": [
      "https://www.hybrid-analysis.com/sample/465aabe132ccb949e75b8ab9c5bda36d80cf2fd503d52b8bad54e295f28bbc21?environmentId=100",
      "https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html"
    ],
    "author": "Michael Haag, Florian Roth (Nextron Systems), Markus Neis, Elastic, FPT.EagleEye Team",
    "date": "2022/02/28",
    "modified": "2023/02/04",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\OUTLOOK.EXE",
        "Image|endswith": [
          "\\AppVLP.exe",
          "\\bash.exe",
          "\\cmd.exe",
          "\\cscript.exe",
          "\\forfiles.exe",
          "\\hh.exe",
          "\\mftrace.exe",
          "\\msbuild.exe",
          "\\msdt.exe",
          "\\mshta.exe",
          "\\msiexec.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\schtasks.exe",
          "\\scrcons.exe",
          "\\scriptrunner.exe",
          "\\sh.exe",
          "\\svchost.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Remote Child Process From Outlook",
    "id": 682,
    "related": [
      {
        "id": "208748f7-881d-47ac-a29c-07ea84bf691d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a suspicious child process spawning from Outlook where the image is located in a remote location (SMB/WebDav shares).",
    "references": [
      "https://github.com/sensepost/ruler",
      "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html",
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=49"
    ],
    "author": "Markus Neis, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2018/12/27",
    "modified": "2023/02/09",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\outlook.exe",
        "Image|startswith": "\\\\\\\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Binary In User Directory Spawned From Office Application",
    "id": 683,
    "status": "test",
    "description": "Detects an executable in the users directory started from one of the Microsoft Office suite applications (Word, Excel, PowerPoint, Publisher, Visio)",
    "references": [
      "https://blog.morphisec.com/fin7-not-finished-morphisec-spots-new-campaign",
      "https://www.virustotal.com/gui/file/23160972c6ae07f740800fa28e421a81d7c0ca5d5cab95bc082b4a986fbac57"
    ],
    "author": "Jason Lynch",
    "date": "2019/04/02",
    "modified": "2023/02/04",
    "tags": [
      "attack.execution",
      "attack.t1204.002",
      "attack.g0046",
      "car.2013-05-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\WINWORD.EXE",
          "\\EXCEL.EXE",
          "\\POWERPNT.exe",
          "\\MSPUB.exe",
          "\\VISIO.exe",
          "\\MSACCESS.exe",
          "\\EQNEDT32.exe"
        ],
        "Image|startswith": "C:\\users\\",
        "Image|endswith": ".exe"
      },
      "filter": {
        "Image|endswith": "\\Teams.exe"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Microsoft Office Child Process",
    "id": 684,
    "related": [
      {
        "id": "c27515df-97a9-4162-8a60-dc0eeb51b775",
        "type": "derived"
      },
      {
        "id": "e1693bc8-7168-4eab-8718-cdcaa68a1738",
        "type": "derived"
      },
      {
        "id": "23daeb52-e6eb-493c-8607-c4f0246cb7d8",
        "type": "obsoletes"
      },
      {
        "id": "518643ba-7d9c-4fa5-9f37-baed36059f6a",
        "type": "obsoletes"
      },
      {
        "id": "04f5363a-6bca-42ff-be70-0d28bf629ead",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects a suspicious process spawning from one of the Microsoft Office suite products (Word, Excel, PowerPoint, Publisher, Visio, etc.)",
    "references": [
      "https://www.hybrid-analysis.com/sample/465aabe132ccb949e75b8ab9c5bda36d80cf2fd503d52b8bad54e295f28bbc21?environmentId=100",
      "https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html",
      "https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/",
      "https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e",
      "https://github.com/vadim-hunter/Detection-Ideas-Rules/blob/02bcbfc2bfb8b4da601bb30de0344ae453aa1afe/Threat%20Intelligence/The%20DFIR%20Report/20210329_Sodinokibi_(aka_REvil)_Ransomware.yaml",
      "https://github.com/splunk/security_content/blob/develop/detections/endpoint/office_spawning_control.yml",
      "https://twitter.com/andythevariable/status/1576953781581144064?s=20&t=QiJILvK4ZiBdR8RJe24u-A",
      "https://www.elastic.co/security-labs/exploring-the-ref2731-intrusion-set",
      "https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/windows/defense_evasion_execution_msbuild_started_by_office_app.toml",
      "https://www.vmray.com/analyses/2d2fa29185ad/report/overview.html",
      "https://app.any.run/tasks/c903e9c8-0350-440c-8688-3881b556b8e0/"
    ],
    "author": "Florian Roth (Nextron Systems), Markus Neis, FPT.EagleEye Team, Vadim Khrykov, Cyb3rEng, Michael Haag, Christopher Peacock @securepeacock, @scythe_io",
    "date": "2018/04/06",
    "modified": "2023/04/24",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1047",
      "attack.t1204.002",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\EQNEDT32.EXE",
          "\\EXCEL.EXE",
          "\\MSACCESS.EXE",
          "\\MSPUB.exe",
          "\\ONENOTE.EXE",
          "\\POWERPNT.exe",
          "\\VISIO.exe",
          "\\WINWORD.EXE",
          "\\wordpad.exe",
          "\\wordview.exe"
        ]
      },
      "selection_child_processes": [
        {
          "OriginalFileName": [
            "bitsadmin.exe",
            "CertOC.exe",
            "CertUtil.exe",
            "Cmd.Exe",
            "CMSTP.EXE",
            "cscript.exe",
            "curl.exe",
            "HH.exe",
            "IEExec.exe",
            "InstallUtil.exe",
            "javaw.exe",
            "Microsoft.Workflow.Compiler.exe",
            "msdt.exe",
            "MSHTA.EXE",
            "msiexec.exe",
            "Msxsl.exe",
            "odbcconf.exe",
            "pcalua.exe",
            "PowerShell.EXE",
            "RegAsm.exe",
            "RegSvcs.exe",
            "REGSVR32.exe",
            "RUNDLL32.exe",
            "schtasks.exe",
            "ScriptRunner.exe",
            "wmic.exe",
            "WorkFolders.exe",
            "wscript.exe"
          ]
        },
        {
          "Image|endswith": [
            "\\AppVLP.exe",
            "\\bash.exe",
            "\\bitsadmin.exe",
            "\\certoc.exe",
            "\\certutil.exe",
            "\\cmd.exe",
            "\\cmstp.exe",
            "\\control.exe",
            "\\cscript.exe",
            "\\curl.exe",
            "\\forfiles.exe",
            "\\hh.exe",
            "\\ieexec.exe",
            "\\installutil.exe",
            "\\javaw.exe",
            "\\mftrace.exe",
            "\\Microsoft.Workflow.Compiler.exe",
            "\\msbuild.exe",
            "\\msdt.exe",
            "\\mshta.exe",
            "\\msidb.exe",
            "\\msiexec.exe",
            "\\msxsl.exe",
            "\\odbcconf.exe",
            "\\pcalua.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\regasm.exe",
            "\\regsvcs.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\schtasks.exe",
            "\\scrcons.exe",
            "\\scriptrunner.exe",
            "\\sh.exe",
            "\\svchost.exe",
            "\\verclsid.exe",
            "\\wmic.exe",
            "\\workfolders.exe",
            "\\wscript.exe"
          ]
        }
      ],
      "selection_child_susp_paths": {
        "Image|contains": [
          "\\AppData\\",
          "\\Users\\Public\\",
          "\\ProgramData\\",
          "\\Windows\\Tasks\\",
          "\\Windows\\Temp\\",
          "\\Windows\\System32\\Tasks\\"
        ]
      },
      "condition": "selection_parent and 1 of selection_child_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Arbitrary DLL Load Using Winword",
    "id": 685,
    "related": [
      {
        "id": "2621b3a6-3840-4810-ac14-a02426086171",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects potential DLL sideloading using the Microsoft Office winword process via the '/l' flag.",
    "references": [
      "https://github.com/D4Vinci/One-Lin3r/blob/9fdfa5f0b9c698dfbd4cdfe7d2473192777ae1c6/one_lin3r/core/liners/windows/cmd/dll_loader_word.py"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2020/10/09",
    "modified": "2023/03/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WINWORD.exe"
        },
        {
          "OriginalFileName": "WinWord.exe"
        }
      ],
      "selection_dll": {
        "CommandLine|contains|all": [
          "/l ",
          ".dll"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Mpclient.DLL Sideloading Via OfflineScannerShell.EXE Execution",
    "id": 686,
    "status": "test",
    "description": "Detects execution of Windows Defender \"OfflineScannerShell.exe\" from its non standard directory.\nThe \"OfflineScannerShell.exe\" binary is vulnerable to DLL side loading and will load any DLL named \"mpclient.dll\" from the current working directory.\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/OfflineScannerShell/"
    ],
    "author": "frack113",
    "date": "2022/03/06",
    "modified": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\OfflineScannerShell.exe"
        },
        {
          "OriginalFileName": "OfflineScannerShell.exe"
        }
      ],
      "filter_main_legit_dir": {
        "CurrentDirectory": "C:\\Program Files\\Windows Defender\\Offline\\"
      },
      "filter_main_empty": {
        "CurrentDirectory": ""
      },
      "filter_main_null": {
        "CurrentDirectory": null
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PDQ Deploy Remote Adminstartion Tool Execution",
    "id": 687,
    "related": [
      {
        "id": "12b8e9f5-96b2-41e1-9a42-8c6779a5c184",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect use of PDQ Deploy remote admin tool",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/9e5b12c4912c07562aec7500447b11fa3e17e254/atomics/T1072/T1072.md",
      "https://www.pdq.com/pdq-deploy/"
    ],
    "author": "frack113",
    "date": "2022/10/01",
    "modified": "2023/01/30",
    "tags": [
      "attack.execution",
      "attack.lateral_movement",
      "attack.t1072"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "PDQ Deploy Console"
        },
        {
          "Product": "PDQ Deploy"
        },
        {
          "Company": "PDQ.com"
        },
        {
          "OriginalFileName": "PDQDeployConsole.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution Of PDQDeployRunner",
    "id": 688,
    "related": [
      {
        "id": "d679950c-abb7-43a6-80fb-2a480c4fc450",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious execution of \"PDQDeployRunner\" which is part of the PDQDeploy service stack that is responsible for executing commands and packages on a remote machines",
    "references": [
      "https://twitter.com/malmoeb/status/1550483085472432128"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/22",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|contains": "PDQDeployRunner-"
      },
      "selection_susp": [
        {
          "Image|endswith": [
            "\\wscript.exe",
            "\\cscript.exe",
            "\\rundll32.exe",
            "\\regsvr32.exe",
            "\\wmic.exe",
            "\\msiexec.exe",
            "\\mshta.exe",
            "\\csc.exe",
            "\\dllhost.exe",
            "\\certutil.exe",
            "\\scriptrunner.exe",
            "\\bash.exe",
            "\\wsl.exe"
          ]
        },
        {
          "Image|contains": [
            "C:\\Users\\Public\\",
            "C:\\ProgramData\\",
            "C:\\Windows\\TEMP\\",
            "\\AppData\\Local\\Temp"
          ]
        },
        {
          "CommandLine|contains": [
            "iex ",
            "Invoke-",
            "DownloadString",
            "http",
            " -enc ",
            " -encodedcommand ",
            "FromBase64String",
            " -decode ",
            " -w hidden"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the PDQDeploy tool to execute these commands"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Perl Inline Command Execution",
    "id": 689,
    "status": "test",
    "description": "Detects execution of perl using the \"-e\"/\"-E\" flags. This is could be used as a way to launch a reverse shell or execute live perl code.",
    "references": [
      "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet",
      "https://www.revshells.com/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\perl.exe"
        },
        {
          "OriginalFileName": "perl.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -e"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Php Inline Command Execution",
    "id": 690,
    "status": "test",
    "description": "Detects execution of php using the \"-r\" flag. This is could be used as a way to launch a reverse shell or execute live php code.",
    "references": [
      "https://www.php.net/manual/en/features.commandline.php",
      "https://www.revshells.com/",
      "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\php.exe"
        },
        {
          "OriginalFileName": "php.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -r"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Ping Hex IP",
    "id": 691,
    "status": "test",
    "description": "Detects a ping command that uses a hex encoded IP address",
    "references": [
      "https://github.com/vysecurity/Aggressor-VYSEC/blob/0d61c80387b9432dab64b8b8a9fb52d20cfef80e/ping.cna",
      "https://twitter.com/vysecurity/status/977198418354491392"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/03/23",
    "modified": "2022/01/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1140",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\ping.exe",
        "CommandLine|contains": "0x"
      },
      "condition": "selection"
    },
    "fields": [
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unlikely, because no sane admin pings IP addresses in a hexadecimal form"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PktMon.EXE Execution",
    "id": 692,
    "status": "test",
    "description": "Detects execution of PktMon, a tool that captures network packets.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Pktmon/"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "modified": "2023/06/23",
    "tags": [
      "attack.credential_access",
      "attack.t1040"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\pktmon.exe"
        },
        {
          "OriginalFileName": "PktMon.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Plink Port Forwarding",
    "id": 693,
    "status": "test",
    "description": "Detects suspicious Plink tunnel port forwarding to a local port",
    "references": [
      "https://www.real-sec.com/2019/04/bypassing-network-restrictions-through-rdp-tunneling/",
      "https://medium.com/@informationsecurity/remote-ssh-tunneling-with-plink-exe-7831072b3d7d"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/01/19",
    "modified": "2022/10/09",
    "tags": [
      "attack.command_and_control",
      "attack.t1572",
      "attack.lateral_movement",
      "attack.t1021.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Description": "Command-line SSH, Telnet, and Rlogin client",
        "CommandLine|contains": " -R "
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative activity using a remote port forwarding to a local port"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential RDP Tunneling Via Plink",
    "id": 694,
    "related": [
      {
        "id": "f7d7ebd5-a016-46e2-9c54-f9932f2d386d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Execution of plink to perform data exfiltration and tunneling",
    "references": [
      "https://www.microsoft.com/security/blog/2022/07/26/malicious-iis-extensions-quietly-open-persistent-backdoors-into-servers/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/04",
    "modified": "2023/01/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1572"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_a": {
        "Image|endswith": "\\plink.exe",
        "CommandLine|contains": ":127.0.0.1:3389"
      },
      "selection_b1": {
        "Image|endswith": "\\plink.exe",
        "CommandLine|contains": ":3389"
      },
      "selection_b2": {
        "CommandLine|contains": [
          " -P 443",
          " -P 22"
        ]
      },
      "condition": "selection_a or all of selection_b*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Powercfg Execution To Change Lock Screen Timeout",
    "id": 695,
    "status": "test",
    "description": "Detects suspicious execution of 'Powercfg.exe' to change lock screen timeout",
    "references": [
      "https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html",
      "https://learn.microsoft.com/en-us/windows-hardware/design/device-experiences/powercfg-command-line-options"
    ],
    "author": "frack113",
    "date": "2022/11/18",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_power": [
        {
          "Image|endswith": "\\powercfg.exe"
        },
        {
          "OriginalFileName": "PowerCfg.exe"
        }
      ],
      "selection_standby": [
        {
          "CommandLine|contains|all": [
            "/setacvalueindex ",
            "SCHEME_CURRENT",
            "SUB_VIDEO",
            "VIDEOCONLOCK"
          ]
        },
        {
          "CommandLine|contains|all": [
            "-change ",
            "-standby-timeout-"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "AADInternals PowerShell Cmdlets Execution - ProccessCreation",
    "id": 696,
    "related": [
      {
        "id": "91e69562-2426-42ce-a647-711b8152ced6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects ADDInternals Cmdlet execution. A tool for administering Azure AD and Office 365. Which can be abused by threat actors to attack Azure AD or Office 365.",
    "references": [
      "https://o365blog.com/aadinternals/",
      "https://github.com/Gerenios/AADInternals"
    ],
    "author": "Austin Songer (@austinsonger), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/23",
    "tags": [
      "attack.execution",
      "attack.reconnaissance",
      "attack.discovery",
      "attack.credential_access",
      "attack.impact"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.Exe",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "Add-AADInt",
          "ConvertTo-AADInt",
          "Disable-AADInt",
          "Enable-AADInt",
          "Export-AADInt",
          "Get-AADInt",
          "Grant-AADInt",
          "Install-AADInt",
          "Invoke-AADInt",
          "Join-AADInt",
          "New-AADInt",
          "Open-AADInt",
          "Read-AADInt",
          "Register-AADInt",
          "Remove-AADInt",
          "Restore-AADInt",
          "Search-AADInt",
          "Send-AADInt",
          "Set-AADInt",
          "Start-AADInt",
          "Update-AADInt"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the library for administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Active Directory Enumeration Using AD Module - ProcCreation",
    "id": 697,
    "related": [
      {
        "id": "9e620995-f2d8-4630-8430-4afd89f77604",
        "type": "similar"
      },
      {
        "id": "74176142-4684-4d8a-8b0a-713257e7df8e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Import-Module\" cmdlet to load the \"Microsoft.ActiveDirectory.Management.dl\" DLL. Which is often used by attackers to perform AD enumeration.",
    "references": [
      "https://github.com/samratashok/ADModule",
      "https://twitter.com/cyb3rops/status/1617108657166061568?s=20",
      "https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/active-directory-enumeration-with-ad-module-without-rsat-or-admin-privileges"
    ],
    "author": "frack113",
    "date": "2023/01/22",
    "tags": [
      "attack.reconnaissance",
      "attack.discovery",
      "attack.impact"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cmdlet": {
        "CommandLine|contains": [
          "Import-Module ",
          "ipmo "
        ]
      },
      "selection_dll": {
        "CommandLine|contains": "Microsoft.ActiveDirectory.Management.dll"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the library for administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Add Windows Capability Via PowerShell Cmdlet",
    "id": 698,
    "related": [
      {
        "id": "155c7fd5-47b4-49b2-bbeb-eb4fab335429",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of the \"Add-WindowsCapability\" cmdlet to add Windows capabilities. Notable capabilities could be \"OpenSSH\" and others.",
    "references": [
      "https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=powershell",
      "https://www.virustotal.com/gui/file/af1c82237b6e5a3a7cdbad82cc498d298c67845d92971bada450023d1335e267/content"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/22",
    "modified": "2023/05/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cmdlet": {
        "CommandLine|contains": "Add-WindowsCapability"
      },
      "selection_capa": {
        "CommandLine|contains": "OpenSSH."
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of the capabilities by administrators or users. Add additional filters accordingly."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential AMSI Bypass Via .NET Reflection",
    "id": 699,
    "related": [
      {
        "id": "4f927692-68b5-4267-871b-073c45f4f6fe",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects Request to \"amsiInitFailed\" that can be used to disable AMSI Scanning",
    "references": [
      "https://s3cur3th1ssh1t.github.io/Bypass_AMSI_by_manual_modification/",
      "https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/"
    ],
    "author": "Markus Neis, @Kostastsale",
    "date": "2018/08/17",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": [
          "System.Management.Automation.AmsiUtils",
          "amsiInitFailed"
        ]
      },
      "selection_2": {
        "CommandLine|contains|all": [
          "[Ref].Assembly.GetType",
          "SetValue($null,$true)",
          "NonPublic,Static"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential AMSI Bypass Using NULL Bits",
    "id": 700,
    "related": [
      {
        "id": "fa2559c8-1197-471d-9cdd-05a0273d4522",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of special strings/null bits in order to potentially bypass AMSI functionalities",
    "references": [
      "https://github.com/r00t-3xp10it/hacking-material-books/blob/43cb1e1932c16ff1f58b755bc9ab6b096046853f/obfuscation/simple_obfuscation.md#amsi-bypass-using-null-bits-satoshi"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/04",
    "modified": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "if(0){{{0}}}' -f $(0 -as [char]) +",
          "#<NULL>"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Audio Capture via PowerShell",
    "id": 701,
    "status": "test",
    "description": "Detects audio capture via PowerShell Cmdlet.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1123/T1123.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/ab7a6ef4-0983-4275-a4f1-5c6bd3c31c23.html",
      "https://github.com/frgnca/AudioDeviceCmdlets"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/24",
    "modified": "2023/04/06",
    "tags": [
      "attack.collection",
      "attack.t1123"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "WindowsAudioDevice-Powershell-Cmdlet",
          "Toggle-AudioDevice",
          "Get-AudioDevice ",
          "Set-AudioDevice ",
          "Write-AudioDevice "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate audio capture by legitimate user."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Encoded PowerShell Command Line",
    "id": 702,
    "status": "test",
    "description": "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)",
    "references": [
      "https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e"
    ],
    "author": "Florian Roth (Nextron Systems), Markus Neis, Jonhnathan Ribeiro, Daniil Yugoslavskiy, Anton Kutepov, oscd.community",
    "date": "2018/09/03",
    "modified": "2023/04/06",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli_enc": {
        "CommandLine|contains": " -e"
      },
      "selection_cli_content": {
        "CommandLine|contains": [
          " JAB",
          " SUVYI",
          " SQBFAFgA",
          " aQBlAHgA",
          " aWV4I",
          " IAA",
          " IAB",
          " UwB",
          " cwB"
        ]
      },
      "selection_standalone": {
        "CommandLine|contains": [
          ".exe -ENCOD ",
          " BA^J e-"
        ]
      },
      "filter_optional_remote_signed": {
        "CommandLine|contains": " -ExecutionPolicy remotesigned "
      },
      "condition": "selection_img and (all of selection_cli_* or selection_standalone) and not 1 of filter_optional_*"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Encoded Command Patterns",
    "id": 703,
    "status": "test",
    "description": "Detects PowerShell command line patterns in combincation with encoded commands that often appear in malware infection chains",
    "references": [
      "https://app.any.run/tasks/b9040c63-c140-479b-ad59-f1bb56ce7a97/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/24",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.Exe",
            "pwsh.dll"
          ]
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          " -e ",
          " -en ",
          " -enc ",
          " -enco"
        ]
      },
      "selection_encoded": {
        "CommandLine|contains": [
          " JAB",
          " SUVYI",
          " SQBFAFgA",
          " aWV4I",
          " IAB",
          " PAA",
          " aQBlAHgA"
        ]
      },
      "filter_gcworker": {
        "ParentImage|contains": [
          "C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\",
          "\\gc_worker.exe"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Other tools that work with encoded scripts in the command line instead of script files"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Obfuscated PowerShell Code",
    "id": 704,
    "status": "test",
    "description": "Detects suspicious UTF16 and base64 encoded and often obfuscated PowerShell code often used in command lines",
    "references": [
      "https://app.any.run/tasks/fcadca91-3580-4ede-aff4-4d2bf809bf99/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/11",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "IAAtAGIAeABvAHIAIAAwAHgA",
          "AALQBiAHgAbwByACAAMAB4A",
          "gAC0AYgB4AG8AcgAgADAAeA",
          "AC4ASQBuAHYAbwBrAGUAKAApACAAfAAg",
          "AuAEkAbgB2AG8AawBlACgAKQAgAHwAI",
          "ALgBJAG4AdgBvAGsAZQAoACkAIAB8AC",
          "AHsAMQB9AHsAMAB9ACIAIAAtAGYAI",
          "B7ADEAfQB7ADAAfQAiACAALQBmAC",
          "AewAxAH0AewAwAH0AIgAgAC0AZgAg",
          "AHsAMAB9AHsAMwB9ACIAIAAtAGYAI",
          "B7ADAAfQB7ADMAfQAiACAALQBmAC",
          "AewAwAH0AewAzAH0AIgAgAC0AZgAg",
          "AHsAMgB9AHsAMAB9ACIAIAAtAGYAI",
          "B7ADIAfQB7ADAAfQAiACAALQBmAC",
          "AewAyAH0AewAwAH0AIgAgAC0AZgAg",
          "AHsAMQB9AHsAMAB9ACcAIAAtAGYAI",
          "B7ADEAfQB7ADAAfQAnACAALQBmAC",
          "AewAxAH0AewAwAH0AJwAgAC0AZgAg",
          "AHsAMAB9AHsAMwB9ACcAIAAtAGYAI",
          "B7ADAAfQB7ADMAfQAnACAALQBmAC",
          "AewAwAH0AewAzAH0AJwAgAC0AZgAg",
          "AHsAMgB9AHsAMAB9ACcAIAAtAGYAI",
          "B7ADIAfQB7ADAAfQAnACAALQBmAC",
          "AewAyAH0AewAwAH0AJwAgAC0AZgAg"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Base64 Encoded FromBase64String Cmdlet",
    "id": 705,
    "status": "test",
    "description": "Detects usage of a base64 encoded \"FromBase64String\" cmdlet in a process command line",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/08/24",
    "modified": "2023/04/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1140",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|base64offset|contains": "::FromBase64String"
        },
        {
          "CommandLine|contains": [
            "OgA6AEYAcgBvAG0AQgBhAHMAZQA2ADQAUwB0AHIAaQBuAGcA",
            "oAOgBGAHIAbwBtAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnA",
            "6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZw"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Malicious Base64 Encoded PowerShell Keywords in Command Lines",
    "id": 706,
    "status": "test",
    "description": "Detects base64 encoded strings used in hidden malicious PowerShell command lines",
    "references": [
      "http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/"
    ],
    "author": "John Lambert (rule)",
    "date": "2019/01/16",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_hidden": {
        "CommandLine|contains": " hidden "
      },
      "selection_encoded": {
        "CommandLine|contains": [
          "AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA",
          "aXRzYWRtaW4gL3RyYW5zZmVy",
          "IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA",
          "JpdHNhZG1pbiAvdHJhbnNmZX",
          "YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg",
          "Yml0c2FkbWluIC90cmFuc2Zlc",
          "AGMAaAB1AG4AawBfAHMAaQB6AGUA",
          "JABjAGgAdQBuAGsAXwBzAGkAegBlA",
          "JGNodW5rX3Npem",
          "QAYwBoAHUAbgBrAF8AcwBpAHoAZQ",
          "RjaHVua19zaXpl",
          "Y2h1bmtfc2l6Z",
          "AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A",
          "kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg",
          "lPLkNvbXByZXNzaW9u",
          "SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA",
          "SU8uQ29tcHJlc3Npb2",
          "Ty5Db21wcmVzc2lvb",
          "AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ",
          "kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA",
          "lPLk1lbW9yeVN0cmVhb",
          "SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A",
          "SU8uTWVtb3J5U3RyZWFt",
          "Ty5NZW1vcnlTdHJlYW",
          "4ARwBlAHQAQwBoAHUAbgBrA",
          "5HZXRDaHVua",
          "AEcAZQB0AEMAaAB1AG4Aaw",
          "LgBHAGUAdABDAGgAdQBuAGsA",
          "LkdldENodW5r",
          "R2V0Q2h1bm",
          "AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A",
          "QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA",
          "RIUkVBRF9JTkZPNj",
          "SFJFQURfSU5GTzY0",
          "VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA",
          "VEhSRUFEX0lORk82N",
          "AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA",
          "cmVhdGVSZW1vdGVUaHJlYW",
          "MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA",
          "NyZWF0ZVJlbW90ZVRocmVhZ",
          "Q3JlYXRlUmVtb3RlVGhyZWFk",
          "QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA",
          "0AZQBtAG0AbwB2AGUA",
          "1lbW1vdm",
          "AGUAbQBtAG8AdgBlA",
          "bQBlAG0AbQBvAHYAZQ",
          "bWVtbW92Z",
          "ZW1tb3Zl"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Base64 Encoded IEX Cmdlet",
    "id": 707,
    "status": "test",
    "description": "Detects usage of a base64 encoded \"IEX\" cmdlet in a process command line",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/08/23",
    "modified": "2023/04/06",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|base64offset|contains": [
            "IEX ([",
            "iex ([",
            "iex (New",
            "IEX (New",
            "IEX([",
            "iex([",
            "iex(New",
            "IEX(New",
            "IEX(('",
            "iex(('"
          ]
        },
        {
          "CommandLine|contains": [
            "SQBFAFgAIAAoAFsA",
            "kARQBYACAAKABbA",
            "JAEUAWAAgACgAWw",
            "aQBlAHgAIAAoAFsA",
            "kAZQB4ACAAKABbA",
            "pAGUAeAAgACgAWw",
            "aQBlAHgAIAAoAE4AZQB3A",
            "kAZQB4ACAAKABOAGUAdw",
            "pAGUAeAAgACgATgBlAHcA",
            "SQBFAFgAIAAoAE4AZQB3A",
            "kARQBYACAAKABOAGUAdw",
            "JAEUAWAAgACgATgBlAHcA"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Base64 Encoded Invoke Keyword",
    "id": 708,
    "related": [
      {
        "id": "fd6e2919-3936-40c9-99db-0aa922c356f7",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects UTF-8 and UTF-16 Base64 encoded powershell 'Invoke-' calls",
    "references": [
      "https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/"
    ],
    "author": "pH-T (Nextron Systems), Harjot Singh, @cyb3rjy0t",
    "date": "2022/05/20",
    "modified": "2023/04/06",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli_enc": {
        "CommandLine|contains": " -e"
      },
      "selection_cli_invoke": {
        "CommandLine|contains": [
          "SQBuAHYAbwBrAGUALQ",
          "kAbgB2AG8AawBlAC0A",
          "JAG4AdgBvAGsAZQAtA",
          "SW52b2tlL",
          "ludm9rZS",
          "JbnZva2Ut"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell Base64 Encoded MpPreference Cmdlet",
    "id": 709,
    "status": "test",
    "description": "Detects base64 encoded \"MpPreference\" PowerShell cmdlet code that tries to modifies or tamper with Windows Defender AV",
    "references": [
      "https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/configure-process-opened-file-exclusions-microsoft-defender-antivirus",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://twitter.com/AdamTheAnalyst/status/1483497517119590403"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/04",
    "modified": "2023/01/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|base64offset|contains": [
            "Add-MpPreference ",
            "Set-MpPreference ",
            "add-mppreference ",
            "set-mppreference "
          ]
        },
        {
          "CommandLine|contains": [
            "QQBkAGQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA",
            "EAZABkAC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA",
            "BAGQAZAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA",
            "UwBlAHQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgA",
            "MAZQB0AC0ATQBwAFAAcgBlAGYAZQByAGUAbgBjAGUAIA",
            "TAGUAdAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAA",
            "YQBkAGQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA",
            "EAZABkAC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA",
            "hAGQAZAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA",
            "cwBlAHQALQBtAHAAcAByAGUAZgBlAHIAZQBuAGMAZQAgA",
            "MAZQB0AC0AbQBwAHAAcgBlAGYAZQByAGUAbgBjAGUAIA",
            "zAGUAdAAtAG0AcABwAHIAZQBmAGUAcgBlAG4AYwBlACAA"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Base64 Encoded Reflective Assembly Load",
    "id": 710,
    "related": [
      {
        "id": "9c0295ce-d60d-40bd-bd74-84673b7592b1",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects base64 encoded .NET reflective loading of Assembly",
    "references": [
      "https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/mal_revil.yar",
      "https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/"
    ],
    "author": "Christian Burkard (Nextron Systems), pH-T (Nextron Systems)",
    "date": "2022/03/01",
    "modified": "2023/01/30",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1027",
      "attack.t1620"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA",
          "sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA",
          "bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA",
          "AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiAC",
          "BbAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgAp",
          "AWwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAK",
          "WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAKQ",
          "sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiACkA",
          "bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgApA",
          "WwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA",
          "sAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA",
          "bAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine"
    ],
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Encoded And Obfuscated Reflection Assembly Load Function Call",
    "id": 711,
    "related": [
      {
        "id": "62b7ccc9-23b4-471e-aa15-6da3663c4d59",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious base64 encoded and obfuscated \"LOAD\" keyword used in .NET \"reflection.assembly\"",
    "references": [
      "https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/mal_revil.yar",
      "https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/",
      "https://learn.microsoft.com/en-us/dotnet/api/system.appdomain.load?view=net-7.0"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2022/03/01",
    "modified": "2023/04/06",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1059.001",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "OgA6ACgAIgBMACIAKwAiAG8AYQBkACIAKQ",
          "oAOgAoACIATAAiACsAIgBvAGEAZAAiACkA",
          "6ADoAKAAiAEwAIgArACIAbwBhAGQAIgApA",
          "OgA6ACgAIgBMAG8AIgArACIAYQBkACIAKQ",
          "oAOgAoACIATABvACIAKwAiAGEAZAAiACkA",
          "6ADoAKAAiAEwAbwAiACsAIgBhAGQAIgApA",
          "OgA6ACgAIgBMAG8AYQAiACsAIgBkACIAKQ",
          "oAOgAoACIATABvAGEAIgArACIAZAAiACkA",
          "6ADoAKAAiAEwAbwBhACIAKwAiAGQAIgApA",
          "OgA6ACgAJwBMACcAKwAnAG8AYQBkACcAKQ",
          "oAOgAoACcATAAnACsAJwBvAGEAZAAnACkA",
          "6ADoAKAAnAEwAJwArACcAbwBhAGQAJwApA",
          "OgA6ACgAJwBMAG8AJwArACcAYQBkACcAKQ",
          "oAOgAoACcATABvACcAKwAnAGEAZAAnACkA",
          "6ADoAKAAnAEwAbwAnACsAJwBhAGQAJwApA",
          "OgA6ACgAJwBMAG8AYQAnACsAJwBkACcAKQ",
          "oAOgAoACcATABvAGEAJwArACcAZAAnACkA",
          "6ADoAKAAnAEwAbwBhACcAKwAnAGQAJwApA"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine"
    ],
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Base64 Encoded WMI Classes",
    "id": 712,
    "related": [
      {
        "id": "47688f1b-9f51-4656-b013-3cc49a166a36",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects calls to base64 encoded WMI class such as \"Win32_Shadowcopy\", \"Win32_ScheduledJob\", etc.",
    "references": [
      "https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/mal_revil.yar"
    ],
    "author": "Christian Burkard (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/30",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli_shadowcopy": {
        "CommandLine|contains": [
          "VwBpAG4AMwAyAF8AUwBoAGEAZABvAHcAYwBvAHAAeQ",
          "cAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkA",
          "XAGkAbgAzADIAXwBTAGgAYQBkAG8AdwBjAG8AcAB5A",
          "V2luMzJfU2hhZG93Y29we",
          "dpbjMyX1NoYWRvd2NvcH",
          "XaW4zMl9TaGFkb3djb3B5"
        ]
      },
      "selection_cli_scheduledJob": {
        "CommandLine|contains": [
          "VwBpAG4AMwAyAF8AUwBjAGgAZQBkAHUAbABlAGQASgBvAGIA",
          "cAaQBuADMAMgBfAFMAYwBoAGUAZAB1AGwAZQBkAEoAbwBiA",
          "XAGkAbgAzADIAXwBTAGMAaABlAGQAdQBsAGUAZABKAG8AYg",
          "V2luMzJfU2NoZWR1bGVkSm9i",
          "dpbjMyX1NjaGVkdWxlZEpvY",
          "XaW4zMl9TY2hlZHVsZWRKb2"
        ]
      },
      "selection_cli_process": {
        "CommandLine|contains": [
          "VwBpAG4AMwAyAF8AUAByAG8AYwBlAHMAcw",
          "cAaQBuADMAMgBfAFAAcgBvAGMAZQBzAHMA",
          "XAGkAbgAzADIAXwBQAHIAbwBjAGUAcwBzA",
          "V2luMzJfUHJvY2Vzc",
          "dpbjMyX1Byb2Nlc3",
          "XaW4zMl9Qcm9jZXNz"
        ]
      },
      "selection_cli_useraccount": {
        "CommandLine|contains": [
          "VwBpAG4AMwAyAF8AVQBzAGUAcgBBAGMAYwBvAHUAbgB0A",
          "cAaQBuADMAMgBfAFUAcwBlAHIAQQBjAGMAbwB1AG4AdA",
          "XAGkAbgAzADIAXwBVAHMAZQByAEEAYwBjAG8AdQBuAHQA",
          "V2luMzJfVXNlckFjY291bn",
          "dpbjMyX1VzZXJBY2NvdW50",
          "XaW4zMl9Vc2VyQWNjb3Vud"
        ]
      },
      "selection_cli_loggedonuser": {
        "CommandLine|contains": [
          "VwBpAG4AMwAyAF8ATABvAGcAZwBlAGQATwBuAFUAcwBlAHIA",
          "cAaQBuADMAMgBfAEwAbwBnAGcAZQBkAE8AbgBVAHMAZQByA",
          "XAGkAbgAzADIAXwBMAG8AZwBnAGUAZABPAG4AVQBzAGUAcg",
          "V2luMzJfTG9nZ2VkT25Vc2Vy",
          "dpbjMyX0xvZ2dlZE9uVXNlc",
          "XaW4zMl9Mb2dnZWRPblVzZX"
        ]
      },
      "condition": "selection_img and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Process Execution Proxy Via CL_Invocation.ps1",
    "id": 713,
    "status": "test",
    "description": "Detects calls to \"SyncInvoke\" that is part of the \"CL_Invocation.ps1\" script to proxy execution using \"System.Diagnostics.Process\"",
    "references": [
      "https://lolbas-project.github.io/lolbas/Scripts/Cl_invocation/",
      "https://twitter.com/bohops/status/948061991012327424"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova",
    "date": "2020/10/14",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "SyncInvoke "
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Assembly Loading Via CL_LoadAssembly.ps1",
    "id": 714,
    "status": "experimental",
    "description": "Detects calls to \"LoadAssemblyFromPath\" or \"LoadAssemblyFromNS\" that are part of the \"CL_LoadAssembly.ps1\" script. This can be abused to load different assemblies and bypass App locker controls.",
    "references": [
      "https://bohops.com/2018/01/07/executing-commands-and-bypassing-applocker-with-powershell-diagnostic-scripts/",
      "https://lolbas-project.github.io/lolbas/Scripts/CL_LoadAssembly/"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/05/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "LoadAssemblyFromPath ",
          "LoadAssemblyFromNS "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Script Proxy Execution Via CL_Mutexverifiers.ps1",
    "id": 715,
    "status": "experimental",
    "description": "Detects the use of the Microsoft signed script \"CL_mutexverifiers\" to proxy the execution of additional PowerShell script commands",
    "references": [
      "https://lolbas-project.github.io/lolbas/Scripts/CL_mutexverifiers/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova, frack113",
    "date": "2022/05/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pwsh": {
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "Image|endswith": "\\powershell.exe",
        "CommandLine|contains": " -nologo -windowstyle minimized -file "
      },
      "selection_temp": {
        "CommandLine|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ConvertTo-SecureString Cmdlet Usage Via CommandLine",
    "id": 716,
    "status": "test",
    "description": "Detects usage of the \"ConvertTo-SecureString\" cmdlet via the commandline. Which is fairly uncommon and could indicate potential suspicious activity",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/convertto-securestring?view=powershell-7.3#examples"
    ],
    "author": "Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton",
    "date": "2020/10/11",
    "modified": "2023/02/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "ConvertTo-SecureString"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use to pass password to different powershell commands"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential PowerShell Obfuscation Via Reversed Commands",
    "id": 717,
    "status": "test",
    "description": "Detects the presence of reversed PowerShell commands in the CommandLine. This is often used as a method of obfuscation by attackers",
    "references": [
      "https://2019.offzone.moscow/ru/report/hunting-for-powershell-abuses/",
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=66"
    ],
    "author": "Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton",
    "date": "2020/10/11",
    "modified": "2023/05/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "hctac",
          "kaerb",
          "dnammoc",
          "ekovn",
          "eliFd",
          "rahc",
          "etirw",
          "golon",
          "tninon",
          "eddih",
          "tpircS",
          "ssecorp",
          "llehsrewop",
          "esnopser",
          "daolnwod",
          "tneilCbeW",
          "tneilc",
          "ptth",
          "elifotevas",
          "46esab",
          "htaPpmeTteG",
          "tcejbO",
          "maerts",
          "hcaerof",
          "retupmoc"
        ]
      },
      "filter_main_encoded_keyword": {
        "CommandLine|contains": [
          " -EncodedCommand ",
          " -enc "
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PowerShell Command Line Obfuscation",
    "id": 718,
    "status": "test",
    "description": "Detects the PowerShell command lines with special characters",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=64"
    ],
    "author": "Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton (fp)",
    "date": "2020/10/15",
    "modified": "2023/04/06",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1027",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_re": [
        {
          "CommandLine|re": ".*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*\\+.*"
        },
        {
          "CommandLine|re": ".*\\{.*\\{.*\\{.*\\{.*\\{.*\\{.*\\{.*\\{.*\\{.*\\{.*"
        },
        {
          "CommandLine|re": ".*\\^.*\\^.*\\^.*\\^.*\\^.*"
        },
        {
          "CommandLine|re": ".*`.*`.*`.*`.*`.*"
        }
      ],
      "filter_optional_amazonSSM": {
        "ParentImage": "C:\\Program Files\\Amazon\\SSM\\ssm-document-worker.exe"
      },
      "filter_optional_defender_atp": {
        "CommandLine|contains": [
          "new EventSource(\"Microsoft.Windows.Sense.Client.Management\"",
          "public static extern bool InstallELAMCertificateInfo(SafeFileHandle handle);"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Amazon SSM Document Worker",
      "Windows Defender ATP"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Computer Discovery And Export Via Get-ADComputer Cmdlet",
    "id": 719,
    "related": [
      {
        "id": "db885529-903f-4c5d-9864-28fe199e6370",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the Get-ADComputer cmdlet to collect computer information and output it to a file",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html",
      "https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/",
      "https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/10",
    "modified": "2022/11/17",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "Get-ADComputer ",
          " -Filter \\*"
        ],
        "CommandLine|contains": [
          " > ",
          " | Select ",
          "Out-File",
          "Set-Content",
          "Add-Content"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate admin scripts may use the same technique, it's better to exclude specific computers or users who execute these commands or scripts often"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Service Creation Using PowerShell",
    "id": 720,
    "related": [
      {
        "id": "85ff530b-261d-48c6-a441-facaa2e81e48",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a new service using powershell.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md"
    ],
    "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community",
    "date": "2023/02/20",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "New-Service",
          "-BinaryPathName"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrator or user creates a service for legitimate reasons.",
      "Software installation"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Gzip Archive Decode Via PowerShell",
    "id": 721,
    "status": "test",
    "description": "Detects attempts of decoding encoded Gzip archives via PowerShell.",
    "references": [
      "https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution"
    ],
    "author": "Hieu Tran",
    "date": "2023/03/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1132.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "GZipStream",
          "::Decompress"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative scripts may use this functionality. Use \"ParentImage\" in combination with the script names and allowed users and applications to filter legitimate executions"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Execution With Potential Decryption Capabilities",
    "id": 722,
    "status": "experimental",
    "description": "Detects PowerShell commands that decrypt an \".LNK\" \"file to drop the next stage of the malware.",
    "references": [
      "https://research.checkpoint.com/2023/chinese-threat-actors-targeting-europe-in-smugx-campaign/"
    ],
    "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/30",
    "modified": "2023/12/05",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "OriginalFileName": [
          "PowerShell.EXE",
          "pwsh.dll"
        ]
      },
      "selection_cli_dir": {
        "CommandLine|contains": [
          "Get-ChildItem ",
          "dir ",
          "gci ",
          "ls "
        ]
      },
      "selection_cli_gc": {
        "CommandLine|contains": [
          "Get-Content ",
          "gc ",
          "cat ",
          "type ",
          "ReadAllBytes"
        ]
      },
      "selection_cli_specific": [
        {
          "CommandLine|contains|all": [
            " ^| ",
            "\\*.lnk",
            "-Recurse",
            "-Skip "
          ]
        },
        {
          "CommandLine|contains|all": [
            " -ExpandProperty ",
            "\\*.lnk",
            "WriteAllBytes",
            " .length "
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell Defender Disable Scan Feature",
    "id": 723,
    "status": "test",
    "description": "Detects requests to disable Microsoft Defender features using PowerShell commands",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=windowsserver2022-ps",
      "https://www.virustotal.com/gui/file/d609799091731d83d75ec5d1f030571af20c45efeeb94840b67ea09a3283ab65/behavior/C2AE",
      "https://www.virustotal.com/gui/search/content%253A%2522Set-MpPreference%2520-Disable%2522/files"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/03",
    "modified": "2024/01/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cli_cmdlet": {
        "CommandLine|contains": [
          "Add-MpPreference ",
          "Set-MpPreference "
        ]
      },
      "selection_cli_option": {
        "CommandLine|contains": [
          "DisableArchiveScanning ",
          "DisableRealtimeMonitoring ",
          "DisableIOAVProtection ",
          "DisableBehaviorMonitoring ",
          "DisableBlockAtFirstSeen ",
          "DisableCatchupFullScan ",
          "DisableCatchupQuickScan "
        ]
      },
      "selection_cli_value": {
        "CommandLine|contains": [
          "$true",
          " 1 "
        ]
      },
      "selection_encoded_modifier": {
        "CommandLine|base64offset|contains": [
          "disablearchivescanning ",
          "DisableArchiveScanning ",
          "disablebehaviormonitoring ",
          "DisableBehaviorMonitoring ",
          "disableblockatfirstseen ",
          "DisableBlockAtFirstSeen ",
          "disablecatchupfullscan ",
          "DisableCatchupFullScan ",
          "disablecatchupquickscan ",
          "DisableCatchupQuickScan ",
          "disableioavprotection ",
          "DisableIOAVProtection ",
          "disablerealtimemonitoring ",
          "DisableRealtimeMonitoring "
        ]
      },
      "selection_encoded_direct": {
        "CommandLine|contains": [
          "RABpAHMAYQBiAGwAZQBSAGUAYQBsAHQAaQBtAGUATQBvAG4AaQB0AG8AcgBpAG4AZwAgA",
          "QAaQBzAGEAYgBsAGUAUgBlAGEAbAB0AGkAbQBlAE0AbwBuAGkAdABvAHIAaQBuAGcAIA",
          "EAGkAcwBhAGIAbABlAFIAZQBhAGwAdABpAG0AZQBNAG8AbgBpAHQAbwByAGkAbgBnACAA",
          "RABpAHMAYQBiAGwAZQBJAE8AQQBWAFAAcgBvAHQAZQBjAHQAaQBvAG4AIA",
          "QAaQBzAGEAYgBsAGUASQBPAEEAVgBQAHIAbwB0AGUAYwB0AGkAbwBuACAA",
          "EAGkAcwBhAGIAbABlAEkATwBBAFYAUAByAG8AdABlAGMAdABpAG8AbgAgA",
          "RABpAHMAYQBiAGwAZQBCAGUAaABhAHYAaQBvAHIATQBvAG4AaQB0AG8AcgBpAG4AZwAgA",
          "QAaQBzAGEAYgBsAGUAQgBlAGgAYQB2AGkAbwByAE0AbwBuAGkAdABvAHIAaQBuAGcAIA",
          "EAGkAcwBhAGIAbABlAEIAZQBoAGEAdgBpAG8AcgBNAG8AbgBpAHQAbwByAGkAbgBnACAA",
          "RABpAHMAYQBiAGwAZQBCAGwAbwBjAGsAQQB0AEYAaQByAHMAdABTAGUAZQBuACAA",
          "QAaQBzAGEAYgBsAGUAQgBsAG8AYwBrAEEAdABGAGkAcgBzAHQAUwBlAGUAbgAgA",
          "EAGkAcwBhAGIAbABlAEIAbABvAGMAawBBAHQARgBpAHIAcwB0AFMAZQBlAG4AIA",
          "ZABpAHMAYQBiAGwAZQByAGUAYQBsAHQAaQBtAGUAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA",
          "QAaQBzAGEAYgBsAGUAcgBlAGEAbAB0AGkAbQBlAG0AbwBuAGkAdABvAHIAaQBuAGcAIA",
          "kAGkAcwBhAGIAbABlAHIAZQBhAGwAdABpAG0AZQBtAG8AbgBpAHQAbwByAGkAbgBnACAA",
          "ZABpAHMAYQBiAGwAZQBpAG8AYQB2AHAAcgBvAHQAZQBjAHQAaQBvAG4AIA",
          "QAaQBzAGEAYgBsAGUAaQBvAGEAdgBwAHIAbwB0AGUAYwB0AGkAbwBuACAA",
          "kAGkAcwBhAGIAbABlAGkAbwBhAHYAcAByAG8AdABlAGMAdABpAG8AbgAgA",
          "ZABpAHMAYQBiAGwAZQBiAGUAaABhAHYAaQBvAHIAbQBvAG4AaQB0AG8AcgBpAG4AZwAgA",
          "QAaQBzAGEAYgBsAGUAYgBlAGgAYQB2AGkAbwByAG0AbwBuAGkAdABvAHIAaQBuAGcAIA",
          "kAGkAcwBhAGIAbABlAGIAZQBoAGEAdgBpAG8AcgBtAG8AbgBpAHQAbwByAGkAbgBnACAA",
          "ZABpAHMAYQBiAGwAZQBiAGwAbwBjAGsAYQB0AGYAaQByAHMAdABzAGUAZQBuACAA",
          "QAaQBzAGEAYgBsAGUAYgBsAG8AYwBrAGEAdABmAGkAcgBzAHQAcwBlAGUAbgAgA",
          "kAGkAcwBhAGIAbABlAGIAbABvAGMAawBhAHQAZgBpAHIAcwB0AHMAZQBlAG4AIA",
          "RABpAHMAYQBiAGwAZQBDAGEAdABjAGgAdQBwAEYAdQBsAGwAUwBjAGEAbgA",
          "RABpAHMAYQBiAGwAZQBDAGEAdABjAGgAdQBwAFEAdQBpAGMAawBTAGMAYQBuAA",
          "RABpAHMAYQBiAGwAZQBBAHIAYwBoAGkAdgBlAFMAYwBhAG4AbgBpAG4AZwA"
        ]
      },
      "condition": "all of selection_cli_* or 1 of selection_encoded_*"
    },
    "falsepositives": [
      "Possible administrative activity",
      "Other Cmdlets that may use the same parameters"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell Defender Exclusion",
    "id": 724,
    "related": [
      {
        "id": "c1344fa2-323b-4d2e-9176-84b4d4821c88",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects requests to exclude files, folders or processes from Antivirus scanning using PowerShell cmdlets",
    "references": [
      "https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/configure-process-opened-file-exclusions-microsoft-defender-antivirus",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://twitter.com/AdamTheAnalyst/status/1483497517119590403"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/04/29",
    "modified": "2022/05/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": [
          "Add-MpPreference ",
          "Set-MpPreference "
        ]
      },
      "selection2": {
        "CommandLine|contains": [
          " -ExclusionPath ",
          " -ExclusionExtension ",
          " -ExclusionProcess ",
          " -ExclusionIpAddress "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Possible Admin Activity",
      "Other Cmdlets that may use the same parameters"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Windows Defender AV Security Monitoring",
    "id": 725,
    "status": "test",
    "description": "Detects attackers attempting to disable Windows Defender using Powershell",
    "references": [
      "https://research.nccgroup.com/2020/06/23/wastedlocker-a-new-ransomware-variant-developed-by-the-evil-corp-group/",
      "https://rvsec0n.wordpress.com/2020/01/24/malwares-that-bypass-windows-defender/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md"
    ],
    "author": "ok @securonix invrep-de, oscd.community, frack113",
    "date": "2020/10/12",
    "modified": "2022/11/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pwsh_binary": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_pwsh_cli": {
        "CommandLine|contains": [
          "-DisableBehaviorMonitoring $true",
          "-DisableRuntimeMonitoring $true"
        ]
      },
      "selection_sc_binary": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_sc_tamper_cmd_stop": {
        "CommandLine|contains|all": [
          "stop",
          "WinDefend"
        ]
      },
      "selection_sc_tamper_cmd_delete": {
        "CommandLine|contains|all": [
          "delete",
          "WinDefend"
        ]
      },
      "selection_sc_tamper_cmd_disabled": {
        "CommandLine|contains|all": [
          "config",
          "WinDefend",
          "start=disabled"
        ]
      },
      "condition": "all of selection_pwsh_* or (selection_sc_binary and 1 of selection_sc_tamper_*)"
    },
    "falsepositives": [
      "Minimal, for some older versions of dev tools, such as pycharm, developers were known to sometimes disable Windows Defender to improve performance, but this generally is not considered a good security practice."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Firewall Disabled via PowerShell",
    "id": 726,
    "related": [
      {
        "id": "488b44e7-3781-4a71-888d-c95abfacf44d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects attempts to disable the Windows Firewall using PowerShell",
    "references": [
      "https://www.elastic.co/guide/en/security/current/windows-firewall-disabled-via-powershell.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/14",
    "modified": "2023/02/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_name": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\powershell_ise.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_args": {
        "CommandLine|contains|all": [
          "Set-NetFirewallProfile ",
          " -Enabled ",
          " False"
        ]
      },
      "selection_opt": {
        "CommandLine|contains": [
          " -All ",
          "Public",
          "Domain",
          "Private"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disabled IE Security Features",
    "id": 727,
    "status": "test",
    "description": "Detects command lines that indicate unwanted modifications to registry keys that disable important Internet Explorer security features",
    "references": [
      "https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/06/19",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains|all": [
          " -name IEHarden ",
          " -value 0 "
        ]
      },
      "selection2": {
        "CommandLine|contains|all": [
          " -name DEPOff ",
          " -value 1 "
        ]
      },
      "selection3": {
        "CommandLine|contains|all": [
          " -name DisableFirstRunCustomize ",
          " -value 2 "
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PowerShell Execution Via DLL",
    "id": 728,
    "status": "test",
    "description": "Detects potential PowerShell execution from a DLL instead of the usual PowerShell process as seen used in PowerShdll",
    "references": [
      "https://github.com/p3nt4/PowerShdll/blob/62cfa172fb4e1f7f4ac00ca942685baeb88ff356/README.md"
    ],
    "author": "Markus Neis, Nasreddine Bencherchali",
    "date": "2018/08/25",
    "modified": "2023/01/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\rundll32.exe",
            "\\regsvcs.exe",
            "\\InstallUtil.exe",
            "\\regasm.exe"
          ]
        },
        {
          "OriginalFileName": [
            "RUNDLL32.EXE",
            "RegSvcs.exe",
            "InstallUtil.exe",
            "RegAsm.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "Default.GetString",
          "FromBase64String",
          "Invoke-Expression",
          "IEX ",
          "Invoke-Command",
          "ICM ",
          "DownloadString"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PowerShell Downgrade Attack",
    "id": 729,
    "related": [
      {
        "id": "6331d09b-4785-4c13-980f-f96661356249",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0",
    "references": [
      "http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/",
      "https://github.com/r00t-3xp10it/hacking-material-books/blob/43cb1e1932c16ff1f58b755bc9ab6b096046853f/obfuscation/simple_obfuscation.md#bypass-or-avoid-amsi-by-version-downgrade-"
    ],
    "author": "Harish Segar (rule)",
    "date": "2020/03/20",
    "modified": "2023/01/04",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\powershell.exe",
        "CommandLine|contains": [
          " -version 2 ",
          " -versio 2 ",
          " -versi 2 ",
          " -vers 2 ",
          " -ver 2 ",
          " -ve 2 ",
          " -v 2 "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential COM Objects Download Cradles Usage - Process Creation",
    "id": 730,
    "related": [
      {
        "id": "3c7d1587-3b13-439f-9941-7d14313dbdfe",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of COM objects that can be abused to download files in PowerShell by CLSID",
    "references": [
      "https://learn.microsoft.com/en-us/dotnet/api/system.type.gettypefromclsid?view=net-7.0",
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=57"
    ],
    "author": "frack113",
    "date": "2022/12/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": "[Type]::GetTypeFromCLSID("
      },
      "selection_2": {
        "CommandLine|contains": [
          "0002DF01-0000-0000-C000-000000000046",
          "F6D90F16-9C73-11D3-B32E-00C04F990BB4",
          "F5078F35-C551-11D3-89B9-0000F81FE221",
          "88d96a0a-f192-11d4-a65f-0040963251e5",
          "AFBA6B42-5692-48EA-8141-DC517DCF0EF1",
          "AFB40FFD-B609-40A3-9828-F88BBE11E4E3",
          "88d96a0b-f192-11d4-a65f-0040963251e5",
          "2087c2f4-2cef-4953-a8ab-66779b670495",
          "000209FF-0000-0000-C000-000000000046",
          "00024500-0000-0000-C000-000000000046"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the library"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Web Download",
    "id": 731,
    "status": "test",
    "description": "Detects suspicious ways to download files or content using PowerShell",
    "references": [
      "https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/24",
    "modified": "2023/01/05",
    "tags": [
      "attack.command_and_control",
      "attack.execution",
      "attack.t1059.001",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          ".DownloadString(",
          ".DownloadFile(",
          "Invoke-WebRequest ",
          "iwr "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Scripts or tools that download files"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential DLL File Download Via PowerShell Invoke-WebRequest",
    "id": 732,
    "status": "test",
    "description": "Detects potential DLL files being downloaded using the PowerShell Invoke-WebRequest cmdlet",
    "references": [
      "https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution"
    ],
    "author": "Florian Roth (Nextron Systems), Hieu Tran",
    "date": "2023/03/13",
    "tags": [
      "attack.command_and_control",
      "attack.execution",
      "attack.t1059.001",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Invoke-WebRequest ",
          "IWR "
        ],
        "CommandLine|contains|all": [
          "http",
          "OutFile",
          ".dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Download and Execution Cradles",
    "id": 733,
    "status": "experimental",
    "description": "Detects PowerShell download and execution cradles.",
    "references": [
      "https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd",
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/24",
    "modified": "2023/05/04",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_download": {
        "CommandLine|contains": [
          ".DownloadString(",
          ".DownloadFile(",
          "Invoke-WebRequest ",
          "iwr "
        ]
      },
      "selection_iex": {
        "CommandLine|contains": [
          ";iex $",
          "| IEX",
          "|IEX ",
          "I`E`X",
          "I`EX",
          "IE`X",
          "iex ",
          "IEX (",
          "IEX(",
          "Invoke-Expression"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Some PowerShell installers were seen using similar combinations. Apply filters accordingly"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Download Pattern",
    "id": 734,
    "related": [
      {
        "id": "e6c54d94-498c-4562-a37c-b469d8e9a275",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a Powershell process that contains download commands in its command line string",
    "references": [
      "https://blog.redteam.pl/2020/06/black-kingdom-ransomware.html",
      "https://lab52.io/blog/winter-vivern-all-summer/",
      "https://hatching.io/blog/powershell-analysis/"
    ],
    "author": "Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro",
    "date": "2019/01/16",
    "modified": "2023/01/26",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "new-object",
          "net.webclient).",
          "download"
        ],
        "CommandLine|contains": [
          "string(",
          "file("
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious File Download From File Sharing Domain Via PowerShell.EXE",
    "id": 735,
    "status": "experimental",
    "description": "Detects potentially suspicious file downloads from file sharing domains using PowerShell.exe",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers",
      "https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/",
      "https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/02/23",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_websites": {
        "CommandLine|contains": [
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "selection_download": {
        "CommandLine|contains": [
          ".DownloadString(",
          ".DownloadFile(",
          "Invoke-WebRequest ",
          "iwr ",
          "wget "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Email Exifiltration Via Powershell",
    "id": 736,
    "status": "test",
    "description": "Detects email exfiltration via powershell cmdlets",
    "references": [
      "https://www.microsoft.com/security/blog/2022/09/07/profiling-dev-0270-phosphorus-ransomware-operations/",
      "https://github.com/Azure/Azure-Sentinel/blob/7e6aa438e254d468feec061618a7877aa528ee9f/Hunting%20Queries/Microsoft%20365%20Defender/Ransomware/DEV-0270/Email%20data%20exfiltration%20via%20PowerShell.yaml"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems),  Azure-Sentinel (idea)",
    "date": "2022/09/09",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains|all": [
          "Add-PSSnapin",
          "Get-Recipient",
          "-ExpandProperty",
          "EmailAddresses",
          "SmtpAddress",
          "-hidetableheaders"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Suspicious Windows Feature Enabled - ProcCreation",
    "id": 737,
    "related": [
      {
        "id": "55c925c1-7195-426b-a136-a9396800e29b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the built-in PowerShell cmdlet \"Enable-WindowsOptionalFeature\" used as a Deployment Image Servicing and Management tool.\nSimilar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images\n",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/dism/enable-windowsoptionalfeature?view=windowsserver2022-ps",
      "https://learn.microsoft.com/en-us/windows/win32/projfs/enabling-windows-projected-file-system",
      "https://learn.microsoft.com/en-us/windows/wsl/install-on-server"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/29",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": {
        "CommandLine|contains|all": [
          "Enable-WindowsOptionalFeature",
          "-Online",
          "-FeatureName"
        ]
      },
      "selection_feature": {
        "CommandLine|contains": [
          "TelnetServer",
          "Internet-Explorer-Optional-amd64",
          "TFTP",
          "SMB1Protocol",
          "Client-ProjFS",
          "Microsoft-Windows-Subsystem-Linux"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of the features listed in the rule."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution of Powershell with Base64",
    "id": 738,
    "status": "test",
    "description": "Commandline to launch powershell with a base64 payload",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-20---powershell-invoke-known-malicious-cmdlets",
      "https://unit42.paloaltonetworks.com/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/",
      "https://mikefrobbins.com/2017/06/15/simple-obfuscation-with-powershell-using-base64-encoding/"
    ],
    "author": "frack113",
    "date": "2022/01/02",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          " -e ",
          " -en ",
          " -enc ",
          " -enco",
          " -ec "
        ]
      },
      "filter_encoding": {
        "CommandLine|contains": " -Encoding "
      },
      "filter_azure": {
        "ParentImage|contains": [
          "C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\",
          "\\gc_worker.exe"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Encoded PowerShell Patterns In CommandLine",
    "id": 739,
    "related": [
      {
        "id": "5b572dcf-254b-425c-a8c5-d9af6bea35a6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects specific combinations of encoding methods in PowerShell via the commandline",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65"
    ],
    "author": "Teymur Kheirkhabarov (idea), Vasiliy Burov (rule), oscd.community, Tim Shelton",
    "date": "2020/10/11",
    "modified": "2023/01/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_to_1": {
        "CommandLine|contains": [
          "ToInt",
          "ToDecimal",
          "ToByte",
          "ToUint",
          "ToSingle",
          "ToSByte"
        ]
      },
      "selection_to_2": {
        "CommandLine|contains": [
          "ToChar",
          "ToString",
          "String"
        ]
      },
      "selection_gen_1": {
        "CommandLine|contains|all": [
          "char",
          "join"
        ]
      },
      "selection_gen_2": {
        "CommandLine|contains|all": [
          "split",
          "join"
        ]
      },
      "condition": "selection_img and (all of selection_to_* or 1 of selection_gen_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Powershell Inline Execution From A File",
    "id": 740,
    "status": "test",
    "description": "Detects inline execution of PowerShell code from a file",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=50"
    ],
    "author": "frack113",
    "date": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_exec": {
        "CommandLine|contains": [
          "iex ",
          "Invoke-Expression ",
          "Invoke-Command ",
          "icm "
        ]
      },
      "selection_read": {
        "CommandLine|contains": [
          "cat ",
          "get-content ",
          "type "
        ]
      },
      "selection_raw": {
        "CommandLine|contains": " -raw"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Certificate Exported Via PowerShell",
    "id": 741,
    "related": [
      {
        "id": "aa7a3fce-bef5-4311-9cc1-5f04bb8c308c",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects calls to cmdlets that are used to export certificates from the local certificate store. Threat actors were seen abusing this to steal private keys from compromised machines.",
    "references": [
      "https://us-cert.cisa.gov/ncas/analysis-reports/ar21-112a",
      "https://docs.microsoft.com/en-us/powershell/module/pki/export-pfxcertificate",
      "https://www.splunk.com/en_us/blog/security/breaking-the-chain-defending-against-certificate-services-abuse.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/18",
    "tags": [
      "attack.credential_access",
      "attack.execution",
      "attack.t1552.004",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Export-PfxCertificate ",
          "Export-Certificate "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate certificate exports by administrators. Additional filters might be required."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Base64 Encoded PowerShell Command Detected",
    "id": 742,
    "status": "test",
    "description": "Detects usage of the \"FromBase64String\" function in the commandline which is used to decode a base64 encoded string",
    "references": [
      "https://gist.github.com/Neo23x0/6af876ee72b51676c82a2db8d2cd3639"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/01/29",
    "modified": "2023/01/26",
    "tags": [
      "attack.t1027",
      "attack.defense_evasion",
      "attack.t1140",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "::FromBase64String("
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative script libraries"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious FromBase64String Usage On Gzip Archive - Process Creation",
    "id": 743,
    "related": [
      {
        "id": "df69cb1d-b891-4cd9-90c7-d617d90100ce",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects attempts of decoding a base64 Gzip archive via PowerShell. This technique is often used as a method to load malicious content into memory afterward.",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=43"
    ],
    "author": "frack113",
    "date": "2022/12/23",
    "tags": [
      "attack.command_and_control",
      "attack.t1132.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "FromBase64String",
          "MemoryStream",
          "H4sI"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Get-Process LSASS",
    "id": 744,
    "status": "test",
    "description": "Detects a \"Get-Process\" cmdlet and it's aliases on lsass process, which is in almost all cases a sign of malicious activity",
    "references": [
      "https://twitter.com/PythonResponder/status/1385064506049630211"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/04/23",
    "modified": "2023/01/05",
    "tags": [
      "attack.credential_access",
      "attack.t1552.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Get-Process lsas",
          "ps lsas",
          "gps lsas"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Get-Clipboard Cmdlet Via CLI",
    "id": 745,
    "related": [
      {
        "id": "4cbd4f12-2e22-43e3-882f-bff3247ffb78",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects usage of the 'Get-Clipboard' cmdlet via CLI",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/16",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/3.B.2_C36B49B5-DF58-4A34-9FE9-56189B9DEFEA.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/05/02",
    "modified": "2022/12/25",
    "tags": [
      "attack.collection",
      "attack.t1115"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "Get-Clipboard"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Reconnaissance Activity Using Get-LocalGroupMember Cmdlet",
    "id": 746,
    "related": [
      {
        "id": "cef24b90-dddc-4ae1-a09a-8764872f69fc",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious reconnaissance command line activity on Windows systems using the PowerShell Get-LocalGroupMember Cmdlet",
    "references": [
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/10",
    "tags": [
      "attack.discovery",
      "attack.t1087.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmdlet": {
        "CommandLine|contains": "Get-LocalGroupMember "
      },
      "selection_group": {
        "CommandLine|contains": [
          "domain admins",
          " administrator",
          " administrateur",
          "enterprise admins",
          "Exchange Trusted Subsystem",
          "Remote Desktop Users",
          "Utilisateurs du Bureau \u00c3\u00a0 distance",
          "Usuarios de escritorio remoto"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Abuse of Service Permissions to Hide Services Via Set-Service",
    "id": 747,
    "related": [
      {
        "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
        "type": "derived"
      },
      {
        "id": "953945c5-22fe-4a92-9f8a-a9edc1e522da",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)",
    "references": [
      "https://twitter.com/Alh4zr3d/status/1580925761996828672",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/17",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\pwsh.exe"
        },
        {
          "OriginalFileName": "pwsh.dll"
        }
      ],
      "selection_sddl": {
        "CommandLine|contains|all": [
          "Set-Service ",
          "DCLCWPDTSD"
        ]
      },
      "selection_cmdlet": {
        "CommandLine|contains": [
          "-SecurityDescriptorSddl ",
          "-sd "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Rare intended use of hidden services"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell IEX Execution Patterns",
    "id": 748,
    "status": "test",
    "description": "Detects suspicious ways to run Invoke-Execution using IEX alias",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-expression?view=powershell-7.2",
      "https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/03/24",
    "modified": "2022/11/28",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_combined_1": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          " | iex;",
          " | iex ",
          " | iex}",
          " | IEX ;",
          " | IEX -Error",
          " | IEX (new",
          ");IEX "
        ]
      },
      "selection_combined_2": {
        "CommandLine|contains": [
          "::FromBase64String",
          ".GetString([System.Convert]::"
        ]
      },
      "selection_standalone": {
        "CommandLine|contains": [
          ")|iex;$",
          ");iex($",
          ");iex $",
          " | IEX | ",
          " | iex\\\""
        ]
      },
      "condition": "all of selection_combined_* or selection_standalone"
    },
    "falsepositives": [
      "Legitimate scripts that use IEX"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Root Certificate Installed From Susp Locations",
    "id": 749,
    "status": "test",
    "description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.",
    "references": [
      "https://www.microsoft.com/security/blog/2022/09/07/profiling-dev-0270-phosphorus-ransomware-operations/",
      "https://docs.microsoft.com/en-us/powershell/module/pki/import-certificate?view=windowsserver2022-ps"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "modified": "2023/01/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "Import-Certificate",
          " -FilePath ",
          "Cert:\\LocalMachine\\Root"
        ],
        "CommandLine|contains": [
          "\\AppData\\Local\\Temp\\",
          ":\\Windows\\TEMP\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Perflogs\\",
          ":\\Users\\Public\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Import PowerShell Modules From Suspicious Directories - ProcCreation",
    "id": 750,
    "related": [
      {
        "id": "21f9162c-5f5d-4b01-89a8-b705bd7d10ab",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects powershell scripts that import modules from suspicious directories",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/10",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Import-Module \"$Env:Temp\\",
          "Import-Module '$Env:Temp\\",
          "Import-Module $Env:Temp\\",
          "Import-Module \"$Env:Appdata\\",
          "Import-Module '$Env:Appdata\\",
          "Import-Module $Env:Appdata\\",
          "Import-Module C:\\Users\\Public\\",
          "ipmo \"$Env:Temp\\",
          "ipmo '$Env:Temp\\",
          "ipmo $Env:Temp\\",
          "ipmo \"$Env:Appdata\\",
          "ipmo '$Env:Appdata\\",
          "ipmo $Env:Appdata\\",
          "ipmo C:\\Users\\Public\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Unsigned AppX Installation Attempt Using Add-AppxPackage",
    "id": 751,
    "related": [
      {
        "id": "975b2262-9a49-439d-92a6-0709cccdf0b2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Add-AppxPackage\" or it's alias \"Add-AppPackage\" to install unsigned AppX packages",
    "references": [
      "https://learn.microsoft.com/en-us/windows/msix/package/unsigned-package",
      "https://twitter.com/WindowsDocs/status/1620078135080325122"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/31",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cmdlet": {
        "CommandLine|contains": [
          "Add-AppPackage ",
          "Add-AppxPackage "
        ]
      },
      "selection_flag": {
        "CommandLine|contains": " -AllowUnsigned"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Installation of unsigned packages for testing purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Invocations - Specific - ProcessCreation",
    "id": 752,
    "related": [
      {
        "id": "fce5f582-cc00-41e1-941a-c6fabf0fdb8c",
        "type": "obsoletes"
      },
      {
        "id": "ae7fbf8e-f3cb-49fd-8db4-5f3bed522c71",
        "type": "similar"
      },
      {
        "id": "8ff28fdd-e2fa-4dfa-aeda-ef3d61c62090",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell invocation command parameters",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/05",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_convert_b64": {
        "CommandLine|contains|all": [
          "-nop",
          " -w ",
          "hidden",
          " -c ",
          "[Convert]::FromBase64String"
        ]
      },
      "selection_iex": {
        "CommandLine|contains|all": [
          " -w ",
          "hidden",
          "-noni",
          "-nop",
          " -c ",
          "iex",
          "New-Object"
        ]
      },
      "selection_enc": {
        "CommandLine|contains|all": [
          " -w ",
          "hidden",
          "-ep",
          "bypass",
          "-Enc"
        ]
      },
      "selection_reg": {
        "CommandLine|contains|all": [
          "powershell",
          "reg",
          "add",
          "\\software\\"
        ]
      },
      "selection_webclient": {
        "CommandLine|contains|all": [
          "bypass",
          "-noprofile",
          "-windowstyle",
          "hidden",
          "new-object",
          "system.net.webclient",
          ".download"
        ]
      },
      "selection_iex_webclient": {
        "CommandLine|contains|all": [
          "iex",
          "New-Object",
          "Net.WebClient",
          ".Download"
        ]
      },
      "filter_chocolatey": {
        "CommandLine|contains": [
          "(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1",
          "Write-ChocolateyWarning"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Invoke-WebRequest Execution With DirectIP",
    "id": 753,
    "status": "experimental",
    "description": "Detects calls to PowerShell with Invoke-WebRequest cmdlet using direct IP access",
    "references": [
      "https://www.huntress.com/blog/critical-vulnerabilities-in-papercut-print-management-software"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/21",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_commands": {
        "CommandLine|contains": [
          "curl ",
          "Invoke-WebRequest",
          "iwr ",
          "wget "
        ]
      },
      "selection_ip": {
        "CommandLine|contains": [
          "://1",
          "://2",
          "://3",
          "://4",
          "://5",
          "://6",
          "://7",
          "://8",
          "://9"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Invoke-WebRequest Execution",
    "id": 754,
    "related": [
      {
        "id": "e218595b-bbe7-4ee5-8a96-f32a24ad3468",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects a suspicious call to Invoke-WebRequest cmdlet where the and output is located in a suspicious location",
    "references": [
      "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/02",
    "modified": "2024/02/23",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_commands": {
        "CommandLine|contains": [
          "curl ",
          "Invoke-WebRequest",
          "iwr ",
          "wget "
        ]
      },
      "selection_flags": {
        "CommandLine|contains": [
          " -ur",
          " -o"
        ]
      },
      "selection_susp_locations": {
        "CommandLine|contains": [
          "\\AppData\\",
          "\\Desktop\\",
          "\\Temp\\",
          "\\Users\\Public\\",
          "%AppData%",
          "%Public%",
          "%Temp%",
          "%tmp%",
          ":\\Windows\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Mailbox Export to Share",
    "id": 755,
    "status": "test",
    "description": "Detects usage of the powerShell New-MailboxExportRequest Cmdlet to exports a mailbox to a remote or local share, as used in ProxyShell exploitations",
    "references": [
      "https://youtu.be/5mqid-7zp8k?t=2481",
      "https://blog.orange.tw/2021/08/proxylogon-a-new-attack-surface-on-ms-exchange-part-1.html",
      "https://peterjson.medium.com/reproducing-the-proxyshell-pwn2own-exploit-49743a4ea9a1",
      "https://m365internals.com/2022/10/07/hunting-in-on-premises-exchange-server-logs/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/07",
    "modified": "2022/10/26",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "New-MailboxExportRequest",
          " -Mailbox ",
          " -FilePath \\\\\\\\"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Malicious PowerShell Commandlets - ProcessCreation",
    "id": 756,
    "related": [
      {
        "id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
        "type": "derived"
      },
      {
        "id": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
    "references": [
      "https://adsecurity.org/?p=2921",
      "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
      "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
      "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
      "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
      "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
      "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
      "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
      "https://github.com/calebstewart/CVE-2021-1675",
      "https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1",
      "https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html",
      "https://github.com/HarmJ0y/DAMP",
      "https://github.com/samratashok/nishang",
      "https://github.com/DarkCoderSc/PowerRunAsSystem/",
      "https://github.com/besimorhino/powercat",
      "https://github.com/Kevin-Robertson/Powermad",
      "https://github.com/adrecon/ADRecon",
      "https://github.com/adrecon/AzureADRecon"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/02",
    "modified": "2024/01/25",
    "tags": [
      "attack.execution",
      "attack.discovery",
      "attack.t1482",
      "attack.t1087",
      "attack.t1087.001",
      "attack.t1087.002",
      "attack.t1069.001",
      "attack.t1069.002",
      "attack.t1069",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Add-Exfiltration",
          "Add-Persistence",
          "Add-RegBackdoor",
          "Add-RemoteRegBackdoor",
          "Add-ScrnSaveBackdoor",
          "Check-VM",
          "ConvertTo-Rc4ByteStream",
          "Decrypt-Hash",
          "Disable-ADIDNSNode",
          "Disable-MachineAccount",
          "Do-Exfiltration",
          "Enable-ADIDNSNode",
          "Enable-MachineAccount",
          "Enabled-DuplicateToken",
          "Exploit-Jboss",
          "Export-ADR",
          "Export-ADRCSV",
          "Export-ADRExcel",
          "Export-ADRHTML",
          "Export-ADRJSON",
          "Export-ADRXML",
          "Find-Fruit",
          "Find-GPOLocation",
          "Find-TrustedDocuments",
          "Get-ADIDNS",
          "Get-ApplicationHost",
          "Get-ChromeDump",
          "Get-ClipboardContents",
          "Get-FoxDump",
          "Get-GPPPassword",
          "Get-IndexedItem",
          "Get-KerberosAESKey",
          "Get-Keystrokes",
          "Get-LSASecret",
          "Get-MachineAccountAttribute",
          "Get-MachineAccountCreator",
          "Get-PassHashes",
          "Get-RegAlwaysInstallElevated",
          "Get-RegAutoLogon",
          "Get-RemoteBootKey",
          "Get-RemoteCachedCredential",
          "Get-RemoteLocalAccountHash",
          "Get-RemoteLSAKey",
          "Get-RemoteMachineAccountHash",
          "Get-RemoteNLKMKey",
          "Get-RickAstley",
          "Get-Screenshot",
          "Get-SecurityPackages",
          "Get-ServiceFilePermission",
          "Get-ServicePermission",
          "Get-ServiceUnquoted",
          "Get-SiteListPassword",
          "Get-System",
          "Get-TimedScreenshot",
          "Get-UnattendedInstallFile",
          "Get-Unconstrained",
          "Get-USBKeystrokes",
          "Get-VaultCredential",
          "Get-VulnAutoRun",
          "Get-VulnSchTask",
          "Grant-ADIDNSPermission",
          "Gupt-Backdoor",
          "HTTP-Login",
          "Install-ServiceBinary",
          "Install-SSP",
          "Invoke-ACLScanner",
          "Invoke-ADRecon",
          "Invoke-ADSBackdoor",
          "Invoke-AgentSmith",
          "Invoke-AllChecks",
          "Invoke-ARPScan",
          "Invoke-AzureHound",
          "Invoke-BackdoorLNK",
          "Invoke-BadPotato",
          "Invoke-BetterSafetyKatz",
          "Invoke-BypassUAC",
          "Invoke-Carbuncle",
          "Invoke-Certify",
          "Invoke-ConPtyShell",
          "Invoke-CredentialInjection",
          "Invoke-DAFT",
          "Invoke-DCSync",
          "Invoke-DinvokeKatz",
          "Invoke-DllInjection",
          "Invoke-DNSUpdate",
          "Invoke-DomainPasswordSpray",
          "Invoke-DowngradeAccount",
          "Invoke-EgressCheck",
          "Invoke-Eyewitness",
          "Invoke-FakeLogonScreen",
          "Invoke-Farmer",
          "Invoke-Get-RBCD-Threaded",
          "Invoke-Gopher",
          "Invoke-Grouper",
          "Invoke-HandleKatz",
          "Invoke-ImpersonatedProcess",
          "Invoke-ImpersonateSystem",
          "Invoke-InteractiveSystemPowerShell",
          "Invoke-Internalmonologue",
          "Invoke-Inveigh",
          "Invoke-InveighRelay",
          "Invoke-KrbRelay",
          "Invoke-LdapSignCheck",
          "Invoke-Lockless",
          "Invoke-MalSCCM",
          "Invoke-Mimikatz",
          "Invoke-Mimikittenz",
          "Invoke-MITM6",
          "Invoke-NanoDump",
          "Invoke-NetRipper",
          "Invoke-Nightmare",
          "Invoke-NinjaCopy",
          "Invoke-OfficeScrape",
          "Invoke-OxidResolver",
          "Invoke-P0wnedshell",
          "Invoke-Paranoia",
          "Invoke-PortScan",
          "Invoke-PoshRatHttp",
          "Invoke-PostExfil",
          "Invoke-PowerDump",
          "Invoke-PowerShellTCP",
          "Invoke-PowerShellWMI",
          "Invoke-PPLDump",
          "Invoke-PsExec",
          "Invoke-PSInject",
          "Invoke-PsUaCme",
          "Invoke-ReflectivePEInjection",
          "Invoke-ReverseDNSLookup",
          "Invoke-Rubeus",
          "Invoke-RunAs",
          "Invoke-SafetyKatz",
          "Invoke-SauronEye",
          "Invoke-SCShell",
          "Invoke-Seatbelt",
          "Invoke-ServiceAbuse",
          "Invoke-ShadowSpray",
          "Invoke-Sharp",
          "Invoke-Shellcode",
          "Invoke-SMBScanner",
          "Invoke-Snaffler",
          "Invoke-Spoolsample",
          "Invoke-SpraySinglePassword",
          "Invoke-SSHCommand",
          "Invoke-StandIn",
          "Invoke-StickyNotesExtract",
          "Invoke-SystemCommand",
          "Invoke-Tasksbackdoor",
          "Invoke-Tater",
          "Invoke-Thunderfox",
          "Invoke-ThunderStruck",
          "Invoke-TokenManipulation",
          "Invoke-Tokenvator",
          "Invoke-TotalExec",
          "Invoke-UrbanBishop",
          "Invoke-UserHunter",
          "Invoke-VoiceTroll",
          "Invoke-Whisker",
          "Invoke-WinEnum",
          "Invoke-winPEAS",
          "Invoke-WireTap",
          "Invoke-WmiCommand",
          "Invoke-WMIExec",
          "Invoke-WScriptBypassUAC",
          "Invoke-Zerologon",
          "MailRaider",
          "New-ADIDNSNode",
          "New-DNSRecordArray",
          "New-HoneyHash",
          "New-InMemoryModule",
          "New-MachineAccount",
          "New-SOASerialNumberArray",
          "Out-Minidump",
          "Port-Scan",
          "PowerBreach",
          "powercat ",
          "PowerUp",
          "PowerView",
          "Remove-ADIDNSNode",
          "Remove-MachineAccount",
          "Remove-Update",
          "Rename-ADIDNSNode",
          "Revoke-ADIDNSPermission",
          "Set-ADIDNSNode",
          "Set-MacAttribute",
          "Set-MachineAccountAttribute",
          "Set-Wallpaper",
          "Show-TargetScreen",
          "Start-CaptureServer",
          "Start-Dnscat2",
          "Start-WebcamRecorder",
          "VolumeShadowCopyTools"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "MSExchange Transport Agent Installation",
    "id": 757,
    "related": [
      {
        "id": "83809e84-4475-4b69-bc3e-4aad8568612f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the Installation of a Exchange Transport Agent",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=7"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2021/06/08",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.t1505.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "Install-TransportAgent"
      },
      "condition": "selection"
    },
    "fields": [
      "AssemblyPath"
    ],
    "falsepositives": [
      "Legitimate installations of exchange TransportAgents. AssemblyPath is a good indicator for this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Non Interactive PowerShell Process Spawned",
    "id": 758,
    "status": "test",
    "description": "Detects non-interactive PowerShell activity by looking at the \"powershell\" process with a non-user GUI process such as \"explorer.exe\" as a parent.",
    "references": [
      "https://web.archive.org/web/20200925032237/https://threathunterplaybook.com/notebooks/windows/02_execution/WIN-190410151110.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g (rule), oscd.community (improvements)",
    "date": "2019/09/12",
    "modified": "2023/09/07",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "filter_main_generic": {
        "ParentImage|endswith": [
          ":\\Windows\\explorer.exe",
          ":\\Windows\\System32\\CompatTelRunner.exe",
          ":\\Windows\\SysWOW64\\explorer.exe"
        ]
      },
      "filter_main_windows_update": {
        "ParentImage": ":\\$WINDOWS.~BT\\Sources\\SetupHost.exe"
      },
      "filter_optional_vscode": {
        "ParentImage|endswith": "\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe",
        "ParentCommandLine|contains": " --ms-enable-electron-run-as-node "
      },
      "filter_optional_terminal": {
        "ParentImage|contains": ":\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal_",
        "ParentImage|endswith": "\\WindowsTerminal.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Likely. Many admin scripts and tools leverage PowerShell in their BAT or VB scripts which may trigger this rule often. It is best to add additional filters or use this to hunt for anomalies"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential PowerShell Obfuscation Via WCHAR",
    "id": 759,
    "status": "test",
    "description": "Detects suspicious encoded character syntax often used for defense evasion",
    "references": [
      "https://twitter.com/0gtweet/status/1281103918693482496"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/07/09",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "(WCHAR)0x"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Execution of Powershell Script in Public Folder",
    "id": 760,
    "status": "test",
    "description": "This rule detects execution of PowerShell scripts located in the \"C:\\Users\\Public\" folder",
    "references": [
      "https://www.mandiant.com/resources/evolution-of-fin7"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2022/04/06",
    "modified": "2022/07/14",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          "-f C:\\Users\\Public",
          "-f \"C:\\Users\\Public",
          "-f %Public%",
          "-fi C:\\Users\\Public",
          "-fi \"C:\\Users\\Public",
          "-fi %Public%",
          "-fil C:\\Users\\Public",
          "-fil \"C:\\Users\\Public",
          "-fil %Public%",
          "-file C:\\Users\\Public",
          "-file \"C:\\Users\\Public",
          "-file %Public%"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine"
    ],
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RemoteFXvGPUDisablement Abuse Via AtomicTestHarnesses",
    "id": 761,
    "related": [
      {
        "id": "f65e22f9-819e-4f96-9c7b-498364ae7a25",
        "type": "similar"
      },
      {
        "id": "38a7625e-b2cb-485d-b83d-aff137d859f4",
        "type": "similar"
      },
      {
        "id": "cacef8fc-9d3d-41f7-956d-455c6e881bc5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects calls to the AtomicTestHarnesses \"Invoke-ATHRemoteFXvGPUDisablementCommand\" which is designed to abuse the \"RemoteFXvGPUDisablement.exe\" binary to run custom PowerShell code via module load-order hijacking.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/AtomicTestHarnesses/blob/7e1e4da116801e3d6fcc6bedb207064577e40572/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1"
    ],
    "author": "frack113",
    "date": "2021/07/13",
    "modified": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Invoke-ATHRemoteFXvGPUDisablementCommand",
          "Invoke-ATHRemoteFXvGPUDisableme"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Tamper Windows Defender Remove-MpPreference",
    "id": 762,
    "related": [
      {
        "id": "ae2bdd58-0681-48ac-be7f-58ab4e593458",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects attempts to remove Windows Defender configurations using the 'MpPreference' cmdlet",
    "references": [
      "https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/windows-10-controlled-folder-access-event-search/ba-p/2326088"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_remove": {
        "CommandLine|contains": "Remove-MpPreference"
      },
      "selection_tamper": {
        "CommandLine|contains": [
          "-ControlledFolderAccessProtectedFolders ",
          "-AttackSurfaceReductionRules_Ids ",
          "-AttackSurfaceReductionRules_Actions ",
          "-CheckForSignaturesBeforeRunningScan "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Powershell ReverseShell Connection",
    "id": 763,
    "status": "stable",
    "description": "Detects usage of the \"TcpClient\" class. Which can be abused to establish remote connections and reverse-shells. As seen used by the Nishang \"Invoke-PowerShellTcpOneLine\" reverse shell and other.",
    "references": [
      "https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities/",
      "https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/",
      "https://github.com/samratashok/nishang/blob/414ee1104526d7057f9adaeee196d91ae447283e/Shells/Invoke-PowerShellTcpOneLine.ps1"
    ],
    "author": "FPT.EagleEye, wagga, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/03/03",
    "modified": "2023/04/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " Net.Sockets.TCPClient",
          ".GetStream(",
          ".Write("
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "In rare administrative cases, this function might be used to check network connectivity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Run PowerShell Script from ADS",
    "id": 764,
    "status": "test",
    "description": "Detects PowerShell script execution from Alternate Data Stream (ADS)",
    "references": [
      "https://github.com/p0shkatz/Get-ADS/blob/1c3a3562e713c254edce1995a7d9879c687c7473/Get-ADS.ps1"
    ],
    "author": "Sergey Soldatov, Kaspersky Lab, oscd.community",
    "date": "2019/10/30",
    "modified": "2022/07/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains|all": [
          "Get-Content",
          "-Stream"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Run PowerShell Script from Redirected Input Stream",
    "id": 765,
    "status": "test",
    "description": "Detects PowerShell script execution via input stream redirect",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/blob/4db780e0f0b2e2bb8cb1fa13e09196da9b9f1834/yml/LOLUtilz/OSBinaries/Powershell.yml",
      "https://twitter.com/Moriarty_Meng/status/984380793383370752"
    ],
    "author": "Moriarty Meng (idea), Anton Kutepov (rule), oscd.community",
    "date": "2020/10/17",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|re": "\\s-\\s*<"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell SAM Copy",
    "id": 766,
    "status": "test",
    "description": "Detects suspicious PowerShell scripts accessing SAM hives",
    "references": [
      "https://twitter.com/splinter_code/status/1420546784250769408"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/29",
    "modified": "2023/01/06",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains|all": [
          "\\HarddiskVolumeShadowCopy",
          "System32\\config\\sam"
        ]
      },
      "selection_2": {
        "CommandLine|contains": [
          "Copy-Item",
          "cp $_.",
          "cpi $_.",
          "copy $_.",
          ".File]::Copy("
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Some rare backup scenarios",
      "PowerShell scripts fixing HiveNightmare / SeriousSAM ACLs"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Invocation From Script Engines",
    "id": 767,
    "status": "test",
    "description": "Detects suspicious powershell invocations from interpreters or unusual programs",
    "references": [
      "https://www.securitynewspaper.com/2017/03/20/attackers-leverage-excel-powershell-dns-latest-non-malware-attack/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\wscript.exe",
          "\\cscript.exe"
        ],
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ]
      },
      "filter_health_service": {
        "CurrentDirectory|contains": "\\Health Service State\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Microsoft Operations Manager (MOM)",
      "Other scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Service DACL Modification Via Set-Service Cmdlet",
    "id": 768,
    "related": [
      {
        "id": "99cf1e02-00fb-4c0d-8375-563f978dfd37",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious DACL modifications via the \"Set-Service\" cmdlet using the \"SecurityDescriptorSddl\" flag (Only available with PowerShell 7) that can be used to hide services or make them unstopable",
    "references": [
      "https://www.sans.org/blog/red-team-tactics-hiding-windows-services/",
      "https://docs.microsoft.com/pt-br/windows/win32/secauthz/sid-strings"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/18",
    "tags": [
      "attack.persistence",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\pwsh.exe"
        },
        {
          "OriginalFileName": "pwsh.dll"
        }
      ],
      "selection_sddl_flag": {
        "CommandLine|contains": [
          "-SecurityDescriptorSddl ",
          "-sd "
        ]
      },
      "selection_set_service": {
        "CommandLine|contains|all": [
          "Set-Service ",
          "D;;"
        ],
        "CommandLine|contains": [
          ";;;IU",
          ";;;SU",
          ";;;BA",
          ";;;SY",
          ";;;WD"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Script Change Permission Via Set-Acl",
    "id": 769,
    "related": [
      {
        "id": "cae80281-ef23-44c5-873b-fd48d2666f49",
        "type": "derived"
      },
      {
        "id": "0944e002-e3f6-4eb5-bf69-3a3067b53d73",
        "type": "derived"
      },
      {
        "id": "3bf1d859-3a7e-44cb-8809-a99e066d3478",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell execution to set the ACL of a file or a folder",
    "references": [
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1",
      "https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/18",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        }
      ],
      "selection_cmdlet": {
        "CommandLine|contains|all": [
          "Set-Acl ",
          "-AclObject ",
          "-Path "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Set-Acl On Windows Folder",
    "id": 770,
    "related": [
      {
        "id": "cae80281-ef23-44c5-873b-fd48d2666f49",
        "type": "derived"
      },
      {
        "id": "bdeb2cff-af74-4094-8426-724dc937f20a",
        "type": "derived"
      },
      {
        "id": "3bf1d859-3a7e-44cb-8809-a99e066d3478",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell scripts to set the ACL to a file in the Windows folder",
    "references": [
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1",
      "https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/18",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        }
      ],
      "selection_cmdlet": {
        "CommandLine|contains|all": [
          "Set-Acl ",
          "-AclObject "
        ]
      },
      "selection_paths": {
        "CommandLine|contains": [
          "-Path \"C:\\Windows",
          "-Path 'C:\\Windows",
          "-Path %windir%",
          "-Path $env:windir"
        ]
      },
      "selection_permissions": {
        "CommandLine|contains": [
          "FullControl",
          "Allow"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change PowerShell Policies to an Insecure Level",
    "id": 771,
    "related": [
      {
        "id": "cf2e938e-9a3e-4fe8-a347-411642b28a9f",
        "type": "similar"
      },
      {
        "id": "61d0475c-173f-4844-86f7-f3eebae1c66b",
        "type": "similar"
      },
      {
        "id": "fad91067-08c5-4d1a-8d8c-d96a21b37814",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changing the PowerShell script execution policy to a potentially insecure level using the \"-ExecutionPolicy\" flag.",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.1",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.1",
      "https://adsecurity.org/?p=2604",
      "https://thedfirreport.com/2021/11/01/from-zero-to-domain-admin/"
    ],
    "author": "frack113",
    "date": "2021/11/01",
    "modified": "2023/12/13",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        }
      ],
      "selection_option": {
        "CommandLine|contains": [
          "-executionpolicy ",
          " -ep ",
          " -exec "
        ]
      },
      "selection_level": {
        "CommandLine|contains": [
          "Bypass",
          "Unrestricted"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrator scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Service StartupType Change Via PowerShell Set-Service",
    "id": 772,
    "status": "test",
    "description": "Detects the use of the PowerShell \"Set-Service\" cmdlet to change the startup type of a service to \"disabled\" or \"manual\"",
    "references": [
      "https://www.virustotal.com/gui/file/38283b775552da8981452941ea74191aa0d203edd3f61fb2dee7b0aea3514955"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/04",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\powershell.exe"
        },
        {
          "OriginalFileName": "PowerShell.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "Set-Service",
          "-StartupType"
        ],
        "CommandLine|contains": [
          "Disabled",
          "Manual"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives may occur with troubleshooting scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Deletion of Volume Shadow Copies via WMI with PowerShell",
    "id": 773,
    "related": [
      {
        "id": "e17121b4-ef2a-4418-8a59-12fb1631fa9e",
        "type": "derived"
      },
      {
        "id": "c1337eb8-921a-4b59-855b-4ba188ddcc42",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects deletion of Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell",
      "https://www.elastic.co/guide/en/security/current/volume-shadow-copy-deletion-via-powershell.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/20",
    "modified": "2022/12/30",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_get": {
        "CommandLine|contains": [
          "Get-WmiObject",
          "gwmi",
          "Get-CimInstance",
          "gcim"
        ]
      },
      "selection_shadowcopy": {
        "CommandLine|contains": "Win32_Shadowcopy"
      },
      "selection_delete": {
        "CommandLine|contains": [
          ".Delete()",
          "Remove-WmiObject",
          "rwmi",
          "Remove-CimInstance",
          "rcim"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Exchange PowerShell Snap-Ins Usage",
    "id": 774,
    "status": "test",
    "description": "Detects adding and using Exchange PowerShell snap-ins to export mailbox data. As seen used by HAFNIUM and APT27",
    "references": [
      "https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities/",
      "https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/",
      "https://www.intrinsec.com/apt27-analysis/"
    ],
    "author": "FPT.EagleEye, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/03/03",
    "modified": "2023/03/24",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.collection",
      "attack.t1114"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "Add-PSSnapin"
      },
      "selection_module": {
        "CommandLine|contains": [
          "Microsoft.Exchange.Powershell.Snapin",
          "Microsoft.Exchange.Management.PowerShell.SnapIn"
        ]
      },
      "filter_msiexec": {
        "ParentImage": "C:\\Windows\\System32\\msiexec.exe",
        "CommandLine|contains": "$exserver=Get-ExchangeServer ([Environment]::MachineName) -ErrorVariable exerr 2> $null"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Stop Windows Service Via PowerShell Stop-Service",
    "id": 775,
    "related": [
      {
        "id": "eb87818d-db5d-49cc-a987-d5da331fbd90",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the stopping of a Windows service via the PowerShell Cmdlet \"Stop-Service\"",
    "references": [
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/stop-service?view=powershell-7.4"
    ],
    "author": "Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/05",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sc_net_img": [
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "Stop-Service "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "There are many legitimate reasons to stop a service. This rule isn't looking for any suspicious behaviour in particular. Filter legitimate activity accordingly"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potentially Suspicious PowerShell Child Processes",
    "id": 776,
    "status": "experimental",
    "description": "Detects potentially suspicious child processes spawned by PowerShell",
    "references": [
      "https://twitter.com/ankit_anubhav/status/1518835408502620162"
    ],
    "author": "Florian Roth (Nextron Systems), Tim Shelton",
    "date": "2022/04/26",
    "modified": "2023/05/30",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\powershell_ise.exe",
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "Image|endswith": [
          "\\bash.exe",
          "\\bitsadmin.exe",
          "\\certutil.exe",
          "\\cscript.exe",
          "\\forfiles.exe",
          "\\hh.exe",
          "\\mshta.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\schtasks.exe",
          "\\scrcons.exe",
          "\\scriptrunner.exe",
          "\\sh.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "filter_optional_amazon": {
        "ParentCommandLine|contains": "\\Program Files\\Amazon\\WorkspacesConfig\\Scripts\\",
        "CommandLine|contains": "\\Program Files\\Amazon\\WorkspacesConfig\\Scripts\\"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Some false positive is to be expected from PowerShell scripts that might make use of additional binaries such as \"mshta\", \"bitsadmin\", etc. Apply additional filters for those scripts when needed."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Download and Execute Pattern",
    "id": 777,
    "related": [
      {
        "id": "3b6ab547-8ec2-4991-b9d2-2b06702a48d7",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell download patterns that are often used in malicious scripts, stagers or downloaders (make sure that your backend applies the strings case-insensitive)",
    "references": [
      "https://gist.github.com/jivoi/c354eaaf3019352ce32522f916c03d70",
      "https://www.trendmicro.com/en_us/research/22/j/lv-ransomware-exploits-proxyshell-in-attack.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/28",
    "modified": "2022/03/01",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "IEX ((New-Object Net.WebClient).DownloadString",
          "IEX (New-Object Net.WebClient).DownloadString",
          "IEX((New-Object Net.WebClient).DownloadString",
          "IEX(New-Object Net.WebClient).DownloadString",
          " -command (New-Object System.Net.WebClient).DownloadFile(",
          " -c (New-Object System.Net.WebClient).DownloadFile("
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Software installers that pull packages from remote systems and execute them"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Parameter Substring",
    "id": 778,
    "status": "test",
    "description": "Detects suspicious PowerShell invocation with a parameter substring",
    "references": [
      "http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier"
    ],
    "author": "Florian Roth (Nextron Systems), Daniel Bohannon (idea), Roberto Rodriguez (Fix)",
    "date": "2019/01/16",
    "modified": "2022/07/14",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          " -windowstyle h ",
          " -windowstyl h",
          " -windowsty h",
          " -windowst h",
          " -windows h",
          " -windo h",
          " -wind h",
          " -win h",
          " -wi h",
          " -win h ",
          " -win hi ",
          " -win hid ",
          " -win hidd ",
          " -win hidde ",
          " -NoPr ",
          " -NoPro ",
          " -NoProf ",
          " -NoProfi ",
          " -NoProfil ",
          " -nonin ",
          " -nonint ",
          " -noninte ",
          " -noninter ",
          " -nonintera ",
          " -noninterac ",
          " -noninteract ",
          " -noninteracti ",
          " -noninteractiv ",
          " -ec ",
          " -encodedComman ",
          " -encodedComma ",
          " -encodedComm ",
          " -encodedCom ",
          " -encodedCo ",
          " -encodedC ",
          " -encoded ",
          " -encode ",
          " -encod ",
          " -enco ",
          " -en ",
          " -executionpolic ",
          " -executionpoli ",
          " -executionpol ",
          " -executionpo ",
          " -executionp ",
          " -execution bypass",
          " -executio bypass",
          " -executi bypass",
          " -execut bypass",
          " -execu bypass",
          " -exec bypass",
          " -exe bypass",
          " -ex bypass",
          " -ep bypass",
          " /windowstyle h ",
          " /windowstyl h",
          " /windowsty h",
          " /windowst h",
          " /windows h",
          " /windo h",
          " /wind h",
          " /win h",
          " /wi h",
          " /win h ",
          " /win hi ",
          " /win hid ",
          " /win hidd ",
          " /win hidde ",
          " /NoPr ",
          " /NoPro ",
          " /NoProf ",
          " /NoProfi ",
          " /NoProfil ",
          " /nonin ",
          " /nonint ",
          " /noninte ",
          " /noninter ",
          " /nonintera ",
          " /noninterac ",
          " /noninteract ",
          " /noninteracti ",
          " /noninteractiv ",
          " /ec ",
          " /encodedComman ",
          " /encodedComma ",
          " /encodedComm ",
          " /encodedCom ",
          " /encodedCo ",
          " /encodedC ",
          " /encoded ",
          " /encode ",
          " /encod ",
          " /enco ",
          " /en ",
          " /executionpolic ",
          " /executionpoli ",
          " /executionpol ",
          " /executionpo ",
          " /executionp ",
          " /execution bypass",
          " /executio bypass",
          " /executi bypass",
          " /execut bypass",
          " /execu bypass",
          " /exec bypass",
          " /exe bypass",
          " /ex bypass",
          " /ep bypass"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Parent Process",
    "id": 779,
    "related": [
      {
        "id": "692f0bec-83ba-4d04-af7e-e884a96059b6",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a suspicious or uncommon parent processes of PowerShell",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=26"
    ],
    "author": "Teymur Kheirkhabarov, Harish Segar",
    "date": "2020/03/20",
    "modified": "2023/02/04",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": [
        {
          "ParentImage|contains": "tomcat"
        },
        {
          "ParentImage|endswith": [
            "\\amigo.exe",
            "\\browser.exe",
            "\\chrome.exe",
            "\\firefox.exe",
            "\\httpd.exe",
            "\\iexplore.exe",
            "\\jbosssvc.exe",
            "\\microsoftedge.exe",
            "\\microsoftedgecp.exe",
            "\\MicrosoftEdgeSH.exe",
            "\\mshta.exe",
            "\\nginx.exe",
            "\\outlook.exe",
            "\\php-cgi.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\safari.exe",
            "\\services.exe",
            "\\sqlagent.exe",
            "\\sqlserver.exe",
            "\\sqlservr.exe",
            "\\vivaldi.exe",
            "\\w3wp.exe"
          ]
        }
      ],
      "selection_powershell": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "CommandLine|contains": [
            "/c powershell",
            "/c pwsh"
          ]
        },
        {
          "Description": "Windows PowerShell"
        },
        {
          "Product": "PowerShell Core 6"
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Other scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Script Run in AppData",
    "id": 780,
    "status": "test",
    "description": "Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder",
    "references": [
      "https://twitter.com/JohnLaTwC/status/1082851155481288706",
      "https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community",
    "date": "2019/01/09",
    "modified": "2022/07/14",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": [
          "powershell.exe",
          "\\powershell",
          "\\pwsh",
          "pwsh.exe"
        ]
      },
      "selection2": {
        "CommandLine|contains|all": [
          "/c ",
          "\\AppData\\"
        ],
        "CommandLine|contains": [
          "Local\\",
          "Roaming\\"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Administrative scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell DownloadFile",
    "id": 781,
    "status": "test",
    "description": "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/08/28",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.command_and_control",
      "attack.t1104",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "powershell",
          ".DownloadFile",
          "System.Net.WebClient"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell Token Obfuscation - Process Creation",
    "id": 782,
    "related": [
      {
        "id": "f3a98ce4-6164-4dd4-867c-4d83de7eca51",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects TOKEN OBFUSCATION technique from Invoke-Obfuscation",
    "references": [
      "https://github.com/danielbohannon/Invoke-Obfuscation"
    ],
    "author": "frack113",
    "date": "2022/12/27",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.009"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|re": "\\w+`(\\w+|-|.)`[\\w+|\\s]"
        },
        {
          "CommandLine|re": "\"(\\{\\d\\})+\"\\s*-f"
        },
        {
          "CommandLine|re": "\\$\\{((e|n|v)*`(e|n|v)*)+:path\\}|\\$\\{((e|n|v)*`(e|n|v)*)+:((p|a|t|h)*`(p|a|t|h)*)+\\}|\\$\\{env:((p|a|t|h)*`(p|a|t|h)*)+\\}"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "User Discovery And Export Via Get-ADUser Cmdlet",
    "id": 783,
    "related": [
      {
        "id": "c2993223-6da8-4b1a-88ee-668b8bf315e9",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the Get-ADUser cmdlet to collect user information and output it to a file",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html",
      "https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "modified": "2022/11/17",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "Get-ADUser ",
          " -Filter \\*"
        ],
        "CommandLine|contains": [
          " > ",
          " | Select ",
          "Out-File",
          "Set-Content",
          "Add-Content"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate admin scripts may use the same technique, it's better to exclude specific computers or users who execute these commands or scripts often"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Net WebClient Casing Anomalies",
    "id": 784,
    "status": "test",
    "description": "Detects PowerShell command line contents that include a suspicious abnormal casing in the Net.Webclient (e.g. nEt.WEbCliEnT) string as used in obfuscation techniques",
    "references": [
      "https://app.any.run/tasks/b9040c63-c140-479b-ad59-f1bb56ce7a97/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/24",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_encoded": {
        "CommandLine|contains": [
          "TgBlAFQALgB3AEUAQg",
          "4AZQBUAC4AdwBFAEIA",
          "OAGUAVAAuAHcARQBCA",
          "bgBFAHQALgB3AGUAYg",
          "4ARQB0AC4AdwBlAGIA",
          "uAEUAdAAuAHcAZQBiA",
          "TgBFAHQALgB3AGUAYg",
          "OAEUAdAAuAHcAZQBiA",
          "bgBlAFQALgB3AGUAYg",
          "4AZQBUAC4AdwBlAGIA",
          "uAGUAVAAuAHcAZQBiA",
          "TgBlAFQALgB3AGUAYg",
          "OAGUAVAAuAHcAZQBiA",
          "bgBFAFQALgB3AGUAYg",
          "4ARQBUAC4AdwBlAGIA",
          "uAEUAVAAuAHcAZQBiA",
          "bgBlAHQALgBXAGUAYg",
          "4AZQB0AC4AVwBlAGIA",
          "uAGUAdAAuAFcAZQBiA",
          "bgBFAHQALgBXAGUAYg",
          "4ARQB0AC4AVwBlAGIA",
          "uAEUAdAAuAFcAZQBiA",
          "TgBFAHQALgBXAGUAYg",
          "OAEUAdAAuAFcAZQBiA",
          "bgBlAFQALgBXAGUAYg",
          "4AZQBUAC4AVwBlAGIA",
          "uAGUAVAAuAFcAZQBiA",
          "TgBlAFQALgBXAGUAYg",
          "OAGUAVAAuAFcAZQBiA",
          "bgBFAFQALgBXAGUAYg",
          "4ARQBUAC4AVwBlAGIA",
          "uAEUAVAAuAFcAZQBiA",
          "bgBlAHQALgB3AEUAYg",
          "4AZQB0AC4AdwBFAGIA",
          "uAGUAdAAuAHcARQBiA",
          "TgBlAHQALgB3AEUAYg",
          "OAGUAdAAuAHcARQBiA",
          "bgBFAHQALgB3AEUAYg",
          "4ARQB0AC4AdwBFAGIA",
          "uAEUAdAAuAHcARQBiA",
          "TgBFAHQALgB3AEUAYg",
          "OAEUAdAAuAHcARQBiA",
          "bgBlAFQALgB3AEUAYg",
          "4AZQBUAC4AdwBFAGIA",
          "uAGUAVAAuAHcARQBiA",
          "TgBlAFQALgB3AEUAYg",
          "OAGUAVAAuAHcARQBiA",
          "bgBFAFQALgB3AEUAYg",
          "4ARQBUAC4AdwBFAGIA",
          "uAEUAVAAuAHcARQBiA",
          "TgBFAFQALgB3AEUAYg",
          "OAEUAVAAuAHcARQBiA",
          "bgBlAHQALgBXAEUAYg",
          "4AZQB0AC4AVwBFAGIA",
          "uAGUAdAAuAFcARQBiA",
          "TgBlAHQALgBXAEUAYg",
          "OAGUAdAAuAFcARQBiA",
          "bgBFAHQALgBXAEUAYg",
          "4ARQB0AC4AVwBFAGIA",
          "uAEUAdAAuAFcARQBiA",
          "TgBFAHQALgBXAEUAYg",
          "OAEUAdAAuAFcARQBiA",
          "bgBlAFQALgBXAEUAYg",
          "4AZQBUAC4AVwBFAGIA",
          "uAGUAVAAuAFcARQBiA",
          "TgBlAFQALgBXAEUAYg",
          "OAGUAVAAuAFcARQBiA",
          "bgBFAFQALgBXAEUAYg",
          "4ARQBUAC4AVwBFAGIA",
          "uAEUAVAAuAFcARQBiA",
          "TgBFAFQALgBXAEUAYg",
          "OAEUAVAAuAFcARQBiA",
          "bgBlAHQALgB3AGUAQg",
          "4AZQB0AC4AdwBlAEIA",
          "uAGUAdAAuAHcAZQBCA",
          "TgBlAHQALgB3AGUAQg",
          "OAGUAdAAuAHcAZQBCA",
          "bgBFAHQALgB3AGUAQg",
          "4ARQB0AC4AdwBlAEIA",
          "uAEUAdAAuAHcAZQBCA",
          "TgBFAHQALgB3AGUAQg",
          "OAEUAdAAuAHcAZQBCA",
          "bgBlAFQALgB3AGUAQg",
          "4AZQBUAC4AdwBlAEIA",
          "uAGUAVAAuAHcAZQBCA",
          "TgBlAFQALgB3AGUAQg",
          "OAGUAVAAuAHcAZQBCA",
          "bgBFAFQALgB3AGUAQg",
          "4ARQBUAC4AdwBlAEIA",
          "uAEUAVAAuAHcAZQBCA",
          "TgBFAFQALgB3AGUAQg",
          "OAEUAVAAuAHcAZQBCA",
          "bgBlAHQALgBXAGUAQg",
          "4AZQB0AC4AVwBlAEIA",
          "uAGUAdAAuAFcAZQBCA",
          "TgBlAHQALgBXAGUAQg",
          "OAGUAdAAuAFcAZQBCA",
          "bgBFAHQALgBXAGUAQg",
          "4ARQB0AC4AVwBlAEIA",
          "uAEUAdAAuAFcAZQBCA",
          "TgBFAHQALgBXAGUAQg",
          "OAEUAdAAuAFcAZQBCA",
          "bgBlAFQALgBXAGUAQg",
          "4AZQBUAC4AVwBlAEIA",
          "uAGUAVAAuAFcAZQBCA",
          "TgBlAFQALgBXAGUAQg",
          "OAGUAVAAuAFcAZQBCA",
          "bgBFAFQALgBXAGUAQg",
          "4ARQBUAC4AVwBlAEIA",
          "uAEUAVAAuAFcAZQBCA",
          "TgBFAFQALgBXAGUAQg",
          "OAEUAVAAuAFcAZQBCA",
          "bgBlAHQALgB3AEUAQg",
          "4AZQB0AC4AdwBFAEIA",
          "uAGUAdAAuAHcARQBCA",
          "TgBlAHQALgB3AEUAQg",
          "OAGUAdAAuAHcARQBCA",
          "bgBFAHQALgB3AEUAQg",
          "4ARQB0AC4AdwBFAEIA",
          "uAEUAdAAuAHcARQBCA",
          "TgBFAHQALgB3AEUAQg",
          "OAEUAdAAuAHcARQBCA",
          "bgBlAFQALgB3AEUAQg",
          "uAGUAVAAuAHcARQBCA",
          "bgBFAFQALgB3AEUAQg",
          "4ARQBUAC4AdwBFAEIA",
          "uAEUAVAAuAHcARQBCA",
          "TgBFAFQALgB3AEUAQg",
          "OAEUAVAAuAHcARQBCA",
          "TgBlAHQALgBXAEUAQg",
          "4AZQB0AC4AVwBFAEIA",
          "OAGUAdAAuAFcARQBCA",
          "bgBFAHQALgBXAEUAQg",
          "4ARQB0AC4AVwBFAEIA",
          "uAEUAdAAuAFcARQBCA",
          "TgBFAHQALgBXAEUAQg",
          "OAEUAdAAuAFcARQBCA",
          "bgBlAFQALgBXAEUAQg",
          "4AZQBUAC4AVwBFAEIA",
          "uAGUAVAAuAFcARQBCA",
          "TgBlAFQALgBXAEUAQg",
          "OAGUAVAAuAFcARQBCA",
          "bgBFAFQALgBXAEUAQg",
          "4ARQBUAC4AVwBFAEIA",
          "uAEUAVAAuAFcARQBCA"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious X509Enrollment - Process Creation",
    "id": 785,
    "related": [
      {
        "id": "504d63cb-0dba-4d02-8531-e72981aace2c",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect use of X509Enrollment",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=42",
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=41",
      "https://learn.microsoft.com/en-us/dotnet/api/microsoft.hpc.scheduler.store.cx509enrollmentwebclassfactoryclass?view=hpc-sdk-5.1.6115"
    ],
    "author": "frack113",
    "date": "2022/12/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "X509Enrollment.CBinaryConverter",
          "884e2002-217d-11da-b2a4-000e7bbb2b09"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious XOR Encoded PowerShell Command",
    "id": 786,
    "related": [
      {
        "id": "5b572dcf-254b-425c-a8c5-d9af6bea35a6",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects presence of a potentially xor encoded powershell command",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65",
      "https://redcanary.com/blog/yellow-cockatoo/",
      "https://zero2auto.com/2020/05/19/netwalker-re/",
      "https://mez0.cc/posts/cobaltstrike-powershell-exec/"
    ],
    "author": "Sami Ruohonen, Harish Segar, Tim Shelton, Teymur Kheirkhabarov, Vasiliy Burov, oscd.community, Nasreddine Bencherchali",
    "date": "2018/09/05",
    "modified": "2023/01/30",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059.001",
      "attack.t1140",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Description": "Windows PowerShell"
        },
        {
          "Product": "PowerShell Core 6"
        }
      ],
      "selection_cli_xor": {
        "CommandLine|contains": "bxor"
      },
      "selection_cli_other": {
        "CommandLine|contains": [
          "ForEach",
          "for(",
          "for ",
          "-join ",
          "-join'",
          "-join\"",
          "-join`",
          "::Join",
          "[char]"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Folder Compress To Potentially Suspicious Output Via Compress-Archive Cmdlet",
    "id": 787,
    "related": [
      {
        "id": "71ff406e-b633-4989-96ec-bc49d825a412",
        "type": "similar"
      },
      {
        "id": "daf7eb81-35fd-410d-9d7a-657837e602bb",
        "type": "similar"
      },
      {
        "id": "b7a3c9a3-09ea-4934-8864-6a32cacd98d9",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell scripts that make use of the \"Compress-Archive\" Cmdlet in order to compress folders and files where the output is stored in a potentially suspicious location that is used often by malware for exfiltration.\nAn adversary might compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1074.001/T1074.001.md",
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2021/07/20",
    "modified": "2022/10/09",
    "tags": [
      "attack.collection",
      "attack.t1074.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "Compress-Archive -Path*-DestinationPath $env:TEMP",
          "Compress-Archive -Path*-DestinationPath*\\AppData\\Local\\Temp\\",
          "Compress-Archive -Path*-DestinationPath*:\\Windows\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via PresentationHost.EXE",
    "id": 788,
    "status": "test",
    "description": "Detects usage of \"PresentationHost\" which is a utility that runs \".xbap\" (Browser Applications) files to download arbitrary files",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/pull/239/files"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\presentationhost.exe"
        },
        {
          "OriginalFileName": "PresentationHost.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "http://",
          "https://",
          "ftp://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "XBAP Execution From Uncommon Locations Via PresentationHost.EXE",
    "id": 789,
    "status": "test",
    "description": "Detects the execution of \".xbap\" (Browser Applications) files via PresentationHost.EXE from an uncommon location. These files can be abused to run malicious \".xbap\" files any bypass AWL\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Presentationhost/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/01",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\presentationhost.exe"
        },
        {
          "OriginalFileName": "PresentationHost.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": ".xbap"
      },
      "filter_main_generic": {
        "CommandLine|contains": [
          " C:\\Windows\\",
          " C:\\Program Files"
        ]
      },
      "condition": "all of selection* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate \".xbap\" being executed via \"PresentationHost\""
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Visual Studio NodejsTools PressAnyKey Arbitrary Binary Execution",
    "id": 790,
    "related": [
      {
        "id": "65c3ca2c-525f-4ced-968e-246a713d164f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects child processes of Microsoft.NodejsTools.PressAnyKey.exe that can be used to execute any other binary",
    "references": [
      "https://twitter.com/mrd0x/status/1463526834918854661",
      "https://gist.github.com/nasbench/a989ce64cefa8081bd50cf6ad8c491b5"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2023/04/11",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\Microsoft.NodejsTools.PressAnyKey.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use by developers as part of NodeJS development with Visual Studio Tools"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Abusing Print Executable",
    "id": 791,
    "status": "test",
    "description": "Attackers can use print.exe for remote file copy",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Print/",
      "https://twitter.com/Oddvarmoe/status/985518877076541440"
    ],
    "author": "Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative",
    "date": "2020/10/05",
    "modified": "2022/07/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\print.exe",
        "CommandLine|startswith": "print",
        "CommandLine|contains|all": [
          "/D",
          ".exe"
        ]
      },
      "filter_print": {
        "CommandLine|contains": "print.exe"
      },
      "condition": "selection and not filter_print"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Download Using ProtocolHandler.exe",
    "id": 792,
    "status": "test",
    "description": "Detects usage of \"ProtocolHandler\" to download files. Downloaded files will be located in the cache folder (for example - %LOCALAPPDATA%\\Microsoft\\Windows\\INetCache\\IE)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/ProtocolHandler/"
    ],
    "author": "frack113",
    "date": "2021/07/13",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\protocolhandler.exe"
        },
        {
          "OriginalFileName": "ProtocolHandler.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "ftp://",
          "http://",
          "https://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Provlaunch.EXE Binary Proxy Execution Abuse",
    "id": 793,
    "related": [
      {
        "id": "f9999590-1f94-4a34-a91e-951e47bedefd",
        "type": "similar"
      },
      {
        "id": "2a4b3e61-9d22-4e4a-b60f-6e8f0cde6f25",
        "type": "similar"
      },
      {
        "id": "7021255e-5db3-4946-a8b9-0ba7a4644a69",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects child processes of \"provlaunch.exe\" which might indicate potential abuse to proxy execution.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/",
      "https://twitter.com/0gtweet/status/1674399582162153472"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel",
    "date": "2023/08/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\provlaunch.exe"
      },
      "filter_main_covered_children": [
        {
          "Image|endswith": [
            "\\calc.exe",
            "\\cmd.exe",
            "\\cscript.exe",
            "\\mshta.exe",
            "\\notepad.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "Image|contains": [
            ":\\PerfLogs\\",
            ":\\Temp\\",
            ":\\Users\\Public\\",
            "\\AppData\\Temp\\",
            "\\Windows\\System32\\Tasks\\",
            "\\Windows\\Tasks\\",
            "\\Windows\\Temp\\"
          ]
        }
      ],
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Provlaunch.EXE Child Process",
    "id": 794,
    "related": [
      {
        "id": "7f5d1c9a-3e83-48df-95a7-2b98aae6c13c",
        "type": "similar"
      },
      {
        "id": "2a4b3e61-9d22-4e4a-b60f-6e8f0cde6f25",
        "type": "similar"
      },
      {
        "id": "7021255e-5db3-4946-a8b9-0ba7a4644a69",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious child processes of \"provlaunch.exe\" which might indicate potential abuse to proxy execution.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/",
      "https://twitter.com/0gtweet/status/1674399582162153472"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\provlaunch.exe"
      },
      "selection_child": [
        {
          "Image|endswith": [
            "\\calc.exe",
            "\\cmd.exe",
            "\\cscript.exe",
            "\\mshta.exe",
            "\\notepad.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "Image|contains": [
            ":\\PerfLogs\\",
            ":\\Temp\\",
            ":\\Users\\Public\\",
            "\\AppData\\Temp\\",
            "\\Windows\\System32\\Tasks\\",
            "\\Windows\\Tasks\\",
            "\\Windows\\Temp\\"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Screen Capture Activity Via Psr.EXE",
    "id": 795,
    "status": "test",
    "description": "Detects execution of Windows Problem Steps Recorder (psr.exe), a utility used to record the user screen and clicks.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Psr/",
      "https://web.archive.org/web/20200229201156/https://www.sans.org/cyber-security-summit/archives/file/summit-archive-1493861893.pdf",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md"
    ],
    "author": "Beyu Denis, oscd.community",
    "date": "2019/10/12",
    "modified": "2024/01/04",
    "tags": [
      "attack.collection",
      "attack.t1113"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\Psr.exe",
        "CommandLine|contains": [
          "/start",
          "-start"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - 3Proxy Execution",
    "id": 796,
    "status": "test",
    "description": "Detects the use of 3proxy, a tiny free proxy server",
    "references": [
      "https://github.com/3proxy/3proxy",
      "https://blog.talosintelligence.com/2022/09/lazarus-three-rats.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/13",
    "modified": "2023/02/21",
    "tags": [
      "attack.command_and_control",
      "attack.t1572"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\3proxy.exe"
      },
      "selection_pe": {
        "Description": "3proxy - tiny proxy server"
      },
      "selection_params": {
        "CommandLine|contains": ".exe -i127.0.0.1 -p"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Suspicious ActiveDirectory Enumeration Via AdFind.EXE",
    "id": 797,
    "related": [
      {
        "id": "9a132afa-654e-11eb-ae93-0242ac130002",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects active directory enumeration activity using known AdFind CLI flags",
    "references": [
      "https://www.joeware.net/freetools/tools/adfind/",
      "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1087.002/T1087.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/13",
    "modified": "2023/03/05",
    "tags": [
      "attack.discovery",
      "attack.t1087.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_password": {
        "CommandLine|contains": [
          "lockoutduration",
          "lockoutthreshold",
          "lockoutobservationwindow",
          "maxpwdage",
          "minpwdage",
          "minpwdlength",
          "pwdhistorylength",
          "pwdproperties"
        ]
      },
      "selection_enum_ad": {
        "CommandLine|contains": "-sc admincountdmp"
      },
      "selection_enum_exchange": {
        "CommandLine|contains": "-sc exchaddresses"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Authorized administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - AdFind Suspicious Execution",
    "id": 798,
    "related": [
      {
        "id": "455b9d50-15a1-4b99-853f-8d37655a4c1b",
        "type": "similar"
      },
      {
        "id": "75df3b17-8bcc-4565-b89b-c9898acef911",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects AdFind execution with common flags seen used during attacks",
    "references": [
      "https://www.joeware.net/freetools/tools/adfind/",
      "https://thedfirreport.com/2020/05/08/adfind-recon/",
      "https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/",
      "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/",
      "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx",
      "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1087.002/T1087.002.md#atomic-test-7---adfind---enumerate-active-directory-user-objects"
    ],
    "author": "Janantha Marasinghe (https://github.com/blueteam0ps), FPT.EagleEye Team, omkar72, oscd.community",
    "date": "2021/02/02",
    "modified": "2023/03/05",
    "tags": [
      "attack.discovery",
      "attack.t1018",
      "attack.t1087.002",
      "attack.t1482",
      "attack.t1069.002",
      "stp.1u"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "domainlist",
          "trustdmp",
          "dcmodes",
          "adinfo",
          " dclist ",
          "computer_pwdnotreqd",
          "objectcategory=",
          "-subnets -f",
          "name=\"Domain Admins\"",
          "-sc u:",
          "domainncs",
          "dompol",
          " oudmp ",
          "subnetdmp",
          "gpodmp",
          "fspdmp",
          "users_noexpire",
          "computers_active",
          "computers_pwdnotreqd"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate admin activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - AdvancedRun Execution",
    "id": 799,
    "related": [
      {
        "id": "fa00b701-44c6-4679-994d-5a18afa8a707",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of AdvancedRun utility",
    "references": [
      "https://twitter.com/splinter_code/status/1483815103279603714",
      "https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3",
      "https://elastic.github.io/security-research/malware/2022/01/01.operation-bleeding-bear/article/",
      "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/20",
    "modified": "2023/02/21",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1564.003",
      "attack.t1134.002",
      "attack.t1059.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "AdvancedRun.exe"
        },
        {
          "CommandLine|contains|all": [
            " /EXEFilename ",
            " /Run"
          ]
        },
        {
          "CommandLine|contains|all": [
            " /WindowState 0",
            " /RunAs ",
            " /CommandLine "
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - AdvancedRun Suspicious Execution",
    "id": 800,
    "related": [
      {
        "id": "d2b749ee-4225-417e-b20e-a8d2193cbb84",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of AdvancedRun utility in the context of the TrustedInstaller, SYSTEM, Local Service or Network Service accounts",
    "references": [
      "https://twitter.com/splinter_code/status/1483815103279603714",
      "https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3",
      "https://elastic.github.io/security-research/malware/2022/01/01.operation-bleeding-bear/article/",
      "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/20",
    "modified": "2023/02/21",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1134.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "/EXEFilename",
          "/CommandLine"
        ]
      },
      "selection_runas": [
        {
          "CommandLine|contains": [
            " /RunAs 8 ",
            " /RunAs 4 ",
            " /RunAs 10 ",
            " /RunAs 11 "
          ]
        },
        {
          "CommandLine|endswith": [
            "/RunAs 8",
            "/RunAs 4",
            "/RunAs 10",
            "/RunAs 11"
          ]
        }
      ],
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Advanced IP Scanner Execution",
    "id": 801,
    "status": "test",
    "description": "Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.",
    "references": [
      "https://news.sophos.com/en-us/2019/12/09/snatch-ransomware-reboots-pcs-into-safe-mode-to-bypass-protection/",
      "https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html",
      "https://labs.f-secure.com/blog/prelude-to-ransomware-systembc",
      "https://assets.documentcloud.org/documents/20444693/fbi-pin-egregor-ransomware-bc-01062021.pdf",
      "https://thedfirreport.com/2021/01/18/all-that-for-a-coinminer",
      "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Other/Advanced%20IP%20Scanner"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), @ROxPinTeddy",
    "date": "2020/05/12",
    "modified": "2023/02/07",
    "tags": [
      "attack.discovery",
      "attack.t1046",
      "attack.t1135"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|contains": "\\advanced_ip_scanner"
        },
        {
          "OriginalFileName|contains": "advanced_ip_scanner"
        },
        {
          "Description|contains": "Advanced IP Scanner"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/portable",
          "/lng"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate administrative use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Advanced Port Scanner Execution",
    "id": 802,
    "status": "test",
    "description": "Detects the use of Advanced Port Scanner.",
    "references": [
      "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Other/Advanced%20Port%20Scanner"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/18",
    "modified": "2023/02/07",
    "tags": [
      "attack.discovery",
      "attack.t1046",
      "attack.t1135"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|contains": "\\advanced_port_scanner"
        },
        {
          "OriginalFileName|contains": "advanced_port_scanner"
        },
        {
          "Description|contains": "Advanced Port Scanner"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/portable",
          "/lng"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate administrative use",
      "Tools with similar commandline (very rare)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Chisel Tunneling Tool Execution",
    "id": 803,
    "related": [
      {
        "id": "cf93e05e-d798-4d9e-b522-b0248dc61eaf",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the Chisel tunneling tool via the commandline arguments",
    "references": [
      "https://github.com/jpillora/chisel/",
      "https://arcticwolf.com/resources/blog/lorenz-ransomware-chiseling-in/",
      "https://blog.sekoia.io/lucky-mouse-incident-response-to-detection-engineering/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/13",
    "modified": "2023/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\chisel.exe"
      },
      "selection_param1": {
        "CommandLine|contains": [
          "exe client ",
          "exe server "
        ]
      },
      "selection_param2": {
        "CommandLine|contains": [
          "-socks5",
          "-reverse",
          " r:",
          ":127.0.0.1:",
          "-tls-skip-verify ",
          ":socks"
        ]
      },
      "condition": "selection_img or all of selection_param*"
    },
    "falsepositives": [
      "Some false positives may occur with other tools with similar commandlines"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - CleanWipe Execution",
    "id": 804,
    "status": "test",
    "description": "Detects the use of CleanWipe a tool usually used to delete Symantec antivirus.",
    "references": [
      "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Other/CleanWipe"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/18",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "Image|endswith": "\\SepRemovalToolNative_x64.exe"
      },
      "selection2": {
        "Image|endswith": "\\CATClean.exe",
        "CommandLine|contains": "--uninstall"
      },
      "selection3": {
        "Image|endswith": "\\NetInstaller.exe",
        "CommandLine|contains": "-r"
      },
      "selection4": {
        "Image|endswith": "\\WFPUnins.exe",
        "CommandLine|contains|all": [
          "/uninstall",
          "/enterprise"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Legitimate administrative use (Should be investigated either way)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Crassus Execution",
    "id": 805,
    "status": "experimental",
    "description": "Detects Crassus, a Windows privilege escalation discovery tool, based on PE metadata characteristics.",
    "references": [
      "https://github.com/vu-ls/Crassus"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2023/04/17",
    "tags": [
      "attack.discovery",
      "attack.t1590.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\Crassus.exe"
        },
        {
          "OriginalFileName": "Crassus.exe"
        },
        {
          "Description|contains": "Crassus"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - CsExec Execution",
    "id": 806,
    "status": "test",
    "description": "Detects the use of the lesser known remote execution tool named CsExec a PsExec alternative",
    "references": [
      "https://github.com/malcomvetter/CSExec",
      "https://www.microsoft.com/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/22",
    "modified": "2023/02/21",
    "tags": [
      "attack.resource_development",
      "attack.t1587.001",
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\csexec.exe"
      },
      "selection_pe": {
        "Description": "csexec"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - DefenderCheck Execution",
    "id": 807,
    "status": "test",
    "description": "Detects the use of DefenderCheck, a tool to evaluate the signatures used in Microsoft Defender. It can be used to figure out the strings / byte chains used in Microsoft Defender to detect a tool and thus used for AV evasion.",
    "references": [
      "https://github.com/matterpreter/DefenderCheck"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/30",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\DefenderCheck.exe"
        },
        {
          "Description": "DefenderCheck"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - DIT Snapshot Viewer",
    "id": 808,
    "status": "test",
    "description": "Detects the use of Ditsnap tool, an inspection tool for Active Directory database, ntds.dit.",
    "references": [
      "https://thedfirreport.com/2020/06/21/snatch-ransomware/",
      "https://web.archive.org/web/20201124182207/https://github.com/yosqueoy/ditsnap"
    ],
    "author": "Furkan Caliskan (@caliskanfurkan_)",
    "date": "2020/07/04",
    "modified": "2023/02/21",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\ditsnap.exe"
        },
        {
          "CommandLine|contains": "ditsnap.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate admin usage"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Fast Reverse Proxy (FRP) Execution",
    "id": 809,
    "status": "test",
    "description": "Detects the use of Fast Reverse Proxy. frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet.",
    "references": [
      "https://asec.ahnlab.com/en/38156/",
      "https://github.com/fatedier/frp"
    ],
    "author": "frack113, Florian Roth",
    "date": "2022/09/02",
    "modified": "2023/02/04",
    "tags": [
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\frpc.exe",
          "\\frps.exe"
        ]
      },
      "selection_cli": {
        "CommandLine|contains": "\\frpc.ini"
      },
      "selection_hashes": [
        {
          "Hashes|contains": [
            "MD5=7D9C233B8C9E3F0EA290D2B84593C842",
            "SHA1=06DDC9280E1F1810677935A2477012960905942F",
            "SHA256=57B0936B8D336D8E981C169466A15A5FD21A7D5A2C7DAF62D5E142EE860E387C"
          ]
        },
        {
          "md5": "7d9c233b8c9e3f0ea290d2b84593c842"
        },
        {
          "sha1": "06ddc9280e1f1810677935a2477012960905942f"
        },
        {
          "sha256": "57b0936b8d336d8e981c169466a15a5fd21a7d5a2c7daf62d5e142ee860e387c"
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA- IOX Tunneling Tool Execution",
    "id": 810,
    "status": "test",
    "description": "Detects the use of IOX - a tool for port forwarding and intranet proxy purposes",
    "references": [
      "https://github.com/EddieIvan01/iox"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/10/08",
    "modified": "2023/02/08",
    "tags": [
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\iox.exe"
      },
      "selection_commandline": {
        "CommandLine|contains": [
          ".exe fwd -l ",
          ".exe fwd -r ",
          ".exe proxy -l ",
          ".exe proxy -r "
        ]
      },
      "selection_hashes": [
        {
          "Hashes|contains": [
            "MD5=9DB2D314DD3F704A02051EF5EA210993",
            "SHA1=039130337E28A6623ECF9A0A3DA7D92C5964D8DD",
            "SHA256=C6CF82919B809967D9D90EA73772A8AA1C1EB3BC59252D977500F64F1A0D6731"
          ]
        },
        {
          "md5": "9db2d314dd3f704a02051ef5ea210993"
        },
        {
          "sha1": "039130337e28a6623ecf9a0a3da7d92c5964d8dd"
        },
        {
          "sha256": "c6cf82919b809967d9d90ea73772a8aa1c1eb3bc59252d977500f64f1a0d6731"
        }
      ],
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Mouse Lock Execution",
    "id": 811,
    "status": "test",
    "description": "In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool \"Mouse Lock\" as being used for both credential access and collection in security incidents.",
    "references": [
      "https://github.com/klsecservices/Publications/blob/657deb6a6eb6e00669afd40173f425fb49682eaa/Incident-Response-Analyst-Report-2020.pdf",
      "https://sourceforge.net/projects/mouselock/"
    ],
    "author": "Cian Heasley",
    "date": "2020/08/13",
    "modified": "2023/02/21",
    "tags": [
      "attack.credential_access",
      "attack.collection",
      "attack.t1056.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": [
        {
          "Product|contains": "Mouse Lock"
        },
        {
          "Company|contains": "Misc314"
        },
        {
          "CommandLine|contains": "Mouse Lock_"
        }
      ],
      "condition": "selection"
    },
    "fields": [
      "Product",
      "Company",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate uses of Mouse Lock software"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Netcat Suspicious Execution",
    "id": 812,
    "status": "test",
    "description": "Detects execution of Netcat. Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network",
    "references": [
      "https://nmap.org/ncat/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1095/T1095.md",
      "https://www.revshells.com/"
    ],
    "author": "frack113, Florian Roth (Nextron Systems)",
    "date": "2021/07/21",
    "modified": "2023/02/08",
    "tags": [
      "attack.command_and_control",
      "attack.t1095"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\nc.exe",
          "\\ncat.exe",
          "\\netcat.exe"
        ]
      },
      "selection_cmdline": {
        "CommandLine|contains": [
          " -lvp ",
          " -lvnp",
          " -l -v -p ",
          " -lv -p ",
          " -l --proxy-type http ",
          " -vnl --exec ",
          " -vnl -e ",
          " --lua-exec ",
          " --sh-exec "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate ncat use"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Ngrok Execution",
    "id": 813,
    "status": "test",
    "description": "Detects the use of Ngrok, a utility used for port forwarding and tunneling, often used by threat actors to make local protected services publicly available.\nInvolved domains are bin.equinox.io for download and *.ngrok.io for connections.\n",
    "references": [
      "https://ngrok.com/docs",
      "https://www.fireeye.com/blog/threat-research/2021/05/shining-a-light-on-darkside-ransomware-operations.html",
      "https://stackoverflow.com/questions/42442320/ssh-tunnel-to-ngrok-and-initiate-rdp",
      "https://www.virustotal.com/gui/file/58d21840d915aaf4040ceb89522396124c82f325282f805d1085527e1e2ccfa1/detection",
      "https://cybleinc.com/2021/02/15/ngrok-platform-abused-by-hackers-to-deliver-a-new-wave-of-phishing-attacks/",
      "https://twitter.com/xorJosh/status/1598646907802451969",
      "https://www.softwaretestinghelp.com/how-to-use-ngrok/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/05/14",
    "modified": "2023/02/21",
    "tags": [
      "attack.command_and_control",
      "attack.t1572"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": [
          " tcp 139",
          " tcp 445",
          " tcp 3389",
          " tcp 5985",
          " tcp 5986"
        ]
      },
      "selection2": {
        "CommandLine|contains|all": [
          " start ",
          "--all",
          "--config",
          ".yml"
        ]
      },
      "selection3": {
        "Image|endswith": "ngrok.exe",
        "CommandLine|contains": [
          " tcp ",
          " http ",
          " authtoken "
        ]
      },
      "selection4": {
        "CommandLine|contains": [
          ".exe authtoken ",
          ".exe start --all"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Another tool that uses the command line switches of Ngrok",
      "Ngrok http 3978 (https://docs.microsoft.com/en-us/azure/bot-service/bot-service-debug-channel-ngrok?view=azure-bot-service-4.0)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Nimgrab Execution",
    "id": 814,
    "status": "test",
    "description": "Detects the usage of nimgrab, a tool bundled with the Nim programming framework and used for downloading files.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/28d190330fe44de6ff4767fc400cc10fa7cd6540/atomics/T1105/T1105.md"
    ],
    "author": "frack113",
    "date": "2022/08/28",
    "modified": "2023/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_name": {
        "Image|endswith": "\\nimgrab.exe"
      },
      "selection_hashes": {
        "Hashes|contains": [
          "MD5=2DD44C3C29D667F5C0EF5F9D7C7FFB8B",
          "SHA256=F266609E91985F0FE3E31C5E8FAEEEC4FFA5E0322D8B6F15FE69F4C5165B9559",
          "IMPHASH=C07FDDD21D123EA9B3A08EEF44AAAC45"
        ]
      },
      "selection_hash": [
        {
          "md5": "2DD44C3C29D667F5C0EF5F9D7C7FFB8B"
        },
        {
          "sha256": "F266609E91985F0FE3E31C5E8FAEEEC4FFA5E0322D8B6F15FE69F4C5165B9559"
        },
        {
          "Imphash": "C07FDDD21D123EA9B3A08EEF44AAAC45"
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use of Nim on a developer systems"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - NirCmd Execution",
    "id": 815,
    "status": "test",
    "description": "Detects the use of NirCmd tool for command execution, which could be the result of legitimate administrative activity",
    "references": [
      "https://www.nirsoft.net/utils/nircmd.html",
      "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/",
      "https://www.nirsoft.net/utils/nircmd2.html#using"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/24",
    "modified": "2023/02/13",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_org": [
        {
          "Image|endswith": "\\NirCmd.exe"
        },
        {
          "OriginalFileName": "NirCmd.exe"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains": [
          " execmd ",
          ".exe script ",
          ".exe shexec ",
          " runinteractive "
        ]
      },
      "combo_exec": {
        "CommandLine|contains": [
          " exec ",
          " exec2 "
        ]
      },
      "combo_exec_params": {
        "CommandLine|contains": [
          " show ",
          " hide "
        ]
      },
      "condition": "1 of selection_* or all of combo_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate use by administrators"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - NirCmd Execution As LOCAL SYSTEM",
    "id": 816,
    "status": "test",
    "description": "Detects the use of NirCmd tool for command execution as SYSTEM user",
    "references": [
      "https://www.nirsoft.net/utils/nircmd.html",
      "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/",
      "https://www.nirsoft.net/utils/nircmd2.html#using"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/24",
    "modified": "2023/02/13",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": " runassystem "
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate use by administrators"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Nmap/Zenmap Execution",
    "id": 817,
    "status": "test",
    "description": "Detects usage of namp/zenmap. Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation",
    "references": [
      "https://nmap.org/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1046/T1046.md#atomic-test-3---port-scan-nmap-for-windows"
    ],
    "author": "frack113",
    "date": "2021/12/10",
    "modified": "2023/12/11",
    "tags": [
      "attack.discovery",
      "attack.t1046"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\nmap.exe",
            "\\zennmap.exe"
          ]
        },
        {
          "OriginalFileName": [
            "nmap.exe",
            "zennmap.exe"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrator activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - NPS Tunneling Tool Execution",
    "id": 818,
    "status": "test",
    "description": "Detects the use of NPS, a port forwarding and intranet penetration proxy server",
    "references": [
      "https://github.com/ehang-io/nps"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/10/08",
    "modified": "2023/02/04",
    "tags": [
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\npc.exe"
      },
      "selection_cli_1": {
        "CommandLine|contains|all": [
          " -server=",
          " -vkey=",
          " -password="
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": " -config=npc"
      },
      "selection_hashes": [
        {
          "Hashes|contains": [
            "MD5=AE8ACF66BFE3A44148964048B826D005",
            "SHA1=CEA49E9B9B67F3A13AD0BE1C2655293EA3C18181",
            "SHA256=5A456283392FFCEEEACA3D3426C306EB470304637520D72FED1CC1FEBBBD6856"
          ]
        },
        {
          "md5": "ae8acf66bfe3a44148964048b826d005"
        },
        {
          "sha1": "cea49e9b9b67f3a13ad0be1c2655293ea3c18181"
        },
        {
          "sha256": "5a456283392ffceeeaca3d3426c306eb470304637520d72fed1cc1febbbd6856"
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - NSudo Execution",
    "id": 819,
    "status": "test",
    "description": "Detects the use of NSudo tool for command execution",
    "references": [
      "https://nsudo.m2team.org/en-us/",
      "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali",
    "date": "2022/01/24",
    "modified": "2023/02/13",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\NSudo.exe",
            "\\NSudoLC.exe",
            "\\NSudoLG.exe"
          ]
        },
        {
          "OriginalFileName": [
            "NSudo.exe",
            "NSudoLC.exe",
            "NSudoLG.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-U:S ",
          "-U:T ",
          "-U:E ",
          "-P:E ",
          "-M:S ",
          "-M:H ",
          "-U=S ",
          "-U=T ",
          "-U=E ",
          "-P=E ",
          "-M=S ",
          "-M=H ",
          "-ShowWindowMode:Hide"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use by administrators"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - PingCastle Execution",
    "id": 820,
    "related": [
      {
        "id": "b37998de-a70b-4f33-b219-ec36bf433dc0",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of PingCastle, a tool designed to quickly assess the Active Directory security level.",
    "references": [
      "https://github.com/vletoux/pingcastle",
      "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
      "https://github.com/fengjixuchui/Start-ADEnum/blob/e237a739db98b6104427d833004836507da36a58/Functions/Start-ADEnum.ps1#L450",
      "https://github.com/lkys37en/Start-ADEnum/blob/5b42c54215fe5f57fc59abc52c20487d15764005/Functions/Start-ADEnum.ps1#L680",
      "https://github.com/projectHULK/AD_Recon/blob/dde2daba9b3393a9388cbebda87068972cc0bd3b/SecurityAssessment.ps1#L2699",
      "https://github.com/802-1x/Compliance/blob/2e53df8b6e89686a0b91116b3f42c8f717dca820/Ping%20Castle/Get-PingCastle-HTMLComplianceReport.ps1#L8",
      "https://github.com/EvotecIT/TheDashboard/blob/481a9ce8f82f2fd55fe65220ee6486bae6df0c9d/Examples/RunReports/PingCastle.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2024/01/11",
    "tags": [
      "attack.reconnaissance",
      "attack.t1595"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Hashes|contains": [
            "MD5=f741f25ac909ee434e50812d436c73ff",
            "MD5=d40acbfc29ee24388262e3d8be16f622",
            "MD5=01bb2c16fadb992fa66228cd02d45c60",
            "MD5=9e1b18e62e42b5444fc55b51e640355b",
            "MD5=b7f8fe33ac471b074ca9e630ba0c7e79",
            "MD5=324579d717c9b9b8e71d0269d13f811f",
            "MD5=63257a1ddaf83cfa43fe24a3bc06c207",
            "MD5=049e85963826b059c9bac273bb9c82ab",
            "MD5=ecb98b7b4d4427eb8221381154ff4cb2",
            "MD5=faf87749ac790ec3a10dd069d10f9d63",
            "MD5=f296dba5d21ad18e6990b1992aea8f83",
            "MD5=93ba94355e794b6c6f98204cf39f7a11",
            "MD5=a258ef593ac63155523a461ecc73bdba",
            "MD5=97000eb5d1653f1140ee3f47186463c4",
            "MD5=95eb317fbbe14a82bd9fdf31c48b8d93",
            "MD5=32fe9f0d2630ac40ea29023920f20f49",
            "MD5=a05930dde939cfd02677fc18bb2b7df5",
            "MD5=124283924e86933ff9054a549d3a268b",
            "MD5=ceda6909b8573fdeb0351c6920225686",
            "MD5=60ce120040f2cd311c810ae6f6bbc182",
            "MD5=2f10cdc5b09100a260703a28eadd0ceb",
            "MD5=011d967028e797a4c16d547f7ba1463f",
            "MD5=2da9152c0970500c697c1c9b4a9e0360",
            "MD5=b5ba72034b8f44d431f55275bace9f8b",
            "MD5=d6ed9101df0f24e27ff92ddab42dacca",
            "MD5=3ed3cdb6d12aa1ac562ad185cdbf2d1d",
            "MD5=5e083cd0143ae95a6cb79b68c07ca573",
            "MD5=28caff93748cb84be70486e79f04c2df",
            "MD5=9d4f12c30f9b500f896efd1800e4dd11",
            "MD5=4586f7dd14271ad65a5fb696b393f4c0",
            "MD5=86ba9dddbdf49215145b5bcd081d4011",
            "MD5=9dce0a481343874ef9a36c9a825ef991",
            "MD5=85890f62e231ad964b1fda7a674747ec",
            "MD5=599be548da6441d7fe3e9a1bb8cb0833",
            "MD5=9b0c7fd5763f66e9b8c7b457fce53f96",
            "MD5=32d45718164205aec3e98e0223717d1d",
            "MD5=6ff5f373ee7f794cd17db50704d00ddb",
            "MD5=88efbdf41f0650f8f58a3053b0ca0459",
            "MD5=ef915f61f861d1fb7cbde9afd2e7bd93",
            "MD5=781fa16511a595757154b4304d2dd350",
            "MD5=5018ec39be0e296f4fc8c8575bfa8486",
            "MD5=f4a84d6f1caf0875b50135423d04139f",
            "SHA1=9c1431801fa6342ed68f047842b9a11778fc669b",
            "SHA1=c36c862f40dad78cb065197aad15fef690c262f2",
            "SHA1=bc8e23faea8b3c537f268b3e81d05b937012272d",
            "SHA1=12e0357658614ff60d480d1a6709be68a2e40c5f",
            "SHA1=18b33ab5719966393d424a3edbfa8dec225d98fa",
            "SHA1=f14c9633040897d375e3069fddc71e859f283778",
            "SHA1=08041b426c9f112ad2061bf3c8c718e34739d4fc",
            "SHA1=7be77c885d0c9a4af4cecc64d512987cf93ba937",
            "SHA1=72dbb719b05f89d9d2dbdf186714caf7639daa36",
            "SHA1=5b1498beb2cfb4d971e377801e7abce62c0e315b",
            "SHA1=292629c6ab33bddf123d26328025e2d157d9e8fc",
            "SHA1=be59e621e83a2d4c87b0e6c69a2d22f175408b11",
            "SHA1=0250ce9a716ab8cca1c70a9de4cbc49a51934995",
            "SHA1=607e1fa810c799735221a609af3bfc405728c02d",
            "SHA1=ab1c547f6d1c07a9e0a01e46adea3aae1cac12e3",
            "SHA1=044cf5698a8e6b0aeba5acb56567f06366a9a70a",
            "SHA1=ef2dea8c736d49607832986c6c2d6fdd68ba6491",
            "SHA1=efffc2bfb8af2e3242233db9a7109b903fc3f178",
            "SHA1=5a05d4320de9afbc84de8469dd02b3a109efb2d4",
            "SHA1=a785d88cf8b862a420b9be793ee6a9616aa94c84",
            "SHA1=5688d56cbaf0d934c4e37b112ba257e8fb63f4ea",
            "SHA1=5cd2ada1c26815fbfd6a0cd746d5d429c0d83a17",
            "SHA1=81d67b3d70c4e855cb11a453cc32997517708362",
            "SHA1=9cffce9de95e0109f4dfecce0ab2cb0a59cc58ad",
            "SHA1=09c6930d057f49c1c1e11cf9241fffc8c12df3a2",
            "SHA1=e27bf7db8d96db9d4c8a06ee5e9b8e9fcb86ac92",
            "SHA1=9e3c992415e390f9ada4d15c693b687f38a492d1",
            "SHA1=3f34a5ee303d37916584c888c4928e1c1164f92a",
            "SHA1=ea4c8c56a8f5c90a4c08366933e5fb2de611d0db",
            "SHA1=3150f14508ee4cae19cf09083499d1cda8426540",
            "SHA1=036ad9876fa552b1298c040e233d620ea44689c6",
            "SHA1=3a3c1dcb146bb4616904157344ce1a82cd173bf5",
            "SHA1=6230d6fca973fa26188dfbadede57afb4c15f75c",
            "SHA1=8f7b2a9b8842f339b1e33602b7f926ab65de1a4d",
            "SHA1=a586bb06b59a4736a47abff8423a54fe8e2c05c4",
            "SHA1=c82152cddf9e5df49094686531872ecd545976db",
            "SHA1=04c39ffc18533100aaa4f9c06baf2c719ac94a61",
            "SHA1=e082affa5cdb2d46452c6601a9e85acb8446b836",
            "SHA1=a075bfb6cf5c6451ce682197a87277c8bc188719",
            "SHA1=34c0c5839af1c92bce7562b91418443a2044c90d",
            "SHA1=74e10a9989e0ec8fe075537ac802bd3031ae7e08",
            "SHA1=3a515551814775df0ccbe09f219bc972eae45a10",
            "SHA256=90fd5b855b5107e7abaaefb6e658f50d5d6e08ac28e35f31d8b03dcabf77872b",
            "SHA256=5836c24f233f77342fee825f3cad73caab7ab4fb65ec2aec309fd12bc1317e85",
            "SHA256=e850e54b12331249c357a20604281b9abf8a91e6f3d957463fc625e6b126ef03",
            "SHA256=9e752f29edcd0db9931c20b173eee8d4d8196f87382c68a6e7eb4c8a44d58795",
            "SHA256=7a8c127d6c41f80d178d2315ed2f751ac91b1cd54d008af13680e04f068f426f",
            "SHA256=9f65e1c142c4f814e056a197a2241fd09e09acf245c62897109871137321a72a",
            "SHA256=c9b52d03c66d54d6391c643b3559184b1425c84a372081ec2bfed07ebf6af275",
            "SHA256=1b96f6218498aa6baf6f6c15b8f99e542077e33feb1ab5472bbbf7d4de43eb6b",
            "SHA256=768021fc242054decc280675750dec0a9e74e764b8646864c58756fa2386d2a2",
            "SHA256=1e1b32bef31be040f0f038fcb5a2d68fb192daaef23c6167f91793d21e06ebae",
            "SHA256=606bd75ed9d2d6107ea7ee67063d1761a99f2fb5e932c8344d11395d24587dd6",
            "SHA256=b489d3cdd158f040322ae5c8d0139ad28eff743c738a10f2d0255c7e149bd92a",
            "SHA256=ca7ecf04a8ad63aff330492c15270d56760cb223a607cdb1431fb00e1b9985d1",
            "SHA256=9dc4fca72463078b70f6516559a179c78400b06534e63ee12fb38adbe2632559",
            "SHA256=c00d2aee59bac087d769e09b5b7f832176f7714fefdc6af2502e6031e3eb37c2",
            "SHA256=a8e96d564687064190eaf865774f773def05fdbf651aa5bbf66216c077b863ef",
            "SHA256=84ed328cee2a0505e87662faf6fc57915e3a831c97ee88ad691f5c63522e139d",
            "SHA256=c143de99c57965d3a44c1fce6a97c2773b050609c1ea7f45688a4ca2422a5524",
            "SHA256=01d1efd5e552c59baa70c0778902233c05fde7de6e5cc156c62607df0804d36b",
            "SHA256=9a8dfeb7e3174f3510691e2b32d0f9088e0ed67d9ed1b2afbe450d70dec2016b",
            "SHA256=63b92a114075d855f706979d50ed3460fe39f8a2f5498b7657f0d14865117629",
            "SHA256=2eb014130ff837b6481c26f0d0152f84de22ca7370b15a4f51921e0054a2a358",
            "SHA256=7d5bb4271bf8ca2b63a59e731f3ec831dbda53adb8e28665e956afb4941f32ca",
            "SHA256=e57098a75bf32e127c214b61bfba492d6b209e211f065fcc84ff10637a2143ea",
            "SHA256=dd14dbcdbcfcf4bc108a926b9667af4944a3b6faf808cf1bb9a3a2554722e172",
            "SHA256=dca2b1b824cb28bd15577eace45bde7ff8f8f44705b17085524659de31761de4",
            "SHA256=8b95f339a07d59a8c8d8580283dffb9e8dfabdeb9171e42c948ab68c71afe7f2",
            "SHA256=5428a840fab6ac4a0ecb2fc20dbc5f928432b00b9297dd1cb6e69336f44eba66",
            "SHA256=e2517ae0fccaa4aefe039026a4fc855964f0c2a5f84177140200b0e58ddbfd27",
            "SHA256=75d05880de2593480254181215dd9a0075373876f2f4a2a4a9a654b2e0729a41",
            "SHA256=56490e14ce3817c3a1ddc0d97b96e90d6351bcd29914e7c9282f6a998cca84b1",
            "SHA256=f25d0a5e77e4ed9e7c4204a33cfc8e46281b43adbee550b15701dd00f41bdbe0",
            "SHA256=845a5fdcbb08e7efa7e0eabfcd881c9eebc0eec0a3a2f8689194e6b91b6eeaf8",
            "SHA256=9a89e6652e563d26a3f328ba23d91f464c9549da734557c5a02559df24b2700d",
            "SHA256=5614f2bc9b2ed414aab2c5c7997bdcbe8236e67ced8f91a63d1b6cfbe6e08726",
            "SHA256=37bf92dcedb47a90d8d38ebda8d8dd168ef5803dcb01161f8cf6d68b70d49d90",
            "SHA256=ec8590f91f5cc21e931c57345425f0625a6e37dfba026b222260450de40459f5",
            "SHA256=3994eb72b1c227c593e14b8cad7001de11d1c247d4fbf84d0714bb8a17853140",
            "SHA256=d654f870436d63c9d8e4390d9d4d898abdf0456736c7654d71cdf81a299c3f87",
            "SHA256=63fbfabd4d8afb497dee47d112eb9d683671b75a8bf6407c4bd5027fd211b892",
            "SHA256=47028053f05188e6a366fff19bedbcad2bc4daba8ff9e4df724b77d0181b7054",
            "SHA256=7c1b1e8c880a30c43b3a52ee245f963a977e1f40284f4b83f4b9afe3821753dd"
          ]
        },
        {
          "Image|endswith": "\\PingCastle.exe"
        },
        {
          "OriginalFileName": "PingCastle.exe"
        },
        {
          "Product": "Ping Castle"
        },
        {
          "CommandLine|contains": [
            "--scanner aclcheck",
            "--scanner antivirus",
            "--scanner computerversion",
            "--scanner foreignusers",
            "--scanner laps_bitlocker",
            "--scanner localadmin",
            "--scanner nullsession",
            "--scanner nullsession-trust",
            "--scanner oxidbindings",
            "--scanner remote",
            "--scanner share",
            "--scanner smb",
            "--scanner smb3querynetwork",
            "--scanner spooler",
            "--scanner startup",
            "--scanner zerologon"
          ]
        },
        {
          "CommandLine|contains": "--no-enum-limit"
        },
        {
          "CommandLine|contains|all": [
            "--healthcheck",
            "--level Full"
          ]
        },
        {
          "CommandLine|contains|all": [
            "--healthcheck",
            "--server "
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - PingCastle Execution From Potentially Suspicious Parent",
    "id": 821,
    "related": [
      {
        "id": "b1cb4ab6-ac31-43f4-adf1-d9d08957419c",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of PingCastle, a tool designed to quickly assess the Active Directory security level via a script located in a potentially suspicious or uncommon location.\n",
    "references": [
      "https://github.com/vletoux/pingcastle",
      "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
      "https://github.com/fengjixuchui/Start-ADEnum/blob/e237a739db98b6104427d833004836507da36a58/Functions/Start-ADEnum.ps1#L450",
      "https://github.com/lkys37en/Start-ADEnum/blob/5b42c54215fe5f57fc59abc52c20487d15764005/Functions/Start-ADEnum.ps1#L680",
      "https://github.com/projectHULK/AD_Recon/blob/dde2daba9b3393a9388cbebda87068972cc0bd3b/SecurityAssessment.ps1#L2699",
      "https://github.com/802-1x/Compliance/blob/2e53df8b6e89686a0b91116b3f42c8f717dca820/Ping%20Castle/Get-PingCastle-HTMLComplianceReport.ps1#L8",
      "https://github.com/EvotecIT/TheDashboard/blob/481a9ce8f82f2fd55fe65220ee6486bae6df0c9d/Examples/RunReports/PingCastle.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2024/01/11",
    "tags": [
      "attack.reconnaissance",
      "attack.t1595"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent_ext": {
        "ParentCommandLine|contains": [
          ".bat",
          ".chm",
          ".cmd",
          ".hta",
          ".htm",
          ".html",
          ".js",
          ".lnk",
          ".ps1",
          ".vbe",
          ".vbs",
          ".wsf"
        ]
      },
      "selection_parent_path_1": {
        "ParentCommandLine|contains": [
          ":\\Perflogs\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp",
          "\\AppData\\Roaming\\",
          "\\Temporary Internet"
        ]
      },
      "selection_parent_path_2": [
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "ParentCommandLine|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        }
      ],
      "selection_cli": [
        {
          "Image|endswith": "\\PingCastle.exe"
        },
        {
          "OriginalFileName": "PingCastle.exe"
        },
        {
          "Product": "Ping Castle"
        },
        {
          "CommandLine|contains": [
            "--scanner aclcheck",
            "--scanner antivirus",
            "--scanner computerversion",
            "--scanner foreignusers",
            "--scanner laps_bitlocker",
            "--scanner localadmin",
            "--scanner nullsession",
            "--scanner nullsession-trust",
            "--scanner oxidbindings",
            "--scanner remote",
            "--scanner share",
            "--scanner smb",
            "--scanner smb3querynetwork",
            "--scanner spooler",
            "--scanner startup",
            "--scanner zerologon"
          ]
        },
        {
          "CommandLine|contains": "--no-enum-limit"
        },
        {
          "CommandLine|contains|all": [
            "--healthcheck",
            "--level Full"
          ]
        },
        {
          "CommandLine|contains|all": [
            "--healthcheck",
            "--server "
          ]
        }
      ],
      "condition": "1 of selection_parent_* and selection_parent_ext and selection_cli"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Process Hacker Execution",
    "id": 822,
    "related": [
      {
        "id": "5722dff1-4bdd-4949-86ab-fbaf707e767a",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of Process Hacker based on binary metadata information (Image, Hash, Imphash, etc).\nProcess Hacker is a tool to view and manipulate processes, kernel options and other low level options.\nThreat actors abused older vulnerable versions to manipulate system processes.\n",
    "references": [
      "https://processhacker.sourceforge.io/",
      "https://www.crowdstrike.com/blog/falcon-overwatch-report-finds-increase-in-ecrime/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/10/10",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.discovery",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1622",
      "attack.t1564",
      "attack.t1543"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_image": [
        {
          "Image|contains": "\\ProcessHacker_"
        },
        {
          "Image|endswith": "\\ProcessHacker.exe"
        },
        {
          "OriginalFileName": [
            "ProcessHacker.exe",
            "Process Hacker"
          ]
        },
        {
          "Description": "Process Hacker"
        },
        {
          "Product": "Process Hacker"
        }
      ],
      "selection_hashes": {
        "Hashes|contains": [
          "MD5=68F9B52895F4D34E74112F3129B3B00D",
          "MD5=B365AF317AE730A67C936F21432B9C71",
          "SHA1=A0BDFAC3CE1880B32FF9B696458327CE352E3B1D",
          "SHA1=C5E2018BF7C0F314FED4FD7FE7E69FA2E648359E",
          "SHA256=D4A0FE56316A2C45B9BA9AC1005363309A3EDC7ACF9E4DF64D326A0FF273E80F",
          "SHA256=BD2C2CF0631D881ED382817AFCCE2B093F4E412FFB170A719E2762F250ABFEA4",
          "IMPHASH=3695333C60DEDECDCAFF1590409AA462",
          "IMPHASH=04DE0AD9C37EB7BD52043D2ECAC958DF"
        ]
      },
      "selection_hash_values": [
        {
          "md5": [
            "68f9b52895f4d34e74112f3129b3b00d",
            "b365af317ae730a67c936f21432b9c71"
          ]
        },
        {
          "sha1": [
            "c5e2018bf7c0f314fed4fd7fe7e69fa2e648359e",
            "a0bdfac3ce1880b32ff9b696458327ce352e3b1d"
          ]
        },
        {
          "sha256": [
            "d4a0fe56316a2c45b9ba9ac1005363309a3edc7acf9e4df64d326a0ff273e80f",
            "bd2c2cf0631d881ed382817afcce2b093f4e412ffb170a719e2762f250abfea4"
          ]
        },
        {
          "Imphash": [
            "04de0ad9c37eb7bd52043d2ecac958df",
            "3695333c60dedecdcaff1590409aa462"
          ]
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "While sometimes 'Process Hacker is used by legitimate administrators, the execution of Process Hacker must be investigated and allowed on a case by case basis"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Radmin Viewer Utility Execution",
    "id": 823,
    "status": "test",
    "description": "Detects the execution of Radmin which can be abused by an adversary to remotely control Windows machines",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1072/T1072.md",
      "https://www.radmin.fr/"
    ],
    "author": "frack113",
    "date": "2022/01/22",
    "modified": "2023/12/11",
    "tags": [
      "attack.execution",
      "attack.lateral_movement",
      "attack.t1072"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "Radmin Viewer"
        },
        {
          "Product": "Radmin Viewer"
        },
        {
          "OriginalFileName": "Radmin.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Potential PE Metadata Tamper Using Rcedit",
    "id": 824,
    "status": "test",
    "description": "Detects the use of rcedit to potentially alter executable PE metadata properties, which could conceal efforts to rename system utilities for defense evasion.",
    "references": [
      "https://security.stackexchange.com/questions/210843/is-it-possible-to-change-original-filename-of-an-exe",
      "https://www.virustotal.com/gui/file/02e8e8c5d430d8b768980f517b62d7792d690982b9ba0f7e04163cbc1a6e7915",
      "https://github.com/electron/rcedit"
    ],
    "author": "Micah Babinski",
    "date": "2022/12/11",
    "modified": "2023/03/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003",
      "attack.t1036",
      "attack.t1027.005",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\rcedit-x64.exe",
            "\\rcedit-x86.exe"
          ]
        },
        {
          "Description": "Edit resources of exe"
        },
        {
          "Product": "rcedit"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": "--set-"
      },
      "selection_attributes": {
        "CommandLine|contains": [
          "OriginalFileName",
          "CompanyName",
          "FileDescription",
          "ProductName",
          "ProductVersion",
          "LegalCopyright"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the tool by administrators or users to update metadata of a binary"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Rclone Execution",
    "id": 825,
    "related": [
      {
        "id": "a0d63692-a531-4912-ad39-4393325b2a9c",
        "type": "obsoletes"
      },
      {
        "id": "cb7286ba-f207-44ab-b9e6-760d82b84253",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of RClone utility for exfiltration as used by various ransomwares strains like REvil, Conti, FiveHands, etc",
    "references": [
      "https://research.nccgroup.com/2021/05/27/detecting-rclone-an-effective-tool-for-exfiltration/",
      "https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware",
      "https://us-cert.cisa.gov/ncas/analysis-reports/ar21-126a",
      "https://labs.sentinelone.com/egregor-raas-continues-the-chaos-with-cobalt-strike-and-rclone",
      "https://www.splunk.com/en_us/blog/security/darkside-ransomware-splunk-threat-update-and-detections.html"
    ],
    "author": "Bhabesh Raj, Sittikorn S, Aaron Greetham (@beardofbinary) - NCC Group",
    "date": "2021/05/10",
    "modified": "2023/03/05",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_specific_options": {
        "CommandLine|contains|all": [
          "--config ",
          "--no-check-certificate ",
          " copy "
        ]
      },
      "selection_rclone_img": [
        {
          "Image|endswith": "\\rclone.exe"
        },
        {
          "Description": "Rsync for cloud storage"
        }
      ],
      "selection_rclone_cli": {
        "CommandLine|contains": [
          "pass",
          "user",
          "copy",
          "sync",
          "config",
          "lsd",
          "remote",
          "ls",
          "mega",
          "pcloud",
          "ftp",
          "ignore-existing",
          "auto-confirm",
          "transfers",
          "multi-thread-streams",
          "no-check-certificate "
        ]
      },
      "condition": "selection_specific_options or all of selection_rclone_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "Details"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - RunXCmd Execution",
    "id": 826,
    "status": "test",
    "description": "Detects the use of the RunXCmd tool to execute commands with System or TrustedInstaller accounts",
    "references": [
      "https://www.d7xtech.com/free-software/runx/",
      "https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/24",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_account": {
        "CommandLine|contains": [
          " /account=system ",
          " /account=ti "
        ]
      },
      "selection_exec": {
        "CommandLine|contains": "/exec="
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate use by administrators"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Seatbelt Execution",
    "id": 827,
    "status": "test",
    "description": "Detects the execution of the PUA/Recon tool Seatbelt via PE information of command line parameters",
    "references": [
      "https://github.com/GhostPack/Seatbelt",
      "https://www.bluetangle.dev/2022/08/fastening-seatbelt-on-threat-hunting.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/18",
    "modified": "2023/02/04",
    "tags": [
      "attack.discovery",
      "attack.t1526",
      "attack.t1087",
      "attack.t1083"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\Seatbelt.exe"
        },
        {
          "OriginalFileName": "Seatbelt.exe"
        },
        {
          "Description": "Seatbelt"
        },
        {
          "CommandLine|contains": [
            " DpapiMasterKeys",
            " InterestingProcesses",
            " InterestingFiles",
            " CertificateThumbprints",
            " ChromiumBookmarks",
            " ChromiumHistory",
            " ChromiumPresence",
            " CloudCredentials",
            " CredEnum",
            " CredGuard",
            " FirefoxHistory",
            " ProcessCreationEvents"
          ]
        }
      ],
      "selection_group_list": {
        "CommandLine|contains": [
          " -group=misc",
          " -group=remote",
          " -group=chromium",
          " -group=slack",
          " -group=system",
          " -group=user",
          " -group=all"
        ]
      },
      "selection_group_output": {
        "CommandLine|contains": " -outputfile="
      },
      "condition": "selection_img or all of selection_group_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - System Informer Execution",
    "id": 828,
    "related": [
      {
        "id": "811e0002-b13b-4a15-9d00-a613fce66e42",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of System Informer, a task manager tool to view and manipulate processes, kernel options and other low level operations",
    "references": [
      "https://github.com/winsiderss/systeminformer"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/05/08",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.discovery",
      "attack.defense_evasion",
      "attack.t1082",
      "attack.t1564",
      "attack.t1543"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_image": [
        {
          "Image|endswith": "\\SystemInformer.exe"
        },
        {
          "OriginalFileName": "SystemInformer.exe"
        },
        {
          "Description": "System Informer"
        },
        {
          "Product": "System Informer"
        }
      ],
      "selection_hashes": {
        "Hashes|contains": [
          "MD5=19426363A37C03C3ED6FEDF57B6696EC",
          "SHA1=8B12C6DA8FAC0D5E8AB999C31E5EA04AF32D53DC",
          "SHA256=8EE9D84DE50803545937A63C686822388A3338497CDDB660D5D69CF68B68F287",
          "IMPHASH=B68908ADAEB5D662F87F2528AF318F12"
        ]
      },
      "selection_hash_values": [
        {
          "md5": "19426363A37C03C3ED6FEDF57B6696EC"
        },
        {
          "sha1": "8B12C6DA8FAC0D5E8AB999C31E5EA04AF32D53DC"
        },
        {
          "sha256": "8EE9D84DE50803545937A63C686822388A3338497CDDB660D5D69CF68B68F287"
        },
        {
          "Imphash": "B68908ADAEB5D662F87F2528AF318F12"
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "System Informer is regularly used legitimately by system administrators or developers. Apply additional filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - WebBrowserPassView Execution",
    "id": 829,
    "status": "test",
    "description": "Detects the execution of WebBrowserPassView.exe. A password recovery tool that reveals the passwords stored by the following Web browsers, Internet Explorer (Version 4.0 - 11.0), Mozilla Firefox (All Versions), Google Chrome, Safari, and Opera",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1555.003/T1555.003.md"
    ],
    "author": "frack113",
    "date": "2022/08/20",
    "modified": "2023/02/14",
    "tags": [
      "attack.credential_access",
      "attack.t1555.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "Web Browser Password Viewer"
        },
        {
          "Image|endswith": "\\WebBrowserPassView.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Wsudo Suspicious Execution",
    "id": 830,
    "status": "test",
    "description": "Detects usage of wsudo (Windows Sudo Utility). Which is a tool that let the user execute programs with different permissions (System, Trusted Installer, Administrator...etc)",
    "references": [
      "https://github.com/M2Team/Privexec/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/02",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_metadata": [
        {
          "Image|endswith": "\\wsudo.exe"
        },
        {
          "OriginalFileName": "wsudo.exe"
        },
        {
          "Description": "Windows sudo utility"
        },
        {
          "ParentImage|endswith": "\\wsudo-bridge.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-u System",
          "-uSystem",
          "-u TrustedInstaller",
          "-uTrustedInstaller",
          " --ti "
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Adidnsdump Execution",
    "id": 831,
    "status": "test",
    "description": "This tool enables enumeration and exporting of all DNS records in the zone for recon purposes of internal networks Python 3 and python.exe must be installed,\nUsee to Query/modify DNS records for Active Directory integrated DNS via LDAP\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md#atomic-test-9---remote-system-discovery---adidnsdump"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "modified": "2023/02/21",
    "tags": [
      "attack.discovery",
      "attack.t1018"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\python.exe",
        "CommandLine|contains": "adidnsdump"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Python Inline Command Execution",
    "id": 832,
    "status": "test",
    "description": "Detects execution of python using the \"-c\" flag. This is could be used as a way to launch a reverse shell or execute live python code.",
    "references": [
      "https://docs.python.org/3/using/cmdline.html#cmdoption-c",
      "https://www.revshells.com/",
      "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/02",
    "modified": "2023/02/17",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "python.exe"
        },
        {
          "Image|endswith": [
            "python.exe",
            "python3.exe",
            "python2.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -c"
      },
      "filter_python": {
        "ParentImage|startswith": "C:\\Program Files\\Python",
        "ParentImage|endswith": "\\python.exe",
        "ParentCommandLine|contains": "-E -s -m ensurepip -U --default-pip"
      },
      "filter_vscode": {
        "ParentImage|endswith": "\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Python libraries that use a flag starting with \"-c\". Filter according to your environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Python Spawning Pretty TTY on Windows",
    "id": 833,
    "related": [
      {
        "id": "899133d5-4d7c-4a7f-94ee-27355c879d90",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects python spawning a pretty tty",
    "references": [
      "https://www.volexity.com/blog/2022/06/02/zero-day-exploitation-of-atlassian-confluence/"
    ],
    "author": "Nextron Systems",
    "date": "2022/06/03",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "python.exe",
          "python3.exe",
          "python2.exe"
        ]
      },
      "selection_cli_1": {
        "CommandLine|contains|all": [
          "import pty",
          ".spawn("
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": "from pty import spawn"
      },
      "condition": "selection_img and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Query Usage To Exfil Data",
    "id": 834,
    "status": "test",
    "description": "Detects usage of \"query.exe\" a system binary to exfil information such as \"sessions\" and \"processes\" for later use",
    "references": [
      "https://twitter.com/MichalKoczwara/status/1553634816016498688"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/01",
    "modified": "2023/01/19",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": ":\\Windows\\System32\\query.exe",
        "CommandLine|contains": [
          "session >",
          "process >"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Rar Usage with Password and Compression Level",
    "id": 835,
    "status": "test",
    "description": "Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.",
    "references": [
      "https://labs.sentinelone.com/the-anatomy-of-an-apt-attack-and-cobaltstrike-beacons-encoded-configuration/",
      "https://ss64.com/bash/rar.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md"
    ],
    "author": "@ROxPinTeddy",
    "date": "2020/05/12",
    "modified": "2022/03/16",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_password": {
        "CommandLine|contains": " -hp"
      },
      "selection_other": {
        "CommandLine|contains": [
          " -m",
          " a "
        ]
      },
      "condition": "selection_password and selection_other"
    },
    "falsepositives": [
      "Legitimate use of Winrar command line version",
      "Other command line tools, that use these flags"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Files Added To An Archive Using Rar.EXE",
    "id": 836,
    "status": "test",
    "description": "Detects usage of \"rar\" to add files to an archive for potential compression. An adversary may compress data (e.g. sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html"
    ],
    "author": "Timur Zinniatullin, E.M. Anhaus, oscd.community",
    "date": "2019/10/21",
    "modified": "2023/02/05",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\rar.exe",
        "CommandLine|contains": " a "
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Highly likely if rar is a default archiver in the monitored environment."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Greedy Compression Using Rar.EXE",
    "id": 837,
    "status": "experimental",
    "description": "Detects RAR usage that creates an archive from a suspicious folder, either a system folder or one of the folders often used by attackers for staging purposes",
    "references": [
      "https://decoded.avast.io/martinchlumecky/png-steganography"
    ],
    "author": "X__Junior (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2022/12/15",
    "modified": "2024/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_opt_1": [
        {
          "Image|endswith": "\\rar.exe"
        },
        {
          "Description": "Command line RAR"
        }
      ],
      "selection_opt_2": {
        "CommandLine|contains": [
          ".exe a ",
          " a -m"
        ]
      },
      "selection_cli_flags": {
        "CommandLine|contains|all": [
          " -hp",
          " -r "
        ]
      },
      "selection_cli_folders": {
        "CommandLine|contains": [
          " ?:\\\\\\*.",
          " ?:\\\\\\\\\\*.",
          " ?:\\$Recycle.bin\\",
          " ?:\\PerfLogs\\",
          " ?:\\Temp",
          " ?:\\Users\\Public\\",
          " ?:\\Windows\\",
          " %public%"
        ]
      },
      "condition": "1 of selection_opt_* and all of selection_cli_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious RASdial Activity",
    "id": 838,
    "status": "test",
    "description": "Detects suspicious process related to rasdial.exe",
    "references": [
      "https://twitter.com/subTee/status/891298217907830785"
    ],
    "author": "juju4",
    "date": "2019/01/16",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "rasdial.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Memory Dump via RdrLeakDiag.EXE",
    "id": 839,
    "related": [
      {
        "id": "6355a919-2e97-4285-a673-74645566340d",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the use of the Microsoft Windows Resource Leak Diagnostic tool \"rdrleakdiag.exe\" to dump process memory",
    "references": [
      "https://www.pureid.io/dumping-abusing-windows-credentials-part-1/",
      "https://www.crowdstrike.com/blog/overwatch-exposes-aquatic-panda-in-possession-of-log-4-shell-exploit-tools/",
      "https://lolbas-project.github.io/lolbas/Binaries/Rdrleakdiag/",
      "https://twitter.com/0gtweet/status/1299071304805560321?s=21"
    ],
    "author": "Cedric MAURUGEON, Florian Roth (Nextron Systems), Swachchhanda Shrawan Poudel, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/09/24",
    "modified": "2023/04/24",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rdrleakdiag.exe"
        },
        {
          "OriginalFileName": "RdrLeakDiag.exe"
        }
      ],
      "selection_cli_dump": {
        "CommandLine|contains": [
          "fullmemdmp",
          "/memdmp",
          "-memdmp"
        ]
      },
      "selection_cli_output": {
        "CommandLine|contains": [
          " -o ",
          " /o "
        ]
      },
      "selection_cli_process": {
        "CommandLine|contains": [
          " -p ",
          " /p "
        ]
      },
      "condition": "all of selection_cli_* or (selection_img and selection_cli_dump)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Execution Of Regasm/Regsvcs With Uncommon Extension",
    "id": 840,
    "related": [
      {
        "id": "cc368ed0-2411-45dc-a222-510ace303cb2",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects potentially suspicious execution of the Regasm/Regsvcs utilities with an uncommon extension.",
    "references": [
      "https://www.fortiguard.com/threat-signal-report/4718?s=09",
      "https://lolbas-project.github.io/lolbas/Binaries/Regasm/",
      "https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.009"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\Regsvcs.exe",
            "\\Regasm.exe"
          ]
        },
        {
          "OriginalFileName": [
            "RegSvcs.exe",
            "RegAsm.exe"
          ]
        }
      ],
      "selection_extension": {
        "CommandLine|contains": [
          ".dat",
          ".gif",
          ".jpeg",
          ".jpg",
          ".png",
          ".txt"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Execution Of Regasm/Regsvcs From Uncommon Location",
    "id": 841,
    "related": [
      {
        "id": "e9f8f8cc-07cc-4e81-b724-f387db9175e4",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects potentially suspicious execution of the Regasm/Regsvcs utilities from a potentially suspicious location",
    "references": [
      "https://www.fortiguard.com/threat-signal-report/4718?s=09",
      "https://lolbas-project.github.io/lolbas/Binaries/Regasm/",
      "https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/25",
    "modified": "2023/02/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.009"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\Regsvcs.exe",
            "\\Regasm.exe"
          ]
        },
        {
          "OriginalFileName": [
            "RegSvcs.exe",
            "RegAsm.exe"
          ]
        }
      ],
      "selection_dir": {
        "CommandLine|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\",
          "\\PerfLogs\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Exports Critical Registry Keys To a File",
    "id": 842,
    "related": [
      {
        "id": "f0e53e89-8d22-46ea-9db5-9d4796ee2f8a",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the export of a crital Registry key to a file.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regedit/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Oddvar Moe, Sander Wiebing, oscd.community",
    "date": "2020/10/12",
    "modified": "2023/02/03",
    "tags": [
      "attack.exfiltration",
      "attack.t1012"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regedit.exe"
        },
        {
          "OriginalFileName": "REGEDIT.EXE"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains": [
          " /E ",
          " -E "
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains": [
          "hklm",
          "hkey_local_machine"
        ]
      },
      "selection_cli_3": {
        "CommandLine|endswith": [
          "\\system",
          "\\sam",
          "\\security"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "ParentImage",
      "CommandLine"
    ],
    "falsepositives": [
      "Dumping hives for legitimate purpouse i.e. backup or forensic investigation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Exports Registry Key To a File",
    "id": 843,
    "related": [
      {
        "id": "82880171-b475-4201-b811-e9c826cd5eaa",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the export of the target Registry key to a file.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regedit/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Oddvar Moe, Sander Wiebing, oscd.community",
    "date": "2020/10/07",
    "modified": "2023/02/03",
    "tags": [
      "attack.exfiltration",
      "attack.t1012"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regedit.exe"
        },
        {
          "OriginalFileName": "REGEDIT.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /E ",
          " -E "
        ]
      },
      "filter_1": {
        "CommandLine|contains": [
          "hklm",
          "hkey_local_machine"
        ]
      },
      "filter_2": {
        "CommandLine|endswith": [
          "\\system",
          "\\sam",
          "\\security"
        ]
      },
      "condition": "all of selection_* and not all of filter_*"
    },
    "fields": [
      "ParentImage",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate export of keys"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Imports Registry Key From a File",
    "id": 844,
    "related": [
      {
        "id": "0b80ade5-6997-4b1d-99a1-71701778ea61",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the import of the specified file to the registry with regedit.exe.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regedit/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Oddvar Moe, Sander Wiebing, oscd.community",
    "date": "2020/10/07",
    "modified": "2023/02/03",
    "tags": [
      "attack.t1112",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regedit.exe"
        },
        {
          "OriginalFileName": "REGEDIT.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /i ",
          " /s ",
          ".reg"
        ]
      },
      "filter_1": {
        "CommandLine|contains": [
          " /e ",
          " /a ",
          " /c ",
          " -e ",
          " -a ",
          " -c "
        ]
      },
      "filter_2": {
        "CommandLine|re": ":[^ \\\\]"
      },
      "condition": "all of selection_* and not all of filter_*"
    },
    "fields": [
      "ParentImage",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate import of keys",
      "Evernote"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Imports Registry Key From an ADS",
    "id": 845,
    "related": [
      {
        "id": "73bba97f-a82d-42ce-b315-9182e76c57b1",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the import of a alternate datastream to the registry with regedit.exe.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regedit/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f"
    ],
    "author": "Oddvar Moe, Sander Wiebing, oscd.community",
    "date": "2020/10/12",
    "modified": "2023/02/03",
    "tags": [
      "attack.t1112",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regedit.exe"
        },
        {
          "OriginalFileName": "REGEDIT.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /i ",
          ".reg"
        ],
        "CommandLine|re": ":[^ \\\\]"
      },
      "filter": {
        "CommandLine|contains": [
          " /e ",
          " /a ",
          " /c ",
          " -e ",
          " -a ",
          " -c "
        ]
      },
      "condition": "all of selection_* and not filter"
    },
    "fields": [
      "ParentImage",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Regedit as Trusted Installer",
    "id": 846,
    "status": "test",
    "description": "Detects a regedit started with TrustedInstaller privileges or by ProcessHacker.exe",
    "references": [
      "https://twitter.com/1kwpeter/status/1397816101455765504"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/05/27",
    "modified": "2022/10/09",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\regedit.exe",
        "ParentImage|endswith": [
          "\\TrustedInstaller.exe",
          "\\ProcessHacker.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Registry Modification From ADS Via Regini.EXE",
    "id": 847,
    "related": [
      {
        "id": "5f60740a-f57b-4e76-82a1-15b6ff2cb134",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the import of an alternate data stream with regini.exe, regini.exe can be used to modify registry keys.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regini/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/regini"
    ],
    "author": "Eli Salem, Sander Wiebing, oscd.community",
    "date": "2020/10/12",
    "modified": "2023/02/08",
    "tags": [
      "attack.t1112",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regini.exe"
        },
        {
          "OriginalFileName": "REGINI.EXE"
        }
      ],
      "selection_re": {
        "CommandLine|re": ":[^ \\\\]"
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "ParentImage",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Registry Modification Via Regini.EXE",
    "id": 848,
    "related": [
      {
        "id": "77946e79-97f1-45a2-84b4-f37b5c0d8682",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the execution of regini.exe which can be used to modify registry keys, the changes are imported from one or more text files.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Regini/",
      "https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/regini"
    ],
    "author": "Eli Salem, Sander Wiebing, oscd.community",
    "date": "2020/10/08",
    "modified": "2023/02/08",
    "tags": [
      "attack.t1112",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\regini.exe"
        },
        {
          "OriginalFileName": "REGINI.EXE"
        }
      ],
      "filter": {
        "CommandLine|re": ":[^ \\\\]"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "ParentImage",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate modification of keys"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "DLL Execution Via Register-cimprovider.exe",
    "id": 849,
    "status": "test",
    "description": "Detects using register-cimprovider.exe to execute arbitrary dll file.",
    "references": [
      "https://twitter.com/PhilipTsukerman/status/992021361106268161",
      "https://lolbas-project.github.io/lolbas/Binaries/Register-cimprovider/"
    ],
    "author": "Ivan Dyachkov, Yulia Fomina, oscd.community",
    "date": "2020/10/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\register-cimprovider.exe",
        "CommandLine|contains|all": [
          "-path",
          "dll"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Enumeration for 3rd Party Creds From CLI",
    "id": 850,
    "related": [
      {
        "id": "e0b0c2ab-3d52-46d9-8cb7-049dc775fbd1",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects processes that query known 3rd party registry keys that holds credentials via commandline",
    "references": [
      "https://isc.sans.edu/diary/More+Data+Exfiltration/25698",
      "https://github.com/synacktiv/Radmin3-Password-Cracker/blob/acfc87393e4b7c06353973a14a6c7126a51f36ac/regkey.txt",
      "https://github.com/HyperSine/how-does-MobaXterm-encrypt-password",
      "https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#inside-the-registry"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "tags": [
      "attack.credential_access",
      "attack.t1552.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "\\Software\\SimonTatham\\PuTTY\\Sessions",
          "\\Software\\\\SimonTatham\\PuTTY\\SshHostKeys\\",
          "\\Software\\Mobatek\\MobaXterm\\",
          "\\Software\\WOW6432Node\\Radmin\\v3.0\\Server\\Parameters\\Radmin",
          "\\Software\\Aerofox\\FoxmailPreview",
          "\\Software\\Aerofox\\Foxmail\\V3.1",
          "\\Software\\IncrediMail\\Identities",
          "\\Software\\Qualcomm\\Eudora\\CommandLine",
          "\\Software\\RimArts\\B2\\Settings",
          "\\Software\\OpenVPN-GUI\\configs",
          "\\Software\\Martin Prikryl\\WinSCP 2\\Sessions",
          "\\Software\\FTPWare\\COREFTP\\Sites",
          "\\Software\\DownloadManager\\Passwords",
          "\\Software\\OpenSSH\\Agent\\Keys",
          "\\Software\\TightVNC\\Server",
          "\\Software\\ORL\\WinVNC3\\Password",
          "\\Software\\RealVNC\\WinVNC4"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "IE ZoneMap Setting Downgraded To MyComputer Zone For HTTP Protocols Via CLI",
    "id": 851,
    "related": [
      {
        "id": "3fd4c8d7-8362-4557-a8e6-83b29cc0d724",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to Internet Explorer's (IE / Windows Internet properties) ZoneMap configuration of the \"HTTP\" and \"HTTPS\" protocols to point to the \"My Computer\" zone. This allows downloaded files from the Internet to be granted the same level of trust as files stored locally.\n",
    "references": [
      "https://twitter.com/M_haggis/status/1699056847154725107",
      "https://twitter.com/JAMESWT_MHT/status/1699042827261391247",
      "https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries",
      "https://www.virustotal.com/gui/file/339ff720c74dc44265b917b6d3e3ba0411d61f3cd3c328e9a2bae81592c8a6e5/content"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/05",
    "tags": [
      "attack.execution",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults",
          "http",
          " 0"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Debugger Registration Cmdline",
    "id": 852,
    "status": "test",
    "description": "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).",
    "references": [
      "https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/",
      "https://bazaar.abuse.ch/sample/6f3aa9362d72e806490a8abce245331030d1ab5ac77e400dd475748236a6cc81/"
    ],
    "author": "Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro",
    "date": "2019/09/06",
    "modified": "2022/08/06",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.008"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": "\\CurrentVersion\\Image File Execution Options\\"
      },
      "selection2": {
        "CommandLine|contains": [
          "sethc.exe",
          "utilman.exe",
          "osk.exe",
          "magnify.exe",
          "narrator.exe",
          "displayswitch.exe",
          "atbroker.exe",
          "HelpPane.exe"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Logon Scripts - CommandLine",
    "id": 853,
    "related": [
      {
        "id": "0a98a10c-685d-4ab0-bddc-b6bdd1d48458",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the addition of a new LogonScript to the registry value \"UserInitMprLogonScript\" for potential persistence",
    "references": [
      "https://cocomelonc.github.io/persistence/2022/12/09/malware-pers-20.html"
    ],
    "author": "Tom Ueltschi (@c_APT_ure)",
    "date": "2019/01/12",
    "modified": "2023/06/09",
    "tags": [
      "attack.persistence",
      "attack.t1037.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "UserInitMprLogonScript"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate addition of Logon Scripts via the command line by administrators or third party tools"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Attempt Using New NetworkProvider - CLI",
    "id": 854,
    "related": [
      {
        "id": "0442defa-b4a2-41c9-ae2c-ea7042fc4701",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it",
    "references": [
      "https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/network-provider-settings-removed-in-place-upgrade",
      "https://github.com/gtworek/PSBits/tree/master/PasswordStealing/NPPSpy"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/23",
    "modified": "2023/02/02",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\System\\CurrentControlSet\\Services\\",
          "\\NetworkProvider"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Other legitimate network providers used and not filtred in this rule"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Privilege Escalation via Service Permissions Weakness",
    "id": 855,
    "status": "test",
    "description": "Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
      "https://pentestlab.blog/2017/03/31/insecure-registry-permissions/"
    ],
    "author": "Teymur Kheirkhabarov",
    "date": "2019/10/26",
    "modified": "2023/01/30",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": "Medium",
        "CommandLine|contains|all": [
          "ControlSet",
          "services"
        ],
        "CommandLine|contains": [
          "\\ImagePath",
          "\\FailureCommand",
          "\\ServiceDll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Provisioning Registry Key Abuse For Binary Proxy Execution",
    "id": 856,
    "related": [
      {
        "id": "7f5d1c9a-3e83-48df-95a7-2b98aae6c13c",
        "type": "similar"
      },
      {
        "id": "f9999590-1f94-4a34-a91e-951e47bedefd",
        "type": "similar"
      },
      {
        "id": "7021255e-5db3-4946-a8b9-0ba7a4644a69",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potential abuse of the provisioning registry key for indirect command execution through \"Provlaunch.exe\".",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/",
      "https://twitter.com/0gtweet/status/1674399582162153472"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel",
    "date": "2023/08/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "SOFTWARE\\Microsoft\\Provisioning\\Commands\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PowerShell Execution Policy Tampering - ProcCreation",
    "id": 857,
    "related": [
      {
        "id": "fad91067-08c5-4d1a-8d8c-d96a21b37814",
        "type": "similar"
      },
      {
        "id": "87e3c4e8-a6a8-4ad9-bb4f-46e7ff99a180",
        "type": "similar"
      },
      {
        "id": "61d0475c-173f-4844-86f7-f3eebae1c66b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changes to the PowerShell execution policy registry key in order to bypass signing requirements for script execution from the CommandLine",
    "references": [
      "https://learn.microsoft.com/de-de/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_path": {
        "CommandLine|contains": [
          "\\ShellIds\\Microsoft.PowerShell\\ExecutionPolicy",
          "\\Policies\\Microsoft\\Windows\\PowerShell\\ExecutionPolicy"
        ]
      },
      "selection_values": {
        "CommandLine|contains": [
          "Bypass",
          "RemoteSigned",
          "Unrestricted"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Persistence Via TypedPaths - CommandLine",
    "id": 858,
    "status": "test",
    "description": "Detects modification addition to the 'TypedPaths' key in the user or admin registry via the commandline. Which might indicate persistence attempt",
    "references": [
      "https://twitter.com/dez_/status/1560101453150257154",
      "https://forensafe.com/blogs/typedpaths.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/22",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\TypedPaths"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Regsvr32 Commandline Flag Anomaly",
    "id": 859,
    "status": "test",
    "description": "Detects a potential command line flag anomaly related to \"regsvr32\" in which the \"/i\" flag is used without the \"/n\" which should be uncommon.",
    "references": [
      "https://twitter.com/sbousseaden/status/1282441816986484737?s=12"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/07/13",
    "modified": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\regsvr32.exe",
        "CommandLine|contains": [
          " /i:",
          " -i:"
        ]
      },
      "filter_main_flag": {
        "CommandLine|contains": [
          " /n ",
          " -n "
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrator typo might cause some false positives"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Regsvr32 HTTP IP Pattern",
    "id": 860,
    "status": "experimental",
    "description": "Detects regsvr32 execution to download and install DLLs located remotely where the address is an IP address.",
    "references": [
      "https://twitter.com/mrd0x/status/1461041276514623491",
      "https://twitter.com/tccontre18/status/1480950986650832903",
      "https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2023/05/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "REGSVR32.EXE"
        }
      ],
      "selection_ip": {
        "CommandLine|contains": [
          " /i:http://1",
          " /i:http://2",
          " /i:http://3",
          " /i:http://4",
          " /i:http://5",
          " /i:http://6",
          " /i:http://7",
          " /i:http://8",
          " /i:http://9",
          " /i:https://1",
          " /i:https://2",
          " /i:https://3",
          " /i:https://4",
          " /i:https://5",
          " /i:https://6",
          " /i:https://7",
          " /i:https://8",
          " /i:https://9",
          " -i:http://1",
          " -i:http://2",
          " -i:http://3",
          " -i:http://4",
          " -i:http://5",
          " -i:http://6",
          " -i:http://7",
          " -i:http://8",
          " -i:http://9",
          " -i:https://1",
          " -i:https://2",
          " -i:https://3",
          " -i:https://4",
          " -i:https://5",
          " -i:https://6",
          " -i:https://7",
          " -i:https://8",
          " -i:https://9"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "FQDNs that start with a number such as \"7-Zip\""
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Regsvr32 HTTP/FTP Pattern",
    "id": 861,
    "related": [
      {
        "id": "8e2b24c9-4add-46a0-b4bb-0057b4e6187d",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects regsvr32 execution to download/install/register new DLLs that are hosted on Web or FTP servers.",
    "references": [
      "https://twitter.com/mrd0x/status/1461041276514623491",
      "https://twitter.com/tccontre18/status/1480950986650832903",
      "https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/05/24",
    "modified": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "REGSVR32.EXE"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": [
          " /i",
          " -i"
        ]
      },
      "selection_protocol": {
        "CommandLine|contains": [
          "ftp",
          "http"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Regsvr32 Execution From Remote Share",
    "id": 862,
    "status": "test",
    "description": "Detects REGSVR32.exe to execute DLL hosted on remote shares",
    "references": [
      "https://thedfirreport.com/2022/10/31/follina-exploit-leads-to-domain-compromise/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "\\REGSVR32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " \\\\\\\\"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Child Process Of Regsvr32",
    "id": 863,
    "related": [
      {
        "id": "8e2b24c9-4add-46a0-b4bb-0057b4e6187d",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of \"regsvr32.exe\".",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-april-2022/",
      "https://www.echotrail.io/insights/search/regsvr32.exe",
      "https://www.ired.team/offensive-security/code-execution/t1117-regsvr32-aka-squiblydoo"
    ],
    "author": "elhoim, Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/05/05",
    "modified": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\regsvr32.exe",
        "Image|endswith": [
          "\\calc.exe",
          "\\cscript.exe",
          "\\explorer.exe",
          "\\mshta.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\nltest.exe",
          "\\notepad.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\reg.exe",
          "\\schtasks.exe",
          "\\werfault.exe",
          "\\wscript.exe"
        ]
      },
      "filter_main_werfault": {
        "Image|endswith": "\\werfault.exe",
        "CommandLine|contains": " -u -p "
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely, but can rarely occur. Apply additional filters accordingly."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Regsvr32 Execution From Potential Suspicious Location",
    "id": 864,
    "related": [
      {
        "id": "8e2b24c9-4add-46a0-b4bb-0057b4e6187d",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of regsvr32 where the DLL is located in a potentially suspicious location.",
    "references": [
      "https://web.archive.org/web/20171001085340/https://subt0x10.blogspot.com/2017/04/bypass-application-whitelisting-script.html",
      "https://app.any.run/tasks/34221348-072d-4b70-93f3-aa71f6ebecad/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "REGSVR32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Some installers might execute \"regsvr32\" with DLLs located in %TEMP% or in %PROGRAMDATA%. Apply additional filters if necessary."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Regsvr32 Execution From Highly Suspicious Location",
    "id": 865,
    "status": "experimental",
    "description": "Detects execution of regsvr32 where the DLL is located in a highly suspicious locations",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "REGSVR32.EXE"
        }
      ],
      "selection_path_1": {
        "CommandLine|contains": [
          ":\\PerfLogs\\",
          ":\\Temp\\",
          "\\Windows\\Registration\\CRMLog",
          "\\Windows\\System32\\com\\dmp\\",
          "\\Windows\\System32\\FxsTmp\\",
          "\\Windows\\System32\\Microsoft\\Crypto\\RSA\\MachineKeys\\",
          "\\Windows\\System32\\spool\\drivers\\color\\",
          "\\Windows\\System32\\spool\\PRINTERS\\",
          "\\Windows\\System32\\spool\\SERVERS\\",
          "\\Windows\\System32\\Tasks_Migrated\\",
          "\\Windows\\System32\\Tasks\\Microsoft\\Windows\\SyncCenter\\",
          "\\Windows\\SysWOW64\\com\\dmp\\",
          "\\Windows\\SysWOW64\\FxsTmp\\",
          "\\Windows\\SysWOW64\\Tasks\\Microsoft\\Windows\\PLA\\System\\",
          "\\Windows\\SysWOW64\\Tasks\\Microsoft\\Windows\\SyncCenter\\",
          "\\Windows\\Tasks\\",
          "\\Windows\\Tracing\\"
        ]
      },
      "selection_path_2": {
        "CommandLine|contains": [
          " \"C:\\",
          " C:\\",
          " 'C:\\",
          "D:\\"
        ]
      },
      "selection_exclude_known_dirs": {
        "CommandLine|contains": [
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\",
          "C:\\ProgramData\\",
          "C:\\Users\\",
          " C:\\Windows\\",
          " \"C:\\Windows\\",
          " 'C:\\Windows\\"
        ]
      },
      "filter_main_empty": {
        "CommandLine": ""
      },
      "filter_main_null": {
        "CommandLine": null
      },
      "condition": "selection_img and (selection_path_1 or (selection_path_2 and not selection_exclude_known_dirs)) and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Regsvr32 DLL Execution With Suspicious File Extension",
    "id": 866,
    "related": [
      {
        "id": "8e2b24c9-4add-46a0-b4bb-0057b4e6187d",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of REGSVR32.exe with DLL files masquerading as other files",
    "references": [
      "https://thedfirreport.com/2021/11/29/continuing-the-bazar-ransomware-story/",
      "https://blog.talosintelligence.com/2021/10/threat-hunting-in-large-datasets-by.html",
      "https://guides.lib.umich.edu/c.php?g=282942&p=1885348"
    ],
    "author": "Florian Roth (Nextron Systems), frack113",
    "date": "2021/11/29",
    "modified": "2023/05/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "REGSVR32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|endswith": [
          ".bin",
          ".bmp",
          ".cr2",
          ".dat",
          ".eps",
          ".gif",
          ".ico",
          ".jpeg",
          ".jpg",
          ".nef",
          ".orf",
          ".png",
          ".raw",
          ".sr2",
          ".temp",
          ".tif",
          ".tiff",
          ".tmp",
          ".rtf",
          ".txt"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Scripting/CommandLine Process Spawned Regsvr32",
    "id": 867,
    "related": [
      {
        "id": "8e2b24c9-4add-46a0-b4bb-0057b4e6187d",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects various command line and scripting engines/processes such as \"PowerShell\", \"Wscript\", \"Cmd\", etc. spawning a \"regsvr32\" instance.",
    "references": [
      "https://web.archive.org/web/20171001085340/https://subt0x10.blogspot.com/2017/04/bypass-application-whitelisting-script.html",
      "https://app.any.run/tasks/34221348-072d-4b70-93f3-aa71f6ebecad/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell_ise.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wscript.exe"
        ],
        "Image|endswith": "\\regsvr32.exe"
      },
      "filter_main_rpcproxy": {
        "ParentImage": "C:\\Windows\\System32\\cmd.exe",
        "CommandLine|endswith": " /s C:\\Windows\\System32\\RpcProxy\\RpcProxy.dll"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate \".bat\", \".hta\", \".ps1\" or \".vbs\" scripts leverage legitimately often. Apply additional filter and exclusions as necessary",
      "Some legitimate Windows services"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Regsvr32 DLL Execution With Uncommon Extension",
    "id": 868,
    "status": "test",
    "description": "Detects a \"regsvr32\" execution where the DLL doesn't contain a common file extension.",
    "references": [
      "https://app.any.run/tasks/34221348-072d-4b70-93f3-aa71f6ebecad/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/07/17",
    "modified": "2023/05/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\regsvr32.exe"
        },
        {
          "OriginalFileName": "REGSVR32.EXE"
        }
      ],
      "filter_main_legit_ext": {
        "CommandLine|contains": [
          ".ax",
          ".cpl",
          ".dll",
          ".ocx"
        ]
      },
      "filter_optional_pascal": {
        "CommandLine|contains": ".ppl"
      },
      "filter_optional_avg": {
        "CommandLine|contains": ".bav"
      },
      "filter_main_null_4688": {
        "CommandLine": null
      },
      "filter_main_empty_4688": {
        "CommandLine": ""
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Other legitimate extensions currently not in the list either from third party or specific Windows components."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Attempt Via Run Keys Using Reg.EXE",
    "id": 869,
    "status": "test",
    "description": "Detects suspicious command line reg.exe tool adding key to RUN key in Registry",
    "references": [
      "https://app.any.run/tasks/9c0f37bc-867a-4314-b685-e101566766d7/",
      "https://docs.microsoft.com/en-us/windows/win32/setupapi/run-and-runonce-registry-keys"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/06/28",
    "modified": "2023/01/30",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "reg",
          " ADD ",
          "Software\\Microsoft\\Windows\\CurrentVersion\\Run"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reasons.",
      "Legitimate administrator sets up autorun keys for legitimate reasons.",
      "Discord"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Add SafeBoot Keys Via Reg Utility",
    "id": 870,
    "related": [
      {
        "id": "fc0e89b5-adb0-43c1-b749-c12a10ec37de",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of \"reg.exe\" commands with the \"add\" or \"copy\" flags on safe boot registry keys. Often used by attacker to allow the ransomware to work in safe mode as some security products do not",
    "references": [
      "https://redacted.com/blog/bianlian-ransomware-gang-gives-it-a-go/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_safeboot": {
        "CommandLine|contains": "\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot"
      },
      "selection_flag": {
        "CommandLine|contains": [
          " copy ",
          " add "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Reg Add BitLocker",
    "id": 871,
    "status": "test",
    "description": "Detects suspicious addition to BitLocker related registry keys via the reg.exe utility",
    "references": [
      "https://thedfirreport.com/2021/11/15/exchange-exploit-leads-to-domain-wide-ransomware/"
    ],
    "author": "frack113",
    "date": "2021/11/15",
    "modified": "2022/09/09",
    "tags": [
      "attack.impact",
      "attack.t1486"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "REG",
          "ADD",
          "\\SOFTWARE\\Policies\\Microsoft\\FVE",
          "/v",
          "/f"
        ],
        "CommandLine|contains": [
          "EnableBDEWithNoTPM",
          "UseAdvancedStartup",
          "UseTPM",
          "UseTPMKey",
          "UseTPMKeyPIN",
          "RecoveryKeyMessageSource",
          "UseTPMPIN",
          "RecoveryKeyMessage"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Dropping Of Password Filter DLL",
    "id": 872,
    "status": "test",
    "description": "Detects dropping of dll files in system32 that may be used to retrieve user credentials from LSASS",
    "references": [
      "https://pentestlab.blog/2020/02/10/credential-access-password-filter-dll/",
      "https://github.com/3gstudent/PasswordFilter/tree/master/PasswordFilter"
    ],
    "author": "Sreeman",
    "date": "2020/10/29",
    "modified": "2022/10/09",
    "tags": [
      "attack.credential_access",
      "attack.t1556.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmdline": {
        "CommandLine|contains|all": [
          "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa",
          "scecli\\0*",
          "reg add"
        ]
      },
      "condition": "selection_cmdline"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Windows Defender Folder Exclusion Added Via Reg.EXE",
    "id": 873,
    "status": "test",
    "description": "Detects the usage of \"reg.exe\" to add Defender folder exclusions. Qbot has been seen using this technique to add exclusions for folders within AppData and ProgramData.",
    "references": [
      "https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/",
      "https://redcanary.com/threat-detection-report/threats/qbot/"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains": [
          "SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Paths",
          "SOFTWARE\\Microsoft\\Microsoft Antimalware\\Exclusions\\Paths"
        ],
        "CommandLine|contains|all": [
          "ADD ",
          "/t ",
          "REG_DWORD ",
          "/v ",
          "/d ",
          "0"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SafeBoot Registry Key Deleted Via Reg.EXE",
    "id": 874,
    "related": [
      {
        "id": "d7662ff6-9e97-4596-a61d-9839e32dee8d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of \"reg.exe\" commands with the \"delete\" flag on safe boot registry keys. Often used by attacker to prevent safeboot execution of security products",
    "references": [
      "https://www.trendmicro.com/en_us/research/22/e/avoslocker-ransomware-variant-abuses-driver-file-to-disable-anti-Virus-scans-log4shell.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Tim Shelton",
    "date": "2022/08/08",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_delete": {
        "CommandLine|contains|all": [
          " delete ",
          "\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Service Registry Key Deleted Via Reg.EXE",
    "id": 875,
    "status": "test",
    "description": "Detects execution of \"reg.exe\" commands with the \"delete\" flag on services registry key. Often used by attacker to remove AV software services",
    "references": [
      "https://www.virustotal.com/gui/file/2bcd5702a7565952c44075ac6fb946c7780526640d1264f692c7664c02c68465"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/01",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_delete": {
        "CommandLine|contains": " delete "
      },
      "selection_key": {
        "CommandLine|contains": "\\SYSTEM\\CurrentControlSet\\services\\"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Desktop Background Change Using Reg.EXE",
    "id": 876,
    "related": [
      {
        "id": "85b88e05-dadc-430b-8a9e-53ff1cd30aae",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of \"reg.exe\" to alter registry keys that would replace the user's desktop background.\nThis is a common technique used by malware to change the desktop background to a ransom note or other image.\n",
    "references": [
      "https://www.attackiq.com/2023/09/20/emulating-rhysida/",
      "https://research.checkpoint.com/2023/the-rhysida-ransomware-activity-analysis-and-ties-to-vice-society/",
      "https://www.trendmicro.com/en_us/research/23/h/an-overview-of-the-new-rhysida-ransomware.html",
      "https://www.virustotal.com/gui/file/a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6/behavior",
      "https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.WindowsDesktop::Wallpaper",
      "https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.ControlPanelDisplay::CPL_Personalization_NoDesktopBackgroundUI"
    ],
    "author": "Stephen Lincoln @slincoln-aiq (AttackIQ)",
    "date": "2023/12/21",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1112",
      "attack.t1491.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_reg_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_reg_flag": {
        "CommandLine|contains": "add"
      },
      "selection_keys": {
        "CommandLine|contains": [
          "Control Panel\\Desktop",
          "CurrentVersion\\Policies\\ActiveDesktop",
          "CurrentVersion\\Policies\\System"
        ]
      },
      "selection_cli_reg_1": {
        "CommandLine|contains|all": [
          "/v NoChangingWallpaper",
          "/d 1"
        ]
      },
      "selection_cli_reg_2": {
        "CommandLine|contains|all": [
          "/v Wallpaper",
          "/t REG_SZ"
        ]
      },
      "selection_cli_reg_3": {
        "CommandLine|contains|all": [
          "/v WallpaperStyle",
          "/d 2"
        ]
      },
      "condition": "all of selection_reg_* and selection_keys and 1 of selection_cli_reg_*"
    },
    "falsepositives": [
      "Administrative scripts that change the desktop background to a company logo or other image."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Direct Autorun Keys Modification",
    "id": 877,
    "status": "test",
    "description": "Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/25",
    "modified": "2022/08/04",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains": "add"
      },
      "selection_2": {
        "CommandLine|contains": [
          "\\software\\Microsoft\\Windows\\CurrentVersion\\Run",
          "\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit",
          "\\software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell",
          "\\software\\Microsoft\\Windows NT\\CurrentVersion\\Windows",
          "\\software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders",
          "\\system\\CurrentControlSet\\Control\\SafeBoot\\AlternateShell"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reasons.",
      "Legitimate administrator sets up autorun keys for legitimate reasons.",
      "Discord"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Security Service Disabled Via Reg.EXE",
    "id": 878,
    "status": "test",
    "description": "Detects execution of \"reg.exe\" to disable security services such as Windows Defender.",
    "references": [
      "https://twitter.com/JohnLaTwC/status/1415295021041979392",
      "https://github.com/gordonbay/Windows-On-Reins/blob/e587ac7a0407847865926d575e3c46f68cf7c68d/wor.ps1",
      "https://vms.drweb.fr/virus/?i=24144899",
      "https://bidouillesecurity.com/disable-windows-defender-in-powershell/"
    ],
    "author": "Florian Roth (Nextron Systems), John Lambert (idea), elhoim",
    "date": "2021/07/14",
    "modified": "2023/06/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_reg_add": {
        "CommandLine|contains|all": [
          "reg",
          "add"
        ]
      },
      "selection_cli_reg_start": {
        "CommandLine|contains|all": [
          "d 4",
          "v Start"
        ],
        "CommandLine|contains": [
          "\\AppIDSvc",
          "\\MsMpSvc",
          "\\NisSrv",
          "\\SecurityHealthService",
          "\\Sense",
          "\\UsoSvc",
          "\\WdBoot",
          "\\WdFilter",
          "\\WdNisDrv",
          "\\WdNisSvc",
          "\\WinDefend",
          "\\wscsvc",
          "\\wuauserv"
        ]
      },
      "condition": "selection_reg_add and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Dumping of Sensitive Hives Via Reg.EXE",
    "id": 879,
    "related": [
      {
        "id": "038cd51c-3ad8-41c5-ba8f-5d1c92f3cc1e",
        "type": "obsoletes"
      },
      {
        "id": "4d6c9da1-318b-4edf-bcea-b6c93fa98fd0",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the usage of \"reg.exe\" in order to dump sensitive registry hives. This includes SAM, SYSTEM and SECURITY hives.",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003/T1003.md",
      "https://www.wietzebeukema.nl/blog/windows-command-line-obfuscation",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md#atomic-test-1---registry-dump-of-sam-creds-and-secrets"
    ],
    "author": "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community, frack113",
    "date": "2019/10/22",
    "modified": "2023/12/13",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002",
      "attack.t1003.004",
      "attack.t1003.005",
      "car.2013-07-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_cli_flag": {
        "CommandLine|contains": [
          " save ",
          " export ",
          " \u00cb\u00a2ave ",
          " e\u00cb\u00a3port "
        ]
      },
      "selection_cli_hklm": {
        "CommandLine|contains": [
          "hklm",
          "hk\u00cb\u00aam",
          "hkey_local_machine",
          "hkey_\u00cb\u00aaocal_machine",
          "hkey_loca\u00cb\u00aa_machine",
          "hkey_\u00cb\u00aaoca\u00cb\u00aa_machine"
        ]
      },
      "selection_cli_hive": {
        "CommandLine|contains": [
          "\\system",
          "\\sam",
          "\\security",
          "\\\u00cb\u00a2ystem",
          "\\sy\u00cb\u00a2tem",
          "\\\u00cb\u00a2y\u00cb\u00a2tem",
          "\\\u00cb\u00a2am",
          "\\\u00cb\u00a2ecurity"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Dumping hives for legitimate purpouse i.e. backup or forensic investigation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Enumeration for Credentials in Registry",
    "id": 880,
    "status": "test",
    "description": "Adversaries may search the Registry on compromised systems for insecurely stored credentials.\nThe Windows Registry stores configuration information that can be used by the system or other programs.\nAdversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.002/T1552.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/20",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1552.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "reg": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains|all": [
          " query ",
          "/t ",
          "REG_SZ",
          "/s"
        ]
      },
      "hive": [
        {
          "CommandLine|contains|all": [
            "/f ",
            "HKLM"
          ]
        },
        {
          "CommandLine|contains|all": [
            "/f ",
            "HKCU"
          ]
        },
        {
          "CommandLine|contains": "HKCU\\Software\\SimonTatham\\PuTTY\\Sessions"
        }
      ],
      "condition": "reg and hive"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Suspicious Registry File Imported Via Reg.EXE",
    "id": 881,
    "related": [
      {
        "id": "73bba97f-a82d-42ce-b315-9182e76c57b1",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the import of '.reg' files from suspicious paths using the 'reg.exe' utility",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-import"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2022/08/01",
    "modified": "2023/02/05",
    "tags": [
      "attack.t1112",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " import "
      },
      "selection_paths": {
        "CommandLine|contains": [
          "C:\\Users\\",
          "%temp%",
          "%tmp%",
          "%appdata%",
          "\\AppData\\Local\\Temp\\",
          "C:\\Windows\\Temp\\",
          "C:\\ProgramData\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate import of keys"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "RestrictedAdminMode Registry Value Tampering - ProcCreation",
    "id": 882,
    "related": [
      {
        "id": "d6ce7ebd-260b-4323-9768-a9631c8d4db2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changes to the \"DisableRestrictedAdmin\" registry value in order to disable or enable RestrictedAdmin mode.\nRestrictedAdmin mode prevents the transmission of reusable credentials to the remote system to which you connect using Remote Desktop.\nThis prevents your credentials from being harvested during the initial connection process if the remote server has been compromise\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/a8e3cf63e97b973a25903d3df9fd55da6252e564/atomics/T1112/T1112.md",
      "https://social.technet.microsoft.com/wiki/contents/articles/32905.remote-desktop-services-enable-restricted-admin-mode.aspx"
    ],
    "author": "frack113",
    "date": "2023/01/13",
    "modified": "2023/12/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\System\\CurrentControlSet\\Control\\Lsa\\",
          "DisableRestrictedAdmin"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSA PPL Protection Disabled Via Reg.EXE",
    "id": 883,
    "status": "test",
    "description": "Detects the usage of the \"reg.exe\" utility to disable PPL protection on the LSA process",
    "references": [
      "https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/22",
    "modified": "2023/03/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.010"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "SYSTEM\\CurrentControlSet\\Control\\Lsa",
        "CommandLine|contains|all": [
          " add ",
          " /d 0",
          " /v RunAsPPL "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Query of MachineGUID",
    "id": 884,
    "status": "test",
    "description": "Use of reg to get MachineGuid information",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1082/T1082.md#atomic-test-8---windows-machineguid-discovery"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "tags": [
      "attack.discovery",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains|all": [
          "SOFTWARE\\Microsoft\\Cryptography",
          "/v ",
          "MachineGuid"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Modify Group Policy Settings",
    "id": 885,
    "related": [
      {
        "id": "b7216a7d-687e-4c8d-82b1-3080b2ad961f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect malicious GPO modifications can be used to implement many other malicious behaviors.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1484.001/T1484.001.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1484.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_reg": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_path": {
        "CommandLine|contains": "\\SOFTWARE\\Policies\\Microsoft\\Windows\\System"
      },
      "selection_key": {
        "CommandLine|contains": [
          "GroupPolicyRefreshTimeDC",
          "GroupPolicyRefreshTimeOffsetDC",
          "GroupPolicyRefreshTime",
          "GroupPolicyRefreshTimeOffset",
          "EnableSmartScreen",
          "ShellSmartScreenLevel"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Enable LM Hash Storage - ProcCreation",
    "id": 886,
    "related": [
      {
        "id": "c420410f-c2d8-4010-856b-dffe21866437",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changes to the \"NoLMHash\" registry value in order to allow Windows to store LM Hashes.\nBy setting this registry value to \"0\" (DWORD), Windows will be allowed to store a LAN manager hash of your password in Active Directory and local SAM databases.\n",
    "references": [
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a",
      "https://learn.microsoft.com/en-us/troubleshoot/windows-server/windows-security/prevent-windows-store-lm-hash-password",
      "https://www.sans.org/blog/protecting-privileged-domain-accounts-lm-hashes-the-good-the-bad-and-the-ugly/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/12/15",
    "modified": "2023/12/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\System\\CurrentControlSet\\Control\\Lsa",
          "NoLMHash",
          " 0"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Reg Add Open Command",
    "id": 887,
    "status": "test",
    "description": "Threat actors performed dumping of SAM, SECURITY and SYSTEM registry hives using DelegateExecute key",
    "references": [
      "https://thedfirreport.com/2021/12/13/diavol-ransomware/"
    ],
    "author": "frack113",
    "date": "2021/12/20",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains|all": [
          "reg",
          "add",
          "hkcu\\software\\classes\\ms-settings\\shell\\open\\command",
          "/ve ",
          "/d"
        ]
      },
      "selection_2": {
        "CommandLine|contains|all": [
          "reg",
          "add",
          "hkcu\\software\\classes\\ms-settings\\shell\\open\\command",
          "/v",
          "DelegateExecute"
        ]
      },
      "selection_3": {
        "CommandLine|contains|all": [
          "reg",
          "delete",
          "hkcu\\software\\classes\\ms-settings"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Configuration And Service Reconnaissance Via Reg.EXE",
    "id": 888,
    "status": "test",
    "description": "Detects the usage of \"reg.exe\" in order to query reconnaissance information from the registry. Adversaries may interact with the Windows registry to gather information about credentials, the system, configuration, and installed software.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1012/T1012.md"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2019/10/21",
    "modified": "2023/02/05",
    "tags": [
      "attack.discovery",
      "attack.t1012",
      "attack.t1007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": "query"
      },
      "selection_key": {
        "CommandLine|contains": [
          "currentVersion\\windows",
          "winlogon\\",
          "currentVersion\\shellServiceObjectDelayLoad",
          "currentVersion\\run",
          "currentVersion\\policies\\explorer\\run",
          "currentcontrolset\\services"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Discord"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Tampering With RDP Related Registry Keys Via Reg.EXE",
    "id": 889,
    "status": "test",
    "description": "Detects the execution of \"reg.exe\" for enabling/disabling the RDP service on the host by tampering with the 'CurrentControlSet\\Control\\Terminal Server' values",
    "references": [
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "pH-T (Nextron Systems), @Kostastsale, @TheDFIRReport",
    "date": "2022/02/12",
    "modified": "2023/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.lateral_movement",
      "attack.t1021.001",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_main_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_main_cli": {
        "CommandLine|contains|all": [
          " add ",
          "\\CurrentControlSet\\Control\\Terminal Server",
          "REG_DWORD",
          " /f"
        ]
      },
      "selection_values_1": {
        "CommandLine|contains|all": [
          "Licensing Core",
          "EnableConcurrentSessions"
        ]
      },
      "selection_values_2": {
        "CommandLine|contains": [
          "WinStations\\RDP-Tcp",
          "MaxInstanceCount",
          "fEnableWinStation",
          "TSUserEnabled",
          "TSEnabled",
          "TSAppCompat",
          "IdleWinStationPoolCount",
          "TSAdvertise",
          "AllowTSConnections",
          "fSingleSessionPerUser",
          "fDenyTSConnections"
        ]
      },
      "condition": "all of selection_main_* and 1 of selection_values_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious ScreenSave Change by Reg.exe",
    "id": 890,
    "status": "test",
    "description": "Adversaries may establish persistence by executing malicious content triggered by user inactivity.\nScreensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.002/T1546.002.md",
      "https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf"
    ],
    "author": "frack113",
    "date": "2021/08/19",
    "modified": "2022/06/02",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1546.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_reg": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains": [
          "HKEY_CURRENT_USER\\Control Panel\\Desktop",
          "HKCU\\Control Panel\\Desktop"
        ]
      },
      "selection_option_1": {
        "CommandLine|contains|all": [
          "/v ScreenSaveActive",
          "/t REG_SZ",
          "/d 1",
          "/f"
        ]
      },
      "selection_option_2": {
        "CommandLine|contains|all": [
          "/v ScreenSaveTimeout",
          "/t REG_SZ",
          "/d ",
          "/f"
        ]
      },
      "selection_option_3": {
        "CommandLine|contains|all": [
          "/v ScreenSaverIsSecure",
          "/t REG_SZ",
          "/d 0",
          "/f"
        ]
      },
      "selection_option_4": {
        "CommandLine|contains|all": [
          "/v SCRNSAVE.EXE",
          "/t REG_SZ",
          "/d ",
          ".scr",
          "/f"
        ]
      },
      "condition": "selection_reg and 1 of selection_option_*"
    },
    "falsepositives": [
      "GPO"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Changing Existing Service ImagePath Value Via Reg.EXE",
    "id": 891,
    "status": "test",
    "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\nAdversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.\nWindows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.011/T1574.011.md#atomic-test-2---service-imagepath-change-with-regexe"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "modified": "2023/02/05",
    "tags": [
      "attack.persistence",
      "attack.t1574.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains|all": [
          "add ",
          "SYSTEM\\CurrentControlSet\\Services\\",
          " ImagePath "
        ]
      },
      "selection_value": {
        "CommandLine|contains": [
          " /d ",
          " -d "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Detected Windows Software Discovery",
    "id": 892,
    "related": [
      {
        "id": "2650dd1a-eb2a-412d-ac36-83f06c4f2282",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1518/T1518.md",
      "https://github.com/harleyQu1nn/AggressorScripts"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/16",
    "modified": "2022/10/09",
    "tags": [
      "attack.discovery",
      "attack.t1518"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\reg.exe",
        "CommandLine|contains|all": [
          "query",
          "\\software\\",
          "/v",
          "svcversion"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administration activities"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Reg Add Suspicious Paths",
    "id": 893,
    "status": "test",
    "description": "Detects when an adversary uses the reg.exe utility to add or modify new keys or subkeys",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1112/T1112.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1562.001/T1562.001.md",
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/19",
    "modified": "2022/10/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_reg": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_path": {
        "CommandLine|contains": [
          "\\AppDataLow\\Software\\Microsoft\\",
          "\\Policies\\Microsoft\\Windows\\OOBE",
          "\\Policies\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon",
          "\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon",
          "\\CurrentControlSet\\Control\\SecurityProviders\\WDigest",
          "\\Microsoft\\Windows Defender\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Rare legitimate add to registry via cli (to these locations)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disabled Volume Snapshots",
    "id": 894,
    "status": "test",
    "description": "Detects commands that temporarily turn off Volume Snapshots",
    "references": [
      "https://twitter.com/0gtweet/status/1354766164166115331"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/01/28",
    "modified": "2023/12/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\Services\\VSS\\Diag",
          "/d Disabled"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administration"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Windows Defender Registry Key Tampering Via Reg.EXE",
    "id": 895,
    "status": "experimental",
    "description": "Detects the usage of \"reg.exe\" to tamper with different Windows Defender registry keys in order to disable some important features related to protection and detection",
    "references": [
      "https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/",
      "https://github.com/swagkarna/Defeat-Defender-V1.2.0",
      "https://www.elevenforum.com/t/video-guide-how-to-completely-disable-microsoft-defender-antivirus.14608/page-2"
    ],
    "author": "Florian Roth (Nextron Systems), Swachchhanda Shrawan Poudel, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/03/22",
    "modified": "2023/06/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_root_img": [
        {
          "Image|endswith": "\\reg.exe"
        },
        {
          "OriginalFileName": "reg.exe"
        }
      ],
      "selection_root_path": {
        "CommandLine|contains": [
          "SOFTWARE\\Microsoft\\Windows Defender\\",
          "SOFTWARE\\Policies\\Microsoft\\Windows Defender Security Center",
          "SOFTWARE\\Policies\\Microsoft\\Windows Defender\\"
        ]
      },
      "selection_dword_0": {
        "CommandLine|contains|all": [
          " add ",
          "d 0"
        ],
        "CommandLine|contains": [
          "DisallowExploitProtectionOverride",
          "EnableControlledFolderAccess",
          "MpEnablePus",
          "PUAProtection",
          "SpynetReporting",
          "SubmitSamplesConsent",
          "TamperProtection"
        ]
      },
      "selection_dword_1": {
        "CommandLine|contains|all": [
          " add ",
          "d 1"
        ],
        "CommandLine|contains": [
          "DisableAntiSpyware",
          "DisableAntiSpywareRealtimeProtection",
          "DisableAntiVirus",
          "DisableArchiveScanning",
          "DisableBehaviorMonitoring",
          "DisableBlockAtFirstSeen",
          "DisableConfig",
          "DisableEnhancedNotifications",
          "DisableIntrusionPreventionSystem",
          "DisableIOAVProtection",
          "DisableOnAccessProtection",
          "DisablePrivacyMode",
          "DisableRealtimeMonitoring",
          "DisableRoutinelyTakingAction",
          "DisableScanOnRealtimeEnable",
          "DisableScriptScanning",
          "Notification_Suppress",
          "SignatureDisableUpdateOnStartupWithoutEngine"
        ]
      },
      "condition": "all of selection_root_* and 1 of selection_dword_*"
    },
    "falsepositives": [
      "Rare legitimate use by administrators to test software (should always be investigated)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Write Protect For Storage Disabled",
    "id": 896,
    "status": "test",
    "description": "Detects applications trying to modify the registry in order to disable any write-protect property for storage devices.\nThis could be a precursor to a ransomware attack and has been an observed technique used by cypherpunk group.\n",
    "references": [
      "https://www.manageengine.com/products/desktop-central/os-imaging-deployment/media-is-write-protected.html"
    ],
    "author": "Sreeman",
    "date": "2021/06/11",
    "modified": "2024/01/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\System\\CurrentControlSet\\Control",
          "Write Protection",
          "0",
          "storage"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of UltraViewer Remote Access Software",
    "id": 897,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md"
    ],
    "author": "frack113",
    "date": "2022/09/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Product": "UltraViewer"
        },
        {
          "Company": "DucFabulous Co,ltd"
        },
        {
          "OriginalFileName": "UltraViewer_Desktop.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - AnyDesk Execution",
    "id": 898,
    "status": "test",
    "related": [
      {
        "id": "065b00ca-5d5c-4557-ac95-64a6d0b64d86",
        "type": "similar"
      }
    ],
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-2---anydesk-files-detected-test-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/11",
    "modified": "2023/03/05",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\AnyDesk.exe"
        },
        {
          "Description": "AnyDesk"
        },
        {
          "Product": "AnyDesk"
        },
        {
          "Company": "AnyDesk Software GmbH"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - AnyDesk Piped Password Via CLI",
    "id": 899,
    "status": "test",
    "description": "Detects piping the password to an anydesk instance via CMD and the '--set-password' flag.",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/28",
    "modified": "2023/03/05",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "/c ",
          "echo ",
          ".exe --set-password"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate piping of the password to anydesk",
      "Some FP could occur with similar tools that uses the same command line '--set-password'"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - AnyDesk Execution With Known Revoked Signing Certificate",
    "id": 900,
    "status": "experimental",
    "description": "Detects the execution of an AnyDesk binary with a version prior to 8.0.8.\nPrior to version 8.0.8, the Anydesk application used a signing certificate that got compromised by threat actors.\nUse this rule to detect instances of older versions of Anydesk using the compromised certificate\nThis is recommended in order to avoid attackers leveraging the certificate and signing their binaries to bypass detections.\n",
    "references": [
      "https://www.bleepingcomputer.com/news/security/anydesk-says-hackers-breached-its-production-servers-reset-passwords/",
      "https://anydesk.com/en/changelog/windows"
    ],
    "author": "Sai Prashanth Pulisetti, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/02/08",
    "tags": [
      "attack.execution",
      "attack.initial_access"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\AnyDesk.exe"
        },
        {
          "Description": "AnyDesk"
        },
        {
          "Product": "AnyDesk"
        },
        {
          "Company": "AnyDesk Software GmbH"
        }
      ],
      "selection_version": {
        "FileVersion|startswith": [
          "7.0.",
          "7.1.",
          "8.0.1",
          "8.0.2",
          "8.0.3",
          "8.0.4",
          "8.0.5",
          "8.0.6",
          "8.0.7"
        ]
      },
      "filter_main_uninstall": {
        "CommandLine|contains": [
          " --remove",
          " --uninstall"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - Anydesk Execution From Suspicious Folder",
    "id": 901,
    "related": [
      {
        "id": "b52e84a3-029e-4529-b09b-71d19dd27e94",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-2---anydesk-files-detected-test-on-windows"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/20",
    "modified": "2023/03/05",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\AnyDesk.exe"
        },
        {
          "Description": "AnyDesk"
        },
        {
          "Product": "AnyDesk"
        },
        {
          "Company": "AnyDesk Software GmbH"
        }
      ],
      "filter": {
        "Image|contains": [
          "\\AppData\\",
          "Program Files (x86)\\AnyDesk",
          "Program Files\\AnyDesk"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate use of AnyDesk from a non-standard folder"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Access Tool - GoToAssist Execution",
    "id": 902,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-4---gotoassist-files-detected-test-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "modified": "2023/03/05",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "GoTo Opener"
        },
        {
          "Product": "GoTo Opener"
        },
        {
          "Company": "LogMeIn, Inc."
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - LogMeIn Execution",
    "id": 903,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-3---logmein-files-detected-test-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/11",
    "modified": "2023/03/05",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "LMIGuardianSvc"
        },
        {
          "Product": "LMIGuardianSvc"
        },
        {
          "Company": "LogMeIn, Inc."
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - NetSupport Execution",
    "id": 904,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md"
    ],
    "author": "frack113",
    "date": "2022/09/25",
    "modified": "2023/03/06",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "NetSupport Client Configurator"
        },
        {
          "Product": "NetSupport Remote Control"
        },
        {
          "Company": "NetSupport Ltd"
        },
        {
          "OriginalFileName": "PCICFGUI.EXE"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - NetSupport Execution From Unusual Location",
    "id": 905,
    "status": "test",
    "description": "Detects execution of client32.exe (NetSupport RAT) from an unusual location (outside of 'C:\\Program Files')",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/19",
    "modified": "2023/03/05",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\client32.exe"
        },
        {
          "Product|contains": "NetSupport Remote Control"
        },
        {
          "OriginalFileName|contains": "client32.exe"
        },
        {
          "Imphash": "a9d50692e95b79723f3e76fcf70d023e"
        },
        {
          "Hashes|contains": "IMPHASH=a9d50692e95b79723f3e76fcf70d023e"
        }
      ],
      "filter": {
        "Image|startswith": [
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - RURAT Execution From Unusual Location",
    "id": 906,
    "status": "test",
    "description": "Detects execution of Remote Utilities RAT (RURAT) from an unusual location (outside of 'C:\\Program Files')",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/19",
    "modified": "2023/03/05",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\rutserv.exe",
            "\\rfusclient.exe"
          ]
        },
        {
          "Product": "Remote Utilities"
        }
      ],
      "filter": {
        "Image|startswith": [
          "C:\\Program Files\\Remote Utilities",
          "C:\\Program Files (x86)\\Remote Utilities"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - ScreenConnect Execution",
    "id": 907,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-5---screenconnect-application-download-and-install-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "modified": "2023/03/05",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "ScreenConnect Service"
        },
        {
          "Product": "ScreenConnect"
        },
        {
          "Company": "ScreenConnect Software"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the tool"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - ScreenConnect Installation Execution",
    "id": 908,
    "status": "test",
    "description": "Detects ScreenConnect program starts that establish a remote access to a system.",
    "references": [
      "https://www.anomali.com/blog/probable-iranian-cyber-actors-static-kitten-conducting-cyberespionage-campaign-targeting-uae-and-kuwait-government-agencies"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/02/11",
    "modified": "2024/02/26",
    "tags": [
      "attack.initial_access",
      "attack.t1133"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "e=Access&",
          "y=Guest&",
          "&p=",
          "&c=",
          "&k="
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use by administrative staff"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - ScreenConnect Remote Command Execution",
    "id": 909,
    "status": "experimental",
    "description": "Detects the execution of a system command via the ScreenConnect RMM service.",
    "references": [
      "https://github.com/SigmaHQ/sigma/pull/4467"
    ],
    "author": "Ali Alwashali",
    "date": "2023/10/10",
    "modified": "2024/02/26",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\ScreenConnect.ClientService.exe"
      },
      "selection_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "\\TEMP\\ScreenConnect\\"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of ScreenConnect. Disable this rule if ScreenConnect is heavily used."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Remote Access Tool - ScreenConnect Potential Suspicious Remote Command Execution",
    "id": 910,
    "related": [
      {
        "id": "d1a401ab-8c47-4e86-a7d8-2460b6a53e4a",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects potentially suspicious child processes launched via the ScreenConnect client service.\n",
    "references": [
      "https://www.mandiant.com/resources/telegram-malware-iranian-espionage",
      "https://docs.connectwise.com/ConnectWise_Control_Documentation/Get_started/Host_client/View_menu/Backstage_mode",
      "https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708",
      "https://www.trendmicro.com/en_us/research/24/b/threat-actor-groups-including-black-basta-are-exploiting-recent-.html"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems), @Kostastsale",
    "date": "2022/02/25",
    "modified": "2024/02/28",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentCommandLine|contains|all": [
          ":\\Windows\\TEMP\\ScreenConnect\\",
          "run.cmd"
        ],
        "Image|endswith": [
          "\\bitsadmin.exe",
          "\\cmd.exe",
          "\\curl.exe",
          "\\dllhost.exe",
          "\\net.exe",
          "\\nltest.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\rundll32.exe",
          "\\wevtutil.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "If the script being executed make use of any of the utilities mentioned in the detection then they should filtered out or allowed."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - ScreenConnect Server Web Shell Execution",
    "id": 911,
    "status": "experimental",
    "description": "Detects potential web shell execution from the ScreenConnect server process.",
    "references": [
      "https://blackpointcyber.com/resources/blog/breaking-through-the-screen/",
      "https://www.connectwise.com/company/trust/security-bulletins/connectwise-screenconnect-23.9.8"
    ],
    "author": "Jason Rathbun (Blackpoint Cyber)",
    "date": "2024/02/26",
    "tags": [
      "attack.initial_access",
      "attack.t1190"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\ScreenConnect.Service.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\csc.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Access Tool - Simple Help Execution",
    "id": 912,
    "status": "experimental",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/02/23",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "\\JWrapper-Remote Access\\",
          "\\JWrapper-Remote Support\\"
        ],
        "Image|endswith": "\\SimpleService.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the tool"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Discovery of a System Time",
    "id": 913,
    "status": "test",
    "description": "Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/fcdb99c2-ac3c-4bde-b664-4b336329bed2.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1124/T1124.md"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2019/10/24",
    "modified": "2022/06/28",
    "tags": [
      "attack.discovery",
      "attack.t1124"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_time": {
        "Image|endswith": [
          "\\net.exe",
          "\\net1.exe"
        ],
        "CommandLine|contains": "time"
      },
      "selection_w32tm": {
        "Image|endswith": "\\w32tm.exe",
        "CommandLine|contains": "tz"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the system utilities to discover system time for legitimate reason"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Renamed AdFind Execution",
    "id": 914,
    "status": "test",
    "description": "Detects the use of a renamed Adfind.exe. AdFind continues to be seen across majority of breaches. It is used to domain trust discovery to plan out subsequent steps in the attack chain.",
    "references": [
      "https://www.joeware.net/freetools/tools/adfind/",
      "https://thedfirreport.com/2020/05/08/adfind-recon/",
      "https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/",
      "https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/",
      "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx",
      "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/bf62ece1c679b07b5fb49c4bae947fe24c81811f/fin6/Emulation_Plan/Phase1.md"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/08/21",
    "modified": "2023/02/14",
    "tags": [
      "attack.discovery",
      "attack.t1018",
      "attack.t1087.002",
      "attack.t1482",
      "attack.t1069.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": [
          "domainlist",
          "trustdmp",
          "dcmodes",
          "adinfo",
          " dclist ",
          "computer_pwdnotreqd",
          "objectcategory=",
          "-subnets -f",
          "name=\"Domain Admins\"",
          "-sc u:",
          "domainncs",
          "dompol",
          " oudmp ",
          "subnetdmp",
          "gpodmp",
          "fspdmp",
          "users_noexpire",
          "computers_active",
          "computers_pwdnotreqd"
        ]
      },
      "selection_2": [
        {
          "Imphash": [
            "bca5675746d13a1f246e2da3c2217492",
            "53e117a96057eaf19c41380d0e87f1c2"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=BCA5675746D13A1F246E2DA3C2217492",
            "IMPHASH=53E117A96057EAF19C41380D0E87F1C2"
          ]
        }
      ],
      "selection_3": {
        "OriginalFileName": "AdFind.exe"
      },
      "filter": {
        "Image|endswith": "\\AdFind.exe"
      },
      "condition": "1 of selection* and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed AutoHotkey.EXE Execution",
    "id": 915,
    "status": "test",
    "description": "Detects execution of a renamed autohotkey.exe binary based on PE metadata fields",
    "references": [
      "https://www.autohotkey.com/download/",
      "https://thedfirreport.com/2023/02/06/collect-exfiltrate-sleep-repeat/"
    ],
    "author": "Nasreddine Bencherchali",
    "date": "2023/02/07",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Product|contains": "AutoHotkey"
        },
        {
          "Description|contains": "AutoHotkey"
        },
        {
          "OriginalFileName": [
            "AutoHotkey.exe",
            "AutoHotkey.rc"
          ]
        }
      ],
      "filter": [
        {
          "Image|endswith": [
            "\\AutoHotkey.exe",
            "\\AutoHotkey32.exe",
            "\\AutoHotkey32_UIA.exe",
            "\\AutoHotkey64.exe",
            "\\AutoHotkey64_UIA.exe",
            "\\AutoHotkeyA32.exe",
            "\\AutoHotkeyA32_UIA.exe",
            "\\AutoHotkeyU32.exe",
            "\\AutoHotkeyU32_UIA.exe",
            "\\AutoHotkeyU64.exe",
            "\\AutoHotkeyU64_UIA.exe"
          ]
        },
        {
          "Image|contains": "\\AutoHotkey"
        }
      ],
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Renamed AutoIt Execution",
    "id": 916,
    "status": "experimental",
    "description": "Detects the execution of a renamed AutoIt2.exe or AutoIt3.exe.\nAutoIt is a scripting language and automation tool for Windows systems. While primarily used for legitimate automation tasks, it can be misused in cyber attacks.\nAttackers can leverage AutoIt to create and distribute malware, including keyloggers, spyware, and botnets. A renamed AutoIt executable is particularly suspicious.\n",
    "references": [
      "https://twitter.com/malmoeb/status/1665463817130725378?s=12&t=C0_T_re0wRP_NfKa27Xw9w",
      "https://www.autoitscript.com/site/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/06/04",
    "modified": "2023/09/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": [
          " /AutoIt3ExecuteScript",
          " /ErrorStdOut"
        ]
      },
      "selection_2": [
        {
          "Imphash": [
            "fdc554b3a8683918d731685855683ddf",
            "cd30a61b60b3d60cecdb034c8c83c290",
            "f8a00c72f2d667d2edbb234d0c0ae000"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=FDC554B3A8683918D731685855683DDF",
            "IMPHASH=CD30A61B60B3D60CECDB034C8C83C290",
            "IMPHASH=F8A00C72F2D667D2EDBB234D0C0AE000"
          ]
        }
      ],
      "selection_3": {
        "OriginalFileName": [
          "AutoIt3.exe",
          "AutoIt2.exe",
          "AutoIt.exe"
        ]
      },
      "filter_main_legit_name": {
        "Image|endswith": [
          "\\AutoIt.exe",
          "\\AutoIt2.exe",
          "\\AutoIt3_x64.exe",
          "\\AutoIt3.exe"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Defense Evasion Via Binary Rename",
    "id": 917,
    "related": [
      {
        "id": "0ba1da6d-b6ce-4366-828c-18826c9de23e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.",
    "references": [
      "https://mgreen27.github.io/posts/2019/05/12/BinaryRename.html",
      "https://mgreen27.github.io/posts/2019/05/29/BinaryRename2.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1036.003/T1036.003.md#atomic-test-1---masquerading-as-windows-lsass-process"
    ],
    "author": "Matthew Green @mgreen27, Ecco, James Pemberton @4A616D6573, oscd.community, Andreas Hunkeler (@Karneades)",
    "date": "2019/06/15",
    "modified": "2023/01/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": [
          "Cmd.Exe",
          "CONHOST.EXE",
          "7z.exe",
          "WinRAR.exe",
          "wevtutil.exe",
          "net.exe",
          "net1.exe",
          "netsh.exe",
          "InstallUtil.exe"
        ]
      },
      "filter": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\conhost.exe",
          "\\7z.exe",
          "\\WinRAR.exe",
          "\\wevtutil.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\netsh.exe",
          "\\InstallUtil.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Custom applications use renamed binaries adding slight change to binary name. Typically this is easy to spot and add to whitelist"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Defense Evasion Via Rename Of Highly Relevant Binaries",
    "id": 918,
    "related": [
      {
        "id": "36480ae1-a1cb-4eaa-a0d6-29801d7e9142",
        "type": "similar"
      },
      {
        "id": "2569ed8c-1147-498a-9b8c-2ad3656b10ed",
        "type": "derived"
      },
      {
        "id": "a7a7e0e5-1d57-49df-9c58-9fe5bc0346a2",
        "type": "obsoletes"
      },
      {
        "id": "d178a2d7-129a-4ba4-8ee6-d6e1fecd5d20",
        "type": "obsoletes"
      },
      {
        "id": "d4d2574f-ac17-4d9e-b986-aeeae0dc8fe2",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.",
    "references": [
      "https://mgreen27.github.io/posts/2019/05/12/BinaryRename.html",
      "https://mgreen27.github.io/posts/2019/05/29/BinaryRename2.html",
      "https://www.trendmicro.com/vinfo/hk-en/security/news/cybercrime-and-digital-threats/megacortex-ransomware-spotted-attacking-enterprise-networks",
      "https://twitter.com/christophetd/status/1164506034720952320",
      "https://threatresearch.ext.hp.com/svcready-a-new-loader-reveals-itself/"
    ],
    "author": "Matthew Green - @mgreen27, Florian Roth (Nextron Systems), frack113",
    "date": "2019/06/15",
    "modified": "2023/08/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003",
      "car.2013-05-009"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "Execute processes remotely"
        },
        {
          "Product": "Sysinternals PsExec"
        },
        {
          "Description|startswith": [
            "Windows PowerShell",
            "pwsh"
          ]
        },
        {
          "OriginalFileName": [
            "certutil.exe",
            "cmstp.exe",
            "cscript.exe",
            "mshta.exe",
            "msiexec.exe",
            "powershell_ise.exe",
            "powershell.exe",
            "psexec.c",
            "psexec.exe",
            "psexesvc.exe",
            "pwsh.dll",
            "reg.exe",
            "regsvr32.exe",
            "rundll32.exe",
            "WerMgr",
            "wmic.exe",
            "wscript.exe"
          ]
        }
      ],
      "filter": {
        "Image|endswith": [
          "\\certutil.exe",
          "\\cmstp.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\msiexec.exe",
          "\\powershell_ise.exe",
          "\\powershell.exe",
          "\\psexec.exe",
          "\\psexec64.exe",
          "\\PSEXESVC.exe",
          "\\pwsh.exe",
          "\\reg.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wermgr.exe",
          "\\wmic.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Custom applications use renamed binaries adding slight change to binary name. Typically this is easy to spot and add to whitelist",
      "PsExec installed via Windows Store doesn't contain original filename field (False negative)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed BrowserCore.EXE Execution",
    "id": 919,
    "status": "test",
    "description": "Detects process creation with a renamed BrowserCore.exe (used to extract Azure tokens)",
    "references": [
      "https://twitter.com/mariuszbit/status/1531631015139102720"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2022/06/02",
    "modified": "2023/02/03",
    "tags": [
      "attack.t1528",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "BrowserCore.exe"
      },
      "filter_realbrowsercore": {
        "Image|endswith": "\\BrowserCore.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Cloudflared.EXE Execution",
    "id": 920,
    "status": "experimental",
    "description": "Detects the execution of a renamed \"cloudflared\" binary.",
    "references": [
      "https://github.com/cloudflare/cloudflared/releases",
      "https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/do-more-with-tunnels/trycloudflare/",
      "https://github.com/cloudflare/cloudflared",
      "https://www.intrinsec.com/akira_ransomware/",
      "https://www.guidepointsecurity.com/blog/tunnel-vision-cloudflared-abused-in-the-wild/"
    ],
    "tags": [
      "attack.command_and_control",
      "attack.t1090.001"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/12/20",
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cleanup": {
        "CommandLine|contains|all": [
          " tunnel ",
          "cleanup "
        ],
        "CommandLine|contains": [
          "-config ",
          "-connector-id "
        ]
      },
      "selection_tunnel": {
        "CommandLine|contains|all": [
          " tunnel ",
          " run "
        ],
        "CommandLine|contains": [
          "-config ",
          "-credentials-contents ",
          "-credentials-file ",
          "-token "
        ]
      },
      "selection_accountless": {
        "CommandLine|contains|all": [
          "-url",
          "tunnel"
        ]
      },
      "selection_hashes": {
        "Hashes|contains": [
          "SHA256=2fb6c04c4f95fb8d158af94c137f90ac820716deaf88d8ebec956254e046cb29",
          "SHA256=b3d21940a10fdef5e415ad70331ce257c24fe3bcf7722262302e0421791f87e8",
          "SHA256=1fbd8362b2d2d2e6a5750ae3db69cd1815e6c1d31da48a98b796450971a8e039",
          "SHA256=0409c9b12f9d0eda86e461ed9bdabeefb00172b26322079681a0bdf48e68dc28",
          "SHA256=7cfb411d04bac42ef93d1f0c93c0a481e38c6f4612b97ae89d4702595988edc7",
          "SHA256=5b3c2d846ab162dc6bc595cce3a49de5731afde5d6060be7066d21b013a28373",
          "SHA256=ce95df7f69664c3df19b76028e115931919a71517b776da7b42d353e2ff4a670",
          "SHA256=1293525a19cfe3bc8296b62fbfe19f083632ed644a1c18c10b045a1d3030d81a",
          "SHA256=af2b9161cfcb654b16408cd6b098afe9d1fb61a037d18d7090a119d4c0c8e0f0",
          "SHA256=39ddceb56a15798826a5fc4892fa2b474c444bb4d7a8bf2fa95e41cab10fa7a1",
          "SHA256=ccd11f2328023a0e7929e845d5b6e7bc783fb4650d65faef3ae090239d4bbce2",
          "SHA256=b6e5c5d2567ae8c69cc012ebcae30e6c9b5359d64a58d17ba75ec89f8bce71ac",
          "SHA256=f813484ea441404f18caad96f28138e8aaf0cb256163c09c2ab8a3acab87f69f",
          "SHA256=fc4a0802ab9c7409b892ca00636bec61e2acfc911bccfdeb9978b8ab5a2f828d",
          "SHA256=083150724b49604c8765c1ba19541fa260b133be0acb0647fcd936d81f054499",
          "SHA256=44303d6572956f28a0f2e4b188934fb9874f2584f5c81fa431a463cfbf28083b",
          "SHA256=5d38c46032a58e28ae5f7d174d8761ec3d64d186677f3ec53af5f51afb9bfd2f",
          "SHA256=e1e70fa42059911bc6685fafef957f9a73fc66f214d0704a9b932683a5204032",
          "SHA256=c01356092a365b84f84f0e66870bd1a05ba3feb53cafd973fa5fea2534bee234",
          "SHA256=b3f9c06151e30ee43d39e788a79cd918a314f24e04fe87f3de8272a2057b624f",
          "SHA256=cd81b2792f0739f473c31c9cb7cf2313154bfa28b839975802b90e8790bb5058",
          "SHA256=9ec7e6c8e1bfd883663d8d9d62c9e4f9ae373b731407181e32491b27a7218a2c",
          "SHA256=c2cfd23fdc6c0e1b1ffa0e545cbe556f18d11b362b4a89ba0713f6ab01c4827f",
          "SHA256=53f8adbd76c0eb16f5e43cadde422474d8a06f9c8f959389c1930042ad8beaa5",
          "SHA256=648c8d2f8001c113d2986dd00b7bbd181593d462bef73522cee212c4f71f95b3",
          "SHA256=ae047e2095e46c3f9c518b2be67ec753f4f0aad23b261a361fcb6144dcdb63b4",
          "SHA256=3153d2baa462978dd22ab33d1c2274ecc88c200225d6a3327f98d5b752d08f5c",
          "SHA256=f49cde976e628012c9db73e1c8d76081944ecf2297cdafeb78bb13290da274c4",
          "SHA256=d2513e58bb03ccc83affde685c6ef987924c37ce6707d8e9857e2524b0d7e90f",
          "SHA256=bb67c7623ba92fe64ffd9816b8d5b3b1ea3013960a30bd4cf6e295b3eb5b1bad",
          "SHA256=b34b3c3a91e3165d1481f0b3ec23eab93a1cfba94345a6cbfe5b18ddbd48eac7",
          "SHA256=f7848034e010d55f15e474ca998f96391e320ff29b00cfcc4c5e536529703e75",
          "SHA256=b6fc9493778cbe3bfc062d73f5cc604bc0ff058bc5e5dc6aac87f3a4008b54b6",
          "SHA256=f5c5e962577e2293c4ad10603816dce7cc273585969615fbf4e4bfa9eaff1688",
          "SHA256=d14c52d9220b606f428a8fe9f7c108b0d6f14cf71e7384749e98e6a95962e68f",
          "SHA256=d3a0e1a79158f3985cd49607ebe0cdfcc49cb9af96b8f43aefd0cdfe2f22e663",
          "SHA256=2fbbfc8299537ff80cadf9d0e27c223fe0ccb9052bf9d8763ad717bbfa521c77",
          "SHA256=19074674c6fbdaa573b3081745e5e26144fdf7a086d14e0e220d1814f1f13078"
        ]
      },
      "filter_main_known_names": {
        "Image|endswith": [
          "\\cloudflared.exe",
          "\\cloudflared-windows-386.exe",
          "\\cloudflared-windows-amd64.exe"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed CreateDump Utility Execution",
    "id": 921,
    "related": [
      {
        "id": "515c8be5-e5df-4c5e-8f6d-a4a2f05e4b48",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects uses of a renamed legitimate createdump.exe LOLOBIN utility to dump process memory",
    "references": [
      "https://www.crowdstrike.com/blog/overwatch-exposes-aquatic-panda-in-possession-of-log-4-shell-exploit-tools/",
      "https://twitter.com/bopin2020/status/1366400799199272960"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/20",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": {
        "OriginalFileName": "FX_VER_INTERNALNAME_STR"
      },
      "selection_cli": [
        {
          "CommandLine|contains|all": [
            " -u ",
            " -f ",
            ".dmp"
          ]
        },
        {
          "CommandLine|contains|all": [
            " --full ",
            " --name ",
            ".dmp"
          ]
        }
      ],
      "filter": {
        "Image|endswith": "\\createdump.exe"
      },
      "condition": "1 of selection_* and not filter"
    },
    "falsepositives": [
      "Command lines that use the same flags"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed CURL.EXE Execution",
    "id": 922,
    "status": "experimental",
    "description": "Detects the execution of a renamed \"CURL.exe\" binary based on the PE metadata fields",
    "references": [
      "https://twitter.com/Kostastsale/status/1700965142828290260"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/09/11",
    "modified": "2023/10/12",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "curl.exe"
        },
        {
          "Description": "The curl executable"
        }
      ],
      "filter_main_img": {
        "Image|contains": "\\curl"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Renamed ZOHO Dctask64 Execution",
    "id": 923,
    "status": "test",
    "description": "Detects a renamed dctask64.exe used for process injection, command execution, process creation with a signed binary by ZOHO Corporation",
    "references": [
      "https://twitter.com/gN3mes1s/status/1222088214581825540",
      "https://twitter.com/gN3mes1s/status/1222095963789111296",
      "https://twitter.com/gN3mes1s/status/1222095371175911424"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/01/28",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1055.001",
      "attack.t1202",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Hashes|contains": "6834B1B94E49701D77CCB3C0895E1AFD"
      },
      "filter": {
        "Image|endswith": "\\dctask64.exe"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "ParentImage"
    ],
    "falsepositives": [
      "Unknown yet"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed FTP.EXE Execution",
    "id": 924,
    "status": "test",
    "description": "Detects the execution of a renamed \"ftp.exe\" binary based on the PE metadata fields",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Ftp/"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2020/10/09",
    "modified": "2023/02/03",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_original": {
        "OriginalFileName": "ftp.exe"
      },
      "filter_img": {
        "Image|endswith": "\\ftp.exe"
      },
      "condition": "selection_original and not filter_img"
    },
    "fields": [
      "CommandLine",
      "ParentImage"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Renamed Gpg.EXE Execution",
    "id": 925,
    "status": "experimental",
    "description": "Detects the execution of a renamed \"gpg.exe\". Often used by ransomware and loaders to decrypt/encrypt data.",
    "references": [
      "https://securelist.com/locked-out/68960/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2023/08/09",
    "tags": [
      "attack.impact",
      "attack.t1486"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "gpg.exe"
      },
      "filter_main_img": {
        "Image|endswith": [
          "\\gpg.exe",
          "\\gpg2.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Jusched.EXE Execution",
    "id": 926,
    "status": "test",
    "description": "Detects the execution of a renamed \"jusched.exe\" as seen used by the cobalt group",
    "references": [
      "https://www.bitdefender.com/files/News/CaseStudies/study/262/Bitdefender-WhitePaper-An-APT-Blueprint-Gaining-New-Visibility-into-Financial-Threats-interactive.pdf"
    ],
    "author": "Markus Neis, Swisscom",
    "date": "2019/06/04",
    "modified": "2023/02/03",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Description": [
          "Java Update Scheduler",
          "Java(TM) Update Scheduler"
        ]
      },
      "filter": {
        "Image|endswith": "\\jusched.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Mavinject.EXE Execution",
    "id": 927,
    "status": "test",
    "description": "Detects the execution of a renamed version of the \"Mavinject\" process. Which can be abused to perform process injection using the \"/INJECTRUNNING\" flag",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.004/T1056.004.md",
      "https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e",
      "https://twitter.com/gN3mes1s/status/941315826107510784",
      "https://reaqta.com/2017/12/mavinject-microsoft-injector/",
      "https://twitter.com/Hexacorn/status/776122138063409152",
      "https://github.com/SigmaHQ/sigma/issues/3742",
      "https://github.com/keyboardcrunch/SentinelOne-ATTACK-Queries/blob/6a228d23eefe963ca81f2d52f94b815f61ef5ee0/Tactics/DefenseEvasion.md#t1055-process-injection"
    ],
    "author": "frack113, Florian Roth",
    "date": "2022/12/05",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055.001",
      "attack.t1218.013"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": [
          "mavinject32.exe",
          "mavinject64.exe"
        ]
      },
      "filter": {
        "Image|endswith": [
          "\\mavinject32.exe",
          "\\mavinject64.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed MegaSync Execution",
    "id": 928,
    "status": "test",
    "description": "Detects the execution of a renamed MegaSync.exe as seen used by ransomware families like Nefilim, Sodinokibi, Pysa, and Conti.",
    "references": [
      "https://redcanary.com/blog/rclone-mega-extortion/"
    ],
    "author": "Sittikorn S",
    "date": "2021/06/22",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "megasync.exe"
      },
      "filter": {
        "Image|endswith": "\\megasync.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Software that illegally integrates MegaSync in a renamed form",
      "Administrators that have renamed MegaSync"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Msdt.EXE Execution",
    "id": 929,
    "status": "test",
    "description": "Detects the execution of a renamed \"Msdt.exe\" binary",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Msdt/"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2022/06/03",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "msdt.exe"
      },
      "filter": {
        "Image|endswith": "\\msdt.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed NetSupport RAT Execution",
    "id": 930,
    "status": "test",
    "description": "Detects the execution of a renamed \"client32.exe\" (NetSupport RAT) via Imphash, Product and OriginalFileName strings",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/19",
    "modified": "2023/02/04",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Product|contains": "NetSupport Remote Control"
        },
        {
          "OriginalFileName|contains": "client32.exe"
        },
        {
          "Imphash": "a9d50692e95b79723f3e76fcf70d023e"
        },
        {
          "Hashes|contains": "IMPHASH=A9D50692E95B79723F3E76FCF70D023E"
        }
      ],
      "filter": {
        "Image|endswith": "\\client32.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Office Binary Execution",
    "id": 931,
    "status": "test",
    "description": "Detects the execution of a renamed office binary",
    "references": [
      "https://infosec.exchange/@sbousseaden/109542254124022664"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/20",
    "modified": "2023/11/13",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": [
            "Excel.exe",
            "MSACCESS.EXE",
            "MSPUB.EXE",
            "OneNote.exe",
            "OneNoteM.exe",
            "OUTLOOK.EXE",
            "POWERPNT.EXE",
            "WinWord.exe"
          ]
        },
        {
          "Description": [
            "Microsoft Access",
            "Microsoft Excel",
            "Microsoft OneNote",
            "Microsoft Outlook",
            "Microsoft PowerPoint",
            "Microsoft Publisher",
            "Microsoft Word",
            "Sent to OneNote Tool"
          ]
        }
      ],
      "filter_main_legit_names": {
        "Image|endswith": [
          "\\EXCEL.exe",
          "\\excelcnv.exe",
          "\\MSACCESS.exe",
          "\\MSPUB.EXE",
          "\\ONENOTE.EXE",
          "\\ONENOTEM.EXE",
          "\\OUTLOOK.EXE",
          "\\POWERPNT.EXE",
          "\\WINWORD.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed PAExec Execution",
    "id": 932,
    "related": [
      {
        "id": "7b0666ad-3e38-4e3d-9bab-78b06de85f7b",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of renamed version of PAExec. Often used by attackers",
    "references": [
      "https://www.poweradmin.com/paexec/",
      "https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s05-att&cking-fin7.pdf"
    ],
    "author": "Florian Roth (Nextron Systems), Jason Lynch",
    "date": "2021/05/22",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "PAExec Application"
        },
        {
          "OriginalFileName": "PAExec.exe"
        },
        {
          "Product|contains": "PAExec"
        },
        {
          "Imphash": [
            "11D40A7B7876288F919AB819CC2D9802",
            "6444f8a34e99b8f7d9647de66aabe516",
            "dfd6aa3f7b2b1035b76b718f1ddc689f",
            "1a6cca4d5460b1710a12dea39e4a592c"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=11D40A7B7876288F919AB819CC2D9802",
            "IMPHASH=6444f8a34e99b8f7d9647de66aabe516",
            "IMPHASH=dfd6aa3f7b2b1035b76b718f1ddc689f",
            "IMPHASH=1a6cca4d5460b1710a12dea39e4a592c"
          ]
        }
      ],
      "filter": [
        {
          "Image|endswith": "\\paexec.exe"
        },
        {
          "Image|startswith": "C:\\Windows\\PAExec-"
        }
      ],
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Weird admins that rename their tools",
      "Software companies that bundle PAExec with their software and rename it, so that it is less embarrassing",
      "When executed with the \"-s\" flag. PAExec will copy itself to the \"C:\\Windows\\\" directory with a different name. Usually like this \"PAExec-[XXXXX]-[ComputerName]\""
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed PingCastle Binary Execution",
    "id": 933,
    "status": "experimental",
    "description": "Detects the execution of a renamed \"PingCastle\" binary based on the PE metadata fields.",
    "references": [
      "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
      "https://www.pingcastle.com/documentation/scanner/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2024/01/11",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": [
            "PingCastleReporting.exe",
            "PingCastleCloud.exe",
            "PingCastle.exe"
          ]
        },
        {
          "CommandLine|contains": [
            "--scanner aclcheck",
            "--scanner antivirus",
            "--scanner computerversion",
            "--scanner foreignusers",
            "--scanner laps_bitlocker",
            "--scanner localadmin",
            "--scanner nullsession",
            "--scanner nullsession-trust",
            "--scanner oxidbindings",
            "--scanner remote",
            "--scanner share",
            "--scanner smb",
            "--scanner smb3querynetwork",
            "--scanner spooler",
            "--scanner startup",
            "--scanner zerologon"
          ]
        },
        {
          "CommandLine|contains": "--no-enum-limit"
        },
        {
          "CommandLine|contains|all": [
            "--healthcheck",
            "--level Full"
          ]
        },
        {
          "CommandLine|contains|all": [
            "--healthcheck",
            "--server "
          ]
        }
      ],
      "filter_main_img": {
        "Image|endswith": [
          "\\PingCastleReporting.exe",
          "\\PingCastleCloud.exe",
          "\\PingCastle.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Plink Execution",
    "id": 934,
    "status": "test",
    "description": "Detects the execution of a renamed version of the Plink binary",
    "references": [
      "https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/",
      "https://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter7.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/06",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "Plink"
        },
        {
          "CommandLine|contains|all": [
            " -l forward",
            " -P ",
            " -R "
          ]
        }
      ],
      "filter": {
        "Image|endswith": "\\plink.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Visual Studio NodejsTools PressAnyKey Renamed Execution",
    "id": 935,
    "related": [
      {
        "id": "a20391f8-76fb-437b-abc0-dba2df1952c6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects renamed execution of \"Microsoft.NodejsTools.PressAnyKey.exe\", which can be abused as a LOLBIN to execute arbitrary binaries",
    "references": [
      "https://twitter.com/mrd0x/status/1463526834918854661",
      "https://gist.github.com/nasbench/a989ce64cefa8081bd50cf6ad8c491b5"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2023/04/11",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "Microsoft.NodejsTools.PressAnyKey.exe"
      },
      "filter_main_legit_name": {
        "Image|endswith": "\\Microsoft.NodejsTools.PressAnyKey.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Renamed Rundll32 Execution",
    "id": 936,
    "related": [
      {
        "id": "0ba1da6d-b6ce-4366-828c-18826c9de23e",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects when 'DllRegisterServer' is called in the commandline and the image is not rundll32. This could mean that the 'rundll32' utility has been renamed in order to avoid detection",
    "references": [
      "https://twitter.com/swisscom_csirt/status/1331634525722521602?s=20",
      "https://app.any.run/tasks/f74c5157-8508-4ac6-9805-d63fe7b0d399/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/22",
    "modified": "2023/02/03",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "DllRegisterServer"
      },
      "filter": {
        "Image|endswith": "\\rundll32.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Remote Utilities RAT (RURAT) Execution",
    "id": 937,
    "status": "test",
    "description": "Detects execution of renamed Remote Utilities (RURAT) via Product PE header field",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/19",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.collection",
      "attack.command_and_control",
      "attack.discovery",
      "attack.s0592"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Product": "Remote Utilities"
      },
      "filter": {
        "Image|endswith": [
          "\\rutserv.exe",
          "\\rfusclient.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Renamed SysInternals DebugView Execution",
    "id": 938,
    "status": "test",
    "description": "Detects suspicious renamed SysInternals DebugView execution",
    "references": [
      "https://www.epicturla.com/blog/sysinturla"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/05/28",
    "modified": "2023/02/14",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Product": "Sysinternals DebugView"
      },
      "filter": {
        "OriginalFileName": "Dbgview.exe",
        "Image|endswith": "\\Dbgview.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed ProcDump Execution",
    "id": 939,
    "related": [
      {
        "id": "03795938-1387-481b-9f4c-3f6241e604fe",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the execution of a renamed ProcDump executable often used by attackers or malware",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/procdump"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/11/18",
    "modified": "2022/12/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_org": {
        "OriginalFileName": "procdump"
      },
      "selection_args_ma": {
        "CommandLine|contains": [
          " -ma ",
          " /ma "
        ]
      },
      "selection_args_other": {
        "CommandLine|contains": [
          " -accepteula ",
          " /accepteula "
        ]
      },
      "filter": {
        "Image|endswith": [
          "\\procdump.exe",
          "\\procdump64.exe"
        ]
      },
      "condition": "(selection_org or all of selection_args_*) and not filter"
    },
    "falsepositives": [
      "Procdump illegaly bundled with legitimate software",
      "Administrators who rename binaries (should be investigated)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed PsExec Service Execution",
    "id": 940,
    "status": "test",
    "description": "Detects suspicious launch of a renamed version of the PSEXESVC service with, which is not often used by legitimate administrators",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",
      "https://www.youtube.com/watch?v=ro2QuZTIMBM"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/21",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "psexesvc.exe"
      },
      "filter": {
        "Image": "C:\\Windows\\PSEXESVC.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate administrative tasks"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Sysinternals Sdelete Execution",
    "id": 941,
    "status": "test",
    "description": "Detects the use of a renamed SysInternals Sdelete, which is something an administrator shouldn't do (the renaming)",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1485/T1485.md"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/09/06",
    "modified": "2023/02/03",
    "tags": [
      "attack.impact",
      "attack.t1485"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "sdelete.exe"
      },
      "filter": {
        "Image|endswith": [
          "\\sdelete.exe",
          "\\sdelete64.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "System administrator usage"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Vmnat.exe Execution",
    "id": 942,
    "status": "test",
    "description": "Detects renamed vmnat.exe or portable version that can be used for DLL side-loading",
    "references": [
      "https://twitter.com/malmoeb/status/1525901219247845376"
    ],
    "author": "elhoim",
    "date": "2022/09/09",
    "modified": "2023/02/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "vmnat.exe"
      },
      "filter_rename": {
        "Image|endswith": "vmnat.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Renamed Whoami Execution",
    "id": 943,
    "status": "test",
    "description": "Detects the execution of whoami that has been renamed to a different name to avoid detection",
    "references": [
      "https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/",
      "https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "whoami.exe"
      },
      "filter": {
        "Image|endswith": "\\whoami.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Capture Credentials with Rpcping.exe",
    "id": 944,
    "status": "test",
    "description": "Detects using Rpcping.exe to send a RPC test connection to the target server (-s) and force the NTLM hash to be sent in the process.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Rpcping/",
      "https://twitter.com/vysecurity/status/974806438316072960",
      "https://twitter.com/vysecurity/status/873181705024266241",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh875578(v=ws.11)"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/09",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "use_rpcping": {
        "Image|endswith": "\\rpcping.exe"
      },
      "remote_server": {
        "CommandLine|contains": [
          "-s",
          "/s"
        ]
      },
      "ntlm_auth": [
        {
          "CommandLine|contains|all": [
            "-u",
            "NTLM"
          ]
        },
        {
          "CommandLine|contains|all": [
            "/u",
            "NTLM"
          ]
        },
        {
          "CommandLine|contains|all": [
            "-t",
            "ncacn_np"
          ]
        },
        {
          "CommandLine|contains|all": [
            "/t",
            "ncacn_np"
          ]
        }
      ],
      "condition": "use_rpcping and remote_server and ntlm_auth"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Ruby Inline Command Execution",
    "id": 945,
    "status": "test",
    "description": "Detects execution of ruby using the \"-e\" flag. This is could be used as a way to launch a reverse shell or execute live ruby code.",
    "references": [
      "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet",
      "https://www.revshells.com/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ruby.exe"
        },
        {
          "OriginalFileName": "ruby.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -e"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Rundll32 Execution With DLL Stored In ADS",
    "id": 946,
    "status": "test",
    "description": "Detects execution of rundll32 where the DLL being called is stored in an Alternate Data Stream (ADS).",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Rundll32"
    ],
    "author": "Harjot Singh, '@cyb3rjy0t'",
    "date": "2023/01/21",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|re": "[Rr][Uu][Nn][Dd][Ll][Ll]32(\\.[Ee][Xx][Ee])? \\S+?\\w:\\S+?:"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Advpack Call Via Rundll32.EXE",
    "id": 947,
    "status": "experimental",
    "description": "Detects execution of \"rundll32\" calling \"advpack.dll\" with potential obfuscated ordinal calls in order to leverage the \"RegisterOCX\" function",
    "references": [
      "https://twitter.com/Hexacorn/status/1224848930795552769",
      "http://www.hexacorn.com/blog/2020/02/05/stay-positive-lolbins-not/"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        },
        {
          "CommandLine|contains": "rundll32"
        }
      ],
      "selection_cli_dll": {
        "CommandLine|contains": "advpack"
      },
      "selection_cli_ordinal": [
        {
          "CommandLine|contains|all": [
            "#+",
            "12"
          ]
        },
        {
          "CommandLine|contains": "#-"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Call by Ordinal",
    "id": 948,
    "status": "stable",
    "description": "Detects suspicious calls of DLLs in rundll32.dll exports by ordinal",
    "references": [
      "https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/",
      "https://github.com/Neo23x0/DLLRunner",
      "https://twitter.com/cyb3rops/status/1186631731543236608",
      "https://www.welivesecurity.com/2022/03/01/isaacwiper-hermeticwizard-wiper-worm-targeting-ukraine/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/10/22",
    "modified": "2023/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          ",#",
          ", #",
          ".dll #",
          ".ocx #"
        ]
      },
      "filter_edge": {
        "CommandLine|contains|all": [
          "EDGEHTML.dll",
          "#141"
        ]
      },
      "filter_vsbuild_dll": {
        "ParentImage|contains": [
          "\\Msbuild\\Current\\Bin\\",
          "\\VC\\Tools\\MSVC\\",
          "\\Tracker.exe"
        ],
        "CommandLine|contains": [
          "\\FileTracker32.dll,#1",
          "\\FileTracker32.dll\",#1",
          "\\FileTracker64.dll,#1",
          "\\FileTracker64.dll\",#1"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment",
      "Windows control panel elements have been identified as source (mmc)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Rundll32 Invoking Inline VBScript",
    "id": 949,
    "status": "test",
    "description": "Detects suspicious process related to rundll32 based on command line that invokes inline VBScript as seen being used by UNC2452",
    "references": [
      "https://www.microsoft.com/security/blog/2021/03/04/goldmax-goldfinder-sibot-analyzing-nobelium-malware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/03/05",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "rundll32.exe",
          "Execute",
          "RegRead",
          "window.close"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Rundll32 InstallScreenSaver Execution",
    "id": 950,
    "status": "test",
    "description": "An attacker may execute an application as a SCR File using rundll32.exe desk.cpl,InstallScreenSaver",
    "references": [
      "https://lolbas-project.github.io/lolbas/Libraries/Desk/",
      "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1218.011/T1218.011.md#atomic-test-13---rundll32-with-deskcpl"
    ],
    "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io, TactiKoolSec",
    "date": "2022/04/28",
    "modified": "2023/02/09",
    "tags": [
      "attack.t1218.011",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "InstallScreenSaver"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate installation of a new screensaver"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Key Manager Access",
    "id": 951,
    "status": "test",
    "description": "Detects the invocation of the Stored User Names and Passwords dialogue (Key Manager)",
    "references": [
      "https://twitter.com/NinjaParanoid/status/1516442028963659777"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/21",
    "modified": "2023/02/09",
    "tags": [
      "attack.credential_access",
      "attack.t1555.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "keymgr",
          "KRShowKeyMgr"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Mshtml.DLL RunHTMLApplication Suspicious Usage",
    "id": 952,
    "related": [
      {
        "id": "9f06447a-a33a-4cbe-a94f-a3f43184a7a3",
        "type": "obsoletes"
      },
      {
        "id": "73fcad2e-ff14-4c38-b11d-4172c8ac86c7",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects execution of commands that leverage the \"mshtml.dll\" RunHTMLApplication export to run arbitrary code via different protocol handlers (vbscript, javascript, file, http...)\n",
    "references": [
      "https://twitter.com/n1nj4sec/status/1421190238081277959",
      "https://hyp3rlinx.altervista.org/advisories/MICROSOFT_WINDOWS_DEFENDER_TROJAN.WIN32.POWESSERE.G_MITIGATION_BYPASS_PART2.txt",
      "http://hyp3rlinx.altervista.org/advisories/MICROSOFT_WINDOWS_DEFENDER_DETECTION_BYPASS.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems),  Florian Roth (Nextron Systems), Josh Nickels, frack113, Zaw Min Htun (ZETA)",
    "date": "2022/08/14",
    "modified": "2024/02/23",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\..\\",
          "mshtml"
        ],
        "CommandLine|contains": [
          "#135",
          "RunHTMLApplication"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Rundll32 Execution Without CommandLine Parameters",
    "id": 953,
    "status": "experimental",
    "description": "Detects suspicious start of rundll32.exe without any parameters as found in CobaltStrike beacon activity",
    "references": [
      "https://www.cobaltstrike.com/help-opsec",
      "https://twitter.com/ber_m1ng/status/1397948048135778309"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/05/27",
    "modified": "2023/08/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|endswith": [
          "\\rundll32.exe",
          "\\rundll32.exe\"",
          "\\rundll32"
        ]
      },
      "filter": {
        "ParentImage|contains": [
          "\\AppData\\Local\\",
          "\\Microsoft\\Edge\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Possible but rare"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious NTLM Authentication on the Printer Spooler Service",
    "id": 954,
    "status": "test",
    "description": "Detects a privilege elevation attempt by coercing NTLM authentication on the Printer Spooler service",
    "references": [
      "https://twitter.com/med0x2e/status/1520402518685200384",
      "https://github.com/elastic/detection-rules/blob/dd224fb3f81d0b4bf8593c5f02a029d647ba2b2d/rules/windows/credential_access_relay_ntlm_auth_via_http_spoolss.toml"
    ],
    "author": "Elastic (idea), Tobias Michalski (Nextron Systems)",
    "date": "2022/05/04",
    "modified": "2023/02/09",
    "tags": [
      "attack.privilege_escalation",
      "attack.credential_access",
      "attack.t1212"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "C:\\windows\\system32\\davclnt.dll,DavSetCookie",
          "http"
        ],
        "CommandLine|contains": [
          "spoolss",
          "srvsvc",
          "/print/pipe/"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Obfuscated Ordinal Call Via Rundll32",
    "id": 955,
    "status": "experimental",
    "description": "Detects execution of \"rundll32\" with potential obfuscated ordinal calls",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        },
        {
          "CommandLine|contains": "rundll32"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "#+",
          "#-"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Rundll32 Spawned Via Explorer.EXE",
    "id": 956,
    "status": "experimental",
    "description": "Detects execution of \"rundll32.exe\" with a parent process of Explorer.exe. This has been observed by variants of Raspberry Robin, as first reported by Red Canary.",
    "references": [
      "https://redcanary.com/blog/raspberry-robin/",
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/"
    ],
    "author": "CD_ROM_",
    "date": "2022/05/21",
    "modified": "2023/08/31",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\explorer.exe"
      },
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "filter_main_generic": [
        {
          "CommandLine|contains": " C:\\Windows\\System32\\"
        },
        {
          "CommandLine|endswith": " -localserver 22d8c27b-47a1-48d1-ad08-7da7abd79617"
        }
      ],
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Memory Dump Via Comsvcs.DLL",
    "id": 957,
    "related": [
      {
        "id": "09e6d5c0-05b8-4ff8-9eeb-043046ec774c",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects a process memory dump via \"comsvcs.dll\" using rundll32, covering multiple different techniques (ordinal, minidump function, etc.)",
    "references": [
      "https://twitter.com/shantanukhande/status/1229348874298388484",
      "https://twitter.com/pythonresponder/status/1385064506049630211?s=21",
      "https://twitter.com/Hexacorn/status/1224848930795552769",
      "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/",
      "https://twitter.com/SBousseaden/status/1167417096374050817",
      "https://twitter.com/Wietze/status/1542107456507203586",
      "https://github.com/Hackndo/lsassy/blob/14d8f8ae596ecf22b449bfe919829173b8a07635/lsassy/dumpmethod/comsvcs.py"
    ],
    "author": "Florian Roth (Nextron Systems), Modexp, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/02/18",
    "modified": "2023/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.credential_access",
      "attack.t1036",
      "attack.t1003.001",
      "car.2013-05-009"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        },
        {
          "CommandLine|contains": "rundll32"
        }
      ],
      "selection_cli_1": {
        "CommandLine|contains|all": [
          "comsvcs",
          "full"
        ],
        "CommandLine|contains": [
          "#-",
          "#+",
          "#24",
          "24 ",
          "MiniDump"
        ]
      },
      "selection_generic": {
        "CommandLine|contains|all": [
          "24",
          "comsvcs",
          "full"
        ],
        "CommandLine|contains": [
          " #",
          ",#",
          ", #"
        ]
      },
      "condition": "(selection_img and 1 of selection_cli_*) or selection_generic"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Rundll32 Registered COM Objects",
    "id": 958,
    "status": "test",
    "description": "load malicious registered COM objects",
    "references": [
      "https://nasbench.medium.com/a-deep-dive-into-rundll32-exe-642344b41e90",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.015/T1546.015.md"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "modified": "2023/02/09",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-sta ",
          "-localserver "
        ],
        "CommandLine|contains|all": [
          "{",
          "}"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Process Start Locations",
    "id": 959,
    "status": "test",
    "description": "Detects suspicious process run from unusual locations",
    "references": [
      "https://car.mitre.org/wiki/CAR-2013-05-002"
    ],
    "author": "juju4, Jonhnathan Ribeiro, oscd.community",
    "date": "2019/01/16",
    "modified": "2022/01/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "car.2013-05-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|contains": [
            ":\\RECYCLER\\",
            ":\\SystemVolumeInformation\\"
          ]
        },
        {
          "Image|startswith": [
            "C:\\Windows\\Tasks\\",
            "C:\\Windows\\debug\\",
            "C:\\Windows\\fonts\\",
            "C:\\Windows\\help\\",
            "C:\\Windows\\drivers\\",
            "C:\\Windows\\addins\\",
            "C:\\Windows\\cursors\\",
            "C:\\Windows\\system32\\tasks\\"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Rundll32 Setupapi.dll Activity",
    "id": 960,
    "status": "test",
    "description": "setupapi.dll library provide InstallHinfSection function for processing INF files. INF file may contain instructions allowing to create values in the registry, modify files and install drivers. This technique could be used to obtain persistence via modifying one of Run or RunOnce registry keys, run process or use other DLLs chain calls (see references) InstallHinfSection function in setupapi.dll calls runonce.exe executable regardless of actual content of INF file.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Libraries/Setupapi/",
      "https://gist.githubusercontent.com/bohops/0cc6586f205f3691e04a1ebf1806aabd/raw/baf7b29891bb91e76198e30889fbf7d6642e8974/calc_exe.inf",
      "https://raw.githubusercontent.com/huntresslabs/evading-autoruns/master/shady.inf",
      "https://twitter.com/Z3Jpa29z/status/1313742350292746241?s=20"
    ],
    "author": "Konstantin Grishchenko, oscd.community",
    "date": "2020/10/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\runonce.exe",
        "ParentImage|endswith": "\\rundll32.exe",
        "ParentCommandLine|contains|all": [
          "setupapi.dll",
          "InstallHinfSection"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Scripts and administrative tools that use INF files for driver installation with setupapi.dll"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Shell32 DLL Execution in Suspicious Directory",
    "id": 961,
    "status": "test",
    "description": "Detects shell32.dll executing a DLL in a suspicious directory",
    "references": [
      "https://www.group-ib.com/resources/threat-research/red-curl-2.html"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/11/24",
    "modified": "2023/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "shell32.dll",
          "Control_RunDLL"
        ],
        "CommandLine|contains": [
          "%AppData%",
          "%LocalAppData%",
          "%Temp%",
          "%tmp%",
          "\\AppData\\",
          "\\Temp\\",
          "\\Users\\Public\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential ShellDispatch.DLL Functionality Abuse",
    "id": 962,
    "status": "experimental",
    "description": "Detects potential \"ShellDispatch.dll\" functionality abuse to execute arbitrary binaries via \"ShellExecute\"",
    "references": [
      "https://www.hexacorn.com/blog/2023/06/07/this-lolbin-doesnt-exist/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/20",
    "tags": [
      "attack.execution",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "RunDll_ShellExecuteW"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "RunDLL32 Spawning Explorer",
    "id": 963,
    "status": "test",
    "description": "Detects RunDLL32.exe spawning explorer.exe as child, which is very uncommon, often observes Gamarue spawning the explorer.exe process in an unusual way",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-november-2021/"
    ],
    "author": "elhoim, CD_ROM_",
    "date": "2022/04/27",
    "modified": "2022/05/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\rundll32.exe",
        "Image|endswith": "\\explorer.exe"
      },
      "filter": {
        "ParentCommandLine|contains": "\\shell32.dll,Control_RunDLL"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Rundll32 Activity",
    "id": 964,
    "status": "test",
    "description": "Detects suspicious execution of rundll32, with specific calls to some DLLs with known LOLBIN functionalities",
    "references": [
      "http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/",
      "https://twitter.com/Hexacorn/status/885258886428725250",
      "https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52",
      "https://twitter.com/nas_bench/status/1433344116071583746",
      "https://twitter.com/eral4m/status/1479106975967240209",
      "https://twitter.com/eral4m/status/1479080793003671557"
    ],
    "author": "juju4, Jonhnathan Ribeiro, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2023/05/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|contains|all": [
            "javascript:",
            ".RegisterXLL"
          ]
        },
        {
          "CommandLine|contains|all": [
            "url.dll",
            "OpenURL"
          ]
        },
        {
          "CommandLine|contains|all": [
            "url.dll",
            "OpenURLA"
          ]
        },
        {
          "CommandLine|contains|all": [
            "url.dll",
            "FileProtocolHandler"
          ]
        },
        {
          "CommandLine|contains|all": [
            "zipfldr.dll",
            "RouteTheCall"
          ]
        },
        {
          "CommandLine|contains|all": [
            "shell32.dll",
            "Control_RunDLL"
          ]
        },
        {
          "CommandLine|contains|all": [
            "shell32.dll",
            "ShellExec_RunDLL"
          ]
        },
        {
          "CommandLine|contains|all": [
            "mshtml.dll",
            "PrintHTML"
          ]
        },
        {
          "CommandLine|contains|all": [
            "advpack.dll",
            "LaunchINFSection"
          ]
        },
        {
          "CommandLine|contains|all": [
            "advpack.dll",
            "RegisterOCX"
          ]
        },
        {
          "CommandLine|contains|all": [
            "ieadvpack.dll",
            "LaunchINFSection"
          ]
        },
        {
          "CommandLine|contains|all": [
            "ieadvpack.dll",
            "RegisterOCX"
          ]
        },
        {
          "CommandLine|contains|all": [
            "ieframe.dll",
            "OpenURL"
          ]
        },
        {
          "CommandLine|contains|all": [
            "shdocvw.dll",
            "OpenURL"
          ]
        },
        {
          "CommandLine|contains|all": [
            "syssetup.dll",
            "SetupInfObjectInstallAction"
          ]
        },
        {
          "CommandLine|contains|all": [
            "setupapi.dll",
            "InstallHinfSection"
          ]
        },
        {
          "CommandLine|contains|all": [
            "pcwutl.dll",
            "LaunchApplication"
          ]
        },
        {
          "CommandLine|contains|all": [
            "dfshim.dll",
            "ShOpenVerbApplication"
          ]
        },
        {
          "CommandLine|contains|all": [
            "dfshim.dll",
            "ShOpenVerbShortcut"
          ]
        },
        {
          "CommandLine|contains|all": [
            "scrobj.dll",
            "GenerateTypeLib",
            "http"
          ]
        },
        {
          "CommandLine|contains|all": [
            "shimgvw.dll",
            "ImageView_Fullscreen",
            "http"
          ]
        },
        {
          "CommandLine|contains|all": [
            "comsvcs.dll",
            "MiniDump"
          ]
        }
      ],
      "filter_main_screensaver": {
        "CommandLine|contains": "shell32.dll,Control_RunDLL desk.cpl,screensaver,@screensaver"
      },
      "filter_main_parent_cpl": {
        "ParentImage": "C:\\Windows\\System32\\control.exe",
        "ParentCommandLine|contains": ".cpl",
        "CommandLine|contains|all": [
          "Shell32.dll",
          "Control_RunDLL",
          ".cpl"
        ]
      },
      "filter_main_startmenu": {
        "ParentImage": "C:\\Windows\\System32\\control.exe",
        "CommandLine|startswith": "\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \"C:\\Windows\\System32\\",
        "CommandLine|endswith": ".cpl\","
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Control Panel DLL Load",
    "id": 965,
    "status": "test",
    "description": "Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits",
    "references": [
      "https://twitter.com/rikvduijn/status/853251879320662017",
      "https://twitter.com/felixw3000/status/853354851128025088"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/04/15",
    "modified": "2023/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\System32\\control.exe"
      },
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "filter": {
        "CommandLine|contains": "Shell32.dll"
      },
      "condition": "all of selection_* and not filter"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Rundll32 Execution With Image Extension",
    "id": 966,
    "related": [
      {
        "id": "089fc3d2-71e8-4763-a8a5-c97fbb0a403e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the execution of Rundll32.exe with DLL files masquerading as image files",
    "references": [
      "https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution"
    ],
    "author": "Hieu Tran",
    "date": "2023/03/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          ".bmp",
          ".cr2",
          ".eps",
          ".gif",
          ".ico",
          ".jpeg",
          ".jpg",
          ".nef",
          ".orf",
          ".png",
          ".raw",
          ".sr2",
          ".tif",
          ".tiff"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Usage Of ShellExec_RunDLL",
    "id": 967,
    "related": [
      {
        "id": "36c5146c-d127-4f85-8e21-01bf62355d5a",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects suspicious usage of the ShellExec_RunDLL function to launch other commands as seen in the the raspberry-robin attack",
    "references": [
      "https://redcanary.com/blog/raspberry-robin/",
      "https://www.microsoft.com/en-us/security/blog/2022/10/27/raspberry-robin-worm-part-of-larger-ecosystem-facilitating-pre-ransomware-activity/",
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/01",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_openasrundll": {
        "CommandLine|contains": "ShellExec_RunDLL"
      },
      "selection_suspcli": {
        "CommandLine|contains": [
          "regsvr32",
          "msiexec",
          "\\Users\\Public\\",
          "odbcconf",
          "\\Desktop\\",
          "\\Temp\\",
          "Invoke-",
          "iex",
          "comspec"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ShimCache Flush",
    "id": 968,
    "status": "stable",
    "description": "Detects actions that clear the local ShimCache and remove forensic evidence",
    "references": [
      "https://medium.com/@blueteamops/shimcache-flush-89daff28d15e"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/02/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1a": {
        "CommandLine|contains|all": [
          "rundll32",
          "apphelp.dll"
        ]
      },
      "selection1b": {
        "CommandLine|contains": [
          "ShimFlushCache",
          "#250"
        ]
      },
      "selection2a": {
        "CommandLine|contains|all": [
          "rundll32",
          "kernel32.dll"
        ]
      },
      "selection2b": {
        "CommandLine|contains": [
          "BaseFlushAppcompatCache",
          "#46"
        ]
      },
      "condition": "( selection1a and selection1b ) or ( selection2a and selection2b )"
    },
    "fields": [
      "Image",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Rundll32 Activity Invoking Sys File",
    "id": 969,
    "status": "test",
    "description": "Detects suspicious process related to rundll32 based on command line that includes a *.sys file as seen being used by UNC2452",
    "references": [
      "https://www.microsoft.com/security/blog/2021/03/04/goldmax-goldfinder-sibot-analyzing-nobelium-malware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/03/05",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": "rundll32.exe"
      },
      "selection2": {
        "CommandLine|contains": [
          ".sys,",
          ".sys "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Rundll32 Execution With Uncommon DLL Extension",
    "id": 970,
    "status": "experimental",
    "description": "Detects the execution of rundll32 with a command line that doesn't contain a common extension",
    "references": [
      "https://twitter.com/mrd0x/status/1481630810495139841?s=12"
    ],
    "author": "Tim Shelton, Florian Roth (Nextron Systems), Yassine Oukessou",
    "date": "2022/01/13",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "filter_main_null": {
        "CommandLine": null
      },
      "filter_main_empty": {
        "CommandLine": ""
      },
      "filter_main_known_extension": [
        {
          "CommandLine|contains": [
            ".cpl ",
            ".cpl,",
            ".cpl\"",
            ".cpl'",
            ".dll ",
            ".dll,",
            ".dll\"",
            ".dll'",
            ".inf ",
            ".inf,",
            ".inf\"",
            ".inf'"
          ]
        },
        {
          "CommandLine|endswith": [
            ".cpl",
            ".dll",
            ".inf"
          ]
        }
      ],
      "filter_main_localserver": {
        "CommandLine|contains": " -localserver "
      },
      "filter_main_zzzzInvokeManagedCustomActionOutOfProc": {
        "ParentImage|endswith": "\\msiexec.exe",
        "CommandLine|contains|all": [
          ":\\Windows\\Installer\\",
          ".tmp",
          "zzzzInvokeManagedCustomActionOutOfProc"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Rundll32 UNC Path Execution",
    "id": 971,
    "status": "test",
    "description": "Detects rundll32 execution where the DLL is located on a remote location (share)",
    "references": [
      "https://www.cybereason.com/blog/rundll32-the-infamous-proxy-for-executing-malicious-code"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/10",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1021.002",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        },
        {
          "CommandLine|contains": "rundll32"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " \\\\\\\\"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Workstation Locking via Rundll32",
    "id": 972,
    "status": "test",
    "description": "Detects a suspicious call to the user32.dll function that locks the user workstation",
    "references": [
      "https://app.any.run/tasks/2aef9c63-f944-4763-b3ef-81eee209d128/"
    ],
    "author": "frack113",
    "date": "2022/06/04",
    "modified": "2023/02/09",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_call_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_call_parent": {
        "ParentImage|endswith": "\\cmd.exe"
      },
      "selection_call_cli": {
        "CommandLine|contains": "user32.dll,"
      },
      "selection_function": {
        "CommandLine|contains": "LockWorkStation"
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "Image",
      "ParentImage"
    ],
    "falsepositives": [
      "Scripts or links on the user desktop used to lock the workstation instead of Windows+L or the menu option"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WebDav Client Execution Via Rundll32.EXE",
    "id": 973,
    "status": "test",
    "description": "Detects \"svchost.exe\" spawning \"rundll32.exe\" with command arguments like \"C:\\windows\\system32\\davclnt.dll,DavSetCookie\".\nThis could be an indicator of exfiltration or use of WebDav to launch code (hosted on a WebDav server).\n",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/17",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/7.B.4_C10730EA-6345-4934-AA0F-B0EFCA0C4BA6.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2023/09/18",
    "tags": [
      "attack.exfiltration",
      "attack.t1048.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\svchost.exe"
      },
      "selection_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "C:\\windows\\system32\\davclnt.dll,DavSetCookie"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious WebDav Client Execution Via Rundll32.EXE",
    "id": 974,
    "status": "experimental",
    "description": "Detects \"svchost.exe\" spawning \"rundll32.exe\" with command arguments like C:\\windows\\system32\\davclnt.dll,DavSetCookie. This could be an indicator of exfiltration or use of WebDav to launch code (hosted on WebDav Server) or potentially a sign of exploitation of CVE-2023-23397\n",
    "references": [
      "https://twitter.com/aceresponder/status/1636116096506818562",
      "https://www.mdsec.co.uk/2023/03/exploiting-cve-2023-23397-microsoft-outlook-elevation-of-privilege-vulnerability/",
      "https://www.pwndefend.com/2023/03/15/the-long-game-persistent-hash-theft/",
      "https://www.microsoft.com/en-us/security/blog/wp-content/uploads/2023/03/Figure-7-sample-webdav-process-create-event.png",
      "https://www.microsoft.com/en-us/security/blog/2023/03/24/guidance-for-investigating-attacks-using-cve-2023-23397/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2023/03/16",
    "modified": "2023/09/18",
    "tags": [
      "attack.exfiltration",
      "attack.t1048.003",
      "cve.2023.23397"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\svchost.exe",
        "ParentCommandLine|contains": "-s WebClient",
        "Image|endswith": "\\rundll32.exe",
        "CommandLine|contains": "C:\\windows\\system32\\davclnt.dll,DavSetCookie",
        "CommandLine|re": "://\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
      },
      "filter_local_ips": {
        "CommandLine|contains": [
          "://10.",
          "://192.168.",
          "://172.16.",
          "://172.17.",
          "://172.18.",
          "://172.19.",
          "://172.20.",
          "://172.21.",
          "://172.22.",
          "://172.23.",
          "://172.24.",
          "://172.25.",
          "://172.26.",
          "://172.27.",
          "://172.28.",
          "://172.29.",
          "://172.30.",
          "://172.31.",
          "://127.",
          "://169.254."
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Rundll32 Execution Without Parameters",
    "id": 975,
    "status": "test",
    "description": "Detects rundll32 execution without parameters as observed when running Metasploit windows/smb/psexec exploit module",
    "references": [
      "https://bczyz1.github.io/2021/01/30/psexec.html"
    ],
    "author": "Bartlomiej Czyz, Relativity",
    "date": "2021/01/31",
    "modified": "2023/02/28",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1570",
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine": [
          "rundll32.exe",
          "rundll32"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "SubjectUserName",
      "CommandLine",
      "Image",
      "ParentImage"
    ],
    "falsepositives": [
      "False positives may occur if a user called rundll32 from CLI with no options"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Run Once Task Execution as Configured in Registry",
    "id": 976,
    "status": "test",
    "description": "This rule detects the execution of Run Once task as configured in the registry",
    "references": [
      "https://twitter.com/pabraeken/status/990717080805789697",
      "https://lolbas-project.github.io/lolbas/Binaries/Runonce/",
      "https://twitter.com/0gtweet/status/1602644163824156672?s=20&t=kuxbUnZPltpvFPZdCrqPXA"
    ],
    "author": "Avneet Singh @v3t0_, oscd.community, Christopher Peacock @SecurePeacock (updated)",
    "date": "2020/10/18",
    "modified": "2022/12/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\runonce.exe"
        },
        {
          "Description": "Run Once Wrapper"
        }
      ],
      "selection_cli": [
        {
          "CommandLine|contains": "/AlternateShellStartup"
        },
        {
          "CommandLine|endswith": "/r"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Schtasks Execution AppData Folder",
    "id": 977,
    "status": "test",
    "description": "Detects the creation of a schtask that executes a file from C:\\Users\\<USER>\\AppData\\Local",
    "references": [
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "pH-T (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/03/15",
    "modified": "2022/07/28",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1053.005",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          "/Create",
          "/RU",
          "/TR",
          "C:\\Users\\",
          "\\AppData\\Local\\"
        ],
        "CommandLine|contains": [
          "NT AUT",
          " SYSTEM "
        ]
      },
      "filter": {
        "ParentImage|contains|all": [
          "\\AppData\\Local\\Temp\\",
          "TeamViewer_.exe"
        ],
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": "/TN TVInstallRestore"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Modification Of Scheduled Tasks",
    "id": 978,
    "related": [
      {
        "id": "614cf376-6651-47c4-9dcc-6b9527f749f4",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when an attacker tries to modify an already existing scheduled tasks to run from a suspicious location\nAttackers can create a simple looking task in order to avoid detection on creation as it's often the most focused on\nInstead they modify the task after creation to include their malicious payload\n",
    "references": [
      "Internal Research",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/28",
    "modified": "2022/11/18",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_schtasks": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          " /Change ",
          " /TN "
        ]
      },
      "selection_susp_locations": {
        "CommandLine|contains": [
          "\\AppData\\Local\\Temp",
          "\\AppData\\Roaming\\",
          "\\Users\\Public\\",
          "\\WINDOWS\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Temporary Internet",
          "C:\\ProgramData\\",
          "C:\\Perflogs\\",
          "%ProgramData%",
          "%appdata%",
          "%comspec%",
          "%localappdata%"
        ]
      },
      "selection_susp_images": {
        "CommandLine|contains": [
          "regsvr32",
          "rundll32",
          "cmd /c ",
          "cmd /k ",
          "cmd /r ",
          "cmd.exe /c ",
          "cmd.exe /k ",
          "cmd.exe /r ",
          "powershell",
          "mshta",
          "wscript",
          "cscript",
          "certutil",
          "bitsadmin",
          "bash.exe",
          "bash ",
          "scrcons",
          "wmic ",
          "wmic.exe",
          "forfiles",
          "scriptrunner",
          "hh.exe",
          "hh "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Scheduled Task Creation Via Schtasks.EXE",
    "id": 979,
    "status": "test",
    "description": "Detects the creation of scheduled tasks by user accounts via the \"schtasks\" utility.",
    "references": [
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-create"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2024/01/18",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1053.005",
      "attack.s0111",
      "car.2013-08-001",
      "stp.1u"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": " /create "
      },
      "filter_main_system_user": {
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrative activity",
      "Software installation"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Scheduled Task Creation Involving Temp Folder",
    "id": 980,
    "status": "test",
    "description": "Detects the creation of scheduled tasks that involves a temporary folder and runs only once",
    "references": [
      "https://discuss.elastic.co/t/detection-and-response-for-hafnium-activity/266289/3"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/03/11",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          " /create ",
          " /sc once ",
          "\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Administrative activity",
      "Software installation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Delete Important Scheduled Task",
    "id": 981,
    "related": [
      {
        "id": "9e3cb244-bdb8-4632-8c90-6079c8f4f16d",
        "type": "similar"
      },
      {
        "id": "7595ba94-cf3b-4471-aa03-4f6baa9e5fad",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when adversaries stop services or processes by deleting their respective scheduled tasks in order to conduct data destructive activities",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "schtasks_exe": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          "/delete",
          "/tn"
        ],
        "CommandLine|contains": [
          "\\Windows\\SystemRestore\\SR",
          "\\Windows\\Windows Defender\\",
          "\\Windows\\BitLocker",
          "\\Windows\\WindowsBackup\\",
          "\\Windows\\WindowsUpdate\\",
          "\\Windows\\UpdateOrchestrator\\",
          "\\Windows\\ExploitGuard"
        ]
      },
      "condition": "all of schtasks_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Delete All Scheduled Tasks",
    "id": 982,
    "status": "test",
    "description": "Detects the usage of schtasks with the delete flag and the asterisk symbol to delete all tasks from the schedule of the local computer, including tasks scheduled by other users.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-delete"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          " /delete ",
          "/tn \\*",
          " /f"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Important Scheduled Task",
    "id": 983,
    "related": [
      {
        "id": "7595ba94-cf3b-4471-aa03-4f6baa9e5fad",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when adversaries stop services or processes by disabling their respective scheduled tasks in order to conduct data destructive activities",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-8---windows---disable-the-sr-scheduled-task",
      "https://twitter.com/MichalKoczwara/status/1553634816016498688",
      "https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/26",
    "modified": "2022/09/02",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "schtasks_exe": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          "/Change",
          "/TN",
          "/disable"
        ],
        "CommandLine|contains": [
          "\\Windows\\SystemRestore\\SR",
          "\\Windows\\Windows Defender\\",
          "\\Windows\\BitLocker",
          "\\Windows\\WindowsBackup\\",
          "\\Windows\\WindowsUpdate\\",
          "\\Windows\\UpdateOrchestrator\\",
          "\\Windows\\ExploitGuard"
        ]
      },
      "condition": "all of schtasks_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Schtasks From Env Var Folder",
    "id": 984,
    "related": [
      {
        "id": "43f487f0-755f-4c2a-bce7-d6d2eec2fcf8",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects Schtask creations that point to a suspicious folder or an environment variable often used by malware",
    "references": [
      "https://www.welivesecurity.com/2022/01/18/donot-go-do-not-respawn/",
      "https://www.joesandbox.com/analysis/514608/0/html#324415FF7D8324231381BAD48A052F85DF04"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/21",
    "modified": "2023/11/30",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection1_create": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": " /create "
      },
      "selection1_all_folders": {
        "CommandLine|contains": [
          ":\\Perflogs",
          ":\\Windows\\Temp",
          "\\AppData\\Local\\",
          "\\AppData\\Roaming\\",
          "\\Users\\Public",
          "%AppData%",
          "%Public%"
        ]
      },
      "selection2_parent": {
        "ParentCommandLine|endswith": "\\svchost.exe -k netsvcs -p -s Schedule"
      },
      "selection2_some_folders": {
        "CommandLine|contains": [
          ":\\Perflogs",
          ":\\Windows\\Temp",
          "\\Users\\Public",
          "%Public%"
        ]
      },
      "filter_mixed": [
        {
          "CommandLine|contains": [
            "update_task.xml",
            "/Create /TN TVInstallRestore /TR"
          ]
        },
        {
          "ParentCommandLine|contains": "unattended.ini"
        }
      ],
      "filter_avira_install": {
        "CommandLine|contains|all": [
          "/Create /Xml \"C:\\Users\\",
          "\\AppData\\Local\\Temp\\.CR.",
          "Avira_Security_Installation.xml"
        ]
      },
      "filter_avira_other": {
        "CommandLine|contains|all": [
          "/Create /F /TN",
          "/Xml ",
          "\\AppData\\Local\\Temp\\is-",
          "Avira_"
        ],
        "CommandLine|contains": [
          ".tmp\\UpdateFallbackTask.xml",
          ".tmp\\WatchdogServiceControlManagerTimeout.xml",
          ".tmp\\SystrayAutostart.xml",
          ".tmp\\MaintenanceTask.xml"
        ]
      },
      "filter_klite_codec": {
        "CommandLine|contains|all": [
          "\\AppData\\Local\\Temp\\",
          "/Create /TN \"klcp_update\" /XML ",
          "\\klcp_update_task.xml"
        ]
      },
      "condition": "( all of selection1* or all of selection2* ) and not 1 of filter*"
    },
    "falsepositives": [
      "Benign scheduled tasks creations or executions that happen often during software installations",
      "Software that uses the AppData folder and scheduled tasks to update the software in the AppData folders"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Schtasks From Suspicious Folders",
    "id": 985,
    "status": "test",
    "description": "Detects scheduled task creations that have suspicious action command and folder combinations",
    "references": [
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/lazarus-dream-job-chemical"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/15",
    "modified": "2022/11/18",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_create": {
        "CommandLine|contains": " /create "
      },
      "selection_command": {
        "CommandLine|contains": [
          "powershell",
          "pwsh",
          "cmd /c ",
          "cmd /k ",
          "cmd /r ",
          "cmd.exe /c ",
          "cmd.exe /k ",
          "cmd.exe /r "
        ]
      },
      "selection_all_folders": {
        "CommandLine|contains": [
          "C:\\ProgramData\\",
          "%ProgramData%"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Scheduled Task Name As GUID",
    "id": 986,
    "status": "test",
    "description": "Detects creation of a scheduled task with a GUID like name",
    "references": [
      "https://thedfirreport.com/2022/10/31/follina-exploit-leads-to-domain-compromise/",
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/31",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": "/Create "
      },
      "selection_tn": {
        "CommandLine|contains": [
          "/TN \"{",
          "/TN '{",
          "/TN {"
        ]
      },
      "selection_end": {
        "CommandLine|contains": [
          "}\"",
          "}'",
          "} "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate software naming their tasks as GUIDs"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uncommon One Time Only Scheduled Task At 00:00",
    "id": 987,
    "status": "test",
    "description": "Detects scheduled task creation events that include suspicious actions, and is run once at 00:00",
    "references": [
      "https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-blackbyte"
    ],
    "author": "pH-T (Nextron Systems)",
    "date": "2022/07/15",
    "modified": "2023/02/03",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1053.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|contains": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "wscript",
          "vbscript",
          "cscript",
          "wmic ",
          "wmic.exe",
          "regsvr32.exe",
          "powershell",
          "\\AppData\\"
        ]
      },
      "selection_time": {
        "CommandLine|contains|all": [
          "once",
          "00:00"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Software installation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Add Scheduled Task Parent",
    "id": 988,
    "status": "test",
    "description": "Detects suspicious scheduled task creations from a parent stored in a temporary folder",
    "references": [
      "https://app.any.run/tasks/649e7b46-9bec-4d05-98a5-dfa9a13eaae5/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/23",
    "modified": "2022/06/02",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": "/Create ",
        "ParentImage|contains": [
          "\\AppData\\Local\\",
          "\\AppData\\Roaming\\",
          "\\Temporary Internet",
          "\\Users\\Public\\"
        ]
      },
      "filter": {
        "CommandLine|contains": [
          "update_task.xml",
          "unattended.ini"
        ]
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Software installers that run from temporary folders and also install scheduled tasks"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Microsoft Compatibility Appraiser",
    "id": 989,
    "related": [
      {
        "id": "73a883d0-0348-4be4-a8d8-51031c2564f8",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects manual execution of the \"Microsoft Compatibility Appraiser\" task via schtasks.\nIn order to trigger persistence stored in the \"\\AppCompatFlags\\TelemetryController\" registry key.\n",
    "references": [
      "https://www.trustedsec.com/blog/abusing-windows-telemetry-for-persistence/"
    ],
    "author": "Sreeman",
    "date": "2020/09/29",
    "modified": "2023/02/10",
    "tags": [
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "run ",
          "\\Application Experience\\Microsoft Compatibility Appraiser"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Powershell Search Order Hijacking - Task",
    "id": 990,
    "related": [
      {
        "id": "6e8811ee-90ba-441e-8486-5653e68b2299",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious powershell execution via a schedule task where the command ends with an suspicious flags to hide the powershell instance instead of executeing scripts or commands. This could be a sign of persistence via PowerShell \"Get-Variable\" technique as seen being used in Colibri Loader",
    "references": [
      "https://blog.malwarebytes.com/threat-intelligence/2022/04/colibri-loader-combines-task-scheduler-and-powershell-in-clever-persistence-technique/"
    ],
    "author": "pH-T (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2022/04/08",
    "modified": "2023/02/03",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1053.005",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentImage": "C:\\WINDOWS\\System32\\svchost.exe",
        "ParentCommandLine|contains|all": [
          "-k netsvcs",
          "-s Schedule"
        ],
        "CommandLine|endswith": [
          " -windowstyle hidden",
          " -w hidden",
          " -ep bypass",
          " -noni"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Scheduled Task Executing Payload from Registry",
    "id": 991,
    "related": [
      {
        "id": "c4eeeeae-89f4-43a7-8b48-8d1bdfa66c78",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of a schtasks that potentially executes a payload stored in the Windows Registry using PowerShell.",
    "references": [
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/18",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1053.005",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_cli_create": {
        "CommandLine|contains": "/Create"
      },
      "selection_cli_get": {
        "CommandLine|contains": [
          "Get-ItemProperty",
          " gp "
        ]
      },
      "selection_cli_hive": {
        "CommandLine|contains": [
          "HKCU:",
          "HKLM:",
          "registry::",
          "HKEY_"
        ]
      },
      "filter_main_encoding": {
        "CommandLine|contains": [
          "FromBase64String",
          "encodedcommand"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Scheduled Task Executing Encoded Payload from Registry",
    "id": 992,
    "status": "test",
    "description": "Detects the creation of a schtask that potentially executes a base64 encoded payload stored in the Windows Registry using PowerShell.",
    "references": [
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "pH-T (Nextron Systems), @Kostastsale, @TheDFIRReport, X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/02/12",
    "modified": "2023/02/04",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1053.005",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_cli_create": {
        "CommandLine|contains": "/Create"
      },
      "selection_cli_encoding": {
        "CommandLine|contains": [
          "FromBase64String",
          "encodedcommand"
        ]
      },
      "selection_cli_get": {
        "CommandLine|contains": [
          "Get-ItemProperty",
          " gp "
        ]
      },
      "selection_cli_hive": {
        "CommandLine|contains": [
          "HKCU:",
          "HKLM:",
          "registry::",
          "HKEY_"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Schtasks Schedule Types",
    "id": 993,
    "related": [
      {
        "id": "7a02e22e-b885-4404-b38b-1ddc7e65258a",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects scheduled task creations or modification on a suspicious schedule type",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-change",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-create",
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_time": {
        "CommandLine|contains": [
          " ONLOGON ",
          " ONSTART ",
          " ONCE ",
          " ONIDLE "
        ]
      },
      "filter_privs": {
        "CommandLine|contains": [
          "NT AUT",
          " SYSTEM",
          "HIGHEST"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate processes that run at logon. Filter according to your environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Schtasks Schedule Type With High Privileges",
    "id": 994,
    "related": [
      {
        "id": "24c8392b-aa3c-46b7-a545-43f71657fe98",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects scheduled task creations or modification to be run with high privileges on a suspicious schedule type",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-change",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks-create"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/31",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_time": {
        "CommandLine|contains": [
          " ONLOGON ",
          " ONSTART ",
          " ONCE ",
          " ONIDLE "
        ]
      },
      "selection_privs": {
        "CommandLine|contains": [
          "NT AUT",
          " SYSTEM",
          "HIGHEST"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Some installers were seen using this method of creation unfortunately. Filter them in your environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Scheduled Task Creation via Masqueraded XML File",
    "id": 995,
    "status": "experimental",
    "description": "Detects the creation of a scheduled task using the \"-XML\" flag with a file without the '.xml' extension. This behavior could be indicative of potential defense evasion attempt during persistence",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/taskschd/daily-trigger-example--xml-",
      "https://github.com/elastic/protections-artifacts/blob/084067123d3328a823b1c3fdde305b694275c794/behavior/rules/persistence_suspicious_scheduled_task_creation_via_masqueraded_xml_file.toml"
    ],
    "author": "Swachchhanda Shrawan Poudel, Elastic (idea)",
    "date": "2023/04/20",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1036.005",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\schtasks.exe"
        },
        {
          "OriginalFileName": "schtasks.exe"
        }
      ],
      "selection_cli_create": {
        "CommandLine|contains": [
          "/create",
          "-create"
        ]
      },
      "selection_cli_xml": {
        "CommandLine|contains": [
          "/xml",
          "-xml"
        ]
      },
      "filter_main_extension_xml": {
        "CommandLine|contains": ".xml"
      },
      "filter_main_system_process": {
        "IntegrityLevel": "System"
      },
      "filter_main_rundll32": {
        "ParentImage|endswith": "\\rundll32.exe",
        "ParentCommandLine|contains|all": [
          ":\\WINDOWS\\Installer\\MSI",
          ".tmp,zzzzInvokeManagedCustomActionOutOfProc"
        ]
      },
      "filter_optional_third_party": {
        "ParentImage|endswith": [
          ":\\ProgramData\\OEM\\UpgradeTool\\CareCenter_*\\BUnzip\\Setup_msi.exe",
          ":\\Program Files\\Axis Communications\\AXIS Camera Station\\SetupActions.exe",
          ":\\Program Files\\Axis Communications\\AXIS Device Manager\\AdmSetupActions.exe",
          ":\\Program Files (x86)\\Zemana\\AntiMalware\\AntiMalware.exe",
          ":\\Program Files\\Dell\\SupportAssist\\pcdrcui.exe"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Command Patterns In Scheduled Task Creation",
    "id": 996,
    "status": "experimental",
    "description": "Detects scheduled task creation using \"schtasks\" that contain potentially suspicious or uncommon commands",
    "references": [
      "https://app.any.run/tasks/512c1352-6380-4436-b27d-bb62f0c020d6/",
      "https://twitter.com/RedDrip7/status/1506480588827467785",
      "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/devil-bait/NCSC-MAR-Devil-Bait.pdf"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/23",
    "modified": "2023/12/21",
    "tags": [
      "attack.execution",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_schtasks": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": "/Create "
      },
      "selection_pattern_1": {
        "CommandLine|contains": [
          "/sc minute ",
          "/ru system "
        ]
      },
      "selection_pattern_2": {
        "CommandLine|contains": [
          "cmd /c",
          "cmd /k",
          "cmd /r",
          "cmd.exe /c ",
          "cmd.exe /k ",
          "cmd.exe /r "
        ]
      },
      "selection_uncommon": {
        "CommandLine|contains": [
          " -decode ",
          " -enc ",
          " -w hidden ",
          " bypass ",
          " IEX",
          ".DownloadData",
          ".DownloadFile",
          ".DownloadString",
          "/c start /min ",
          "FromBase64String",
          "mshta http",
          "mshta.exe http"
        ]
      },
      "selection_anomaly_1": {
        "CommandLine|contains": [
          ":\\Windows\\Temp\\",
          "\\AppData\\",
          "%AppData%",
          "%Temp%",
          "%tmp%"
        ]
      },
      "selection_anomaly_2": {
        "CommandLine|contains": [
          "cscript",
          "curl",
          "wscript"
        ]
      },
      "condition": "selection_schtasks and ( all of selection_pattern_* or selection_uncommon or all of selection_anomaly_* )"
    },
    "falsepositives": [
      "Software installers that run from temporary folders and also install scheduled tasks are expected to generate some false positives"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Schtasks Creation Or Modification With SYSTEM Privileges",
    "id": 997,
    "status": "experimental",
    "description": "Detects the creation or update of a scheduled task to run with \"NT AUTHORITY\\SYSTEM\" privileges",
    "references": [
      "https://www.elastic.co/security-labs/exploring-the-qbot-attack-pattern",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/28",
    "modified": "2023/10/11",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_root": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains": [
          " /change ",
          " /create "
        ]
      },
      "selection_run": {
        "CommandLine|contains": "/ru "
      },
      "selection_user": {
        "CommandLine|contains": [
          "NT AUT",
          " SYSTEM "
        ]
      },
      "filter_optional_teamviewer": {
        "Image|endswith": "\\schtasks.exe",
        "CommandLine|contains|all": [
          "/TN TVInstallRestore",
          "\\TeamViewer_.exe"
        ]
      },
      "filter_optional_avira": {
        "CommandLine|contains": [
          "/Create /F /RU System /SC WEEKLY /TN AviraSystemSpeedupVerify /TR ",
          ":\\Program Files (x86)\\Avira\\System Speedup\\setup\\avira_speedup_setup.exe",
          "/VERIFY /VERYSILENT /NOSTART /NODOTNET /NORESTART\" /RL HIGHEST"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Script Event Consumer Spawning Process",
    "id": 998,
    "status": "test",
    "description": "Detects a suspicious child process of Script Event Consumer (scrcons.exe).",
    "references": [
      "https://redcanary.com/blog/child-processes/",
      "https://docs.paloaltonetworks.com/cortex/cortex-xdr/cortex-xdr-analytics-alert-reference/cortex-xdr-analytics-alert-reference/scrcons-exe-rare-child-process.html"
    ],
    "author": "Sittikorn S",
    "date": "2021/06/21",
    "modified": "2022/07/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\scrcons.exe",
        "Image|endswith": [
          "\\svchost.exe",
          "\\dllhost.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wscript.exe",
          "\\cscript.exe",
          "\\schtasks.exe",
          "\\regsvr32.exe",
          "\\mshta.exe",
          "\\rundll32.exe",
          "\\msiexec.exe",
          "\\msbuild.exe"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Possible Privilege Escalation via Weak Service Permissions",
    "id": 999,
    "status": "test",
    "description": "Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
      "https://pentestlab.blog/2017/03/30/weak-service-permissions/"
    ],
    "author": "Teymur Kheirkhabarov",
    "date": "2019/10/26",
    "modified": "2022/07/14",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "scbynonadmin": {
        "Image|endswith": "\\sc.exe",
        "IntegrityLevel": "Medium"
      },
      "selection_binpath": {
        "CommandLine|contains|all": [
          "config",
          "binPath"
        ]
      },
      "selection_failure": {
        "CommandLine|contains|all": [
          "failure",
          "command"
        ]
      },
      "condition": "scbynonadmin and 1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Service Creation Using Sc.EXE",
    "id": 1000,
    "related": [
      {
        "id": "c02e96b7-c63a-4c47-bd83-4a9f74afcfb2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a new service using the \"sc.exe\" utility.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md"
    ],
    "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community",
    "date": "2023/02/20",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\sc.exe",
        "CommandLine|contains|all": [
          "create",
          "binPath"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrator or user creates a service for legitimate reasons.",
      "Software installation"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Service StartupType Change Via Sc.EXE",
    "id": 1001,
    "status": "test",
    "description": "Detect the use of \"sc.exe\" to change the startup type of a service to \"disabled\" or \"demand\"",
    "references": [
      "https://www.virustotal.com/gui/file/38283b775552da8981452941ea74191aa0d203edd3f61fb2dee7b0aea3514955"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/01",
    "modified": "2023/03/04",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " config ",
          "start"
        ],
        "CommandLine|contains": [
          "disabled",
          "demand"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives may occur with troubleshooting scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Kernel Driver Via SC.EXE",
    "id": 1002,
    "status": "test",
    "description": "Detects creation of a new service (kernel driver) with the type \"kernel\"",
    "references": [
      "https://www.aon.com/cyber-solutions/aon_cyber_labs/yours-truly-signed-av-driver-weaponizing-an-antivirus-driver/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/14",
    "modified": "2022/08/08",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\sc.exe",
        "CommandLine|contains": [
          "create",
          "config"
        ],
        "CommandLine|contains|all": [
          "binPath",
          "type",
          "kernel"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate installation of kernel drivers via sc.exe"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Interesting Service Enumeration Via Sc.EXE",
    "id": 1003,
    "status": "experimental",
    "description": "Detects the enumeration and query of interesting and in some cases sensitive services on the system via \"sc.exe\".\nAttackers often try to enumerate the services currently running on a system in order to find different attack vectors.\n",
    "references": [
      "https://www.n00py.io/2021/05/dumping-plaintext-rdp-credentials-from-svchost-exe/",
      "https://pentestlab.blog/tag/svchost/"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2024/02/12",
    "tags": [
      "attack.t1003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "query"
      },
      "selection_cmd": {
        "CommandLine|contains": "termservice"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Allow Service Access Using Security Descriptor Tampering Via Sc.EXE",
    "id": 1004,
    "related": [
      {
        "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious DACL modifications to allow access to a service from a suspicious trustee. This can be used to override access restrictions set by previous ACLs.",
    "references": [
      "https://twitter.com/0gtweet/status/1628720819537936386",
      "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/",
      "https://learn.microsoft.com/en-us/windows/win32/secauthz/sid-strings"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/28",
    "tags": [
      "attack.persistence",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sc": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_sdset": {
        "CommandLine|contains|all": [
          "sdset",
          "A;"
        ]
      },
      "selection_trustee": {
        "CommandLine|contains": [
          ";IU",
          ";SU",
          ";BA",
          ";SY",
          ";WD"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Deny Service Access Using Security Descriptor Tampering Via Sc.EXE",
    "id": 1005,
    "related": [
      {
        "id": "98c5aeef-32d5-492f-b174-64a691896d25",
        "type": "similar"
      },
      {
        "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious DACL modifications to deny access to a service that affects critical trustees. This can be used to hide services or make them unstoppable.",
    "references": [
      "https://www.sans.org/blog/red-team-tactics-hiding-windows-services/",
      "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/",
      "https://learn.microsoft.com/en-us/windows/win32/secauthz/sid-strings"
    ],
    "author": "Jonhnathan Ribeiro, oscd.community",
    "date": "2020/10/16",
    "modified": "2023/02/28",
    "tags": [
      "attack.persistence",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sc": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_sdset": {
        "CommandLine|contains|all": [
          "sdset",
          "D;"
        ]
      },
      "selection_trustee": {
        "CommandLine|contains": [
          ";IU",
          ";SU",
          ";BA",
          ";SY",
          ";WD"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Service DACL Abuse To Hide Services Via Sc.EXE",
    "id": 1006,
    "related": [
      {
        "id": "99cf1e02-00fb-4c0d-8375-563f978dfd37",
        "type": "similar"
      },
      {
        "id": "98c5aeef-32d5-492f-b174-64a691896d25",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"sc.exe\" utility adding a new service with special permission seen used by threat actors which makes the service hidden and unremovable.",
    "references": [
      "https://blog.talosintelligence.com/2021/10/threat-hunting-in-large-datasets-by.html",
      "https://www.sans.org/blog/red-team-tactics-hiding-windows-services/",
      "https://twitter.com/Alh4zr3d/status/1580925761996828672",
      "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/"
    ],
    "author": "Andreas Hunkeler (@Karneades)",
    "date": "2021/12/20",
    "modified": "2022/08/08",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "sdset",
          "DCLCWPDTSD"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Service Security Descriptor Tampering Via Sc.EXE",
    "id": 1007,
    "related": [
      {
        "id": "99cf1e02-00fb-4c0d-8375-563f978dfd37",
        "type": "similar"
      },
      {
        "id": "a537cfc3-4297-4789-92b5-345bfd845ad0",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detection of sc.exe utility adding a new service with special permission which hides that service.",
    "references": [
      "https://blog.talosintelligence.com/2021/10/threat-hunting-in-large-datasets-by.html",
      "https://www.sans.org/blog/red-team-tactics-hiding-windows-services/",
      "https://twitter.com/Alh4zr3d/status/1580925761996828672",
      "https://twitter.com/0gtweet/status/1628720819537936386",
      "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/28",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\sc.exe"
        },
        {
          "OriginalFileName": "sc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "sdset"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Service Path Modification",
    "id": 1008,
    "status": "test",
    "description": "Detects service path modification via the \"sc\" binary to a suspicious command or path",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md",
      "https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html"
    ],
    "author": "Victor Sergeev, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/21",
    "modified": "2022/11/18",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\sc.exe",
        "CommandLine|contains|all": [
          "config",
          "binPath"
        ],
        "CommandLine|contains": [
          "powershell",
          "cmd ",
          "mshta",
          "wscript",
          "cscript",
          "rundll32",
          "svchost",
          "dllhost",
          "cmd.exe /c",
          "cmd.exe /k",
          "cmd.exe /r",
          "cmd /c",
          "cmd /k",
          "cmd /r",
          "C:\\Users\\Public",
          "\\Downloads\\",
          "\\Desktop\\",
          "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\",
          "C:\\Windows\\TEMP\\",
          "\\AppData\\Local\\Temp"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Attempt Via Existing Service Tampering",
    "id": 1009,
    "status": "test",
    "description": "Detects the modification of an existing service in order to execute an arbitrary payload when the service is started or killed as a potential method for persistence.",
    "references": [
      "https://pentestlab.blog/2020/01/22/persistence-modify-existing-service/"
    ],
    "author": "Sreeman",
    "date": "2020/09/29",
    "modified": "2023/02/04",
    "tags": [
      "attack.persistence",
      "attack.t1543.003",
      "attack.t1574.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sc": [
        {
          "CommandLine|contains|all": [
            "sc ",
            "config ",
            "binpath="
          ]
        },
        {
          "CommandLine|contains|all": [
            "sc ",
            "failure",
            "command="
          ]
        }
      ],
      "selection_reg_img": [
        {
          "CommandLine|contains|all": [
            "reg ",
            "add ",
            "FailureCommand"
          ]
        },
        {
          "CommandLine|contains|all": [
            "reg ",
            "add ",
            "ImagePath"
          ]
        }
      ],
      "selection_reg_ext": {
        "CommandLine|contains": [
          ".sh",
          ".exe",
          ".dll",
          ".bin$",
          ".bat",
          ".cmd",
          ".js",
          ".msh$",
          ".reg$",
          ".scr",
          ".ps",
          ".vb",
          ".jar",
          ".pl"
        ]
      },
      "condition": "selection_sc or all of selection_reg_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Stop Windows Service Via Sc.EXE",
    "id": 1010,
    "related": [
      {
        "id": "eb87818d-db5d-49cc-a987-d5da331fbd90",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the stopping of a Windows service via the \"sc.exe\" utility",
    "references": [
      "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc742107(v=ws.11)"
    ],
    "author": "Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/05",
    "modified": "2024/01/18",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "sc.exe"
        },
        {
          "Image|endswith": "\\sc.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " stop "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "There are many legitimate reasons to stop a service. This rule isn't looking for any suspicious behavior in particular. Filter legitimate activity accordingly"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Shim Database Persistence via Sdbinst.EXE",
    "id": 1011,
    "related": [
      {
        "id": "18ee686c-38a3-4f65-9f44-48a077141f42",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects installation of a new shim using sdbinst.exe.\nAdversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims\n",
    "references": [
      "https://www.mandiant.com/resources/blog/fin7-shim-databases-persistence"
    ],
    "author": "Markus Neis",
    "date": "2019/01/16",
    "modified": "2023/12/06",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\sdbinst.exe"
        },
        {
          "OriginalFileName": "sdbinst.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": ".sdb"
      },
      "filter_optional_iis": {
        "ParentImage|endswith": "\\msiexec.exe",
        "CommandLine|contains": [
          ":\\Program Files (x86)\\IIS Express\\iisexpressshim.sdb",
          ":\\Program Files\\IIS Express\\iisexpressshim.sdb"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uncommon Extension Shim Database Installation Via Sdbinst.EXE",
    "id": 1012,
    "related": [
      {
        "id": "517490a7-115a-48c6-8862-1a481504d5a8",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects installation of a potentially suspicious new shim with an uncommon extension using sdbinst.exe.\nAdversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims\n",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html",
      "https://github.com/nasbench/Misc-Research/blob/8ee690e43a379cbce8c9d61107442c36bd9be3d3/Other/Undocumented-Flags-Sdbinst.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/01",
    "modified": "2024/01/10",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\sdbinst.exe"
        },
        {
          "OriginalFileName": "sdbinst.exe"
        }
      ],
      "filter_main_legit_ext": {
        "CommandLine|contains": ".sdb"
      },
      "filter_main_svchost": [
        {
          "CommandLine|endswith": [
            " -c",
            " -f",
            " -mm",
            " -t"
          ]
        },
        {
          "CommandLine|contains": " -m -bg"
        }
      ],
      "filter_main_null": {
        "CommandLine": null
      },
      "filter_main_empty": {
        "CommandLine": ""
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sdclt Child Processes",
    "id": 1013,
    "status": "test",
    "description": "A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/6",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/3.B.2_C36B49B5-DF58-4A34-9FE9-56189B9DEFEA.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2021/11/27",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\sdclt.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sdiagnhost Calling Suspicious Child Process",
    "id": 1014,
    "status": "test",
    "description": "Detects sdiagnhost.exe calling a suspicious child process (e.g. used in exploits for Follina / CVE-2022-30190)",
    "references": [
      "https://twitter.com/nao_sec/status/1530196847679401984",
      "https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/",
      "https://app.any.run/tasks/f420d295-0457-4e9b-9b9e-6732be227583/",
      "https://app.any.run/tasks/c4117d9a-f463-461a-b90f-4cd258746798/"
    ],
    "author": "Nextron Systems",
    "date": "2022/06/01",
    "modified": "2022/10/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\sdiagnhost.exe",
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\cmd.exe",
          "\\mshta.exe",
          "\\cscript.exe",
          "\\wscript.exe",
          "\\taskkill.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\calc.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Suspicious Activity Using SeCEdit",
    "id": 1015,
    "status": "test",
    "description": "Detects potential suspicious behaviour using secedit.exe. Such as exporting or modifying the security policy",
    "references": [
      "https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/secedit"
    ],
    "author": "Janantha Marasinghe",
    "date": "2022/11/18",
    "modified": "2022/12/30",
    "tags": [
      "attack.discovery",
      "attack.persistence",
      "attack.defense_evasion",
      "attack.credential_access",
      "attack.privilege_escalation",
      "attack.t1562.002",
      "attack.t1547.001",
      "attack.t1505.005",
      "attack.t1556.002",
      "attack.t1562",
      "attack.t1574.007",
      "attack.t1564.002",
      "attack.t1546.008",
      "attack.t1546.007",
      "attack.t1547.014",
      "attack.t1547.010",
      "attack.t1547.002",
      "attack.t1557",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\secedit.exe"
        },
        {
          "OriginalFileName": "SeCEdit"
        }
      ],
      "selection_flags_discovery": {
        "CommandLine|contains|all": [
          "/export",
          "/cfg"
        ]
      },
      "selection_flags_configure": {
        "CommandLine|contains|all": [
          "/configure",
          "/db"
        ]
      },
      "condition": "selection_img and (1 of selection_flags_*)"
    },
    "falsepositives": [
      "Legitimate administrative use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Serv-U Process Pattern",
    "id": 1016,
    "status": "test",
    "description": "Detects a suspicious process pattern which could be a sign of an exploited Serv-U service",
    "references": [
      "https://www.microsoft.com/security/blog/2021/07/13/microsoft-discovers-threat-actor-targeting-solarwinds-serv-u-software-with-0-day-exploit/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/14",
    "modified": "2022/07/14",
    "tags": [
      "attack.credential_access",
      "attack.t1555",
      "cve.2021.35211"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\Serv-U.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wscript.exe",
          "\\cscript.exe",
          "\\sh.exe",
          "\\bash.exe",
          "\\schtasks.exe",
          "\\regsvr32.exe",
          "\\wmic.exe",
          "\\mshta.exe",
          "\\rundll32.exe",
          "\\msiexec.exe",
          "\\forfiles.exe",
          "\\scriptrunner.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate uses in which users or programs use the SSH service of Serv-U for remote command execution"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential SPN Enumeration Via Setspn.EXE",
    "id": 1017,
    "status": "test",
    "description": "Detects service principal name (SPN) enumeration used for Kerberoasting",
    "references": [
      "https://web.archive.org/web/20200329173843/https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation",
      "https://www.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation/?edition=2019"
    ],
    "author": "Markus Neis, keepwatch",
    "date": "2018/11/14",
    "modified": "2023/10/23",
    "tags": [
      "attack.credential_access",
      "attack.t1558.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": [
        {
          "Image|endswith": "\\setspn.exe"
        },
        {
          "OriginalFileName": "setspn.exe"
        },
        {
          "Description|contains|all": [
            "Query or reset the computer",
            "SPN attribute"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -q ",
          " /q "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administration activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution of Shutdown",
    "id": 1018,
    "status": "test",
    "description": "Use of the commandline to shutdown or reboot windows",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1529/T1529.md",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/shutdown"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "tags": [
      "attack.impact",
      "attack.t1529"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\shutdown.exe",
        "CommandLine|contains": [
          "/r ",
          "/s "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution of Shutdown to Log Out",
    "id": 1019,
    "status": "test",
    "description": "Detects the rare use of the command line tool shutdown to logoff a user",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/9e5b12c4912c07562aec7500447b11fa3e17e254/atomics/T1529/T1529.md",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/shutdown"
    ],
    "author": "frack113",
    "date": "2022/10/01",
    "tags": [
      "attack.impact",
      "attack.t1529"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\shutdown.exe",
        "CommandLine|contains": "/l"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uncommon Child Processes Of SndVol.exe",
    "id": 1020,
    "status": "experimental",
    "description": "Detects potentially uncommon child processes of SndVol.exe (the Windows volume mixer)",
    "references": [
      "https://twitter.com/Max_Mal_/status/1661322732456353792"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\SndVol.exe"
      },
      "filter_main_rundll32": {
        "Image|endswith": "\\rundll32.exe",
        "CommandLine|contains": " shell32.dll,Control_RunDLL "
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Audio Capture via SoundRecorder",
    "id": 1021,
    "status": "test",
    "description": "Detect attacker collecting audio via SoundRecorder application.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1123/T1123.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/f72a98cb-7b3d-4100-99c3-a138b6e9ff6e.html"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2019/10/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.collection",
      "attack.t1123"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\SoundRecorder.exe",
        "CommandLine|contains": "/FILE"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate audio capture by legitimate user."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Splwow64 Without Params",
    "id": 1022,
    "status": "test",
    "description": "Detects suspicious Splwow64.exe process without any command line parameters",
    "references": [
      "https://twitter.com/sbousseaden/status/1429401053229891590?s=12"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\splwow64.exe",
        "CommandLine|endswith": "splwow64.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Spool Service Child Process",
    "id": 1023,
    "status": "test",
    "description": "Detects suspicious print spool service (spoolsv.exe) child processes.",
    "references": [
      "https://github.com/microsoft/Microsoft-365-Defender-Hunting-Queries/blob/efa17a600b43c897b4b7463cc8541daa1987eeb4/Exploits/Print%20Spooler%20RCE/Suspicious%20Spoolsv%20Child%20Process.md"
    ],
    "author": "Justin C. (@endisphotic), @dreadphones (detection), Thomas Patzke (Sigma rule)",
    "date": "2021/07/11",
    "modified": "2023/02/09",
    "tags": [
      "attack.execution",
      "attack.t1203",
      "attack.privilege_escalation",
      "attack.t1068"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "spoolsv": {
        "ParentImage|endswith": "\\spoolsv.exe",
        "IntegrityLevel": "System"
      },
      "suspicious_unrestricted": {
        "Image|endswith": [
          "\\gpupdate.exe",
          "\\whoami.exe",
          "\\nltest.exe",
          "\\taskkill.exe",
          "\\wmic.exe",
          "\\taskmgr.exe",
          "\\sc.exe",
          "\\findstr.exe",
          "\\curl.exe",
          "\\wget.exe",
          "\\certutil.exe",
          "\\bitsadmin.exe",
          "\\accesschk.exe",
          "\\wevtutil.exe",
          "\\bcdedit.exe",
          "\\fsutil.exe",
          "\\cipher.exe",
          "\\schtasks.exe",
          "\\write.exe",
          "\\wuauclt.exe",
          "\\systeminfo.exe",
          "\\reg.exe",
          "\\query.exe"
        ]
      },
      "suspicious_net": {
        "Image|endswith": [
          "\\net.exe",
          "\\net1.exe"
        ]
      },
      "suspicious_net_filter": {
        "CommandLine|contains": "start"
      },
      "suspicious_cmd": {
        "Image|endswith": "\\cmd.exe"
      },
      "suspicious_cmd_filter": {
        "CommandLine|contains": [
          ".spl",
          "route add",
          "program files"
        ]
      },
      "suspicious_netsh": {
        "Image|endswith": "\\netsh.exe"
      },
      "suspicious_netsh_filter": {
        "CommandLine|contains": [
          "add portopening",
          "rule name"
        ]
      },
      "suspicious_powershell": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ]
      },
      "suspicious_powershell_filter": {
        "CommandLine|contains": ".spl"
      },
      "suspicious_rundll32_img": [
        {
          "Image|endswith": "\\rundll32.exe"
        },
        {
          "OriginalFileName": "RUNDLL32.EXE"
        }
      ],
      "suspicious_rundll32_cli": {
        "CommandLine|endswith": "rundll32.exe"
      },
      "condition": "spoolsv and ( suspicious_unrestricted or (suspicious_net and not suspicious_net_filter) or (suspicious_cmd and not suspicious_cmd_filter) or (suspicious_netsh and not suspicious_netsh_filter) or (suspicious_powershell and not suspicious_powershell_filter) or all of suspicious_rundll32_* )"
    },
    "fields": [
      "Image",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Veeam Backup Database Suspicious Query",
    "id": 1024,
    "status": "experimental",
    "description": "Detects potentially suspicious SQL queries using SQLCmd targeting the Veeam backup databases in order to steal information.",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/04",
    "tags": [
      "attack.collection",
      "attack.t1005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sql": {
        "Image|endswith": "\\sqlcmd.exe",
        "CommandLine|contains|all": [
          "VeeamBackup",
          "From "
        ]
      },
      "selection_db": {
        "CommandLine|contains": [
          "BackupRepositories",
          "Backups",
          "Credentials",
          "HostCreds",
          "SmbFileShares",
          "Ssh_creds",
          "VSphereInfo"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "VeeamBackup Database Credentials Dump Via Sqlcmd.EXE",
    "id": 1025,
    "status": "test",
    "description": "Detects dump of credentials in VeeamBackup dbo",
    "references": [
      "https://thedfirreport.com/2021/12/13/diavol-ransomware/",
      "https://forums.veeam.com/veeam-backup-replication-f2/recover-esxi-password-in-veeam-t34630.html"
    ],
    "author": "frack113",
    "date": "2021/12/20",
    "modified": "2023/02/13",
    "tags": [
      "attack.collection",
      "attack.t1005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_tools": {
        "Image|endswith": "\\sqlcmd.exe"
      },
      "selection_query": {
        "CommandLine|contains|all": [
          "SELECT",
          "TOP",
          "[VeeamBackup].[dbo].[Credentials]"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SQLite Chromium Profile Data DB Access",
    "id": 1026,
    "status": "test",
    "description": "Detect usage of the \"sqlite\" binary to query databases in Chromium-based browsers for potential data stealing.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/84d9edaaaa2c5511144521b0e4af726d1c7276ce/atomics/T1539/T1539.md#atomic-test-2---steal-chrome-cookies-windows",
      "https://blog.cyble.com/2022/04/21/prynt-stealer-a-new-info-stealer-performing-clipper-and-keylogger-activities/"
    ],
    "author": "TropChaud",
    "date": "2022/12/19",
    "modified": "2023/01/19",
    "tags": [
      "attack.credential_access",
      "attack.t1539",
      "attack.t1555.003",
      "attack.collection",
      "attack.t1005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sql": [
        {
          "Product": "SQLite"
        },
        {
          "Image|endswith": [
            "\\sqlite.exe",
            "\\sqlite3.exe"
          ]
        }
      ],
      "selection_chromium": {
        "CommandLine|contains": [
          "\\User Data\\",
          "\\Opera Software\\",
          "\\ChromiumViewer\\"
        ]
      },
      "selection_data": {
        "CommandLine|contains": [
          "Login Data",
          "Cookies",
          "Web Data",
          "History",
          "Bookmarks"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SQLite Firefox Profile Data DB Access",
    "id": 1027,
    "status": "test",
    "description": "Detect usage of the \"sqlite\" binary to query databases in Firefox and other Gecko-based browsers for potential data stealing.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1539/T1539.md#atomic-test-1---steal-firefox-cookies-windows",
      "https://blog.cyble.com/2022/04/21/prynt-stealer-a-new-info-stealer-performing-clipper-and-keylogger-activities/"
    ],
    "author": "frack113",
    "date": "2022/04/08",
    "modified": "2023/01/19",
    "tags": [
      "attack.credential_access",
      "attack.t1539",
      "attack.collection",
      "attack.t1005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sql": [
        {
          "Product": "SQLite"
        },
        {
          "Image|endswith": [
            "\\sqlite.exe",
            "\\sqlite3.exe"
          ]
        }
      ],
      "selection_firefox": {
        "CommandLine|contains": [
          "cookies.sqlite",
          "places.sqlite"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Arbitrary File Download Via Squirrel.EXE",
    "id": 1028,
    "related": [
      {
        "id": "45239e6a-b035-4aaf-b339-8ad379fcb67e",
        "type": "similar"
      },
      {
        "id": "fa4b21c9-0057-4493-b289-2556416ae4d7",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects the usage of the \"Squirrel.exe\" to download arbitrary files. This binary is part of multiple Electron based software installations (Slack, Teams, Discord, etc.)\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Squirrel/",
      "http://www.hexacorn.com/blog/2019/03/30/sqirrel-packages-manager-as-a-lolbin-a-k-a-many-electron-apps-are-lolbins-by-default/",
      "http://www.hexacorn.com/blog/2018/08/16/squirrel-as-a-lolbin/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Karneades / Markus Neis, Jonhnathan Ribeiro, oscd.community",
    "date": "2022/06/09",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\squirrel.exe",
          "\\update.exe"
        ]
      },
      "selection_download_cli": {
        "CommandLine|contains": [
          " --download ",
          " --update ",
          " --updateRollback="
        ]
      },
      "selection_download_http_keyword": {
        "CommandLine|contains": "http"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Expected FP with some Electron based applications such as (1Clipboard, Beaker Browser, Caret, Discord, GitHub Desktop, etc.)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Proxy Execution Via Squirrel.EXE",
    "id": 1029,
    "related": [
      {
        "id": "1e75c1cc-c5d4-42aa-ac3d-91b0b68b3b4c",
        "type": "similar"
      },
      {
        "id": "fa4b21c9-0057-4493-b289-2556416ae4d7",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects the usage of the \"Squirrel.exe\" binary to execute arbitrary processes. This binary is part of multiple Electron based software installations (Slack, Teams, Discord, etc.)\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Squirrel/",
      "http://www.hexacorn.com/blog/2019/03/30/sqirrel-packages-manager-as-a-lolbin-a-k-a-many-electron-apps-are-lolbins-by-default/",
      "http://www.hexacorn.com/blog/2018/08/16/squirrel-as-a-lolbin/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Karneades / Markus Neis, Jonhnathan Ribeiro, oscd.community",
    "date": "2022/06/09",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\squirrel.exe",
          "\\update.exe"
        ]
      },
      "selection_exec": {
        "CommandLine|contains": [
          "--processStart",
          "--processStartAndWait",
          "--createShortcut"
        ]
      },
      "filter_optional_discord": {
        "CommandLine|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\Discord\\Update.exe",
          " --processStart",
          "Discord.exe"
        ]
      },
      "filter_optional_github_desktop": {
        "CommandLine|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\GitHubDesktop\\Update.exe",
          "GitHubDesktop.exe"
        ],
        "CommandLine|contains": [
          "--createShortcut",
          "--processStartAndWait"
        ]
      },
      "filter_optional_teams": {
        "CommandLine|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\Microsoft\\Teams\\Update.exe",
          "Teams.exe"
        ],
        "CommandLine|contains": [
          "--processStart",
          "--createShortcut"
        ]
      },
      "filter_optional_yammer": {
        "CommandLine|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\yammerdesktop\\Update.exe",
          "Yammer.exe"
        ],
        "CommandLine|contains": [
          "--processStart",
          "--createShortcut"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Expected FP with some Electron based applications such as (1Clipboard, Beaker Browser, Caret, Discord, GitHub Desktop, etc.)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Port Forwarding Activity Via SSH.EXE",
    "id": 1030,
    "status": "experimental",
    "description": "Detects port forwarding activity via SSH.exe",
    "references": [
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/12",
    "modified": "2023/11/06",
    "tags": [
      "attack.command_and_control",
      "attack.lateral_movement",
      "attack.t1572",
      "attack.t1021.001",
      "attack.t1021.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\ssh.exe",
        "CommandLine|contains": [
          " -R ",
          " /R "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative activity using a remote port forwarding to a local port"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential RDP Tunneling Via SSH",
    "id": 1031,
    "related": [
      {
        "id": "f38ce0b9-5e97-4b47-a211-7dc8d8b871da",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Execution of ssh.exe to perform data exfiltration and tunneling through RDP",
    "references": [
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/12",
    "modified": "2023/01/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1572"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\ssh.exe",
        "CommandLine|contains": ":3389"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Amazon SSM Agent Hijacking",
    "id": 1032,
    "status": "experimental",
    "description": "Detects potential Amazon SSM agent hijack attempts as outlined in the Mitiga research report.",
    "references": [
      "https://www.mitiga.io/blog/mitiga-security-advisory-abusing-the-ssm-agent-as-a-remote-access-trojan",
      "https://www.bleepingcomputer.com/news/security/amazons-aws-ssm-agent-can-be-used-as-post-exploitation-rat-malware/",
      "https://www.helpnetsecurity.com/2023/08/02/aws-instances-attackers-access/"
    ],
    "author": "Muhammad Faisal",
    "date": "2023/08/02",
    "tags": [
      "attack.command_and_control",
      "attack.persistence",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\amazon-ssm-agent.exe",
        "CommandLine|contains|all": [
          "-register ",
          "-code ",
          "-id ",
          "-region "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate activity of system administrators"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execution via stordiag.exe",
    "id": 1033,
    "status": "test",
    "description": "Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe and fltmc.exe",
    "references": [
      "https://strontic.github.io/xcyclopedia/library/stordiag.exe-1F08FC87C373673944F6A7E8B18CD845.html",
      "https://twitter.com/eral4m/status/1451112385041911809"
    ],
    "author": "Austin Songer (@austinsonger)",
    "date": "2021/10/21",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\stordiag.exe",
        "Image|endswith": [
          "\\schtasks.exe",
          "\\systeminfo.exe",
          "\\fltmc.exe"
        ]
      },
      "filter": {
        "ParentImage|startswith": [
          "c:\\windows\\system32\\",
          "c:\\windows\\syswow64\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate usage of stordiag.exe."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Start of NT Virtual DOS Machine",
    "id": 1034,
    "status": "test",
    "description": "Ntvdm.exe allows the execution of 16-bit Windows applications on 32-bit Windows operating systems, as well as the execution of both 16-bit and 32-bit DOS applications",
    "references": [
      "https://docs.microsoft.com/en-us/windows/compatibility/ntvdm-and-16-bit-app-support",
      "https://support.microsoft.com/fr-fr/topic/an-ms-dos-based-program-that-uses-the-ms-dos-protected-mode-interface-crashes-on-a-computer-that-is-running-windows-7-5dc739ea-987b-b458-15e4-d28d5cca63c7",
      "https://app.any.run/tasks/93fe92fa-8b2b-4d92-8c09-a841aed2e793/",
      "https://app.any.run/tasks/214094a7-0abc-4a7b-a564-1b757faed79d/"
    ],
    "author": "frack113",
    "date": "2022/07/16",
    "modified": "2022/07/16",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\ntvdm.exe",
          "\\csrstub.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Abused Debug Privilege by Arbitrary Parent Processes",
    "id": 1035,
    "status": "test",
    "description": "Detection of unusual child processes by different system processes",
    "references": [
      "https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-74-638.jpg"
    ],
    "author": "Semanur Guneysu @semanurtg, oscd.community",
    "date": "2020/10/28",
    "modified": "2022/11/11",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\winlogon.exe",
          "\\services.exe",
          "\\lsass.exe",
          "\\csrss.exe",
          "\\smss.exe",
          "\\wininit.exe",
          "\\spoolsv.exe",
          "\\searchindexer.exe"
        ],
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\cmd.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll",
            "Cmd.Exe"
          ]
        }
      ],
      "filter": {
        "CommandLine|contains|all": [
          " route ",
          " ADD "
        ]
      },
      "condition": "all of selection_* and not filter"
    },
    "fields": [
      "ParentImage",
      "Image",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "User Added to Local Administrators Group",
    "id": 1036,
    "related": [
      {
        "id": "ffa28e60-bdb1-46e0-9f82-05f7a61cc06e",
        "type": "similar"
      },
      {
        "id": "10fb649c-3600-4d37-b1e6-56ea90bb7e09",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects addition of users to the local administrator group via \"Net\" or \"Add-LocalGroupMember\".",
    "references": [
      "https://blog.talosintelligence.com/2022/08/recent-cyber-attack.html?m=1"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2023/03/02",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_main": [
        {
          "CommandLine|contains|all": [
            "localgroup ",
            " /add"
          ]
        },
        {
          "CommandLine|contains|all": [
            "Add-LocalGroupMember ",
            " -Group "
          ]
        }
      ],
      "selection_group": {
        "CommandLine|contains": [
          " administrators ",
          " administrateur"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "User Added To Highly Privileged Group",
    "id": 1037,
    "related": [
      {
        "id": "ffa28e60-bdb1-46e0-9f82-05f7a61cc06e",
        "type": "similar"
      },
      {
        "id": "ad720b90-25ad-43ff-9b5e-5c841facc8e5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects addition of users to highly privileged groups via \"Net\" or \"Add-LocalGroupMember\".",
    "references": [
      "https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/02/23",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_main": [
        {
          "CommandLine|contains|all": [
            "localgroup ",
            " /add"
          ]
        },
        {
          "CommandLine|contains|all": [
            "Add-LocalGroupMember ",
            " -Group "
          ]
        }
      ],
      "selection_group": {
        "CommandLine|contains": [
          "Group Policy Creator Owners",
          "Schema Admins"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity that must be investigated"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "User Added to Remote Desktop Users Group",
    "id": 1038,
    "related": [
      {
        "id": "ad720b90-25ad-43ff-9b5e-5c841facc8e5",
        "type": "similar"
      },
      {
        "id": "10fb649c-3600-4d37-b1e6-56ea90bb7e09",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects addition of users to the local Remote Desktop Users group via \"Net\" or \"Add-LocalGroupMember\".",
    "references": [
      "https://www.microsoft.com/security/blog/2021/11/16/evolving-trends-in-iranian-threat-actor-activity-mstic-presentation-at-cyberwarcon-2021/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/12/06",
    "modified": "2022/09/09",
    "tags": [
      "attack.persistence",
      "attack.lateral_movement",
      "attack.t1133",
      "attack.t1136.001",
      "attack.t1021.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_main": [
        {
          "CommandLine|contains|all": [
            "localgroup ",
            " /add"
          ]
        },
        {
          "CommandLine|contains|all": [
            "Add-LocalGroupMember ",
            " -Group "
          ]
        }
      ],
      "selection_group": {
        "CommandLine|contains": [
          "Remote Desktop Users",
          "Utilisateurs du Bureau \u00c3\u00a0 distance",
          "Usuarios de escritorio remoto"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Execute From Alternate Data Streams",
    "id": 1039,
    "status": "test",
    "description": "Detects execution from an Alternate Data Stream (ADS). Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.004/T1564.004.md"
    ],
    "author": "frack113",
    "date": "2021/09/01",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_stream": {
        "CommandLine|contains": "txt:"
      },
      "selection_tools_type": {
        "CommandLine|contains|all": [
          "type ",
          " > "
        ]
      },
      "selection_tools_makecab": {
        "CommandLine|contains|all": [
          "makecab ",
          ".cab"
        ]
      },
      "selection_tools_reg": {
        "CommandLine|contains|all": [
          "reg ",
          " export "
        ]
      },
      "selection_tools_regedit": {
        "CommandLine|contains|all": [
          "regedit ",
          " /E "
        ]
      },
      "selection_tools_esentutl": {
        "CommandLine|contains|all": [
          "esentutl ",
          " /y ",
          " /d ",
          " /o "
        ]
      },
      "condition": "selection_stream and (1 of selection_tools_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Always Install Elevated Windows Installer",
    "id": 1040,
    "status": "test",
    "description": "Detects Windows Installer service (msiexec.exe) trying to install MSI packages with SYSTEM privilege",
    "references": [
      "https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-48-638.jpg"
    ],
    "author": "Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community",
    "date": "2020/10/13",
    "modified": "2023/03/23",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_user": {
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "selection_image_1": {
        "Image|contains|all": [
          "\\Windows\\Installer\\",
          "msi"
        ],
        "Image|endswith": "tmp"
      },
      "selection_image_2": {
        "Image|endswith": "\\msiexec.exe",
        "IntegrityLevel": "System"
      },
      "filter_installer": {
        "ParentImage": "C:\\Windows\\System32\\services.exe"
      },
      "filter_repair": [
        {
          "CommandLine|endswith": "\\system32\\msiexec.exe /V"
        },
        {
          "ParentCommandLine|endswith": "\\system32\\msiexec.exe /V"
        }
      ],
      "filter_sophos": {
        "ParentImage|startswith": "C:\\ProgramData\\Sophos\\"
      },
      "filter_avira": {
        "ParentImage|startswith": "C:\\ProgramData\\Avira\\"
      },
      "filter_avast": {
        "ParentImage|startswith": [
          "C:\\Program Files\\Avast Software\\",
          "C:\\Program Files (x86)\\Avast Software\\"
        ]
      },
      "filter_google_update": {
        "ParentImage|startswith": [
          "C:\\Program Files\\Google\\Update\\",
          "C:\\Program Files (x86)\\Google\\Update\\"
        ]
      },
      "condition": "1 of selection_image_* and selection_user and not 1 of filter_*"
    },
    "falsepositives": [
      "System administrator usage",
      "Anti virus products",
      "WindowsApps located in \"C:\\Program Files\\WindowsApps\\\""
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Windows App Activity",
    "id": 1041,
    "status": "experimental",
    "description": "Detects potentially suspicious child process of applications launched from inside the WindowsApps directory. This could be a sign of a rogue \".appx\" package installation/execution",
    "references": [
      "https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/12",
    "modified": "2023/08/31",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|contains": "C:\\Program Files\\WindowsApps\\"
      },
      "selection_susp_img": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe"
        ]
      },
      "selection_susp_cli": {
        "CommandLine|contains": [
          "cmd /c",
          "Invoke-",
          "Base64"
        ]
      },
      "filter_optional_terminal": {
        "ParentImage|contains": ":\\Program Files\\WindowsApps\\Microsoft.WindowsTerminal",
        "ParentImage|endswith": "\\WindowsTerminal.exe",
        "Image|endswith": [
          "\\powershell.exe",
          "\\cmd.exe",
          "\\pwsh.exe"
        ]
      },
      "condition": "selection_parent and 1 of selection_susp_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate packages that make use of external binaries such as Windows Terminal"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary Shell Command Execution Via Settingcontent-Ms",
    "id": 1042,
    "status": "test",
    "description": "The .SettingContent-ms file type was introduced in Windows 10 and allows a user to create \"shortcuts\" to various Windows 10 setting pages. These files are simply XML and contain paths to various Windows 10 settings binaries.",
    "references": [
      "https://posts.specterops.io/the-tale-of-settingcontent-ms-files-f1ea253e4d39"
    ],
    "author": "Sreeman",
    "date": "2020/03/13",
    "modified": "2022/04/14",
    "tags": [
      "attack.t1204",
      "attack.t1566.001",
      "attack.execution",
      "attack.initial_access"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": ".SettingContent-ms"
      },
      "filter": {
        "CommandLine|contains": "immersivecontrolpanel"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "ParentProcess",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Phishing Pattern ISO in Archive",
    "id": 1043,
    "status": "test",
    "description": "Detects cases in which an ISO files is opend within an archiver like 7Zip or Winrar, which is a sign of phishing as threat actors put small ISO files in archives as email attachments to bypass certain filters and protective measures (mark of web)",
    "references": [
      "https://twitter.com/1ZRR4H/status/1534259727059787783",
      "https://app.any.run/tasks/e1fe6a62-bce8-4323-a49a-63795d9afd5d/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/07",
    "tags": [
      "attack.initial_access",
      "attack.t1566"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\Winrar.exe",
          "\\7zFM.exe",
          "\\peazip.exe"
        ],
        "Image|endswith": [
          "\\isoburn.exe",
          "\\PowerISO.exe",
          "\\ImgBurn.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate cases in which archives contain ISO or IMG files and the user opens the archive and the image via clicking and not extraction"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Automated Collection Command Prompt",
    "id": 1044,
    "status": "test",
    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1119/T1119.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.001/T1552.001.md"
    ],
    "author": "frack113",
    "date": "2021/07/28",
    "modified": "2022/11/11",
    "tags": [
      "attack.collection",
      "attack.t1119",
      "attack.credential_access",
      "attack.t1552.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_ext": {
        "CommandLine|contains": [
          ".doc",
          ".docx",
          ".xls",
          ".xlsx",
          ".ppt",
          ".pptx",
          ".rtf",
          ".pdf",
          ".txt"
        ]
      },
      "selection_other_dir": {
        "CommandLine|contains|all": [
          "dir ",
          " /b ",
          " /s "
        ]
      },
      "selection_other_findstr": {
        "OriginalFileName": "FINDSTR.EXE",
        "CommandLine|contains": [
          " /e ",
          " /si "
        ]
      },
      "condition": "selection_ext and 1 of selection_other_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Bad Opsec Defaults Sacrificial Processes With Improper Arguments",
    "id": 1045,
    "related": [
      {
        "id": "f5647edc-a7bf-4737-ab50-ef8c60dc3add",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects attackers using tooling with bad opsec defaults.\nE.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run.\nOne trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.\n",
    "references": [
      "https://blog.malwarebytes.com/malwarebytes-news/2020/10/kraken-attack-abuses-wer-service/",
      "https://www.cobaltstrike.com/help-opsec",
      "https://twitter.com/CyberRaiju/status/1251492025678983169",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/regsvr32",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rundll32",
      "https://docs.microsoft.com/en-us/dotnet/framework/tools/regasm-exe-assembly-registration-tool",
      "https://docs.microsoft.com/en-us/dotnet/framework/tools/regsvcs-exe-net-services-installation-tool#feedback"
    ],
    "author": "Oleg Kolesnikov @securonix invrep_de, oscd.community, Florian Roth (Nextron Systems), Christian Burkard (Nextron Systems)",
    "date": "2020/10/23",
    "modified": "2023/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_werfault": {
        "Image|endswith": "\\WerFault.exe",
        "CommandLine|endswith": "WerFault.exe"
      },
      "selection_rundll32": {
        "Image|endswith": "\\rundll32.exe",
        "CommandLine|endswith": "rundll32.exe"
      },
      "selection_regsvcs": {
        "Image|endswith": "\\regsvcs.exe",
        "CommandLine|endswith": "regsvcs.exe"
      },
      "selection_regasm": {
        "Image|endswith": "\\regasm.exe",
        "CommandLine|endswith": "regasm.exe"
      },
      "selection_regsvr32": {
        "Image|endswith": "\\regsvr32.exe",
        "CommandLine|endswith": "regsvr32.exe"
      },
      "filter_main_edge_update": {
        "ParentImage|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\Microsoft\\EdgeUpdate\\Install\\{"
        ]
      },
      "filter_optional_chrome_installer": {
        "ParentImage|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\Google\\Chrome\\Application\\"
        ],
        "ParentImage|endswith": "\\Installer\\setup.exe",
        "ParentCommandLine|contains": "--uninstall --channel=stable",
        "Image|endswith": "\\rundll32.exe",
        "CommandLine|endswith": "rundll32.exe"
      },
      "condition": "1 of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Commandline Obfuscation Using Escape Characters",
    "id": 1046,
    "status": "test",
    "description": "Detects potential commandline obfuscation using known escape characters",
    "references": [
      "https://twitter.com/vysecurity/status/885545634958385153",
      "https://twitter.com/Hexacorn/status/885553465417756673",
      "https://twitter.com/Hexacorn/status/885570278637678592",
      "https://www.mandiant.com/resources/blog/obfuscation-wild-targeted-attackers-lead-way-evasion-techniques",
      "https://web.archive.org/web/20190213114956/http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/"
    ],
    "author": "juju4",
    "date": "2018/12/11",
    "modified": "2023/03/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1140"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "h^t^t^p",
          "h\"t\"t\"p"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Command Line Path Traversal Evasion Attempt",
    "id": 1047,
    "status": "test",
    "description": "Detects potential evasion or obfuscation attempts using bogus path traversal via the commandline",
    "references": [
      "https://twitter.com/hexacorn/status/1448037865435320323",
      "https://twitter.com/Gal_B1t/status/1062971006078345217"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/10/26",
    "modified": "2023/03/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "Image|contains": "\\Windows\\",
        "CommandLine|contains": [
          "\\..\\Windows\\",
          "\\..\\System32\\",
          "\\..\\..\\"
        ]
      },
      "selection_2": {
        "CommandLine|contains": ".exe\\..\\"
      },
      "filter_optional_google_drive": {
        "CommandLine|contains": "\\Google\\Drive\\googledrivesync.exe\\..\\"
      },
      "filter_optional_citrix": {
        "CommandLine|contains": "\\Citrix\\Virtual Smart Card\\Citrix.Authentication.VirtualSmartcard.Launcher.exe\\..\\"
      },
      "condition": "1 of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Google Drive",
      "Citrix"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Browser Data Stealing",
    "id": 1048,
    "related": [
      {
        "id": "fc028194-969d-4122-8abe-0470d5b8f12f",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\nWeb browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.\nWeb browsers typically store the credentials in an encrypted format within a credential store.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1555.003/T1555.003.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/23",
    "modified": "2023/08/29",
    "tags": [
      "attack.credential_access",
      "attack.t1555.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": [
        {
          "CommandLine|contains": [
            "copy-item",
            "copy ",
            "cpi ",
            " cp ",
            "move ",
            "move-item",
            " mi ",
            " mv "
          ]
        },
        {
          "Image|endswith": [
            "\\xcopy.exe",
            "\\robocopy.exe"
          ]
        },
        {
          "OriginalFileName": [
            "XCOPY.EXE",
            "robocopy.exe"
          ]
        }
      ],
      "selection_path": {
        "CommandLine|contains": [
          "\\Amigo\\User Data",
          "\\BraveSoftware\\Brave-Browser\\User Data",
          "\\CentBrowser\\User Data",
          "\\Chromium\\User Data",
          "\\CocCoc\\Browser\\User Data",
          "\\Comodo\\Dragon\\User Data",
          "\\Elements Browser\\User Data",
          "\\Epic Privacy Browser\\User Data",
          "\\Google\\Chrome Beta\\User Data",
          "\\Google\\Chrome SxS\\User Data",
          "\\Google\\Chrome\\User Data\\",
          "\\Kometa\\User Data",
          "\\Maxthon5\\Users",
          "\\Microsoft\\Edge\\User Data",
          "\\Mozilla\\Firefox\\Profiles",
          "\\Nichrome\\User Data",
          "\\Opera Software\\Opera GX Stable\\",
          "\\Opera Software\\Opera Neon\\User Data",
          "\\Opera Software\\Opera Stable\\",
          "\\Orbitum\\User Data",
          "\\QIP Surf\\User Data",
          "\\Sputnik\\User Data",
          "\\Torch\\User Data",
          "\\uCozMedia\\Uran\\User Data",
          "\\Vivaldi\\User Data"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Copy From Or To Admin Share Or Sysvol Folder",
    "id": 1049,
    "status": "test",
    "description": "Detects a copy command or a copy utility execution to or from an Admin share or remote",
    "references": [
      "https://twitter.com/SBousseaden/status/1211636381086339073",
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view",
      "https://www.elastic.co/guide/en/security/current/remote-file-copy-to-a-hidden-share.html",
      "https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/"
    ],
    "author": "Florian Roth (Nextron Systems), oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, Nasreddine Bencherchali",
    "date": "2019/12/30",
    "modified": "2023/11/15",
    "tags": [
      "attack.lateral_movement",
      "attack.collection",
      "attack.exfiltration",
      "attack.t1039",
      "attack.t1048",
      "attack.t1021.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_target": {
        "CommandLine|contains": [
          "\\\\\\\\*$",
          "\\Sysvol\\"
        ]
      },
      "selection_other_tools": [
        {
          "Image|endswith": [
            "\\robocopy.exe",
            "\\xcopy.exe"
          ]
        },
        {
          "OriginalFileName": [
            "robocopy.exe",
            "XCOPY.EXE"
          ]
        }
      ],
      "selection_cmd_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cmd_cli": {
        "CommandLine|contains": "copy"
      },
      "selection_pwsh_img": [
        {
          "Image|contains": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_pwsh_cli": {
        "CommandLine|contains": [
          "copy-item",
          "copy ",
          "cpi ",
          " cp ",
          "move ",
          "move-item",
          " mi ",
          " mv "
        ]
      },
      "condition": "selection_target and (selection_other_tools or all of selection_cmd_* or all of selection_pwsh_*)"
    },
    "falsepositives": [
      "Administrative scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Copy From or To System Directory",
    "id": 1050,
    "related": [
      {
        "id": "855bc8b5-2ae8-402e-a9ed-b889e6df1900",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a suspicious copy operation that tries to copy a program from system (System32, SysWOW64, WinSxS) directories to another on disk.\nOften used to move LOLBINs such as 'certutil' or 'desktopimgdownldr' to a different location with a different name in order to bypass detections based on locations.\n",
    "references": [
      "https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120",
      "https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html",
      "https://thedfirreport.com/2023/08/28/html-smuggling-leads-to-domain-wide-ransomware/"
    ],
    "author": "Florian Roth (Nextron Systems), Markus Neis, Tim Shelton (HAWK.IO), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/07/03",
    "modified": "2023/08/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains": "copy "
      },
      "selection_pwsh": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          "copy-item",
          " copy ",
          "cpi ",
          " cp "
        ]
      },
      "selection_other": [
        {
          "Image|endswith": [
            "\\robocopy.exe",
            "\\xcopy.exe"
          ]
        },
        {
          "OriginalFileName": [
            "robocopy.exe",
            "XCOPY.EXE"
          ]
        }
      ],
      "target": {
        "CommandLine|contains": [
          "\\System32",
          "\\SysWOW64",
          "\\WinSxS"
        ]
      },
      "condition": "1 of selection_* and target"
    },
    "falsepositives": [
      "Depend on scripts and administrative tools used in the monitored environment (For example an admin scripts like https://www.itexperience.net/sccm-batch-files-and-32-bits-processes-on-64-bits-os/)",
      "When cmd.exe and xcopy.exe are called directly",
      "When the command contains the keywords but not in the correct order"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LOL-Binary Copied From System Directory",
    "id": 1051,
    "related": [
      {
        "id": "fff9d2b7-e11c-4a69-93d3-40ef66189767",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects a suspicious copy operation that tries to copy a known LOLBIN from system (System32, SysWOW64, WinSxS) directories to another on disk in order to bypass detections based on locations.\n",
    "references": [
      "https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120",
      "https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html",
      "https://thedfirreport.com/2023/08/28/html-smuggling-leads-to-domain-wide-ransomware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_tools_cmd": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains": "copy "
      },
      "selection_tools_pwsh": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          "copy-item",
          " copy ",
          "cpi ",
          " cp "
        ]
      },
      "selection_tools_other": [
        {
          "Image|endswith": [
            "\\robocopy.exe",
            "\\xcopy.exe"
          ]
        },
        {
          "OriginalFileName": [
            "robocopy.exe",
            "XCOPY.EXE"
          ]
        }
      ],
      "selection_target_path": {
        "CommandLine|contains": [
          "\\System32",
          "\\SysWOW64",
          "\\WinSxS"
        ]
      },
      "selection_target_lolbin": {
        "CommandLine|contains": [
          "\\bitsadmin.exe",
          "\\calc.exe",
          "\\certutil.exe",
          "\\cmdl32.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\rundll32.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "1 of selection_tools_* and all of selection_target_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Crypto Mining Activity",
    "id": 1052,
    "status": "stable",
    "description": "Detects command line parameters or strings often used by crypto miners",
    "references": [
      "https://www.poolwatch.io/coin/monero"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/10/26",
    "modified": "2023/02/13",
    "tags": [
      "attack.impact",
      "attack.t1496"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          " --cpu-priority=",
          "--donate-level=0",
          " -o pool.",
          " --nicehash",
          " --algo=rx/0 ",
          "stratum+tcp://",
          "stratum+udp://",
          "LS1kb25hdGUtbGV2ZWw9",
          "0tZG9uYXRlLWxldmVsP",
          "tLWRvbmF0ZS1sZXZlbD",
          "c3RyYXR1bSt0Y3A6Ly",
          "N0cmF0dW0rdGNwOi8v",
          "zdHJhdHVtK3RjcDovL",
          "c3RyYXR1bSt1ZHA6Ly",
          "N0cmF0dW0rdWRwOi8v",
          "zdHJhdHVtK3VkcDovL"
        ]
      },
      "filter": {
        "CommandLine|contains": [
          " pool.c ",
          " pool.o ",
          "gcc -"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate use of crypto miners",
      "Some build frameworks"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Data Exfiltration Activity Via CommandLine Tools",
    "id": 1053,
    "status": "experimental",
    "description": "Detects the use of various CLI utilities exfiltrating data via web requests",
    "references": [
      "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/02",
    "modified": "2023/07/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_iwr": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\cmd.exe"
        ],
        "CommandLine|contains": [
          "Invoke-WebRequest",
          "iwr ",
          "wget ",
          "curl "
        ],
        "CommandLine|contains|all": [
          " -ur",
          " -me",
          " -b",
          " POST "
        ]
      },
      "selection_curl": {
        "Image|endswith": "\\curl.exe",
        "CommandLine|contains": "--ur"
      },
      "selection_curl_data": {
        "CommandLine|contains": [
          " -d ",
          " --data "
        ]
      },
      "selection_wget": {
        "Image|endswith": "\\wget.exe",
        "CommandLine|contains": [
          "--post-data",
          "--post-file"
        ]
      },
      "payloads": [
        {
          "CommandLine|contains": [
            "Get-Content",
            "GetBytes",
            "hostname",
            "ifconfig",
            "ipconfig",
            "net view",
            "netstat",
            "nltest",
            "qprocess",
            "sc query",
            "systeminfo",
            "tasklist",
            "ToBase64String",
            "whoami"
          ]
        },
        {
          "CommandLine|contains|all": [
            "type ",
            " > ",
            " C:\\"
          ]
        }
      ],
      "condition": "(selection_iwr or all of selection_curl* or selection_wget) and payloads"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Raccine Uninstall",
    "id": 1054,
    "status": "test",
    "description": "Detects commands that indicate a Raccine removal from an end system. Raccine is a free ransomware protection tool.",
    "references": [
      "https://github.com/Neo23x0/Raccine"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/01/21",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains|all": [
          "taskkill ",
          "RaccineSettings.exe"
        ]
      },
      "selection2": {
        "CommandLine|contains|all": [
          "reg.exe",
          "delete",
          "Raccine Tray"
        ]
      },
      "selection3": {
        "CommandLine|contains|all": [
          "schtasks",
          "/DELETE",
          "Raccine Rules Updater"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Legitimate deinstallation by administrative staff"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Double Extension File Execution",
    "id": 1055,
    "related": [
      {
        "id": "5e6a80c8-2d45-4633-9ef4-fa2671a39c5c",
        "type": "similar"
      }
    ],
    "status": "stable",
    "description": "Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns",
    "references": [
      "https://blu3-team.blogspot.com/2019/06/misleading-extensions-xlsexe-docexe.html",
      "https://twitter.com/blackorbird/status/1140519090961825792"
    ],
    "author": "Florian Roth (Nextron Systems), @blu3_team (idea), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/06/26",
    "modified": "2023/02/28",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          ".doc.exe",
          ".docx.exe",
          ".xls.exe",
          ".xlsx.exe",
          ".ppt.exe",
          ".pptx.exe",
          ".rtf.exe",
          ".pdf.exe",
          ".txt.exe",
          "      .exe",
          "______.exe",
          ".doc.js",
          ".docx.js",
          ".xls.js",
          ".xlsx.js",
          ".ppt.js",
          ".pptx.js",
          ".rtf.js",
          ".pdf.js",
          ".txt.js"
        ],
        "CommandLine|contains": [
          ".doc.exe",
          ".docx.exe",
          ".xls.exe",
          ".xlsx.exe",
          ".ppt.exe",
          ".pptx.exe",
          ".rtf.exe",
          ".pdf.exe",
          ".txt.exe",
          "      .exe",
          "______.exe",
          ".doc.js",
          ".docx.js",
          ".xls.js",
          ".xlsx.js",
          ".ppt.js",
          ".pptx.js",
          ".rtf.js",
          ".pdf.js",
          ".txt.js"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Suspicious Parent Double Extension File Execution",
    "id": 1056,
    "related": [
      {
        "id": "1cdd9a09-06c9-4769-99ff-626e2b3991b8",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detect execution of suspicious double extension files in ParentCommandLine",
    "references": [
      "https://www.virustotal.com/gui/file/7872d8845a332dce517adae9c3389fde5313ff2fed38c2577f3b498da786db68/behavior",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/bluebottle-banks-targeted-africa"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/06",
    "modified": "2023/02/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "ParentImage|endswith": [
            ".doc.lnk",
            ".docx.lnk",
            ".xls.lnk",
            ".xlsx.lnk",
            ".ppt.lnk",
            ".pptx.lnk",
            ".rtf.lnk",
            ".pdf.lnk",
            ".txt.lnk",
            ".doc.js",
            ".docx.js",
            ".xls.js",
            ".xlsx.js",
            ".ppt.js",
            ".pptx.js",
            ".rtf.js",
            ".pdf.js",
            ".txt.js"
          ]
        },
        {
          "ParentCommandLine|contains": [
            ".doc.lnk",
            ".docx.lnk",
            ".xls.lnk",
            ".xlsx.lnk",
            ".ppt.lnk",
            ".pptx.lnk",
            ".rtf.lnk",
            ".pdf.lnk",
            ".txt.lnk",
            ".doc.js",
            ".docx.js",
            ".xls.js",
            ".xlsx.js",
            ".ppt.js",
            ".pptx.js",
            ".rtf.js",
            ".pdf.js",
            ".txt.js"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Download from Office Domain",
    "id": 1057,
    "status": "test",
    "description": "Detects suspicious ways to download files from Microsoft domains that are used to store attachments in Emails or OneNote documents",
    "references": [
      "https://twitter.com/an0n_r0/status/1474698356635193346?s=12",
      "https://twitter.com/mrd0x/status/1475085452784844803?s=12"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/27",
    "modified": "2022/08/02",
    "tags": [
      "attack.command_and_control",
      "attack.t1105",
      "attack.t1608"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_download": [
        {
          "Image|endswith": [
            "\\curl.exe",
            "\\wget.exe"
          ]
        },
        {
          "CommandLine|contains": [
            "Invoke-WebRequest",
            "iwr ",
            "curl ",
            "wget ",
            "Start-BitsTransfer",
            ".DownloadFile(",
            ".DownloadString("
          ]
        }
      ],
      "selection_domains": {
        "CommandLine|contains": [
          "https://attachment.outlook.live.net/owa/",
          "https://onenoteonlinesync.onenote.com/onenoteonlinesync/"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Scripts or tools that download attachments from these domains (OneNote, Outlook 365)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DumpStack.log Defender Evasion",
    "id": 1058,
    "status": "test",
    "description": "Detects the use of the filename DumpStack.log to evade Microsoft Defender",
    "references": [
      "https://twitter.com/mrd0x/status/1479094189048713219"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/06",
    "modified": "2022/06/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\DumpStack.log"
      },
      "selection_download": {
        "CommandLine|contains": " -o DumpStack.log"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Always Install Elevated MSI Spawned Cmd And Powershell",
    "id": 1059,
    "status": "test",
    "description": "Detects Windows Installer service (msiexec.exe) spawning \"cmd\" or \"powershell\"",
    "references": [
      "https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-50-638.jpg"
    ],
    "author": "Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community",
    "date": "2020/10/13",
    "modified": "2022/10/20",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\cmd.exe",
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Cmd.Exe",
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_parent": {
        "ParentImage|contains|all": [
          "\\Windows\\Installer\\",
          "msi"
        ],
        "ParentImage|endswith": "tmp"
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "Image",
      "ParentImage"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Electron Application Child Processes",
    "id": 1060,
    "related": [
      {
        "id": "378a05d8-963c-46c9-bcce-13c7657eac99",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious child processes of electron apps (teams, discord, slack, etc.). This could be a potential sign of \".asar\" file tampering (See reference section for more information) or binary execution proxy through specific CLI arguments (see related rule)\n",
    "references": [
      "https://taggart-tech.com/quasar-electron/",
      "https://github.com/mttaggart/quasar",
      "https://positive.security/blog/ms-officecmd-rce",
      "https://lolbas-project.github.io/lolbas/Binaries/Msedge/",
      "https://lolbas-project.github.io/lolbas/Binaries/Teams/",
      "https://lolbas-project.github.io/lolbas/Binaries/msedgewebview2/",
      "https://medium.com/@MalFuzzer/one-electron-to-rule-them-all-dc2e9b263daf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/21",
    "modified": "2023/09/05",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\chrome.exe",
          "\\discord.exe",
          "\\GitHubDesktop.exe",
          "\\keybase.exe",
          "\\msedge.exe",
          "\\msedgewebview2.exe",
          "\\msteams.exe",
          "\\slack.exe",
          "\\Teams.exe"
        ]
      },
      "selection_child_image": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\wscript.exe"
        ]
      },
      "selection_child_paths": {
        "Image|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\",
          ":\\Temp\\"
        ]
      },
      "filter_main_chrome": {
        "ParentImage|endswith": "\\chrome.exe",
        "Image|endswith": "\\chrome.exe"
      },
      "filter_main_discord": {
        "ParentImage|endswith": "\\discord.exe",
        "Image|endswith": "\\discord.exe"
      },
      "filter_main_githubdesktop": {
        "ParentImage|endswith": "\\GitHubDesktop.exe",
        "Image|endswith": "\\GitHubDesktop.exe"
      },
      "filter_main_keybase": {
        "ParentImage|endswith": "\\keybase.exe",
        "Image|endswith": "\\keybase.exe"
      },
      "filter_main_msedge": {
        "ParentImage|endswith": "\\msedge.exe",
        "Image|endswith": "\\msedge.exe"
      },
      "filter_main_msedgewebview": {
        "ParentImage|endswith": "\\msedgewebview2.exe",
        "Image|endswith": "\\msedgewebview2.exe"
      },
      "filter_main_msteams": {
        "ParentImage|endswith": "\\msteams.exe",
        "Image|endswith": "\\msteams.exe"
      },
      "filter_main_slack": {
        "ParentImage|endswith": "\\slack.exe",
        "Image|endswith": "\\slack.exe"
      },
      "filter_main_teams": {
        "ParentImage|endswith": "\\teams.exe",
        "Image|endswith": "\\teams.exe"
      },
      "filter_main_werfault": {
        "Image": [
          "C:\\Windows\\SysWOW64\\WerFault.exe",
          "C:\\Windows\\System32\\WerFault.exe"
        ]
      },
      "filter_optional_discord": {
        "ParentImage|endswith": "\\Discord.exe",
        "CommandLine|contains": "\\NVSMI\\nvidia-smi.exe"
      },
      "condition": "selection_parent and 1 of selection_child_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate child processes can occur in cases of debugging"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Electron Application CommandLine",
    "id": 1061,
    "related": [
      {
        "id": "f26eb764-fd89-464b-85e2-dc4a8e6e77b8",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potentially suspicious CommandLine of electron apps (teams, discord, slack, etc.). This could be a sign of abuse to proxy execution through a signed binary.",
    "references": [
      "https://positive.security/blog/ms-officecmd-rce",
      "https://lolbas-project.github.io/lolbas/Binaries/Teams/",
      "https://lolbas-project.github.io/lolbas/Binaries/Msedge/",
      "https://lolbas-project.github.io/lolbas/Binaries/msedgewebview2/",
      "https://medium.com/@MalFuzzer/one-electron-to-rule-them-all-dc2e9b263daf",
      "https://chromium.googlesource.com/chromium/chromium/+/master/content/public/common/content_switches.cc"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/05",
    "modified": "2023/11/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\chrome.exe",
            "\\code.exe",
            "\\discord.exe",
            "\\GitHubDesktop.exe",
            "\\keybase.exe",
            "\\msedge_proxy.exe",
            "\\msedge.exe",
            "\\msedgewebview2.exe",
            "\\msteams.exe",
            "\\slack.exe",
            "\\Teams.exe"
          ]
        },
        {
          "OriginalFileName": [
            "chrome.exe",
            "code.exe",
            "discord.exe",
            "GitHubDesktop.exe",
            "keybase.exe",
            "msedge_proxy.exe",
            "msedge.exe",
            "msedgewebview2.exe",
            "msteams.exe",
            "slack.exe",
            "Teams.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "--browser-subprocess-path",
          "--gpu-launcher",
          "--renderer-cmd-prefix",
          "--utility-cmd-prefix"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage for debugging purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Elevated System Shell Spawned From Uncommon Parent Location",
    "id": 1062,
    "related": [
      {
        "id": "61065c72-5d7d-44ef-bf41-6a36684b545f",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects when a shell program such as the Windows command prompt or PowerShell is launched with system privileges from a uncommon parent location.",
    "references": [
      "https://github.com/Wh04m1001/SysmonEoP"
    ],
    "author": "frack113, Tim Shelton (update fp)",
    "date": "2022/12/05",
    "modified": "2023/11/23",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_shell": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\cmd.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll",
            "Cmd.Exe"
          ]
        }
      ],
      "selection_user": {
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ],
        "LogonId": "0x3e7"
      },
      "filter_main_generic": {
        "ParentImage|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\ProgramData\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\Temp\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "filter_optional_manageengine": {
        "ParentImage|endswith": ":\\ManageEngine\\ADManager Plus\\pgsql\\bin\\postgres.exe",
        "Image|endswith": "\\cmd.exe"
      },
      "filter_optional_asgard": {
        "CommandLine|contains": ":\\WINDOWS\\system32\\cmd.exe /c \"",
        "CurrentDirectory|contains": ":\\WINDOWS\\Temp\\asgard2-agent\\"
      },
      "filter_optional_ibm_spectrumprotect": {
        "ParentImage|contains": ":\\IBM\\SpectrumProtect\\webserver\\scripts\\",
        "CommandLine|contains": ":\\IBM\\SpectrumProtect\\webserver\\scripts\\"
      },
      "filter_main_parent_null": {
        "ParentImage": null
      },
      "filter_main_parent_empty": {
        "ParentImage": ""
      },
      "condition": "all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Hidden Powershell in Link File Pattern",
    "id": 1063,
    "status": "test",
    "description": "Detects events that appear when a user click on a link file with a powershell command in it",
    "references": [
      "https://www.x86matthew.com/view_post?id=embed_exe_lnk"
    ],
    "author": "frack113",
    "date": "2022/02/06",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage": "C:\\Windows\\explorer.exe",
        "Image": "C:\\Windows\\System32\\cmd.exe",
        "CommandLine|contains|all": [
          "powershell",
          ".lnk"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate commands in .lnk files"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ETW Logging Tamper In .NET Processes",
    "id": 1064,
    "status": "test",
    "description": "Detects changes to environment variables related to ETW logging. This could indicate potential adversaries stopping ETW providers recording loaded .NET assemblies.",
    "references": [
      "https://twitter.com/_xpn_/status/1268712093928378368",
      "https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr",
      "https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables",
      "https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38",
      "https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39",
      "https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_",
      "https://bunnyinside.com/?term=f71e8cb9c76a",
      "http://managed670.rssing.com/chan-5590147/all_p1.html",
      "https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code",
      "https://i.blackhat.com/EU-21/Wednesday/EU-21-Teodorescu-Veni-No-Vidi-No-Vici-Attacks-On-ETW-Blind-EDRs.pdf"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2022/12/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "COMPlus_ETWEnabled",
          "COMPlus_ETWFlags"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Eventlog Clear or Configuration Change",
    "id": 1065,
    "status": "stable",
    "description": "Detects clearing or configuration of eventlogs using wevtutil, powershell and wmic. Might be used by ransomwares during the attack (seen by NotPetya and others).",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.001/T1070.001.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/5b223758-07d6-4100-9e11-238cfdd0fe97.html",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil",
      "https://gist.github.com/fovtran/ac0624983c7722e80a8f5a4babb170ee",
      "https://jdhnet.wordpress.com/2017/12/19/changing-the-location-of-the-windows-event-logs/"
    ],
    "author": "Ecco, Daniil Yugoslavskiy, oscd.community, D3F7A5105",
    "date": "2019/09/26",
    "modified": "2023/07/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.001",
      "attack.t1562.002",
      "car.2016-04-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_wevtutil": {
        "Image|endswith": "\\wevtutil.exe",
        "CommandLine|contains": [
          "clear-log ",
          " cl ",
          "set-log ",
          " sl ",
          "lfn:"
        ]
      },
      "selection_other_ps": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": [
          "Clear-EventLog ",
          "Remove-EventLog ",
          "Limit-EventLog ",
          "Clear-WinEvent "
        ]
      },
      "selection_other_wmi": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wmic.exe"
        ],
        "CommandLine|contains": "ClearEventLog"
      },
      "filter_msiexec": {
        "ParentImage": [
          "C:\\Windows\\SysWOW64\\msiexec.exe",
          "C:\\Windows\\System32\\msiexec.exe"
        ],
        "CommandLine|contains": " sl "
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Admin activity",
      "Scripts and administrative tools used in the monitored environment",
      "Maintenance activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious EventLog Recon Activity Using Log Query Utilities",
    "id": 1066,
    "related": [
      {
        "id": "9cd55b6c-430a-4fa9-96f4-7cadf5229e9f",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of different log query utilities and commands to search and dump the content of specific event logs or look for specific event IDs.\nThis technique is used by threat actors in order to extract sensitive information from events logs such as usernames, IP addresses, hostnames, etc.\n",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html",
      "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-144a",
      "https://www.group-ib.com/blog/apt41-world-tour-2021/",
      "https://labs.withsecure.com/content/dam/labs/docs/f-secureLABS-tlp-white-lazarus-threat-intel-report2.pdf",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.diagnostics/get-winevent?view=powershell-7.3",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-eventlog?view=powershell-5.1",
      "http://www.solomonson.com/posts/2010-07-09-reading-eventviewer-command-line/",
      "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2022/09/09",
    "modified": "2024/01/02",
    "tags": [
      "attack.credential_access",
      "attack.discovery",
      "attack.t1552"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_wmi": {
        "CommandLine|contains|all": [
          "Select",
          "Win32_NTLogEvent"
        ]
      },
      "selection_wevtutil_img": [
        {
          "Image|endswith": "\\wevtutil.exe"
        },
        {
          "OriginalFileName": "wevtutil.exe"
        }
      ],
      "selection_wevtutil_cli": {
        "CommandLine|contains": [
          " qe ",
          " query-events "
        ]
      },
      "selection_wmic_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_wmic_cli": {
        "CommandLine|contains": " ntevent"
      },
      "selection_cmdlet": {
        "CommandLine|contains": [
          "Get-WinEvent ",
          "get-eventlog "
        ]
      },
      "selection_logs_name": {
        "CommandLine|contains": [
          "Microsoft-Windows-TerminalServices-LocalSessionManager/Operational",
          "Microsoft-Windows-Terminal-Services-RemoteConnectionManager/Operational",
          "Security"
        ]
      },
      "selection_logs_eid": {
        "CommandLine|contains": [
          "-InstanceId 4624",
          "System[EventID=4624]",
          "EventCode=?4624?",
          "EventIdentifier=?4624?",
          "-InstanceId 4778",
          "System[EventID=4778]",
          "EventCode=?4778?",
          "EventIdentifier=?4778?",
          "-InstanceId 25",
          "System[EventID=25]",
          "EventCode=?25?",
          "EventIdentifier=?25?"
        ]
      },
      "condition": "1 of selection_logs_* and (selection_wmi or all of selection_wevtutil_* or all of selection_wmic_* or selection_cmdlet)"
    },
    "falsepositives": [
      "Legitimate usage of the utility by administrators to query the event log"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution From GUID Like Folder Names",
    "id": 1067,
    "status": "test",
    "description": "Detects potential suspicious execution of a GUID like folder name located in a suspicious location such as %TEMP% as seen being used in IcedID attacks",
    "references": [
      "https://twitter.com/Kostastsale/status/1565257924204986369"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/01",
    "modified": "2023/03/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_folder": {
        "CommandLine|contains": [
          "\\AppData\\Roaming\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "selection_guid": {
        "CommandLine|contains|all": [
          "\\{",
          "}\\"
        ]
      },
      "filter": {
        "Image|contains|all": [
          "\\{",
          "}\\"
        ]
      },
      "filter_null": {
        "Image": null
      },
      "filter_driver_inst": {
        "Image": "C:\\Windows\\System32\\drvinst.exe"
      },
      "condition": "all of selection_* and not 1 of filter*"
    },
    "falsepositives": [
      "Installers are sometimes known for creating temporary folders with GUID like names. Add appropriate filters accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Parent in Public Folder Suspicious Process",
    "id": 1068,
    "status": "test",
    "description": "This rule detects suspicious processes with parent images located in the C:\\Users\\Public folder",
    "references": [
      "https://redcanary.com/blog/blackbyte-ransomware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/25",
    "modified": "2022/11/18",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1564",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|startswith": "C:\\Users\\Public\\",
        "CommandLine|contains": [
          "powershell",
          "cmd.exe /c ",
          "cmd.exe /r ",
          "cmd.exe /k ",
          "cmd /c ",
          "cmd /r ",
          "cmd /k ",
          "wscript.exe",
          "cscript.exe",
          "bitsadmin",
          "certutil",
          "mshta.exe"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Execution from Suspicious Folder",
    "id": 1069,
    "status": "test",
    "description": "Detects a suspicious execution from an uncommon folder",
    "references": [
      "https://github.com/mbevilacqua/appcompatprocessor/blob/6c847937c5a836e2ce2fe2b915f213c345a3c389/AppCompatSearch.txt",
      "https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses",
      "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/",
      "https://github.com/ThreatHuntingProject/ThreatHunting/blob/cb22598bb70651f88e0285abc8d835757d2cb596/hunts/suspicious_process_creation_via_windows_event_logs.md"
    ],
    "author": "Florian Roth (Nextron Systems), Tim Shelton",
    "date": "2019/01/16",
    "modified": "2023/01/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|contains": [
            "\\$Recycle.bin\\",
            "\\config\\systemprofile\\",
            "\\Intel\\Logs\\",
            "\\RSA\\MachineKeys\\",
            "\\Users\\All Users\\",
            "\\Users\\Default\\",
            "\\Users\\NetworkService\\",
            "\\Users\\Public\\",
            "\\Windows\\addins\\",
            "\\Windows\\debug\\",
            "\\Windows\\Fonts\\",
            "\\Windows\\Help\\",
            "\\Windows\\IME\\",
            "\\Windows\\Media\\",
            "\\Windows\\repair\\",
            "\\Windows\\security\\",
            "\\Windows\\System32\\Tasks\\",
            "\\Windows\\Tasks\\"
          ]
        },
        {
          "Image|startswith": "C:\\Perflogs\\"
        }
      ],
      "filter_ibm": {
        "Image|startswith": "C:\\Users\\Public\\IBM\\ClientSolutions\\Start_Programs\\"
      },
      "filter_citrix": {
        "Image|startswith": "C:\\Windows\\SysWOW64\\config\\systemprofile\\Citrix\\UpdaterBinaries\\",
        "Image|endswith": "\\CitrixReceiverUpdater.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Characteristics Due to Missing Fields",
    "id": 1070,
    "status": "test",
    "description": "Detects Executables in the Downloads folder without FileVersion,Description,Product,Company likely created with py2exe",
    "references": [
      "https://securelist.com/muddywater/88059/",
      "https://www.virustotal.com/#/file/276a765a10f98cda1a38d3a31e7483585ca3722ecad19d784441293acf1b7beb/detection"
    ],
    "author": "Markus Neis, Sander Wiebing",
    "date": "2018/11/22",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1059.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection1": {
        "Description": "\\?",
        "FileVersion": "\\?"
      },
      "selection2": {
        "Description": "\\?",
        "Product": "\\?"
      },
      "selection3": {
        "Description": "\\?",
        "Company": "\\?"
      },
      "folder": {
        "Image|contains": "\\Downloads\\"
      },
      "condition": "(selection1 or selection2 or selection3) and folder"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Reconnaissance Activity Via GatherNetworkInfo.VBS",
    "id": 1071,
    "related": [
      {
        "id": "f92a6f1e-a512-4a15-9735-da09e78d7273",
        "type": "similar"
      },
      {
        "id": "575dce0c-8139-4e30-9295-1ee75969f7fe",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects execution of the built-in script located in \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\". Which can be used to gather information about the target machine",
    "references": [
      "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
      "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/08",
    "tags": [
      "attack.discovery",
      "attack.execution",
      "attack.t1615",
      "attack.t1059.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "gatherNetworkInfo.vbs"
      },
      "filter": {
        "Image|endswith": [
          "\\cscript.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream - CLI",
    "id": 1072,
    "related": [
      {
        "id": "a8f866e1-bdd4-425e-a27a-37619238d9c7",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects command line containing reference to the \"::$index_allocation\" stream, which can be used as a technique to prevent access to folders or files from tooling such as \"explorer.exe\" or \"powershell.exe\"\n",
    "references": [
      "https://twitter.com/pfiatde/status/1681977680688738305",
      "https://soroush.me/blog/2010/12/a-dotty-salty-directory-a-secret-place-in-ntfs-for-secret-files/",
      "https://sec-consult.com/blog/detail/pentesters-windows-ntfs-tricks-collection/",
      "https://github.com/redcanaryco/atomic-red-team/blob/5c3b23002d2bbede3c07e7307165fc2a235a427d/atomics/T1564.004/T1564.004.md#atomic-test-5---create-hidden-directory-via-index_allocation",
      "https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/c54dec26-1551-4d3a-a0ea-4fa40f848eb3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Scoubi (@ScoubiMtl)",
    "date": "2023/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "::$index_allocation"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Writing Of Malicious Files To The Fonts Folder",
    "id": 1073,
    "status": "test",
    "description": "Monitors for the hiding possible malicious files in the C:\\Windows\\Fonts\\ location. This folder doesn't require admin privillege to be written and executed from.",
    "references": [
      "https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/"
    ],
    "author": "Sreeman",
    "date": "2020/04/21",
    "modified": "2022/03/08",
    "tags": [
      "attack.t1211",
      "attack.t1059",
      "attack.defense_evasion",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": [
          "echo",
          "copy",
          "type",
          "file createnew",
          "cacls"
        ]
      },
      "selection_2": {
        "CommandLine|contains": "C:\\Windows\\Fonts\\"
      },
      "selection_3": {
        "CommandLine|contains": [
          ".sh",
          ".exe",
          ".dll",
          ".bin",
          ".bat",
          ".cmd",
          ".js",
          ".msh",
          ".reg",
          ".scr",
          ".ps",
          ".vb",
          ".jar",
          ".pl",
          ".inf",
          ".cpl",
          ".hta",
          ".msi",
          ".vbs"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execution Of Non-Existing File",
    "id": 1074,
    "status": "test",
    "description": "Checks whether the image specified in a process creation event is not a full, absolute path (caused by process ghosting or other unorthodox methods to start a process)",
    "references": [
      "https://pentestlaboratories.com/2021/12/08/process-ghosting/"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2021/12/09",
    "modified": "2022/12/14",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "image_absolute_path": {
        "Image|contains": "\\"
      },
      "filter_null": {
        "Image": null
      },
      "filter_empty": {
        "Image": [
          "-",
          ""
        ]
      },
      "filter_4688": [
        {
          "Image": [
            "System",
            "Registry",
            "MemCompression",
            "vmmem"
          ]
        },
        {
          "CommandLine": [
            "Registry",
            "MemCompression",
            "vmmem"
          ]
        }
      ],
      "condition": "not image_absolute_path and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Base64 MZ Header In CommandLine",
    "id": 1075,
    "status": "test",
    "description": "Detects encoded base64 MZ header in the commandline",
    "references": [
      "https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/12",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "TVqQAAMAAAAEAAAA",
          "TVpQAAIAAAAEAA8A",
          "TVqAAAEAAAAEABAA",
          "TVoAAAAAAAAAAAAA",
          "TVpTAQEAAAAEAAAA"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential WinAPI Calls Via CommandLine",
    "id": 1076,
    "related": [
      {
        "id": "03d83090-8cba-44a0-b02f-0b756a050306",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the use of WinAPI Functions via the commandline. As seen used by threat actors via the tool winapiexec",
    "references": [
      "https://twitter.com/m417z/status/1566674631788007425"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/06",
    "modified": "2023/01/09",
    "tags": [
      "attack.execution",
      "attack.t1106"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "AddSecurityPackage",
          "AdjustTokenPrivileges",
          "Advapi32",
          "CloseHandle",
          "CreateProcessWithToken",
          "CreatePseudoConsole",
          "CreateRemoteThread",
          "CreateThread",
          "CreateUserThread",
          "DangerousGetHandle",
          "DuplicateTokenEx",
          "EnumerateSecurityPackages",
          "FreeHGlobal",
          "FreeLibrary",
          "GetDelegateForFunctionPointer",
          "GetLogonSessionData",
          "GetModuleHandle",
          "GetProcAddress",
          "GetProcessHandle",
          "GetTokenInformation",
          "ImpersonateLoggedOnUser",
          "kernel32",
          "LoadLibrary",
          "memcpy",
          "MiniDumpWriteDump",
          "ntdll",
          "OpenDesktop",
          "OpenProcess",
          "OpenProcessToken",
          "OpenThreadToken",
          "OpenWindowStation",
          "PtrToString",
          "QueueUserApc",
          "ReadProcessMemory",
          "RevertToSelf",
          "RtlCreateUserThread",
          "secur32",
          "SetThreadToken",
          "VirtualAlloc",
          "VirtualFree",
          "VirtualProtect",
          "WaitForSingleObject",
          "WriteInt32",
          "WriteProcessMemory",
          "ZeroFreeGlobalAllocUnicode"
        ]
      },
      "filter_optional_mpcmdrun": {
        "Image|endswith": "\\MpCmdRun.exe",
        "CommandLine|contains": "GetLoadLibraryWAddress32"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Local Accounts Discovery",
    "id": 1077,
    "status": "test",
    "description": "Local accounts, System Owner/User discovery using operating systems utilities",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1033/T1033.md"
    ],
    "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/21",
    "modified": "2023/01/03",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "attack.t1087.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_other_img": {
        "Image|endswith": [
          "\\whoami.exe",
          "\\quser.exe",
          "\\qwinsta.exe"
        ]
      },
      "selection_other_wmi": {
        "Image|endswith": "\\wmic.exe",
        "CommandLine|contains|all": [
          "useraccount",
          "get"
        ]
      },
      "selection_other_cmdkey": {
        "Image|endswith": "\\cmdkey.exe",
        "CommandLine|contains": " /l"
      },
      "selection_cmd": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains|all": [
          " /c",
          "dir ",
          "\\Users\\"
        ]
      },
      "filter_cmd": {
        "CommandLine|contains": " rmdir "
      },
      "selection_net": {
        "Image|endswith": [
          "\\net.exe",
          "\\net1.exe"
        ],
        "CommandLine|contains": "user"
      },
      "filter_net": {
        "CommandLine|contains": [
          "/domain",
          "/add",
          "/delete",
          "/active",
          "/expires",
          "/passwordreq",
          "/scriptpath",
          "/times",
          "/workstations"
        ]
      },
      "condition": "(selection_cmd and not filter_cmd) or (selection_net and not filter_net) or 1 of selection_other_*"
    },
    "falsepositives": [
      "Legitimate administrator or user enumerates local users for legitimate reason"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "LOLBIN Execution From Abnormal Drive",
    "id": 1078,
    "related": [
      {
        "id": "5b80cf53-3a46-4adc-960b-05ec19348d74",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects LOLBINs executing from an abnormal or uncommon drive such as a mounted ISO.",
    "references": [
      "https://thedfirreport.com/2021/12/13/diavol-ransomware/",
      "https://www.scythe.io/library/threat-emulation-qakbot",
      "https://sec-consult.com/blog/detail/bumblebee-hunting-with-a-velociraptor/"
    ],
    "author": "Christopher Peacock '@securepeacock', SCYTHE '@scythe_io', Angelo Violetti - SEC Consult '@angelo_violetti', Aaron Herman",
    "date": "2022/01/25",
    "modified": "2023/08/29",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\calc.exe",
            "\\certutil.exe",
            "\\cmstp.exe",
            "\\cscript.exe",
            "\\installutil.exe",
            "\\mshta.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "OriginalFileName": [
            "CALC.EXE",
            "CertUtil.exe",
            "CMSTP.EXE",
            "cscript.exe",
            "installutil.exe",
            "MSHTA.EXE",
            "REGSVR32.EXE",
            "RUNDLL32.EXE",
            "wscript.exe"
          ]
        }
      ],
      "filter_main_currentdirectory": {
        "CurrentDirectory|contains": "C:\\"
      },
      "filter_main_empty": {
        "CurrentDirectory": ""
      },
      "filter_main_null": {
        "CurrentDirectory": null
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Rare false positives could occur on servers with multiple drives."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LSASS Dump Keyword In CommandLine",
    "id": 1079,
    "related": [
      {
        "id": "a5a2d357-1ab8-4675-a967-ef9990a59391",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the presence of the keywords \"lsass\" and \".dmp\" in the commandline, which could indicate a potential attempt to dump or create a dump of the lsass process.\n",
    "references": [
      "https://github.com/Hackndo/lsassy",
      "https://medium.com/@markmotig/some-ways-to-dump-lsass-exe-c4a75fdc49bf",
      "https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/windows/credential_access_lsass_memdump_file_created.toml",
      "https://www.whiteoaksecurity.com/blog/attacks-defenses-dumping-lsass-no-mimikatz/",
      "https://github.com/helpsystems/nanodump",
      "https://github.com/CCob/MirrorDump"
    ],
    "author": "E.M. Anhaus, Tony Lambert, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/24",
    "modified": "2023/08/29",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "CommandLine|contains": [
            "lsass.dmp",
            "lsass.zip",
            "lsass.rar",
            "Andrew.dmp",
            "Coredump.dmp",
            "NotLSASS.zip",
            "lsass_2",
            "lsassdump",
            "lsassdmp"
          ]
        },
        {
          "CommandLine|contains|all": [
            "lsass",
            ".dmp"
          ]
        },
        {
          "CommandLine|contains|all": [
            "SQLDmpr",
            ".mdmp"
          ]
        },
        {
          "CommandLine|contains|all": [
            "nanodump",
            ".dmp"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential File Download Via MS-AppInstaller Protocol Handler",
    "id": 1080,
    "related": [
      {
        "id": "7cff77e1-9663-46a3-8260-17f2e1aa9d0a",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of the \"ms-appinstaller\" protocol handler via command line to potentially download arbitrary files via AppInstaller.EXE\nThe downloaded files are temporarly stored in \":\\Users\\%username%\\AppData\\Local\\Packages\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\\AC\\INetCache\\<RANDOM-8-CHAR-DIRECTORY>\"\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/AppInstaller/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel",
    "date": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "ms-appinstaller://?source=",
          "http"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Network Command",
    "id": 1081,
    "status": "test",
    "description": "Adversaries may look for details about the network configuration and settings of systems they access or through information discovery of remote systems",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1016/T1016.md#atomic-test-1---system-network-configuration-discovery-on-windows"
    ],
    "author": "frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'",
    "date": "2021/12/07",
    "modified": "2022/04/11",
    "tags": [
      "attack.discovery",
      "attack.t1016"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "ipconfig /all",
          "netsh interface show interface",
          "arp -a",
          "nbtstat -n",
          "net config",
          "route print"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator, hotline ask to user"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Scan Loop Network",
    "id": 1082,
    "status": "test",
    "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md",
      "https://ss64.com/nt/for.html",
      "https://ss64.com/ps/foreach-object.html"
    ],
    "author": "frack113",
    "date": "2022/03/12",
    "tags": [
      "attack.execution",
      "attack.t1059",
      "attack.discovery",
      "attack.t1018"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_loop": {
        "CommandLine|contains": [
          "for ",
          "foreach "
        ]
      },
      "selection_tools": {
        "CommandLine|contains": [
          "nslookup",
          "ping"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Network Sniffing Activity Using Network Tools",
    "id": 1083,
    "status": "test",
    "description": "Detects potential network sniffing via use of network tools such as \"tshark\", \"windump\".\nNetwork sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection.\nAn adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1040/T1040.md"
    ],
    "author": "Timur Zinniatullin, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/21",
    "modified": "2023/02/20",
    "tags": [
      "attack.credential_access",
      "attack.discovery",
      "attack.t1040"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_tshark": {
        "Image|endswith": "\\tshark.exe",
        "CommandLine|contains": "-i"
      },
      "selection_windump": {
        "Image|endswith": "\\windump.exe"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate administration activity to troubleshoot network issues"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execution of Suspicious File Type Extension",
    "id": 1084,
    "status": "experimental",
    "description": "Detects whether the image specified in a process creation event doesn't refer to an \".exe\" (or other known executable extension) file. This can be caused by process ghosting or other unorthodox methods to start a process.\nThis rule might require some initial baselining to align with some third party tooling in the user environment.\n",
    "references": [
      "https://pentestlaboratories.com/2021/12/08/process-ghosting/"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2021/12/09",
    "modified": "2023/11/23",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "known_image_extension": {
        "Image|endswith": [
          ".bin",
          ".cgi",
          ".com",
          ".exe",
          ".scr",
          ".tmp"
        ]
      },
      "filter_main_image": {
        "Image": [
          "System",
          "Registry",
          "MemCompression",
          "vmmem"
        ]
      },
      "filter_main_msi_installers": {
        "Image|contains": ":\\Windows\\Installer\\MSI"
      },
      "filter_main_driver_store": {
        "Image|contains": ":\\Windows\\System32\\DriverStore\\FileRepository\\"
      },
      "filter_main_msi_rollbackfiles": {
        "Image|contains": ":\\Config.Msi\\",
        "Image|endswith": [
          ".rbf",
          ".rbs"
        ]
      },
      "filter_main_windows_temp": [
        {
          "ParentImage|contains": ":\\Windows\\Temp\\"
        },
        {
          "Image|contains": ":\\Windows\\Temp\\"
        }
      ],
      "filter_main_deleted": {
        "Image|contains": ":\\$Extend\\$Deleted\\"
      },
      "filter_main_empty": {
        "Image": [
          "-",
          ""
        ]
      },
      "filter_main_null": {
        "Image": null
      },
      "filter_optional_avira": {
        "ParentImage|contains": ":\\ProgramData\\Avira\\"
      },
      "filter_optional_nvidia": {
        "Image|contains": "NVIDIA\\NvBackend\\",
        "Image|endswith": ".dat"
      },
      "filter_optional_winpakpro": {
        "Image|contains": [
          ":\\Program Files (x86)\\WINPAKPRO\\",
          ":\\Program Files\\WINPAKPRO\\"
        ],
        "Image|endswith": ".ngn"
      },
      "filter_optional_myq_server": {
        "Image|endswith": [
          ":\\Program Files (x86)\\MyQ\\Server\\pcltool.dll",
          ":\\Program Files\\MyQ\\Server\\pcltool.dll"
        ]
      },
      "filter_optional_wsl": {
        "Image|contains|all": [
          "\\AppData\\Local\\Packages\\",
          "\\LocalState\\rootfs\\"
        ]
      },
      "filter_optional_lzma_exe": {
        "Image|endswith": "\\LZMA_EXE"
      },
      "filter_optional_firefox": {
        "Image|contains": ":\\Program Files\\Mozilla Firefox\\"
      },
      "filter_optional_docker": {
        "ParentImage": "C:\\Windows\\System32\\services.exe",
        "Image|endswith": "com.docker.service"
      },
      "condition": "not known_image_extension and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Non-privileged Usage of Reg or Powershell",
    "id": 1085,
    "status": "test",
    "description": "Search for usage of reg or Powershell by non-privileged users to modify service configuration in registry",
    "references": [
      "https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-20-638.jpg"
    ],
    "author": "Teymur Kheirkhabarov (idea), Ryan Plas (rule), oscd.community",
    "date": "2020/10/05",
    "modified": "2022/07/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "reg": {
        "CommandLine|contains|all": [
          "reg ",
          "add"
        ]
      },
      "powershell": {
        "CommandLine|contains": [
          "powershell",
          "set-itemproperty",
          " sp ",
          "new-itemproperty"
        ]
      },
      "select_data": {
        "IntegrityLevel": "Medium",
        "CommandLine|contains|all": [
          "ControlSet",
          "Services"
        ],
        "CommandLine|contains": [
          "ImagePath",
          "FailureCommand",
          "ServiceDLL"
        ]
      },
      "condition": "(reg or powershell) and select_data"
    },
    "fields": [
      "EventID",
      "IntegrityLevel",
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Process Patterns NTDS.DIT Exfil",
    "id": 1086,
    "status": "test",
    "description": "Detects suspicious process patterns used in NTDS.DIT exfiltration",
    "references": [
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/ntds.dit-enumeration",
      "https://www.n00py.io/2022/03/manipulating-user-passwords-without-mimikatz/",
      "https://pentestlab.blog/tag/ntds-dit/",
      "https://github.com/samratashok/nishang/blob/414ee1104526d7057f9adaeee196d91ae447283e/Gather/Copy-VSS.ps1",
      "https://github.com/zcgonvh/NTDSDumpEx",
      "https://github.com/rapid7/metasploit-framework/blob/d297adcebb5c1df6fe30b12ca79b161deb71571c/data/post/powershell/NTDSgrab.ps1",
      "https://blog.talosintelligence.com/2022/08/recent-cyber-attack.html?m=1"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/11",
    "modified": "2022/11/10",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_tool": [
        {
          "Image|endswith": [
            "\\NTDSDump.exe",
            "\\NTDSDumpEx.exe"
          ]
        },
        {
          "CommandLine|contains|all": [
            "ntds.dit",
            "system.hiv"
          ]
        },
        {
          "CommandLine|contains": "NTDSgrab.ps1"
        }
      ],
      "selection_oneliner_1": {
        "CommandLine|contains|all": [
          "ac i ntds",
          "create full"
        ]
      },
      "selection_onliner_2": {
        "CommandLine|contains|all": [
          "/c copy ",
          "\\windows\\ntds\\ntds.dit"
        ]
      },
      "selection_onliner_3": {
        "CommandLine|contains|all": [
          "activate instance ntds",
          "create full"
        ]
      },
      "selection_powershell": {
        "CommandLine|contains|all": [
          "powershell",
          "ntds.dit"
        ]
      },
      "set1_selection_ntds_dit": {
        "CommandLine|contains": "ntds.dit"
      },
      "set1_selection_image_folder": [
        {
          "ParentImage|contains": [
            "\\apache",
            "\\tomcat",
            "\\AppData\\",
            "\\Temp\\",
            "\\Public\\",
            "\\PerfLogs\\"
          ]
        },
        {
          "Image|contains": [
            "\\apache",
            "\\tomcat",
            "\\AppData\\",
            "\\Temp\\",
            "\\Public\\",
            "\\PerfLogs\\"
          ]
        }
      ],
      "condition": "1 of selection* or all of set1*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Call To Win32_NTEventlogFile Class",
    "id": 1087,
    "related": [
      {
        "id": "e2812b49-bae0-4b21-b366-7c142eafcde2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of the WMI class \"Win32_NTEventlogFile\" in a potentially suspicious way (delete, backup, change permissions, etc.) from a PowerShell script",
    "references": [
      "https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/aa394225(v=vs.85)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/13",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_class": {
        "CommandLine|contains": "Win32_NTEventlogFile"
      },
      "selection_function": {
        "CommandLine|contains": [
          ".BackupEventlog(",
          ".ChangeSecurityPermissions(",
          ".ChangeSecurityPermissionsEx(",
          ".ClearEventLog(",
          ".Delete(",
          ".DeleteEx(",
          ".Rename(",
          ".TakeOwnerShip(",
          ".TakeOwnerShipEx("
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use Short Name Path in Command Line",
    "id": 1088,
    "related": [
      {
        "id": "a96970af-f126-420d-90e1-d37bf25e50e1",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection",
    "references": [
      "https://www.acunetix.com/blog/articles/windows-short-8-3-filenames-web-security-problem/",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc959352(v=technet.10)?redirectedfrom=MSDN",
      "https://twitter.com/frack113/status/1555830623633375232"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2022/08/07",
    "modified": "2022/10/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "~1\\",
          "~2\\"
        ]
      },
      "filter": [
        {
          "ParentImage": [
            "C:\\Windows\\System32\\Dism.exe",
            "C:\\Windows\\System32\\cleanmgr.exe",
            "C:\\Program Files\\GPSoftware\\Directory Opus\\dopus.exe"
          ]
        },
        {
          "ParentImage|endswith": [
            "\\WebEx\\WebexHost.exe",
            "\\thor\\thor64.exe",
            "\\veam.backup.shell.exe",
            "\\winget.exe",
            "\\Everything\\Everything.exe"
          ]
        },
        {
          "ParentImage|contains": "\\AppData\\Local\\Temp\\WinGet\\"
        },
        {
          "CommandLine|contains": [
            "\\appdata\\local\\webex\\webex64\\meetings\\wbxreport.exe",
            "C:\\Program Files\\Git\\post-install.bat",
            "C:\\Program Files\\Git\\cmd\\scalar.exe"
          ]
        }
      ],
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Applications could use this notation occasionally which might generate some false positives. In that case investigate the parent and child process."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use Short Name Path in Image",
    "id": 1089,
    "related": [
      {
        "id": "349d891d-fef0-4fe4-bc53-eee623a15969",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect use of the Windows 8.3 short name. Which could be used as a method to avoid Image detection",
    "references": [
      "https://www.acunetix.com/blog/articles/windows-short-8-3-filenames-web-security-problem/",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc959352(v=technet.10)?redirectedfrom=MSDN",
      "https://twitter.com/frack113/status/1555830623633375232"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2022/08/07",
    "modified": "2023/03/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "~1\\",
          "~2\\"
        ]
      },
      "filter1": [
        {
          "ParentImage": [
            "C:\\Windows\\System32\\Dism.exe",
            "C:\\Windows\\System32\\cleanmgr.exe"
          ]
        },
        {
          "ParentImage|endswith": [
            "\\WebEx\\WebexHost.exe",
            "\\thor\\thor64.exe"
          ]
        },
        {
          "Product": "InstallShield (R)"
        },
        {
          "Description": "InstallShield (R) Setup Engine"
        },
        {
          "Company": "InstallShield Software Corporation"
        }
      ],
      "filter_installers": [
        {
          "Image|contains|all": [
            "\\AppData\\",
            "\\Temp\\"
          ]
        },
        {
          "Image|endswith": [
            "~1\\unzip.exe",
            "~1\\7zG.exe"
          ]
        }
      ],
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Applications could use this notation occasionally which might generate some false positives. In that case Investigate the parent and child process."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use NTFS Short Name in Command Line",
    "id": 1090,
    "related": [
      {
        "id": "3ef5605c-9eb9-47b0-9a71-b727e6aa5c3b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect use of the Windows 8.3 short name. Which could be used as a method to avoid command-line detection",
    "references": [
      "https://www.acunetix.com/blog/articles/windows-short-8-3-filenames-web-security-problem/",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc959352(v=technet.10)?redirectedfrom=MSDN",
      "https://twitter.com/jonasLyk/status/1555914501802921984"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "modified": "2022/09/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "~1.exe",
          "~1.bat",
          "~1.msi",
          "~1.vbe",
          "~1.vbs",
          "~1.dll",
          "~1.ps1",
          "~1.js",
          "~1.hta",
          "~2.exe",
          "~2.bat",
          "~2.msi",
          "~2.vbe",
          "~2.vbs",
          "~2.dll",
          "~2.ps1",
          "~2.js",
          "~2.hta"
        ]
      },
      "filter": [
        {
          "ParentImage|endswith": [
            "\\WebEx\\WebexHost.exe",
            "\\thor\\thor64.exe"
          ]
        },
        {
          "CommandLine|contains": "C:\\xampp\\vcredist\\VCREDI~1.EXE"
        }
      ],
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Applications could use this notation occasionally which might generate some false positives. In that case Investigate the parent and child process."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use NTFS Short Name in Image",
    "id": 1091,
    "related": [
      {
        "id": "dd6b39d9-d9be-4a3b-8fe0-fe3c6a5c1795",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detect use of the Windows 8.3 short name. Which could be used as a method to avoid Image based detection",
    "references": [
      "https://www.acunetix.com/blog/articles/windows-short-8-3-filenames-web-security-problem/",
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc959352(v=technet.10)?redirectedfrom=MSDN",
      "https://twitter.com/jonasLyk/status/1555914501802921984"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/06",
    "modified": "2023/07/20",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "~1.bat",
          "~1.dll",
          "~1.exe",
          "~1.hta",
          "~1.js",
          "~1.msi",
          "~1.ps1",
          "~1.tmp",
          "~1.vbe",
          "~1.vbs",
          "~2.bat",
          "~2.dll",
          "~2.exe",
          "~2.hta",
          "~2.js",
          "~2.msi",
          "~2.ps1",
          "~2.tmp",
          "~2.vbe",
          "~2.vbs"
        ]
      },
      "filter_main_generic_parent": {
        "ParentImage": "C:\\Windows\\explorer.exe"
      },
      "filter_optional_webex": {
        "ParentImage|endswith": "\\WebEx\\WebexHost.exe"
      },
      "filter_optional_thor": {
        "ParentImage|endswith": "\\thor\\thor64.exe"
      },
      "filter_optional_winzip": {
        "Image": "C:\\PROGRA~1\\WinZip\\WZPREL~1.EXE"
      },
      "filter_optional_vcred": {
        "Image|endswith": "\\VCREDI~1.EXE"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Software Installers"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Obfuscated IP Download Activity",
    "id": 1092,
    "status": "test",
    "description": "Detects use of an encoded/obfuscated version of an IP address (hex, octal...) in an URL combined with a download command",
    "references": [
      "https://h.43z.one/ipconverter/",
      "https://twitter.com/Yasser_Elsnbary/status/1553804135354564608",
      "https://twitter.com/fr0s7_/status/1712780207105404948"
    ],
    "author": "Florian Roth (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2022/08/03",
    "modified": "2023/11/06",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_command": {
        "CommandLine|contains": [
          "Invoke-WebRequest",
          "iwr ",
          "wget ",
          "curl ",
          "DownloadFile",
          "DownloadString"
        ]
      },
      "selection_ip_1": {
        "CommandLine|contains": [
          " 0x",
          "//0x",
          ".0x",
          ".00x"
        ]
      },
      "selection_ip_2": {
        "CommandLine|contains|all": [
          "http://%",
          "%2e"
        ]
      },
      "selection_ip_3": [
        {
          "CommandLine|re": "https?://[0-9]{1,3}\\.[0-9]{1,3}\\.0[0-9]{3,4}"
        },
        {
          "CommandLine|re": "https?://[0-9]{1,3}\\.0[0-9]{3,7}"
        },
        {
          "CommandLine|re": "https?://0[0-9]{3,11}"
        },
        {
          "CommandLine|re": "https?://(0[0-9]{1,11}\\.){3}0[0-9]{1,11}"
        },
        {
          "CommandLine|re": "https?://0[0-9]{1,11}"
        },
        {
          "CommandLine|re": " [0-7]{7,13}"
        }
      ],
      "filter_main_valid_ip": {
        "CommandLine|re": "https?://((25[0-5]|(2[0-4]|1\\d|[1-9])?\\d)(\\.|\\b)){4}"
      },
      "condition": "selection_command and 1 of selection_ip_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Obfuscated IP Via CLI",
    "id": 1093,
    "status": "experimental",
    "description": "Detects usage of an encoded/obfuscated version of an IP address (hex, octal, etc.) via command line",
    "references": [
      "https://h.43z.one/ipconverter/",
      "https://twitter.com/Yasser_Elsnbary/status/1553804135354564608"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)",
    "date": "2022/08/03",
    "modified": "2023/11/06",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": [
          "\\ping.exe",
          "\\arp.exe"
        ]
      },
      "selection_ip_1": {
        "CommandLine|contains": [
          " 0x",
          "//0x",
          ".0x",
          ".00x"
        ]
      },
      "selection_ip_2": {
        "CommandLine|contains|all": [
          "http://%",
          "%2e"
        ]
      },
      "selection_ip_3": [
        {
          "CommandLine|re": "https?://[0-9]{1,3}\\.[0-9]{1,3}\\.0[0-9]{3,4}"
        },
        {
          "CommandLine|re": "https?://[0-9]{1,3}\\.0[0-9]{3,7}"
        },
        {
          "CommandLine|re": "https?://0[0-9]{3,11}"
        },
        {
          "CommandLine|re": "https?://(0[0-9]{1,11}\\.){3}0[0-9]{1,11}"
        },
        {
          "CommandLine|re": "https?://0[0-9]{1,11}"
        },
        {
          "CommandLine|re": " [0-7]{7,13}"
        }
      ],
      "filter_main_valid_ip": {
        "CommandLine|re": "https?://((25[0-5]|(2[0-4]|1\\d|[1-9])?\\d)(\\.|\\b)){4}"
      },
      "condition": "selection_img and 1 of selection_ip_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Office Token Search Via CLI",
    "id": 1094,
    "status": "test",
    "description": "Detects possible search for office tokens via CLI by looking for the string \"eyJ0eX\". This string is used as an anchor to look for the start of the JWT token used by office and similar apps.",
    "references": [
      "https://mrd0x.com/stealing-tokens-from-office-applications/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/25",
    "tags": [
      "attack.credential_access",
      "attack.t1528"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "eyJ0eXAiOi",
          " eyJ0eX",
          " \"eyJ0eX\"",
          " 'eyJ0eX'"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Process Parents",
    "id": 1095,
    "status": "test",
    "description": "Detects suspicious parent processes that should not have any children or should only have a single possible child program",
    "references": [
      "https://twitter.com/x86matthew/status/1505476263464607744?s=12",
      "https://svch0st.medium.com/stats-from-hunting-cobalt-strike-beacons-c17e56255f9b"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/21",
    "modified": "2022/09/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\minesweeper.exe",
          "\\winver.exe",
          "\\bitsadmin.exe"
        ]
      },
      "selection_special": {
        "ParentImage|endswith": [
          "\\csrss.exe",
          "\\certutil.exe",
          "\\eventvwr.exe",
          "\\calc.exe",
          "\\notepad.exe"
        ]
      },
      "filter_special": {
        "Image|endswith": [
          "\\WerFault.exe",
          "\\wermgr.exe",
          "\\conhost.exe",
          "\\mmc.exe",
          "\\win32calc.exe",
          "\\notepad.exe"
        ]
      },
      "filter_null": {
        "Image": null
      },
      "condition": "selection or ( selection_special and not 1 of filter_* )"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Private Keys Reconnaissance Via CommandLine Tools",
    "id": 1096,
    "status": "test",
    "description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credential",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.004/T1552.004.md"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/07/20",
    "modified": "2023/03/06",
    "tags": [
      "attack.credential_access",
      "attack.t1552.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cmd_img": [
        {
          "Image|endswith": "\\cmd.exe"
        },
        {
          "OriginalFileName": "Cmd.Exe"
        }
      ],
      "selection_cmd_cli": {
        "CommandLine|contains": "dir "
      },
      "selection_pwsh_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "selection_pwsh_cli": {
        "CommandLine|contains": "Get-ChildItem "
      },
      "selection_findstr": [
        {
          "Image|endswith": "\\findstr.exe"
        },
        {
          "OriginalFileName": "FINDSTR.EXE"
        }
      ],
      "selection_ext": {
        "CommandLine|contains": [
          ".key",
          ".pgp",
          ".gpg",
          ".ppk",
          ".p12",
          ".pem",
          ".pfx",
          ".cer",
          ".p7b",
          ".asc"
        ]
      },
      "condition": "selection_ext and (all of selection_cmd_* or all of selection_pwsh_* or selection_findstr)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious RunAs-Like Flag Combination",
    "id": 1097,
    "status": "test",
    "description": "Detects suspicious command line flags that let the user set a target user and command as e.g. seen in PsExec-like tools",
    "references": [
      "https://www.trendmicro.com/en_us/research/22/k/hack-the-real-box-apt41-new-subgroup-earth-longzhi.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/11/11",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_user": {
        "CommandLine|contains": [
          " -u system ",
          " --user system ",
          " -u NT",
          " -u \"NT",
          " -u 'NT",
          " --system ",
          " -u administrator "
        ]
      },
      "selection_command": {
        "CommandLine|contains": [
          " -c cmd",
          " -c \"cmd",
          " -c powershell",
          " -c \"powershell",
          " --command cmd",
          " --command powershell",
          " -c whoami",
          " -c wscript",
          " -c cscript"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Privilege Escalation via Named Pipe Impersonation",
    "id": 1098,
    "related": [
      {
        "id": "f35c5d71-b489-4e22-a115-f003df287317",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a remote file copy attempt to a hidden network share. This may indicate lateral movement or data staging activity.",
    "references": [
      "https://www.elastic.co/guide/en/security/current/privilege-escalation-via-named-pipe-impersonation.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/27",
    "modified": "2022/12/30",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_name": [
        {
          "Image|endswith": [
            "\\cmd.exe",
            "\\powershell.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Cmd.Exe",
            "PowerShell.EXE"
          ]
        }
      ],
      "selection_args": {
        "CommandLine|contains|all": [
          "echo",
          ">",
          "\\\\\\\\.\\\\pipe\\\\"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Other programs that cause these patterns (please report)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Processes Suspicious Parent Directory",
    "id": 1099,
    "status": "test",
    "description": "Detect suspicious parent processes of well-known Windows processes",
    "references": [
      "https://securitybytes.io/blue-team-fundamentals-part-two-windows-processes-759fe15965e2",
      "https://www.carbonblack.com/2014/06/10/screenshot-demo-hunt-evil-faster-than-ever-with-carbon-black/",
      "https://www.13cubed.com/downloads/windows_process_genealogy_v2.pdf"
    ],
    "author": "vburov",
    "date": "2019/02/23",
    "modified": "2022/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003",
      "attack.t1036.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\svchost.exe",
          "\\taskhost.exe",
          "\\lsm.exe",
          "\\lsass.exe",
          "\\services.exe",
          "\\lsaiso.exe",
          "\\csrss.exe",
          "\\wininit.exe",
          "\\winlogon.exe"
        ]
      },
      "filter_sys": [
        {
          "ParentImage|endswith": [
            "\\SavService.exe",
            "\\ngen.exe"
          ]
        },
        {
          "ParentImage|contains": [
            "\\System32\\",
            "\\SysWOW64\\"
          ]
        }
      ],
      "filter_msmpeng": {
        "ParentImage|contains": [
          "\\Windows Defender\\",
          "\\Microsoft Security Client\\"
        ],
        "ParentImage|endswith": "\\MsMpEng.exe"
      },
      "filter_null": [
        {
          "ParentImage": null
        },
        {
          "ParentImage": "-"
        }
      ],
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Some security products seem to spawn these"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Program Names",
    "id": 1100,
    "status": "test",
    "description": "Detects suspicious patterns in program names or folders that are often found in malicious samples or hacktools",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/11",
    "modified": "2023/03/22",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_image": [
        {
          "Image|contains": [
            "\\CVE-202",
            "\\CVE202"
          ]
        },
        {
          "Image|endswith": [
            "\\poc.exe",
            "\\artifact.exe",
            "\\artifact64.exe",
            "\\artifact_protected.exe",
            "\\artifact32.exe",
            "\\artifact32big.exe",
            "obfuscated.exe",
            "obfusc.exe",
            "\\meterpreter"
          ]
        }
      ],
      "selection_commandline": {
        "CommandLine|contains": [
          "inject.ps1",
          "Invoke-CVE",
          "pupy.ps1",
          "payload.ps1",
          "beacon.ps1",
          "PowerView.ps1",
          "bypass.ps1",
          "obfuscated.ps1",
          "obfusc.ps1",
          "obfus.ps1",
          "obfs.ps1",
          "evil.ps1",
          "MiniDogz.ps1",
          "_enc.ps1",
          "\\shell.ps1",
          "\\rshell.ps1",
          "revshell.ps1",
          "\\av.ps1",
          "\\av_test.ps1",
          "adrecon.ps1",
          "mimikatz.ps1",
          "\\PowerUp_",
          "powerup.ps1",
          "\\Temp\\a.ps1",
          "\\Temp\\p.ps1",
          "\\Temp\\1.ps1",
          "Hound.ps1",
          "encode.ps1",
          "powercat.ps1"
        ]
      },
      "condition": "1 of selection*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "CurrentDirectory"
    ],
    "falsepositives": [
      "Legitimate tools that accidentally match on the searched patterns"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Recon Information for Export with Command Prompt",
    "id": 1101,
    "related": [
      {
        "id": "8e0bb260-d4b2-4fff-bb8d-3f82118e6892",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1119/T1119.md"
    ],
    "author": "frack113",
    "date": "2021/07/30",
    "modified": "2022/09/13",
    "tags": [
      "attack.collection",
      "attack.t1119"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_image": [
        {
          "Image|endswith": [
            "\\tree.com",
            "\\WMIC.exe",
            "\\doskey.exe",
            "\\sc.exe"
          ]
        },
        {
          "OriginalFileName": [
            "wmic.exe",
            "DOSKEY.EXE",
            "sc.exe"
          ]
        }
      ],
      "selection_redirect": {
        "ParentCommandLine|contains": [
          " > %TEMP%\\",
          " > %TMP%\\"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Process Execution From Fake Recycle.Bin Folder",
    "id": 1102,
    "related": [
      {
        "id": "cd8b36ac-8e4a-4c2f-a402-a29b8fbd5bca",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects process execution from a fake recycle bin folder, often used to avoid security solution.",
    "references": [
      "https://www.mandiant.com/resources/blog/infected-usb-steal-secrets",
      "https://unit42.paloaltonetworks.com/cloaked-ursa-phishing/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/12",
    "modified": "2023/12/11",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "RECYCLERS.BIN\\",
          "RECYCLER.BIN\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Redirection to Local Admin Share",
    "id": 1103,
    "status": "test",
    "description": "Detects a suspicious output redirection to the local admins share, this technique is often found in malicious scripts or hacktool stagers",
    "references": [
      "https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/",
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/16",
    "modified": "2023/12/28",
    "tags": [
      "attack.exfiltration",
      "attack.t1048"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_redirect": {
        "CommandLine|contains": ">"
      },
      "selection_share": {
        "CommandLine|contains": [
          "\\\\\\\\127.0.0.1\\\\admin$\\\\",
          "\\\\\\\\localhost\\\\admin$\\\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Remote Desktop Tunneling",
    "id": 1104,
    "status": "test",
    "description": "Detects potential use of an SSH utility to establish RDP over a reverse SSH Tunnel. This can be used by attackers to enable routing of network packets that would otherwise not reach their intended destination.",
    "references": [
      "https://www.elastic.co/guide/en/security/current/potential-remote-desktop-tunneling-detected.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/27",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": ":3389"
      },
      "selection_opt": {
        "CommandLine|contains": [
          " -L ",
          " -P ",
          " -R ",
          " -pw ",
          " -ssh "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Defense Evasion Via Right-to-Left Override",
    "id": 1105,
    "status": "test",
    "description": "Detects the presence of the \"u202+E\" character, which causes a terminal, browser, or operating system to render text in a right-to-left sequence.\nThis is used as an obfuscation and masquerading techniques.\n",
    "references": [
      "https://redcanary.com/blog/right-to-left-override/",
      "https://www.malwarebytes.com/blog/news/2014/01/the-rtlo-method",
      "https://unicode-explorer.com/c/202E"
    ],
    "author": "Micah Babinski, @micahbabinski",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": "\u202e"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Commandlines that contains scriptures such as arabic or hebrew might make use of this character"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Script Interpreter Execution From Suspicious Folder",
    "id": 1106,
    "status": "test",
    "description": "Detects a suspicious script execution in temporary folders or folders accessible by environment variables",
    "references": [
      "https://www.virustotal.com/gui/file/91ba814a86ddedc7a9d546e26f912c541205b47a853d227756ab1334ade92c3f",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/shuckworm-russia-ukraine-military",
      "https://learn.microsoft.com/en-us/windows/win32/shell/csidl"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/02/08",
    "modified": "2023/06/16",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_proc_image": {
        "Image|endswith": [
          "\\cscript.exe",
          "\\mshta.exe",
          "\\wscript.exe"
        ]
      },
      "selection_proc_flags": {
        "CommandLine|contains": [
          " -ep bypass ",
          " -ExecutionPolicy bypass ",
          " -w hidden ",
          "/e:javascript ",
          "/e:Jscript ",
          "/e:vbscript "
        ]
      },
      "selection_proc_original": {
        "OriginalFileName": [
          "cscript.exe",
          "mshta.exe",
          "wscript.exe"
        ]
      },
      "selection_folders_1": {
        "CommandLine|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          "\\AppData\\Local\\Temp",
          "\\AppData\\Roaming\\Temp",
          "\\Temporary Internet",
          "\\Windows\\Temp"
        ]
      },
      "selection_folders_2": [
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        }
      ],
      "condition": "1 of selection_proc_* and 1 of selection_folders_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Script Execution From Temp Folder",
    "id": 1107,
    "status": "test",
    "description": "Detects a suspicious script executions from temporary folder",
    "references": [
      "https://www.microsoft.com/security/blog/2021/07/13/microsoft-discovers-threat-actor-targeting-solarwinds-serv-u-software-with-0-day-exploit/"
    ],
    "author": "Florian Roth (Nextron Systems), Max Altgelt (Nextron Systems), Tim Shelton",
    "date": "2021/07/14",
    "modified": "2022/10/05",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\mshta.exe",
          "\\wscript.exe",
          "\\cscript.exe"
        ],
        "CommandLine|contains": [
          "\\Windows\\Temp",
          "\\Temporary Internet",
          "\\AppData\\Local\\Temp",
          "\\AppData\\Roaming\\Temp",
          "%TEMP%",
          "%TMP%",
          "%LocalAppData%\\Temp"
        ]
      },
      "filter": {
        "CommandLine|contains": [
          " >",
          "Out-File",
          "ConvertTo-Json",
          "-WindowStyle hidden -Verb runAs",
          "\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\Temp\\Amazon\\EC2-Windows\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Administrative scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sensitive File Access Via Volume Shadow Copy Backup",
    "id": 1108,
    "status": "test",
    "description": "Detects a command that accesses the VolumeShadowCopy in order to extract sensitive files such as the Security or SAM registry hives or the AD database (ntds.dit)\n",
    "references": [
      "https://twitter.com/vxunderground/status/1423336151860002816?s=20",
      "https://www.virustotal.com/gui/file/03e9b8c2e86d6db450e5eceec057d7e369ee2389b9daecaf06331a95410aa5f8/detection",
      "https://pentestlab.blog/2018/07/04/dumping-domain-password-hashes/"
    ],
    "author": "Max Altgelt (Nextron Systems), Tobias Michalski (Nextron Systems)",
    "date": "2021/08/09",
    "modified": "2024/01/18",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": "\\\\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\HarddiskVolumeShadowCopy"
      },
      "selection_2": {
        "CommandLine|contains": [
          "\\\\NTDS.dit",
          "\\\\SYSTEM",
          "\\\\SECURITY"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious New Service Creation",
    "id": 1109,
    "related": [
      {
        "id": "7fe71fc9-de3b-432a-8d57-8c809efc10ab",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects creation of a new service via \"sc\" command or the powershell \"new-service\" cmdlet with suspicious binary paths",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md",
      "https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/14",
    "modified": "2022/11/18",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sc": {
        "Image|endswith": "\\sc.exe",
        "CommandLine|contains|all": [
          "create",
          "binPath="
        ]
      },
      "selection_posh": {
        "CommandLine|contains|all": [
          "New-Service",
          "-BinaryPathName"
        ]
      },
      "susp_binpath": {
        "CommandLine|contains": [
          "powershell",
          "mshta",
          "wscript",
          "cscript",
          "svchost",
          "dllhost",
          "cmd ",
          "cmd.exe /c",
          "cmd.exe /k",
          "cmd.exe /r",
          "rundll32",
          "C:\\Users\\Public",
          "\\Downloads\\",
          "\\Desktop\\",
          "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\",
          "C:\\Windows\\TEMP\\",
          "\\AppData\\Local\\Temp"
        ]
      },
      "condition": "1 of selection* and susp_binpath"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Service Binary Directory",
    "id": 1110,
    "status": "test",
    "description": "Detects a service binary running in a suspicious directory",
    "references": [
      "https://blog.truesec.com/2021/03/07/exchange-zero-day-proxylogon-and-hafnium/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/03/09",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "\\Users\\Public\\",
          "\\$Recycle.bin",
          "\\Users\\All Users\\",
          "\\Users\\Default\\",
          "\\Users\\Contacts\\",
          "\\Users\\Searches\\",
          "C:\\Perflogs\\",
          "\\config\\systemprofile\\",
          "\\Windows\\Fonts\\",
          "\\Windows\\IME\\",
          "\\Windows\\addins\\"
        ],
        "ParentImage|endswith": [
          "\\services.exe",
          "\\svchost.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Windows Service Tampering",
    "id": 1111,
    "related": [
      {
        "id": "eb87818d-db5d-49cc-a987-d5da331fbd90",
        "type": "derived"
      },
      {
        "id": "6783aa9e-0dc3-49d4-a94a-8b39c5fd700b",
        "type": "obsoletes"
      },
      {
        "id": "7fd4bb39-12d0-45ab-bb36-cebabc73dc7b",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects the usage of binaries such as 'net', 'sc' or 'powershell' in order to stop, pause or delete critical or important Windows services such as AV, Backup, etc. As seen being used in some ransomware scripts",
    "references": [
      "https://www.trendmicro.com/content/dam/trendmicro/global/en/research/22/h/ransomware-actor-abuses-genshin-impact-anti-cheat-driver-to-kill-antivirus/Genshin%20Impact%20Figure%2010.jpg",
      "https://www.trellix.com/en-sg/about/newsroom/stories/threat-labs/lockergoga-ransomware-family-used-in-targeted-attacks.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/",
      "https://www.virustotal.com/gui/file/38283b775552da8981452941ea74191aa0d203edd3f61fb2dee7b0aea3514955"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2022/09/01",
    "modified": "2023/08/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1489"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_net_img": [
        {
          "OriginalFileName": [
            "net.exe",
            "net1.exe"
          ]
        },
        {
          "Image|endswith": [
            "\\net.exe",
            "\\net1.exe"
          ]
        }
      ],
      "selection_net_cli": {
        "CommandLine|contains": " stop "
      },
      "selection_sc_img": [
        {
          "OriginalFileName": "sc.exe"
        },
        {
          "Image|endswith": "\\sc.exe"
        }
      ],
      "selection_sc_cli": {
        "CommandLine|contains": [
          " stop ",
          " delete ",
          " pause "
        ]
      },
      "selection_pwsh_img": [
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        },
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        }
      ],
      "selection_pwsh_cli": {
        "CommandLine|contains": [
          "Stop-Service ",
          "Remove-Service "
        ]
      },
      "selection_services": {
        "CommandLine|contains": [
          "143Svc",
          "Acronis VSS Provider",
          "AcronisAgent",
          "AcrSch2Svc",
          "Antivirus",
          "ARSM",
          "aswBcc",
          "Avast Business Console Client Antivirus Service",
          "avast! Antivirus",
          "AVG Antivirus",
          "avgAdminClient",
          "AvgAdminServer",
          "AVP1",
          "BackupExec",
          "bedbg",
          "BITS",
          "BrokerInfrastructure",
          "Client Agent 7.60",
          "Core Browsing Protection",
          "Core Mail Protection",
          "Core Scanning Server",
          "DCAgent",
          "EhttpSr",
          "ekrn",
          "Enterprise Client Service",
          "epag",
          "EPIntegrationService",
          "EPProtectedService",
          "EPRedline",
          "EPSecurityService",
          "EPUpdateService",
          "EraserSvc11710",
          "EsgShKernel",
          "ESHASRV",
          "FA_Scheduler",
          "FirebirdGuardianDefaultInstance",
          "FirebirdServerDefaultInstance",
          "HealthTLService",
          "MSSQLFDLauncher$",
          "hmpalertsvc",
          "HMS",
          "IISAdmin",
          "IMANSVC",
          "IMAP4Svc",
          "KAVFS",
          "KAVFSGT",
          "kavfsslp",
          "klbackupdisk",
          "klbackupflt",
          "klflt",
          "klhk",
          "KLIF",
          "klim6",
          "klkbdflt",
          "klmouflt",
          "klnagent",
          "klpd",
          "kltap",
          "KSDE1.0.0",
          "LogProcessorService",
          "M8EndpointAgent",
          "macmnsvc",
          "masvc",
          "MBAMService",
          "MBCloudEA",
          "MBEndpointAgent",
          "McAfeeDLPAgentService",
          "McAfeeEngineService",
          "MCAFEEEVENTPARSERSRV",
          "McAfeeFramework",
          "MCAFEETOMCATSRV530",
          "McShield",
          "McTaskManager",
          "mfefire",
          "mfemms",
          "mfevto",
          "mfevtp",
          "mfewc",
          "MMS",
          "mozyprobackup",
          "MsDtsServer",
          "MSExchange",
          "msftesq1SPROO",
          "msftesql$PROD",
          "MSOLAP$SQL_2008",
          "MSOLAP$SYSTEM_BGC",
          "MSOLAP$TPS",
          "MSOLAP$TPSAMA",
          "MSOLAPSTPS",
          "MSOLAPSTPSAMA",
          "mssecflt",
          "MSSQ!I.SPROFXENGAGEMEHT",
          "MSSQ0SHAREPOINT",
          "MSSQ0SOPHOS",
          "MSSQL",
          "MySQL",
          "NanoServiceMain",
          "NetMsmqActivator",
          "ntrtscan",
          "ofcservice",
          "Online Protection System",
          "OracleClientCache80",
          "PandaAetherAgent",
          "PccNTUpd",
          "PDVFSService",
          "POP3Svc",
          "POVFSService",
          "PSUAService",
          "Quick Update Service",
          "RepairService",
          "ReportServer",
          "ReportServer$",
          "RESvc",
          "RpcEptMapper",
          "sacsvr",
          "SamSs",
          "SAVAdminService",
          "SAVService",
          "ScSecSvc",
          "SDRSVC",
          "sense",
          "SentinelAgent",
          "SentinelHelperService",
          "SepMasterService",
          "ShMonitor",
          "Smcinst",
          "SmcService",
          "SMTPSvc",
          "SNAC",
          "SntpService",
          "Sophos",
          "SQ1SafeOLRService",
          "SQL Backups",
          "SQL Server",
          "SQLAgent",
          "SQLBrowser",
          "SQLsafe",
          "SQLSERVERAGENT",
          "SQLTELEMETRY",
          "SQLWriter",
          "SSISTELEMETRY130",
          "SstpSvc",
          "svcGenericHost",
          "swc_service",
          "swi_filter",
          "swi_service",
          "swi_update",
          "Symantec",
          "Telemetryserver",
          "ThreatLockerService",
          "TMBMServer",
          "TmCCSF",
          "TmFilter",
          "TMiCRCScanService",
          "tmlisten",
          "TMLWCSService",
          "TmPfw",
          "TmPreFilter",
          "TmProxy",
          "TMSmartRelayService",
          "tmusa",
          "Trend Micro Deep Security Manager",
          "TrueKey",
          "UI0Detect",
          "UTODetect",
          "Veeam",
          "VeeamDeploySvc",
          "Veritas System Recovery",
          "VSApiNt",
          "VSS",
          "W3Svc",
          "wbengine",
          "WdNisSvc",
          "WeanClOudSve",
          "Weems JY",
          "WinDefend",
          "wozyprobackup",
          "WRSVC",
          "Zoolz 2 Service"
        ]
      },
      "condition": "selection_services and (all of selection_net_* or all of selection_pwsh_* or all of selection_sc_*)"
    },
    "falsepositives": [
      "Administrators or tools shutting down the services due to upgrade or removal purposes. If you experience some false positive, please consider adding filters to the parent process launching this command and not removing the entry"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Shadow Copies Creation Using Operating Systems Utilities",
    "id": 1112,
    "status": "test",
    "description": "Shadow Copies creation using operating systems utilities, possible credential access",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/"
    ],
    "author": "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/22",
    "modified": "2022/11/10",
    "tags": [
      "attack.credential_access",
      "attack.t1003",
      "attack.t1003.002",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\wmic.exe",
            "\\vssadmin.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll",
            "wmic.exe",
            "VSSADMIN.EXE"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "shadow",
          "create"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administrator working with shadow copies, access for backup purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Shadow Copies Deletion Using Operating Systems Utilities",
    "id": 1113,
    "status": "stable",
    "description": "Shadow Copies deletion using operating systems utilities",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
      "https://blog.talosintelligence.com/2017/05/wannacry.html",
      "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
      "https://www.bleepingcomputer.com/news/security/why-everyone-should-disable-vssadmin-exe-now/",
      "https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100",
      "https://github.com/Neo23x0/Raccine#the-process",
      "https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/gen_ransomware_command_lines.yar",
      "https://redcanary.com/blog/intelligence-insights-october-2021/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/blackbyte-exbyte-ransomware"
    ],
    "author": "Florian Roth (Nextron Systems), Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community, Andreas Hunkeler (@Karneades)",
    "date": "2019/10/22",
    "modified": "2022/11/03",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1070",
      "attack.t1490"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\wmic.exe",
            "\\vssadmin.exe",
            "\\diskshadow.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll",
            "wmic.exe",
            "VSSADMIN.EXE",
            "diskshadow.exe"
          ]
        }
      ],
      "selection1_cli": {
        "CommandLine|contains|all": [
          "shadow",
          "delete"
        ]
      },
      "selection2_img": [
        {
          "Image|endswith": "\\wbadmin.exe"
        },
        {
          "OriginalFileName": "WBADMIN.EXE"
        }
      ],
      "selection2_cli": {
        "CommandLine|contains|all": [
          "delete",
          "catalog",
          "quiet"
        ]
      },
      "selection3_img": [
        {
          "Image|endswith": "\\vssadmin.exe"
        },
        {
          "OriginalFileName": "VSSADMIN.EXE"
        }
      ],
      "selection3_cli": {
        "CommandLine|contains|all": [
          "resize",
          "shadowstorage"
        ],
        "CommandLine|contains": [
          "unbounded",
          "/MaxSize="
        ]
      },
      "condition": "(all of selection1*) or (all of selection2*) or (all of selection3*)"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason",
      "LANDesk LDClient Ivanti-PSModule (PS EncodedCommand)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Shell/Scripting Processes Spawning Suspicious Programs",
    "id": 1114,
    "status": "test",
    "description": "Detects suspicious child processes of a Windows shell and scripting processes such as wscript, rundll32, powershell, mshta...etc.",
    "references": [
      "https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html"
    ],
    "author": "Florian Roth (Nextron Systems), Tim Shelton",
    "date": "2018/04/06",
    "modified": "2023/05/23",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1059.005",
      "attack.t1059.001",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": [
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\rundll32.exe",
          "\\cscript.exe",
          "\\wscript.exe",
          "\\wmiprvse.exe",
          "\\regsvr32.exe"
        ],
        "Image|endswith": [
          "\\schtasks.exe",
          "\\nslookup.exe",
          "\\certutil.exe",
          "\\bitsadmin.exe",
          "\\mshta.exe"
        ]
      },
      "filter_ccmcache": {
        "CurrentDirectory|contains": "\\ccmcache\\"
      },
      "filter_amazon": {
        "ParentCommandLine|contains": [
          "\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\setup-scheduledtask.ps1",
          "\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\set-selfhealing.ps1",
          "\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\check-workspacehealth.ps1",
          "\\nessus_"
        ]
      },
      "filter_nessus": {
        "CommandLine|contains": "\\nessus_"
      },
      "filter_sccm_install": {
        "ParentImage|endswith": "\\mshta.exe",
        "Image|endswith": "\\mshta.exe",
        "ParentCommandLine|contains|all": [
          "C:\\MEM_Configmgr_",
          "\\splash.hta",
          "{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}"
        ],
        "CommandLine|contains|all": [
          "C:\\MEM_Configmgr_",
          "\\SMSSETUP\\BIN\\",
          "\\autorun.hta",
          "{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "CurrentDirectory",
      "Image",
      "ParentImage"
    ],
    "falsepositives": [
      "Administrative scripts",
      "Microsoft SCCM"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Process Creation Using Sysnative Folder",
    "id": 1115,
    "status": "test",
    "description": "Detects process creation events that use the Sysnative folder (common for CobaltStrike spawns)",
    "references": [
      "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2022/08/23",
    "modified": "2023/12/14",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "sysnative": [
        {
          "CommandLine|contains": ":\\Windows\\Sysnative\\"
        },
        {
          "Image|contains": ":\\Windows\\Sysnative\\"
        }
      ],
      "condition": "sysnative"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "System File Execution Location Anomaly",
    "id": 1116,
    "status": "experimental",
    "description": "Detects a Windows program executable started from a suspicious folder",
    "references": [
      "https://twitter.com/GelosSnake/status/934900723426439170",
      "https://asec.ahnlab.com/en/39828/"
    ],
    "author": "Florian Roth (Nextron Systems), Patrick Bareiss, Anton Kutepov, oscd.community, Nasreddine Bencherchali",
    "date": "2017/11/27",
    "modified": "2023/10/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\svchost.exe",
          "\\rundll32.exe",
          "\\services.exe",
          "\\powershell.exe",
          "\\powershell_ise.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\spoolsv.exe",
          "\\lsass.exe",
          "\\smss.exe",
          "\\csrss.exe",
          "\\conhost.exe",
          "\\wininit.exe",
          "\\lsm.exe",
          "\\winlogon.exe",
          "\\explorer.exe",
          "\\taskhost.exe",
          "\\Taskmgr.exe",
          "\\sihost.exe",
          "\\RuntimeBroker.exe",
          "\\smartscreen.exe",
          "\\dllhost.exe",
          "\\audiodg.exe",
          "\\wlanext.exe",
          "\\dashost.exe",
          "\\schtasks.exe",
          "\\cscript.exe",
          "\\wscript.exe",
          "\\wsl.exe",
          "\\bitsadmin.exe",
          "\\atbroker.exe",
          "\\bcdedit.exe",
          "\\certutil.exe",
          "\\certreq.exe",
          "\\cmstp.exe",
          "\\consent.exe",
          "\\defrag.exe",
          "\\dism.exe",
          "\\dllhst3g.exe",
          "\\eventvwr.exe",
          "\\msiexec.exe",
          "\\runonce.exe",
          "\\winver.exe",
          "\\logonui.exe",
          "\\userinit.exe",
          "\\dwm.exe",
          "\\LsaIso.exe",
          "\\ntoskrnl.exe",
          "\\wsmprovhost.exe",
          "\\dfrgui.exe"
        ]
      },
      "filter_generic": [
        {
          "Image|startswith": [
            "C:\\Windows\\System32\\",
            "C:\\Windows\\SysWOW64\\",
            "C:\\Windows\\WinSxS\\"
          ]
        },
        {
          "Image|contains": "\\SystemRoot\\System32\\"
        },
        {
          "Image": [
            "C:\\Windows\\explorer.exe",
            "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
            "C:\\Program Files\\PowerShell\\7-preview\\pwsh.exe"
          ]
        }
      ],
      "filter_wsl_windowsapps": {
        "Image|startswith": "C:\\Program Files\\WindowsApps\\MicrosoftCorporationII.WindowsSubsystemForLinux",
        "Image|endswith": "\\wsl.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "Image"
    ],
    "falsepositives": [
      "Exotic software"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious SYSTEM User Process Creation",
    "id": 1117,
    "status": "test",
    "description": "Detects a suspicious process creation as SYSTEM user (suspicious program or command line parameter)",
    "references": [
      "Internal Research",
      "https://tools.thehacker.recipes/mimikatz/modules"
    ],
    "author": "Florian Roth (Nextron Systems), David ANDRE (additional keywords)",
    "date": "2021/12/20",
    "modified": "2023/12/14",
    "tags": [
      "attack.credential_access",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1134",
      "attack.t1003",
      "attack.t1027"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": "System",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "selection_special": [
        {
          "Image|endswith": [
            "\\calc.exe",
            "\\wscript.exe",
            "\\cscript.exe",
            "\\hh.exe",
            "\\mshta.exe",
            "\\forfiles.exe",
            "\\ping.exe"
          ]
        },
        {
          "CommandLine|contains": [
            " -NoP ",
            " -W Hidden ",
            " -decode ",
            " /decode ",
            " /urlcache ",
            " -urlcache ",
            " -e* JAB",
            " -e* SUVYI",
            " -e* SQBFAFgA",
            " -e* aWV4I",
            " -e* IAB",
            " -e* PAA",
            " -e* aQBlAHgA",
            "vssadmin delete shadows",
            "reg SAVE HKLM",
            " -ma ",
            "Microsoft\\Windows\\CurrentVersion\\Run",
            ".downloadstring(",
            ".downloadfile(",
            " /ticket:",
            "dpapi::",
            "event::clear",
            "event::drop",
            "id::modify",
            "kerberos::",
            "lsadump::",
            "misc::",
            "privilege::",
            "rpc::",
            "sekurlsa::",
            "sid::",
            "token::",
            "vault::cred",
            "vault::list",
            " p::d ",
            ";iex(",
            "MiniDump",
            "net user "
          ]
        }
      ],
      "filter_ping": {
        "CommandLine": "ping 127.0.0.1 -n 5"
      },
      "filter_vs": {
        "Image|endswith": "\\PING.EXE",
        "ParentCommandLine|contains": "\\DismFoDInstall.cmd"
      },
      "filter_config_mgr": {
        "ParentImage|contains": ":\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\"
      },
      "filter_java": {
        "ParentImage|contains": [
          ":\\Program Files (x86)\\Java\\",
          ":\\Program Files\\Java\\"
        ],
        "ParentImage|endswith": "\\bin\\javaws.exe",
        "Image|contains": [
          ":\\Program Files (x86)\\Java\\",
          ":\\Program Files\\Java\\"
        ],
        "Image|endswith": "\\bin\\jp2launcher.exe",
        "CommandLine|contains": " -ma "
      },
      "condition": "all of selection* and not 1 of filter_*"
    },
    "falsepositives": [
      "Administrative activity",
      "Scripts and administrative tools used in the monitored environment",
      "Monitoring activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious SYSVOL Domain Group Policy Access",
    "id": 1118,
    "status": "test",
    "description": "Detects Access to Domain Group Policies stored in SYSVOL",
    "references": [
      "https://adsecurity.org/?p=2288",
      "https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100"
    ],
    "author": "Markus Neis, Jonhnathan Ribeiro, oscd.community",
    "date": "2018/04/09",
    "modified": "2022/01/07",
    "tags": [
      "attack.credential_access",
      "attack.t1552.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\SYSVOL\\",
          "\\policies\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Tasks Folder Evasion",
    "id": 1119,
    "status": "test",
    "description": "The Tasks folder in system32 and syswow64 are globally writable paths.\nAdversaries can take advantage of this and load or influence any script hosts or ANY .NET Application\nin Tasks to load and execute a custom assembly into cscript, wscript, regsvr32, mshta, eventvwr\n",
    "references": [
      "https://twitter.com/subTee/status/1216465628946563073",
      "https://gist.github.com/am0nsec/8378da08f848424e4ab0cc5b317fdd26"
    ],
    "author": "Sreeman",
    "date": "2020/01/13",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.execution",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection1": {
        "CommandLine|contains": [
          "echo ",
          "copy ",
          "type ",
          "file createnew"
        ]
      },
      "selection2": {
        "CommandLine|contains": [
          " C:\\Windows\\System32\\Tasks\\",
          " C:\\Windows\\SysWow64\\Tasks\\"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "fields": [
      "CommandLine",
      "ParentProcess"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Userinit Child Process",
    "id": 1120,
    "status": "test",
    "description": "Detects a suspicious child process of userinit",
    "references": [
      "https://twitter.com/SBousseaden/status/1139811587760562176"
    ],
    "author": "Florian Roth (Nextron Systems), Samir Bousseaden (idea)",
    "date": "2019/06/17",
    "modified": "2022/12/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\userinit.exe"
      },
      "filter1": {
        "CommandLine|contains": "\\netlogon\\"
      },
      "filter2": [
        {
          "Image|endswith": "\\explorer.exe"
        },
        {
          "OriginalFileName": "explorer.exe"
        }
      ],
      "condition": "selection and not 1 of filter*"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Administrative scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Malicious Windows Script Components File Execution by TAEF Detection",
    "id": 1121,
    "status": "test",
    "description": "Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces\nAdversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Te/",
      "https://twitter.com/pabraeken/status/993298228840992768",
      "https://docs.microsoft.com/en-us/windows-hardware/drivers/taef/"
    ],
    "author": "Agro (@agro_sev) oscd.community",
    "date": "2020/10/13",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\te.exe"
        },
        {
          "ParentImage|endswith": "\\te.exe"
        },
        {
          "OriginalFileName": "\\te.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "It's not an uncommon to use te.exe directly to execute legal TAEF tests"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Malicious PE Execution by Microsoft Visual Studio Debugger",
    "id": 1122,
    "status": "test",
    "description": "There is an option for a MS VS Just-In-Time Debugger \"vsjitdebugger.exe\" to launch specified executable and attach a debugger.\nThis option may be used adversaries to execute malicious code by signed verified binary.\nThe debugger is installed alongside with Microsoft Visual Studio package.\n",
    "references": [
      "https://twitter.com/pabraeken/status/990758590020452353",
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Vsjitdebugger/",
      "https://docs.microsoft.com/en-us/visualstudio/debugger/debug-using-the-just-in-time-debugger?view=vs-2019"
    ],
    "author": "Agro (@agro_sev), Ensar \u00c5\u017eamil (@sblmsrsn), oscd.community",
    "date": "2020/10/14",
    "modified": "2022/10/09",
    "tags": [
      "attack.t1218",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\vsjitdebugger.exe"
      },
      "reduction1": {
        "Image|endswith": "\\vsimmersiveactivatehelper*.exe"
      },
      "reduction2": {
        "Image|endswith": "\\devenv.exe"
      },
      "condition": "selection and not (reduction1 or reduction2)"
    },
    "falsepositives": [
      "The process spawned by vsjitdebugger.exe is uncommon."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Weak or Abused Passwords In CLI",
    "id": 1123,
    "status": "test",
    "description": "Detects weak passwords or often abused passwords (seen used by threat actors) via the CLI.\nAn example would be a threat actor creating a new user via the net command and providing the password inline\n",
    "references": [
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/espionage-asia-governments",
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/",
      "https://www.microsoft.com/en-us/security/blog/2022/10/25/dev-0832-vice-society-opportunistic-ransomware-campaigns-impacting-us-education-sector/",
      "https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/14",
    "modified": "2024/02/23",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "123456789",
          "123123qwE",
          "Asd123.aaaa",
          "Decryptme",
          "P@ssw0rd!",
          "Pass8080",
          "password123",
          "test@202"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the passwords by users via commandline (should be discouraged)",
      "Other currently unknown false positives"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Usage Of Web Request Commands And Cmdlets",
    "id": 1124,
    "related": [
      {
        "id": "1139d2e2-84b1-4226-b445-354492eba8ba",
        "type": "similar"
      },
      {
        "id": "f67dbfce-93bc-440d-86ad-a95ae8858c90",
        "type": "obsoletes"
      },
      {
        "id": "cd5c8085-4070-4e22-908d-a5b3342deb74",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via CommandLine",
    "references": [
      "https://4sysops.com/archives/use-powershell-to-download-a-file-with-http-https-and-ftp/",
      "https://blog.jourdant.me/post/3-ways-to-download-files-with-powershell",
      "https://docs.microsoft.com/en-us/powershell/module/bitstransfer/add-bitsfile?view=windowsserver2019-ps"
    ],
    "author": "James Pemberton / @4A616D6573, Endgame, JHasenbusch, oscd.community, Austin Songer @austinsonger",
    "date": "2019/10/24",
    "modified": "2023/01/10",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "[System.Net.WebRequest]::create",
          "curl ",
          "Invoke-RestMethod",
          "Invoke-WebRequest",
          "iwr ",
          "Net.WebClient",
          "Resume-BitsTransfer",
          "Start-BitsTransfer",
          "wget ",
          "WinHttp.WinHttpRequest"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Use of Get-Command and Get-Help modules to reference Invoke-WebRequest and Start-BitsTransfer."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WhoAmI as Parameter",
    "id": 1125,
    "status": "test",
    "description": "Detects a suspicious process command line that uses whoami as first parameter (as e.g. used by EfsPotato)",
    "references": [
      "https://twitter.com/blackarrowsec/status/1463805700602224645?s=12"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/11/29",
    "modified": "2022/12/25",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": ".exe whoami"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Execution via WorkFolders.exe",
    "id": 1126,
    "status": "test",
    "description": "Detects using WorkFolders.exe to execute an arbitrary control.exe",
    "references": [
      "https://twitter.com/elliotkillick/status/1449812843772227588"
    ],
    "author": "Maxime Thiebaut (@0xThiebaut)",
    "date": "2021/10/21",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\control.exe",
        "ParentImage|endswith": "\\WorkFolders.exe"
      },
      "filter": {
        "Image": "C:\\Windows\\System32\\control.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate usage of the uncommon Windows Work Folders feature."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspect Svchost Activity",
    "id": 1127,
    "status": "test",
    "description": "It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.",
    "references": [
      "https://securitybytes.io/blue-team-fundamentals-part-two-windows-processes-759fe15965e2"
    ],
    "author": "David Burkett, @signalblur",
    "date": "2019/12/28",
    "modified": "2022/06/27",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|endswith": "svchost.exe",
        "Image|endswith": "\\svchost.exe"
      },
      "filter": [
        {
          "ParentImage|endswith": [
            "\\rpcnet.exe",
            "\\rpcnetp.exe"
          ]
        },
        {
          "CommandLine": null
        }
      ],
      "condition": "selection and not filter"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Rpcnet.exe / rpcnetp.exe which is a lojack style software. https://www.blackhat.com/docs/us-14/materials/us-14-Kamlyuk-Kamluk-Computrace-Backdoor-Revisited.pdf"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Terminal Service Process Spawn",
    "id": 1128,
    "status": "test",
    "description": "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)",
    "references": [
      "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/05/22",
    "modified": "2023/01/25",
    "tags": [
      "attack.initial_access",
      "attack.t1190",
      "attack.lateral_movement",
      "attack.t1210",
      "car.2013-07-002"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "ParentCommandLine|contains|all": [
          "\\svchost.exe",
          "termsvcs"
        ]
      },
      "filter_img": {
        "Image|endswith": [
          "\\rdpclip.exe",
          ":\\Windows\\System32\\csrss.exe",
          ":\\Windows\\System32\\wininit.exe",
          ":\\Windows\\System32\\winlogon.exe"
        ]
      },
      "filter_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Svchost Parent Process",
    "id": 1129,
    "status": "test",
    "description": "Detects an uncommon svchost parent process",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/08/15",
    "modified": "2022/06/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\svchost.exe"
      },
      "filter_main_generic": {
        "ParentImage|endswith": [
          "\\Mrt.exe",
          "\\MsMpEng.exe",
          "\\ngen.exe",
          "\\rpcnet.exe",
          "\\services.exe",
          "\\TiWorker.exe"
        ]
      },
      "filter_main_parent_null": {
        "ParentImage": null
      },
      "filter_main_parent_empty": {
        "ParentImage": [
          "-",
          ""
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Permission Check Via Accesschk.EXE",
    "id": 1130,
    "status": "test",
    "description": "Detects the usage of the \"Accesschk\" utility, an access and privilege audit tool developed by SysInternal and often being abused by attacker to verify process privileges",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment?slide=43",
      "https://www.youtube.com/watch?v=JGs-aKf2OtU&ab_channel=OFFZONEMOSCOW",
      "https://github.com/carlospolop/PEASS-ng/blob/fa0f2e17fbc1d86f1fd66338a40e665e7182501d/winPEAS/winPEASbat/winPEAS.bat",
      "https://github.com/gladiatx0r/Powerless/blob/04f553bbc0c65baf4e57344deff84e3f016e6b51/Powerless.bat"
    ],
    "author": "Teymur Kheirkhabarov (idea), Mangatas Tondang, oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/10/13",
    "modified": "2023/02/20",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Product|endswith": "AccessChk"
        },
        {
          "Description|contains": "Reports effective permissions"
        },
        {
          "Image|endswith": [
            "\\accesschk.exe",
            "\\accesschk64.exe"
          ]
        },
        {
          "OriginalFileName": "accesschk.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "uwcqv ",
          "kwsu ",
          "qwsu ",
          "uwdqs "
        ]
      },
      "condition": "all of selection*"
    },
    "fields": [
      "IntegrityLevel",
      "Product",
      "Description",
      "CommandLine"
    ],
    "falsepositives": [
      "System administrator Usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Active Directory Database Snapshot Via ADExplorer",
    "id": 1131,
    "related": [
      {
        "id": "ef61af62-bc74-4f58-b49b-626448227652",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the execution of Sysinternals ADExplorer with the \"-snapshot\" flag in order to save a local copy of the active directory database.",
    "references": [
      "https://www.documentcloud.org/documents/5743766-Global-Threat-Report-2019.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/14",
    "tags": [
      "attack.credential_access",
      "attack.t1552.001",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ADExplorer.exe"
        },
        {
          "OriginalFileName": "AdExp"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "snapshot"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Active Directory Database Snapshot Via ADExplorer",
    "id": 1132,
    "related": [
      {
        "id": "9212f354-7775-4e28-9c9f-8f0a4544e664",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the execution of Sysinternals ADExplorer with the \"-snapshot\" flag in order to save a local copy of the active directory database to a suspicious directory.",
    "references": [
      "https://www.documentcloud.org/documents/5743766-Global-Threat-Report-2019.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/14",
    "tags": [
      "attack.credential_access",
      "attack.t1552.001",
      "attack.t1003.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\ADExplorer.exe"
        },
        {
          "OriginalFileName": "AdExp"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": "snapshot"
      },
      "selection_paths": {
        "CommandLine|contains": [
          "\\Downloads\\",
          "\\Users\\Public\\",
          "\\AppData\\",
          "\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Execution of Sysinternals Tools",
    "id": 1133,
    "related": [
      {
        "id": "25ffa65d-76d8-4da5-a832-3f2b0136e133",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects command lines that contain the 'accepteula' flag which could be a sign of execution of one of the Sysinternals tools",
    "references": [
      "https://twitter.com/Moti_B/status/1008587936735035392"
    ],
    "author": "Markus Neis",
    "date": "2017/08/28",
    "modified": "2023/02/24",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          " -accepteula",
          " /accepteula"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of SysInternals tools",
      "Programs that use the same command line flag"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Memory Dumping Activity Via LiveKD",
    "id": 1134,
    "status": "experimental",
    "description": "Detects execution of LiveKD based on PE metadata or image name",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/livekd"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\livekd.exe",
            "\\livekd64.exe"
          ]
        },
        {
          "OriginalFileName": "livekd.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Administration and debugging activity (must be investigated)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Kernel Memory Dump Via LiveKD",
    "id": 1135,
    "status": "experimental",
    "description": "Detects execution of LiveKD with the \"-m\" flag to potentially dump the kernel memory",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/livekd",
      "https://4sysops.com/archives/creating-a-complete-memory-dump-without-a-blue-screen/",
      "https://kb.acronis.com/content/60892"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/16",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\livekd.exe",
            "\\livekd64.exe"
          ]
        },
        {
          "OriginalFileName": "livekd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " /m",
          " -m"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely in production environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Procdump Execution",
    "id": 1136,
    "status": "test",
    "description": "Detects usage of the SysInternals Procdump utility",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/procdump"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/16",
    "modified": "2023/02/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\procdump.exe",
          "\\procdump64.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of procdump by a developer or administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential SysInternals ProcDump Evasion",
    "id": 1137,
    "status": "test",
    "description": "Detects uses of the SysInternals ProcDump utility in which ProcDump or its output get renamed, or a dump file is moved or copied to a different name",
    "references": [
      "https://twitter.com/mrd0x/status/1480785527901204481"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": [
          "copy procdump",
          "move procdump"
        ]
      },
      "selection_2": {
        "CommandLine|contains|all": [
          "copy ",
          ".dmp "
        ],
        "CommandLine|contains": [
          "2.dmp",
          "lsass",
          "out.dmp"
        ]
      },
      "selection_3": {
        "CommandLine|contains": [
          "copy lsass.exe_",
          "move lsass.exe_"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "False positives are expected in cases in which ProcDump just gets copied to a different directory without any renaming"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential LSASS Process Dump Via Procdump",
    "id": 1138,
    "status": "stable",
    "description": "Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process.\nThis way we are also able to catch cases in which the attacker has renamed the procdump executable.\n",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/procdump"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/10/30",
    "modified": "2023/02/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036",
      "attack.credential_access",
      "attack.t1003.001",
      "car.2013-05-009"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_flags": {
        "CommandLine|contains": [
          " -ma ",
          " /ma "
        ]
      },
      "selection_process": {
        "CommandLine|contains": " ls"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unlikely, because no one should dump an lsass process memory",
      "Another tool that uses command line flags similar to ProcDump"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Psexec Execution",
    "id": 1139,
    "status": "test",
    "description": "Detects user accept agreement execution in psexec commandline",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"
    ],
    "author": "omkar72",
    "date": "2020/10/30",
    "modified": "2023/02/28",
    "tags": [
      "attack.execution",
      "attack.t1569",
      "attack.t1021"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\psexec.exe"
        },
        {
          "OriginalFileName": "psexec.c"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative scripts."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PsExec/PAExec Escalation to LOCAL SYSTEM",
    "id": 1140,
    "related": [
      {
        "id": "207b0396-3689-42d9-8399-4222658efc99",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious commandline flags used by PsExec and PAExec to escalate a command line to LOCAL_SYSTEM rights",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",
      "https://www.poweradmin.com/paexec/",
      "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/11/23",
    "modified": "2023/02/28",
    "tags": [
      "attack.resource_development",
      "attack.t1587.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_sys": {
        "CommandLine|contains": [
          " -s cmd",
          " /s cmd",
          " -s -i cmd",
          " /s /i cmd",
          " /s -i cmd",
          " -s /i cmd",
          " -i -s cmd",
          " /i /s cmd",
          " -i /s cmd",
          " /i -s cmd",
          " -s pwsh",
          " /s pwsh",
          " -s -i pwsh",
          " /s /i pwsh",
          " /s -i pwsh",
          " -s /i pwsh",
          " -i -s pwsh",
          " /i /s pwsh",
          " -i /s pwsh",
          " /i -s pwsh",
          " -s powershell",
          " /s powershell",
          " -s -i powershell",
          " /s /i powershell",
          " /s -i powershell",
          " -s /i powershell",
          " -i -s powershell",
          " /i /s powershell",
          " -i /s powershell",
          " /i -s powershell"
        ]
      },
      "selection_other": {
        "CommandLine|contains": [
          "psexec",
          "paexec",
          "accepteula"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Admins that use PsExec or PAExec to escalate to the SYSTEM account for maintenance purposes (rare)",
      "Users that debug Microsoft Intune issues using the commands mentioned in the official documentation; see https://learn.microsoft.com/en-us/mem/intune/apps/intune-management-extension"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PsExec Remote Execution",
    "id": 1141,
    "status": "test",
    "description": "Detects potential psexec command that initiate execution on a remote systems via common commandline flags used by the utility",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",
      "https://www.poweradmin.com/paexec/",
      "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/28",
    "tags": [
      "attack.resource_development",
      "attack.t1587.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "accepteula",
          " -u ",
          " -p ",
          " \\\\\\\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PsExec Service Execution",
    "id": 1142,
    "related": [
      {
        "id": "fa91cc36-24c9-41ce-b3c8-3bbc3f2f67ba",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects launch of the PSEXESVC service, which means that this system was the target of a psexec remote execution",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",
      "https://www.youtube.com/watch?v=ro2QuZTIMBM"
    ],
    "author": "Thomas Patzke, Romaissa Adjailia, Florian Roth (Nextron Systems)",
    "date": "2017/06/12",
    "modified": "2023/02/28",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image": "C:\\Windows\\PSEXESVC.exe"
        },
        {
          "OriginalFileName": "psexesvc.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative tasks"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PsExec Service Child Process Execution as LOCAL SYSTEM",
    "id": 1143,
    "related": [
      {
        "id": "fa91cc36-24c9-41ce-b3c8-3bbc3f2f67ba",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious launch of the PSEXESVC service on this system and a sub process run as LOCAL_SYSTEM (-s), which means that someone remotely started a command on this system running it with highest privileges and not only the privileges of the login user account (e.g. the administrator account)",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psexec"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/02/28",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage": "C:\\Windows\\PSEXESVC.exe",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Users that debug Microsoft Intune issues using the commands mentioned in the official documentation; see https://learn.microsoft.com/en-us/mem/intune/apps/intune-management-extension"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Use of PsLogList",
    "id": 1144,
    "status": "test",
    "description": "Detects usage of the PsLogList utility to dump event log in order to extract admin accounts and perform account discovery or delete events logs",
    "references": [
      "https://research.nccgroup.com/2021/01/12/abusing-cloud-services-to-fly-under-the-radar/",
      "https://www.cybereason.com/blog/deadringer-exposing-chinese-threat-actors-targeting-major-telcos",
      "https://github.com/3CORESec/MAL-CL/tree/master/Descriptors/Sysinternals/PsLogList",
      "https://twitter.com/EricaZelic/status/1614075109827874817"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/18",
    "modified": "2023/01/16",
    "tags": [
      "attack.discovery",
      "attack.t1087",
      "attack.t1087.001",
      "attack.t1087.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "psloglist.exe"
        },
        {
          "Image|endswith": [
            "\\psloglist.exe",
            "\\psloglist64.exe"
          ]
        }
      ],
      "selection_cli_eventlog": {
        "CommandLine|contains": [
          " security",
          " application",
          " system"
        ]
      },
      "selection_cli_flags": {
        "CommandLine|contains": [
          " -d",
          " /d",
          " -x",
          " /x",
          " -s",
          " /s",
          " -c",
          " /c",
          " -g",
          " /g"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Another tool that uses the command line switches of PsLogList",
      "Legitimate use of PsLogList by an administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sysinternals PsService Execution",
    "id": 1145,
    "status": "test",
    "description": "Detects usage of Sysinternals PsService which can be abused for service reconnaissance and tampering",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psservice"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/16",
    "modified": "2023/02/24",
    "tags": [
      "attack.discovery",
      "attack.persistence",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "psservice.exe"
        },
        {
          "Image|endswith": [
            "\\PsService.exe",
            "\\PsService64.exe"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of PsService by an administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sysinternals PsSuspend Execution",
    "id": 1146,
    "related": [
      {
        "id": "4beb6ae0-f85b-41e2-8f18-8668abc8af78",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of Sysinternals PsSuspend which can be abused to suspend critical processes",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/pssuspend",
      "https://twitter.com/0gtweet/status/1638069413717975046"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/23",
    "tags": [
      "attack.discovery",
      "attack.persistence",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "OriginalFileName": "pssuspend.exe"
        },
        {
          "Image|endswith": [
            "\\pssuspend.exe",
            "\\pssuspend64.exe"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sysinternals PsSuspend Suspicious Execution",
    "id": 1147,
    "related": [
      {
        "id": "48bbc537-b652-4b4e-bd1d-281172df448f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious execution of Sysinternals PsSuspend, where the utility is used to suspend critical processes such as AV or EDR to bypass defenses",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/pssuspend",
      "https://twitter.com/0gtweet/status/1638069413717975046"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "pssuspend.exe"
        },
        {
          "Image|endswith": [
            "\\pssuspend.exe",
            "\\pssuspend64.exe"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "msmpeng.exe"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential File Overwrite Via Sysinternals SDelete",
    "id": 1148,
    "status": "test",
    "description": "Detects the use of SDelete to erase a file not the free space",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1485/T1485.md"
    ],
    "author": "frack113",
    "date": "2021/06/03",
    "modified": "2023/02/28",
    "tags": [
      "attack.impact",
      "attack.t1485"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "OriginalFileName": "sdelete.exe"
      },
      "filter": {
        "CommandLine|contains": [
          " -h",
          " -c",
          " -z",
          " /\\?"
        ]
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Privilege Escalation To LOCAL SYSTEM",
    "id": 1149,
    "related": [
      {
        "id": "8834e2f7-6b4b-4f09-8906-d2276470ee23",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects unknown program using commandline flags usually used by tools such as PsExec and PAExec to start programs with SYSTEM Privileges",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/psexec",
      "https://www.poweradmin.com/paexec/",
      "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/05/22",
    "modified": "2023/02/27",
    "tags": [
      "attack.resource_development",
      "attack.t1587.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          " -s cmd",
          " /s cmd",
          " -s -i cmd",
          " /s /i cmd",
          " /s -i cmd",
          " -s /i cmd",
          " -i -s cmd",
          " /i /s cmd",
          " -i /s cmd",
          " /i -s cmd",
          " -s pwsh",
          " /s pwsh",
          " -s -i pwsh",
          " /s /i pwsh",
          " /s -i pwsh",
          " -s /i pwsh",
          " -i -s pwsh",
          " /i /s pwsh",
          " -i /s pwsh",
          " /i -s pwsh",
          " -s powershell",
          " /s powershell",
          " -s -i powershell",
          " /s /i powershell",
          " /s -i powershell",
          " -s /i powershell",
          " -i -s powershell",
          " /i /s powershell",
          " -i /s powershell",
          " /i -s powershell"
        ]
      },
      "filter_main_exclude_coverage": {
        "CommandLine|contains": [
          "paexec",
          "PsExec",
          "accepteula"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Weird admins that rename their tools",
      "Software companies that bundle PsExec/PAExec with their software and rename it, so that it is less embarrassing"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon Configuration Update",
    "id": 1150,
    "status": "test",
    "description": "Detects updates to Sysmon's configuration. Attackers might update or replace the Sysmon configuration with a bare bone one to avoid monitoring without shutting down the service completely",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": [
        {
          "Image|endswith": [
            "\\Sysmon64.exe",
            "\\Sysmon.exe"
          ]
        },
        {
          "Description": "System activity monitor"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-c",
          "/c"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administrators might use this command to update Sysmon configuration."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uninstall Sysinternals Sysmon",
    "id": 1151,
    "status": "test",
    "description": "Detects the removal of Sysmon, which could be a potential attempt at defense evasion",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md#atomic-test-11---uninstall-sysmon"
    ],
    "author": "frack113",
    "date": "2022/01/12",
    "modified": "2023/03/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": [
        {
          "Image|endswith": [
            "\\Sysmon64.exe",
            "\\Sysmon.exe"
          ]
        },
        {
          "Description": "System activity monitor"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "-u",
          "/u"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administrators might use this command to remove Sysmon for debugging purposes"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Binary Impersonating Sysinternals Tools",
    "id": 1152,
    "status": "test",
    "description": "Detects binaries that use the same name as legitimate sysinternals tools to evade detection",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite"
    ],
    "author": "frack113",
    "date": "2021/12/20",
    "modified": "2022/12/08",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_exe": {
        "Image|endswith": [
          "\\accesschk.exe",
          "\\accesschk64.exe",
          "\\AccessEnum.exe",
          "\\ADExplorer.exe",
          "\\ADExplorer64.exe",
          "\\ADInsight.exe",
          "\\ADInsight64.exe",
          "\\adrestore.exe",
          "\\adrestore64.exe",
          "\\Autologon.exe",
          "\\Autologon64.exe",
          "\\Autoruns.exe",
          "\\Autoruns64.exe",
          "\\autorunsc.exe",
          "\\autorunsc64.exe",
          "\\Bginfo.exe",
          "\\Bginfo64.exe",
          "\\Cacheset.exe",
          "\\Cacheset64.exe",
          "\\Clockres.exe",
          "\\Clockres64.exe",
          "\\Contig.exe",
          "\\Contig64.exe",
          "\\Coreinfo.exe",
          "\\Coreinfo64.exe",
          "\\CPUSTRES.EXE",
          "\\CPUSTRES64.EXE",
          "\\ctrl2cap.exe",
          "\\Dbgview.exe",
          "\\dbgview64.exe",
          "\\Desktops.exe",
          "\\Desktops64.exe",
          "\\disk2vhd.exe",
          "\\disk2vhd64.exe",
          "\\diskext.exe",
          "\\diskext64.exe",
          "\\Diskmon.exe",
          "\\Diskmon64.exe",
          "\\DiskView.exe",
          "\\DiskView64.exe",
          "\\du.exe",
          "\\du64.exe",
          "\\efsdump.exe",
          "\\FindLinks.exe",
          "\\FindLinks64.exe",
          "\\handle.exe",
          "\\handle64.exe",
          "\\hex2dec.exe",
          "\\hex2dec64.exe",
          "\\junction.exe",
          "\\junction64.exe",
          "\\ldmdump.exe",
          "\\listdlls.exe",
          "\\listdlls64.exe",
          "\\livekd.exe",
          "\\livekd64.exe",
          "\\loadOrd.exe",
          "\\loadOrd64.exe",
          "\\loadOrdC.exe",
          "\\loadOrdC64.exe",
          "\\logonsessions.exe",
          "\\logonsessions64.exe",
          "\\movefile.exe",
          "\\movefile64.exe",
          "\\notmyfault.exe",
          "\\notmyfault64.exe",
          "\\notmyfaultc.exe",
          "\\notmyfaultc64.exe",
          "\\ntfsinfo.exe",
          "\\ntfsinfo64.exe",
          "\\pendmoves.exe",
          "\\pendmoves64.exe",
          "\\pipelist.exe",
          "\\pipelist64.exe",
          "\\portmon.exe",
          "\\procdump.exe",
          "\\procdump64.exe",
          "\\procexp.exe",
          "\\procexp64.exe",
          "\\Procmon.exe",
          "\\Procmon64.exe",
          "\\psExec.exe",
          "\\psExec64.exe",
          "\\psfile.exe",
          "\\psfile64.exe",
          "\\psGetsid.exe",
          "\\psGetsid64.exe",
          "\\psInfo.exe",
          "\\psInfo64.exe",
          "\\pskill.exe",
          "\\pskill64.exe",
          "\\pslist.exe",
          "\\pslist64.exe",
          "\\psLoggedon.exe",
          "\\psLoggedon64.exe",
          "\\psloglist.exe",
          "\\psloglist64.exe",
          "\\pspasswd.exe",
          "\\pspasswd64.exe",
          "\\psping.exe",
          "\\psping64.exe",
          "\\psService.exe",
          "\\psService64.exe",
          "\\psshutdown.exe",
          "\\psshutdown64.exe",
          "\\pssuspend.exe",
          "\\pssuspend64.exe",
          "\\RAMMap.exe",
          "\\RDCMan.exe",
          "\\RegDelNull.exe",
          "\\RegDelNull64.exe",
          "\\regjump.exe",
          "\\ru.exe",
          "\\ru64.exe",
          "\\sdelete.exe",
          "\\sdelete64.exe",
          "\\ShareEnum.exe",
          "\\ShareEnum64.exe",
          "\\shellRunas.exe",
          "\\sigcheck.exe",
          "\\sigcheck64.exe",
          "\\streams.exe",
          "\\streams64.exe",
          "\\strings.exe",
          "\\strings64.exe",
          "\\sync.exe",
          "\\sync64.exe",
          "\\Sysmon.exe",
          "\\Sysmon64.exe",
          "\\tcpvcon.exe",
          "\\tcpvcon64.exe",
          "\\tcpview.exe",
          "\\tcpview64.exe",
          "\\Testlimit.exe",
          "\\Testlimit64.exe",
          "\\vmmap.exe",
          "\\vmmap64.exe",
          "\\Volumeid.exe",
          "\\Volumeid64.exe",
          "\\whois.exe",
          "\\whois64.exe",
          "\\Winobj.exe",
          "\\Winobj64.exe",
          "\\ZoomIt.exe",
          "\\ZoomIt64.exe"
        ]
      },
      "filter_valid": {
        "Company": [
          "Sysinternals - www.sysinternals.com",
          "Sysinternals"
        ]
      },
      "filter_empty": {
        "Company": null
      },
      "condition": "selection_exe and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sysprep on AppData Folder",
    "id": 1153,
    "status": "test",
    "description": "Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)",
    "references": [
      "https://www.symantec.com/blogs/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets",
      "https://app.any.run/tasks/61a296bb-81ad-4fee-955f-3b399f4aaf4b"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/06/22",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\sysprep.exe",
        "CommandLine|contains": "\\AppData\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Execution of Systeminfo",
    "id": 1154,
    "status": "test",
    "description": "Detects usage of the \"systeminfo\" command to retrieve information",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1082/T1082.md#atomic-test-1---system-information-discovery",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/systeminfo"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "modified": "2022/07/14",
    "tags": [
      "attack.discovery",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\systeminfo.exe"
        },
        {
          "OriginalFileName": "sysinfo.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Signing Bypass Via Windows Developer Features",
    "id": 1155,
    "related": [
      {
        "id": "b110ebaf-697f-4da1-afd5-b536fa27a2c1",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a user enable developer features such as \"Developer Mode\" or \"Application Sideloading\". Which allows the user to install untrusted packages.",
    "references": [
      "Internal Research",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\SystemSettingsAdminFlows.exe"
        },
        {
          "OriginalFileName": "SystemSettingsAdminFlows.EXE"
        }
      ],
      "selection_flag": {
        "CommandLine|contains": "TurnOnDeveloperFeatures"
      },
      "selection_options": {
        "CommandLine|contains": [
          "DeveloperUnlock",
          "EnableSideloading"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Recursive Takeown",
    "id": 1156,
    "status": "test",
    "description": "Adversaries can interact with the DACLs using built-in Windows commands takeown which can grant adversaries higher permissions on specific files and folders",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/takeown",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1222.001/T1222.001.md#atomic-test-1---take-ownership-using-takeown-utility"
    ],
    "author": "frack113",
    "date": "2022/01/30",
    "modified": "2022/11/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1222.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\takeown.exe",
        "CommandLine|contains|all": [
          "/f ",
          "/r"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Scripts created by developers and admins",
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Tap Installer Execution",
    "id": 1157,
    "status": "test",
    "description": "Well-known TAP software installation. Possible preparation for data exfiltration using tunneling techniques",
    "references": [
      "https://community.openvpn.net/openvpn/wiki/ManagingWindowsTAPDrivers"
    ],
    "author": "Daniil Yugoslavskiy, Ian Davis, oscd.community",
    "date": "2019/10/24",
    "modified": "2023/12/11",
    "tags": [
      "attack.exfiltration",
      "attack.t1048"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\tapinstall.exe"
      },
      "filter_optional_avast": {
        "Image|contains": [
          ":\\Program Files\\Avast Software\\SecureLine VPN\\",
          ":\\Program Files (x86)\\Avast Software\\SecureLine VPN\\"
        ]
      },
      "filter_optional_openvpn": {
        "Image|contains": ":\\Program Files\\OpenVPN Connect\\drivers\\tap\\"
      },
      "filter_optional_protonvpn": {
        "Image|contains": ":\\Program Files (x86)\\Proton Technologies\\ProtonVPNTap\\installer\\"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate OpenVPN TAP installation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Compressed File Creation Via Tar.EXE",
    "id": 1158,
    "status": "experimental",
    "description": "Detects execution of \"tar.exe\" in order to create a compressed file.\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration.\n",
    "references": [
      "https://unit42.paloaltonetworks.com/chromeloader-malware/",
      "https://lolbas-project.github.io/lolbas/Binaries/Tar/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/cicada-apt10-japan-espionage"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), AdmU3",
    "date": "2023/12/19",
    "tags": [
      "attack.collection",
      "attack.exfiltration",
      "attack.t1560",
      "attack.t1560.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\tar.exe"
        },
        {
          "OriginalFileName": "bsdtar"
        }
      ],
      "selection_create": {
        "CommandLine|contains": [
          "-c",
          "-r",
          "-u"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Compressed File Extraction Via Tar.EXE",
    "id": 1159,
    "status": "experimental",
    "description": "Detects execution of \"tar.exe\" in order to extract compressed file.\nAdversaries may abuse various utilities in order to decompress data to avoid detection.\n",
    "references": [
      "https://unit42.paloaltonetworks.com/chromeloader-malware/",
      "https://lolbas-project.github.io/lolbas/Binaries/Tar/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/cicada-apt10-japan-espionage"
    ],
    "author": "AdmU3",
    "date": "2023/12/19",
    "tags": [
      "attack.collection",
      "attack.exfiltration",
      "attack.t1560",
      "attack.t1560.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\tar.exe"
        },
        {
          "OriginalFileName": "bsdtar"
        }
      ],
      "selection_extract": {
        "CommandLine|contains": "-x"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Taskkill Symantec Endpoint Protection",
    "id": 1160,
    "status": "test",
    "description": "Detects one of the possible scenarios for disabling Symantec Endpoint Protection.\nSymantec Endpoint Protection antivirus software services incorrectly implement the protected service mechanism.\nAs a result, the NT AUTHORITY/SYSTEM user can execute the taskkill /im command several times ccSvcHst.exe /f, thereby killing the process belonging to the service, and thus shutting down the service.\n",
    "references": [
      "https://www.exploit-db.com/exploits/37525",
      "https://community.spiceworks.com/topic/2195015-batch-script-to-uninstall-symantec-endpoint-protection",
      "https://community.broadcom.com/symantecenterprise/communities/community-home/digestviewer/viewthread?MessageKey=6ce94b67-74e1-4333-b16f-000b7fd874f0&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=digestviewer"
    ],
    "author": "Ilya Krestinichev, Florian Roth (Nextron Systems)",
    "date": "2022/09/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "taskkill",
          " /F ",
          " /IM ",
          "ccSvcHst.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Loaded Module Enumeration Via Tasklist.EXE",
    "id": 1161,
    "status": "experimental",
    "description": "Detects the enumeration of a specific DLL or EXE being used by a binary via \"tasklist.exe\".\nThis is often used by attackers in order to find the specific process identifier (PID) that is using the DLL in question.\nIn order to dump the process memory or perform other nefarious actions.\n",
    "references": [
      "https://www.n00py.io/2021/05/dumping-plaintext-rdp-credentials-from-svchost-exe/",
      "https://pentestlab.blog/tag/svchost/"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2024/02/12",
    "tags": [
      "attack.t1003"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\tasklist.exe"
        },
        {
          "OriginalFileName": "tasklist.exe"
        }
      ],
      "selection_flags": {
        "CommandLine|contains": [
          "/m",
          "-m"
        ]
      },
      "selection_module": {
        "CommandLine|contains": "rdpcorets.dll"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Taskmgr as LOCAL_SYSTEM",
    "id": 1162,
    "status": "test",
    "description": "Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/03/18",
    "modified": "2022/05/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ],
        "Image|endswith": "\\taskmgr.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Process Created Via Taskmgr.EXE",
    "id": 1163,
    "status": "test",
    "description": "Detects the creation of a process via the Windows task manager. This might be an attempt to bypass UAC",
    "references": [
      "https://twitter.com/ReneFreingruber/status/1172244989335810049"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/03/13",
    "modified": "2024/01/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\taskmgr.exe"
      },
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Windows\\System32\\mmc.exe",
          ":\\Windows\\System32\\resmon.exe",
          ":\\Windows\\System32\\Taskmgr.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Command Targeting Teams Sensitive Files",
    "id": 1164,
    "status": "experimental",
    "description": "Detects a commandline containing references to the Microsoft Teams database or cookies files from a process other than Teams.\nThe database might contain authentication tokens and other sensitive information about the logged in accounts.\n",
    "references": [
      "https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/",
      "https://www.vectra.ai/blogpost/undermining-microsoft-teams-security-by-mining-tokens"
    ],
    "author": "@SerkinValery",
    "date": "2022/09/16",
    "modified": "2023/12/18",
    "tags": [
      "attack.credential_access",
      "attack.t1528"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": [
          "\\Microsoft\\Teams\\Cookies",
          "\\Microsoft\\Teams\\Local Storage\\leveldb"
        ]
      },
      "filter_main_legit_locations": {
        "Image|endswith": "\\Microsoft\\Teams\\current\\Teams.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Virtual Smart Card Created Via TpmVscMgr.EXE",
    "id": 1165,
    "status": "experimental",
    "description": "Detects execution of \"Tpmvscmgr.exe\" to create a new virtual smart card.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/identity-protection/virtual-smart-cards/virtual-smart-card-tpmvscmgr"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/15",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\tpmvscmgr.exe",
        "OriginalFileName": "TpmVscMgr.exe"
      },
      "selection_cli": {
        "CommandLine|contains": "create"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage by an administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious TSCON Start as SYSTEM",
    "id": 1166,
    "status": "test",
    "description": "Detects a tscon.exe start as LOCAL SYSTEM",
    "references": [
      "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
      "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6",
      "https://www.ired.team/offensive-security/lateral-movement/t1076-rdp-hijacking-for-lateral-movement"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/03/17",
    "modified": "2022/05/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ],
        "Image|endswith": "\\tscon.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious RDP Redirect Using TSCON",
    "id": 1167,
    "status": "test",
    "description": "Detects a suspicious RDP session redirect using tscon.exe",
    "references": [
      "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
      "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6",
      "https://www.hackingarticles.in/rdp-session-hijacking-with-tscon/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/03/17",
    "modified": "2023/05/16",
    "tags": [
      "attack.lateral_movement",
      "attack.t1563.002",
      "attack.t1021.001",
      "car.2013-07-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains": " /dest:rdp-tcp#"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential RDP Session Hijacking Activity",
    "id": 1168,
    "status": "test",
    "description": "Detects potential RDP Session Hijacking activity on Windows systems",
    "references": [
      "https://twitter.com/Moti_B/status/909449115477659651"
    ],
    "author": "@juju4",
    "date": "2022/12/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\tscon.exe"
        },
        {
          "OriginalFileName": "tscon.exe"
        }
      ],
      "selection_integrity": {
        "IntegrityLevel": "SYSTEM"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "UAC Bypass Using ChangePK and SLUI",
    "id": 1169,
    "status": "test",
    "description": "Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)",
    "references": [
      "https://mattharr0ey.medium.com/privilege-escalation-uac-bypass-in-changepk-c40b92818d1b",
      "https://github.com/hfiref0x/UACME",
      "https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\changepk.exe",
        "ParentImage|endswith": "\\slui.exe",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Disk Cleanup",
    "id": 1170,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|endswith": "\"\\system32\\cleanmgr.exe /autoclean /d C:",
        "ParentCommandLine": "C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Bypass UAC via CMSTP",
    "id": 1171,
    "status": "test",
    "description": "Detect commandline usage of Microsoft Connection Manager Profile Installer (cmstp.exe) to install specially formatted local .INF files",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.003/T1218.003.md",
      "https://lolbas-project.github.io/lolbas/Binaries/Cmstp/"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community",
    "date": "2019/10/24",
    "modified": "2022/08/30",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1548.002",
      "attack.t1218.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cmstp.exe"
        },
        {
          "OriginalFileName": "CMSTP.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "/s",
          "-s",
          "/au",
          "-au",
          "/ni",
          "-ni"
        ]
      },
      "condition": "all of selection*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate use of cmstp.exe utility by legitimate user"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CMSTP UAC Bypass via COM Object Access",
    "id": 1172,
    "status": "stable",
    "description": "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)",
    "references": [
      "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
      "https://twitter.com/hFireF0X/status/897640081053364225",
      "https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf",
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Nik Seetharaman, Christian Burkard (Nextron Systems)",
    "date": "2019/07/31",
    "modified": "2022/09/21",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "attack.t1218.003",
      "attack.g0069",
      "car.2019-04-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\DllHost.exe",
        "ParentCommandLine|contains": [
          " /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}",
          " /Processid:{3E000D72-A845-4CD9-BD83-80C07C3B881F}",
          " /Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}",
          " /Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}",
          " /Processid:{E9495B87-D950-4AB5-87A5-FF6D70BF3E90}"
        ],
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate CMSTP use (unlikely in modern enterprise environments)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Tools Using ComputerDefaults",
    "id": 1173,
    "status": "test",
    "description": "Detects tools such as UACMe used to bypass UAC with computerdefaults.exe (UACMe 59)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/31",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": [
          "High",
          "System"
        ],
        "Image": "C:\\Windows\\System32\\ComputerDefaults.exe"
      },
      "filter": {
        "ParentImage|contains": [
          ":\\Windows\\System32",
          ":\\Program Files"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Consent and Comctl32 - Process",
    "id": 1174,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\consent.exe",
        "Image|endswith": "\\werfault.exe",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using DismHost",
    "id": 1175,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|contains|all": [
          "C:\\Users\\",
          "\\AppData\\Local\\Temp\\",
          "\\DismHost.exe"
        ],
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Event Viewer RecentViews",
    "id": 1176,
    "related": [
      {
        "id": "63e4f530-65dc-49cc-8f80-ccfa95c69d43",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using Event Viewer RecentViews",
    "references": [
      "https://twitter.com/orange_8361/status/1518970259868626944",
      "https://lolbas-project.github.io/lolbas/Binaries/Eventvwr/#execute"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/22",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_path": {
        "CommandLine|contains": [
          "\\Event Viewer\\RecentViews",
          "\\EventV~1\\RecentViews"
        ]
      },
      "selection_redirect": {
        "CommandLine|contains": ">"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Bypass UAC via Fodhelper.exe",
    "id": 1177,
    "status": "test",
    "description": "Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/e491ce22-792f-11e9-8f5c-d46d6d62a49e.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.002/T1548.002.md"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Tony Lambert), oscd.community",
    "date": "2019/10/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\fodhelper.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate use of fodhelper.exe utility by legitimate user"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass via Windows Firewall Snap-In Hijack",
    "id": 1178,
    "status": "test",
    "description": "Detects attempts to bypass User Account Control (UAC) by hijacking the Microsoft Management Console (MMC) Windows Firewall snap-in",
    "references": [
      "https://www.elastic.co/guide/en/security/current/uac-bypass-via-windows-firewall-snap-in-hijack.html#uac-bypass-via-windows-firewall-snap-in-hijack"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/27",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\mmc.exe",
        "ParentCommandLine|contains": "WF.msc"
      },
      "filter": {
        "Image|endswith": "\\WerFault.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "UAC Bypass via ICMLuaUtil",
    "id": 1179,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using ICMLuaUtil Elevated COM interface",
    "references": [
      "https://www.elastic.co/guide/en/security/current/uac-bypass-via-icmluautil-elevated-com-interface.html"
    ],
    "author": "Florian Roth (Nextron Systems), Elastic (idea)",
    "date": "2022/09/13",
    "modified": "2022/09/27",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\dllhost.exe",
        "ParentCommandLine|contains": [
          "/Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}",
          "/Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}"
        ]
      },
      "filter": [
        {
          "Image|endswith": "\\WerFault.exe"
        },
        {
          "OriginalFileName": "WerFault.exe"
        }
      ],
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using IDiagnostic Profile",
    "id": 1180,
    "status": "test",
    "description": "Detects the \"IDiagnosticProfileUAC\" UAC bypass technique",
    "references": [
      "https://github.com/Wh04m1001/IDiagnosticProfileUAC"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/03",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\DllHost.exe",
        "ParentCommandLine|contains": " /Processid:{12C21EA7-2EB8-4B55-9249-AC243DA8C666}",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using IEInstal - Process",
    "id": 1181,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": [
          "High",
          "System"
        ],
        "ParentImage|endswith": "\\ieinstal.exe",
        "Image|contains": "\\AppData\\Local\\Temp\\",
        "Image|endswith": "consent.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using MSConfig Token Modification - Process",
    "id": 1182,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": [
          "High",
          "System"
        ],
        "ParentImage|endswith": "\\AppData\\Local\\Temp\\pkgmgr.exe",
        "CommandLine": "\"C:\\Windows\\system32\\msconfig.exe\" -5"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using NTFS Reparse Point - Process",
    "id": 1183,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "CommandLine|startswith": "\"C:\\Windows\\system32\\wusa.exe\"  /quiet C:\\Users\\",
        "CommandLine|endswith": "\\AppData\\Local\\Temp\\update.msu",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "selection2": {
        "ParentCommandLine": "\"C:\\Windows\\system32\\dism.exe\" /online /quiet /norestart /add-package /packagepath:\"C:\\Windows\\system32\\pe386\" /ignorecheck",
        "IntegrityLevel": [
          "High",
          "System"
        ],
        "CommandLine|contains|all": [
          "C:\\Users\\",
          "\\AppData\\Local\\Temp\\",
          "\\dismhost.exe {"
        ],
        "Image|endswith": "\\DismHost.exe"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using PkgMgr and DISM",
    "id": 1184,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\pkgmgr.exe",
        "Image|endswith": "\\dism.exe",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential UAC Bypass Via Sdclt.EXE",
    "id": 1185,
    "status": "test",
    "description": "A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/6",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/3.B.2_C36B49B5-DF58-4A34-9FE9-56189B9DEFEA.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2023/02/14",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "sdclt.exe",
        "IntegrityLevel": "High"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "TrustedPath UAC Bypass Pattern",
    "id": 1186,
    "status": "test",
    "description": "Detects indicators of a UAC bypass method by mocking directories",
    "references": [
      "https://medium.com/tenable-techblog/uac-bypass-by-mocking-trusted-directories-24a96675f6e",
      "https://www.wietzebeukema.nl/blog/hijacking-dlls-in-windows",
      "https://github.com/netero1010/TrustedPath-UACBypass-BOF"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": "C:\\Windows \\System32\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "UAC Bypass Abusing Winsat Path Parsing - Process",
    "id": 1187,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "IntegrityLevel": [
          "High",
          "System"
        ],
        "ParentImage|endswith": "\\AppData\\Local\\Temp\\system32\\winsat.exe",
        "ParentCommandLine|contains": "C:\\Windows \\system32\\winsat.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Windows Media Player - Process",
    "id": 1188,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "Image": "C:\\Program Files\\Windows Media Player\\osk.exe",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "selection2": {
        "Image": "C:\\Windows\\System32\\cmd.exe",
        "ParentCommandLine": "\"C:\\Windows\\system32\\mmc.exe\" \"C:\\Windows\\system32\\eventvwr.msc\" /s",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Bypass UAC via WSReset.exe",
    "id": 1189,
    "related": [
      {
        "id": "bdc8918e-a1d5-49d1-9db7-ea0fd91aa2ae",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects use of WSReset.exe to bypass User Account Control (UAC). Adversaries use this technique to execute privileged processes.",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/532b5ed4-7930-11e9-8f5c-d46d6d62a49e.html",
      "https://lolbas-project.github.io/lolbas/Binaries/Wsreset/",
      "https://www.activecyber.us/activelabs/windows-uac-bypass",
      "https://twitter.com/ReaQta/status/1222548288731217921"
    ],
    "author": "E.M. Anhaus (originally from Atomic Blue Detections, Tony Lambert), oscd.community, Florian Roth",
    "date": "2019/10/24",
    "modified": "2022/05/13",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\wsreset.exe"
      },
      "filter": [
        {
          "Image|endswith": "\\conhost.exe"
        },
        {
          "OriginalFileName": "CONHOST.EXE"
        }
      ],
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown sub processes of Wsreset.exe"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass WSReset",
    "id": 1190,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Wsreset/",
      "https://github.com/hfiref0x/UACME",
      "https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\wsreset.exe",
        "IntegrityLevel": [
          "High",
          "System"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Use of UltraVNC Remote Access Software",
    "id": 1191,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software,to establish an interactive command and control channel to target systems within networks",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/9e5b12c4912c07562aec7500447b11fa3e17e254/atomics/T1219/T1219.md"
    ],
    "author": "frack113",
    "date": "2022/10/02",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Description": "VNCViewer"
        },
        {
          "Product": "UltraVNC VNCViewer"
        },
        {
          "Company": "UltraVNC"
        },
        {
          "OriginalFileName": "VNCViewer.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious UltraVNC Execution",
    "id": 1192,
    "status": "test",
    "description": "Detects suspicious UltraVNC command line flag combination that indicate a auto reconnect upon execution, e.g. startup (as seen being used by Gamaredon threat group)",
    "references": [
      "https://web.archive.org/web/20220224045756/https://www.ria.ee/sites/default/files/content-editors/kuberturve/tale_of_gamaredon_infection.pdf",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/shuckworm-gamaredon-espionage-ukraine",
      "https://unit42.paloaltonetworks.com/unit-42-title-gamaredon-group-toolset-evolution",
      "https://uvnc.com/docs/uvnc-viewer/52-ultravnc-viewer-commandline-parameters.html"
    ],
    "author": "Bhabesh Raj",
    "date": "2022/03/04",
    "modified": "2022/03/09",
    "tags": [
      "attack.lateral_movement",
      "attack.g0047",
      "attack.t1021.005"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "-autoreconnect ",
          "-connect ",
          "-id:"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uninstall Crowdstrike Falcon Sensor",
    "id": 1193,
    "status": "test",
    "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities by uninstalling Crowdstrike Falcon",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md"
    ],
    "author": "frack113",
    "date": "2021/07/12",
    "modified": "2023/03/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "\\WindowsSensor.exe",
          " /uninstall",
          " /quiet"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator might leverage the same command line for debugging or other purposes. However this action must be always investigated"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Userinit Child Process",
    "id": 1194,
    "related": [
      {
        "id": "21d856f9-9281-4ded-9377-51a1a6e2a432",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects uncommon \"userinit.exe\" child processes, which could be a sign of uncommon shells or login scripts used for persistence.",
    "references": [
      "https://cocomelonc.github.io/persistence/2022/12/09/malware-pers-20.html",
      "https://learn.microsoft.com/en-us/windows-server/administration/server-core/server-core-sconfig#powershell-is-the-default-shell-on-server-core"
    ],
    "author": "Tom Ueltschi (@c_APT_ure), Tim Shelton",
    "date": "2019/01/12",
    "modified": "2023/11/14",
    "tags": [
      "attack.t1037.001",
      "attack.persistence"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\userinit.exe"
      },
      "filter_main_explorer": {
        "Image|endswith": ":\\WINDOWS\\explorer.exe"
      },
      "filter_optional_logonscripts": {
        "CommandLine|contains": [
          "netlogon.bat",
          "UsrLogon.cmd"
        ]
      },
      "filter_optional_windows_core": {
        "CommandLine": "PowerShell.exe"
      },
      "filter_optional_proquota": {
        "Image|endswith": [
          ":\\Windows\\System32\\proquota.exe",
          ":\\Windows\\SysWOW64\\proquota.exe"
        ]
      },
      "filter_optional_citrix": {
        "Image|endswith": [
          ":\\Program Files (x86)\\Citrix\\HDX\\bin\\cmstart.exe",
          ":\\Program Files (x86)\\Citrix\\HDX\\bin\\icast.exe",
          ":\\Program Files (x86)\\Citrix\\System32\\icast.exe",
          ":\\Program Files\\Citrix\\HDX\\bin\\cmstart.exe",
          ":\\Program Files\\Citrix\\HDX\\bin\\icast.exe",
          ":\\Program Files\\Citrix\\System32\\icast.exe"
        ]
      },
      "filter_optional_image_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate logon scripts or custom shells may trigger false positives. Apply additional filters accordingly."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Credential Manager Access via VaultCmd",
    "id": 1195,
    "status": "test",
    "description": "List credentials currently stored in Windows Credential Manager via the native Windows utility vaultcmd.exe",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1555.004/T1555.004.md#atomic-test-1---access-saved-credentials-via-vaultcmd"
    ],
    "author": "frack113",
    "date": "2022/04/08",
    "modified": "2022/05/13",
    "tags": [
      "attack.credential_access",
      "attack.t1555.004"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\VaultCmd.exe"
        },
        {
          "OriginalFileName": "VAULTCMD.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "/listcreds:"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Verclsid.exe Runs COM Object",
    "id": 1196,
    "status": "test",
    "description": "Detects when verclsid.exe is used to run COM object via GUID",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Verclsid/",
      "https://gist.github.com/NickTyrer/0598b60112eaafe6d07789f7964290d5",
      "https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/"
    ],
    "author": "Victor Sergeev, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/07/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\verclsid.exe"
        },
        {
          "OriginalFileName": "verclsid.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "/S",
          "/C"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "CommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Detect Virtualbox Driver Installation OR Starting Of VMs",
    "id": 1197,
    "status": "test",
    "description": "Adversaries can carry out malicious operations using a virtual instance to avoid detection. This rule is built to detect the registration of the Virtualbox driver or start of a Virtualbox VM.",
    "references": [
      "https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/",
      "https://threatpost.com/maze-ransomware-ragnar-locker-virtual-machine/159350/"
    ],
    "author": "Janantha Marasinghe",
    "date": "2020/09/26",
    "modified": "2022/07/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.006",
      "attack.t1564"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "CommandLine|contains": [
          "VBoxRT.dll,RTR3Init",
          "VBoxC.dll",
          "VBoxDrv.sys"
        ]
      },
      "selection_2": {
        "CommandLine|contains": [
          "startvm",
          "controlvm"
        ]
      },
      "condition": "1 of selection_*"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "This may have false positives on hosts where Virtualbox is legitimately being used for operations"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious VBoxDrvInst.exe Parameters",
    "id": 1198,
    "status": "test",
    "description": "Detect VBoxDrvInst.exe run with parameters allowing processing INF file.\nThis allows to create values in the registry and install drivers.\nFor example one could use this technique to obtain persistence via modifying one of Run or RunOnce registry keys\n",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/blob/4db780e0f0b2e2bb8cb1fa13e09196da9b9f1834/yml/LOLUtilz/OtherBinaries/VBoxDrvInst.yml",
      "https://twitter.com/pabraeken/status/993497996179492864"
    ],
    "author": "Konstantin Grishchenko, oscd.community",
    "date": "2020/10/06",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\VBoxDrvInst.exe",
        "CommandLine|contains|all": [
          "driver",
          "executeinf"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate use of VBoxDrvInst.exe utility by VirtualBox Guest Additions installation process"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via VMwareToolBoxCmd.EXE VM State Change Script",
    "id": 1199,
    "related": [
      {
        "id": "236d8e89-ed95-4789-a982-36f4643738ba",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of the \"VMwareToolBoxCmd.exe\" with the \"script\" and \"set\" flag to setup a specific script to run for a specific VM state",
    "references": [
      "https://bohops.com/2021/10/08/analyzing-and-detecting-a-vmtools-persistence-technique/",
      "https://www.hexacorn.com/blog/2017/01/14/beyond-good-ol-run-key-part-53/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/14",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\VMwareToolBoxCmd.exe"
        },
        {
          "OriginalFileName": "toolbox-cmd.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " script ",
          " set "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Persistence Via VMwareToolBoxCmd.EXE VM State Change Script",
    "id": 1200,
    "related": [
      {
        "id": "7aa4e81a-a65c-4e10-9f81-b200eb229d7d",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of the \"VMwareToolBoxCmd.exe\" with the \"script\" and \"set\" flag to setup a specific script that's located in a potentially suspicious location to run for a specific VM state",
    "references": [
      "https://bohops.com/2021/10/08/analyzing-and-detecting-a-vmtools-persistence-technique/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/14",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_bin_img": [
        {
          "Image|endswith": "\\VMwareToolBoxCmd.exe"
        },
        {
          "OriginalFileName": "toolbox-cmd.exe"
        }
      ],
      "selection_bin_cli": {
        "CommandLine|contains|all": [
          " script ",
          " set "
        ]
      },
      "selection_susp_paths": {
        "CommandLine|contains": [
          ":\\PerfLogs\\",
          ":\\Temp\\",
          ":\\Windows\\System32\\Tasks\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "VMToolsd Suspicious Child Process",
    "id": 1201,
    "status": "experimental",
    "description": "Detects suspicious child process creations of VMware Tools process which may indicate persistence setup",
    "references": [
      "https://bohops.com/2021/10/08/analyzing-and-detecting-a-vmtools-persistence-technique/",
      "https://user-images.githubusercontent.com/61026070/136518004-b68cce7d-f9b8-4e9a-9b7b-53b1568a9a94.png",
      "https://github.com/vmware/open-vm-tools/blob/master/open-vm-tools/tools.conf"
    ],
    "author": "bohops, Bhabesh Raj",
    "date": "2021/10/08",
    "modified": "2023/07/25",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\vmtoolsd.exe"
      },
      "selection_img": [
        {
          "Image|endswith": [
            "\\cmd.exe",
            "\\cscript.exe",
            "\\mshta.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Cmd.Exe",
            "cscript.exe",
            "MSHTA.EXE",
            "PowerShell.EXE",
            "pwsh.dll",
            "REGSVR32.EXE",
            "RUNDLL32.EXE",
            "wscript.exe"
          ]
        }
      ],
      "filter_main_vmwaretools_script": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains": [
          "\\VMware\\VMware Tools\\poweron-vm-default.bat",
          "\\VMware\\VMware Tools\\poweroff-vm-default.bat",
          "\\VMware\\VMware Tools\\resume-vm-default.bat",
          "\\VMware\\VMware Tools\\suspend-vm-default.bat"
        ]
      },
      "filter_main_empty": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine": ""
      },
      "filter_main_null": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine": null
      },
      "condition": "all of selection* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate use by VM administrator"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Child Process Of VsCode",
    "id": 1202,
    "status": "experimental",
    "description": "Detects uncommon or suspicious child processes spawning from a VsCode \"code.exe\" process. This could indicate an attempt of persistence via VsCode tasks or terminal profiles.",
    "references": [
      "https://twitter.com/nas_bench/status/1618021838407495681",
      "https://twitter.com/nas_bench/status/1618021415852335105"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/26",
    "modified": "2023/10/25",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\code.exe"
      },
      "selection_children_images": {
        "Image|endswith": [
          "\\calc.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\cscript.exe",
          "\\wscript.exe"
        ]
      },
      "selection_children_cli": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\cmd.exe"
        ],
        "CommandLine|contains": [
          "Invoke-Expressions",
          "IEX",
          "Invoke-Command",
          "ICM",
          "DownloadString",
          "rundll32",
          "regsvr32",
          "wscript",
          "cscript"
        ]
      },
      "selection_children_paths": {
        "Image|contains": [
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          ":\\Temp\\"
        ]
      },
      "condition": "selection_parent and 1 of selection_children_*"
    },
    "falsepositives": [
      "In development environment where VsCode is used heavily. False positives may occur when developers use task to compile or execute different types of code. Remove or add processes accordingly"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Visual Studio Code Tunnel Execution",
    "id": 1203,
    "status": "experimental",
    "description": "Detects Visual Studio Code tunnel execution. Attackers can abuse this functionality to establish a C2 channel",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html",
      "https://code.visualstudio.com/docs/remote/tunnels"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), citron_ninja",
    "date": "2023/10/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_only_tunnel": {
        "OriginalFileName": null,
        "CommandLine|endswith": ".exe tunnel"
      },
      "selection_tunnel_args": {
        "CommandLine|contains|all": [
          ".exe tunnel",
          "--name ",
          "--accept-server-license-terms"
        ]
      },
      "selection_parent_tunnel": {
        "ParentCommandLine|endswith": " tunnel",
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains|all": [
          "/d /c ",
          "\\servers\\Stable-",
          "code-server.cmd"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use of Visual Studio Code tunnel"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Visual Studio Code Tunnel Shell Execution",
    "id": 1204,
    "status": "experimental",
    "description": "Detects the execution of a shell (powershell, bash, wsl...) via Visual Studio Code tunnel. Attackers can abuse this functionality to establish a C2 channel and execute arbitrary commands on the system.",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html",
      "https://code.visualstudio.com/docs/remote/tunnels"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|contains": "\\servers\\Stable-",
        "ParentImage|endswith": "\\server\\node.exe",
        "ParentCommandLine|contains": ".vscode-server"
      },
      "selection_child_1": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "CommandLine|contains": "\\terminal\\browser\\media\\shellIntegration.ps1"
      },
      "selection_child_2": {
        "Image|endswith": [
          "\\wsl.exe",
          "\\bash.exe"
        ]
      },
      "condition": "selection_parent and 1 of selection_child_*"
    },
    "falsepositives": [
      "Legitimate use of Visual Studio Code tunnel and running code from there"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Renamed Visual Studio Code Tunnel Execution",
    "id": 1205,
    "status": "experimental",
    "description": "Detects renamed Visual Studio Code tunnel execution. Attackers can abuse this functionality to establish a C2 channel",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html",
      "https://code.visualstudio.com/docs/remote/tunnels"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/28",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_image_only_tunnel": {
        "OriginalFileName": null,
        "CommandLine|endswith": ".exe tunnel"
      },
      "selection_image_tunnel_args": {
        "CommandLine|contains|all": [
          ".exe tunnel",
          "--name ",
          "--accept-server-license-terms"
        ]
      },
      "selection_image_tunnel_service": {
        "CommandLine|contains|all": [
          "tunnel ",
          "service",
          "internal-run",
          "tunnel-service.log"
        ]
      },
      "selection_parent_tunnel": {
        "ParentCommandLine|endswith": " tunnel",
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains|all": [
          "/d /c ",
          "\\servers\\Stable-",
          "code-server.cmd"
        ]
      },
      "filter_main_parent_code": {
        "ParentImage|endswith": [
          "\\code-tunnel.exe",
          "\\code.exe"
        ]
      },
      "filter_main_image_code": {
        "Image|endswith": [
          "\\code-tunnel.exe",
          "\\code.exe"
        ]
      },
      "condition": "(1 of selection_image_* and not 1 of filter_main_image_*) or (1 of selection_parent_* and not 1 of filter_main_parent_*)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Visual Studio Code Tunnel Service Installation",
    "id": 1206,
    "status": "experimental",
    "description": "Detects the installation of VsCode tunnel (code-tunnel) as a service.",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html",
      "https://code.visualstudio.com/docs/remote/tunnels"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "tunnel ",
          "service",
          "internal-run",
          "tunnel-service.log"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate installation of code-tunnel as a service"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Binary Proxy Execution Via VSDiagnostics.EXE",
    "id": 1207,
    "status": "experimental",
    "description": "Detects execution of \"VSDiagnostics.exe\" with the \"start\" command in order to launch and proxy arbitrary binaries.",
    "references": [
      "https://twitter.com/0xBoku/status/1679200664013135872"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\VSDiagnostics.exe"
        },
        {
          "OriginalFileName": "VSDiagnostics.exe"
        }
      ],
      "selection_cli_start": {
        "CommandLine|contains": "start"
      },
      "selection_cli_launch": {
        "CommandLine|contains": [
          " /launch:",
          " -launch:"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage for tracing and diagnostics purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Vsls-Agent Command With AgentExtensionPath Load",
    "id": 1208,
    "status": "test",
    "description": "Detects Microsoft Visual Studio vsls-agent.exe lolbin execution with a suspicious library load using the --agentExtensionPath parameter",
    "references": [
      "https://twitter.com/bohops/status/1583916360404729857"
    ],
    "author": "bohops",
    "date": "2022/10/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\vsls-agent.exe",
        "CommandLine|contains": "--agentExtensionPath"
      },
      "filter": {
        "CommandLine|contains": "Microsoft.VisualStudio.LiveShare.Agent."
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "False positives depend on custom use of vsls-agent.exe"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use of W32tm as Timer",
    "id": 1209,
    "status": "test",
    "description": "When configured with suitable command line arguments, w32tm can act as a delay mechanism",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/d0dad62dbcae9c60c519368e82c196a3db577055/atomics/T1124/T1124.md",
      "https://blogs.blackberry.com/en/2022/05/dirty-deeds-done-dirt-cheap-russian-rat-offers-backdoor-bargains"
    ],
    "author": "frack113",
    "date": "2022/09/25",
    "tags": [
      "attack.discovery",
      "attack.t1124"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_w32tm": [
        {
          "Image|endswith": "\\w32tm.exe"
        },
        {
          "OriginalFileName": "w32time.dll"
        }
      ],
      "selection_cmd": {
        "CommandLine|contains|all": [
          "/stripchart",
          "/computer:",
          "/period:",
          "/dataonly",
          "/samples:"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wab Execution From Non Default Location",
    "id": 1210,
    "status": "test",
    "description": "Detects execution of wab.exe (Windows Contacts) and Wabmig.exe (Microsoft Address Book Import Tool) from non default locations as seen with bumblebee activity",
    "references": [
      "https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/bumblebee-loader-cybercrime",
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2022/09/27",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\wab.exe",
          "\\wabmig.exe"
        ]
      },
      "filter": {
        "Image|startswith": [
          "C:\\Windows\\WinSxS\\",
          "C:\\Program Files\\Windows Mail\\",
          "C:\\Program Files (x86)\\Windows Mail\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wab/Wabmig Unusual Parent Or Child Processes",
    "id": 1211,
    "status": "test",
    "description": "Detects unusual parent or children of the wab.exe (Windows Contacts) and Wabmig.exe (Microsoft Address Book Import Tool) processes as seen being used with bumblebee activity",
    "references": [
      "https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/bumblebee-loader-cybercrime",
      "https://thedfirreport.com/2022/09/26/bumblebee-round-two/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2022/09/27",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\WmiPrvSE.exe",
          "\\svchost.exe",
          "\\dllhost.exe"
        ],
        "Image|endswith": [
          "\\wab.exe",
          "\\wabmig.exe"
        ]
      },
      "selection_child": {
        "ParentImage|endswith": [
          "\\wab.exe",
          "\\wabmig.exe"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SystemStateBackup Deleted Using Wbadmin.EXE",
    "id": 1212,
    "status": "test",
    "description": "Deletes the Windows systemstatebackup using wbadmin.exe.\nThis technique is used by numerous ransomware families.\nThis may only be successful on server platforms that have Windows Backup enabled.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell"
    ],
    "author": "frack113",
    "date": "2021/12/13",
    "modified": "2023/02/04",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wbadmin.exe"
        },
        {
          "OriginalFileName": "WBADMIN.EXE"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "delete ",
          "systemstatebackup ",
          "-keepVersions:0"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious WebDAV LNK Execution",
    "id": 1213,
    "related": [
      {
        "id": "f0507c0f-a3a2-40f5-acc6-7f543c334993",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects possible execution via LNK file accessed on a WebDAV server.",
    "references": [
      "https://www.trellix.com/en-us/about/newsroom/stories/research/beyond-file-search-a-novel-method.html",
      "https://micahbabinski.medium.com/search-ms-webdav-and-chill-99c5b23ac462"
    ],
    "author": "Micah Babinski",
    "date": "2023/08/21",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.t1204"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\explorer.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wscript.exe"
        ],
        "CommandLine|contains": "\\DavWWWRoot\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Chopper Webshell Process Pattern",
    "id": 1214,
    "status": "test",
    "description": "Detects patterns found in process executions cause by China Chopper like tiny (ASPX) webshells",
    "references": [
      "https://www.microsoft.com/security/blog/2022/09/30/analyzing-attacks-using-the-exchange-vulnerabilities-cve-2022-41040-and-cve-2022-41082/"
    ],
    "author": "Florian Roth (Nextron Systems), MSTI (query)",
    "date": "2022/10/01",
    "tags": [
      "attack.persistence",
      "attack.t1505.003",
      "attack.t1018",
      "attack.t1033",
      "attack.t1087"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_origin": [
        {
          "Image|endswith": "\\w3wp.exe"
        },
        {
          "ParentImage|endswith": "\\w3wp.exe"
        }
      ],
      "selection_cmdline": {
        "CommandLine|contains": [
          "&ipconfig&echo",
          "&quser&echo",
          "&whoami&echo",
          "&c:&echo",
          "&cd&echo",
          "&dir&echo",
          "&echo [E]",
          "&echo [S]"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Webshell Hacking Activity Patterns",
    "id": 1215,
    "status": "test",
    "description": "Detects certain parent child patterns found in cases in which a web shell is used to perform certain credential dumping or exfiltration activities on a compromised system\n",
    "references": [
      "https://youtu.be/7aemGhaE9ds?t=641"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/17",
    "modified": "2023/11/09",
    "tags": [
      "attack.persistence",
      "attack.t1505.003",
      "attack.t1018",
      "attack.t1033",
      "attack.t1087"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_webserver_image": {
        "ParentImage|endswith": [
          "\\caddy.exe",
          "\\httpd.exe",
          "\\nginx.exe",
          "\\php-cgi.exe",
          "\\w3wp.exe",
          "\\ws_tomcatservice.exe"
        ]
      },
      "selection_webserver_characteristics_tomcat1": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "ParentImage|contains": [
          "-tomcat-",
          "\\tomcat"
        ]
      },
      "selection_webserver_characteristics_tomcat2": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "CommandLine|contains": [
          "catalina.jar",
          "CATALINA_HOME"
        ]
      },
      "selection_child_1": {
        "CommandLine|contains|all": [
          "rundll32",
          "comsvcs"
        ]
      },
      "selection_child_2": {
        "CommandLine|contains|all": [
          " -hp",
          " a ",
          " -m"
        ]
      },
      "selection_child_3": {
        "CommandLine|contains|all": [
          "net",
          " user ",
          " /add"
        ]
      },
      "selection_child_4": {
        "CommandLine|contains|all": [
          "net",
          " localgroup ",
          " administrators ",
          "/add"
        ]
      },
      "selection_child_5": {
        "Image|endswith": [
          "\\ntdsutil.exe",
          "\\ldifde.exe",
          "\\adfind.exe",
          "\\procdump.exe",
          "\\Nanodump.exe",
          "\\vssadmin.exe",
          "\\fsutil.exe"
        ]
      },
      "selection_child_6": {
        "CommandLine|contains": [
          " -decode ",
          " -NoP ",
          " -W Hidden ",
          " /decode ",
          " /ticket:",
          " sekurlsa",
          ".dmp full",
          ".downloadfile(",
          ".downloadstring(",
          "FromBase64String",
          "process call create",
          "reg save ",
          "whoami /priv"
        ]
      },
      "condition": "1 of selection_webserver_* and 1 of selection_child_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Webshell Detection With Command Line Keywords",
    "id": 1216,
    "status": "test",
    "description": "Detects certain command line parameters often used during reconnaissance activity via web shells",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html",
      "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro, Anton Kutepov, oscd.community",
    "date": "2017/01/01",
    "modified": "2022/05/13",
    "tags": [
      "attack.persistence",
      "attack.t1505.003",
      "attack.t1018",
      "attack.t1033",
      "attack.t1087"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_webserver_image": {
        "ParentImage|endswith": [
          "\\w3wp.exe",
          "\\php-cgi.exe",
          "\\nginx.exe",
          "\\httpd.exe",
          "\\caddy.exe",
          "\\ws_tomcatservice.exe"
        ]
      },
      "selection_webserver_characteristics_tomcat1": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "ParentImage|contains": [
          "-tomcat-",
          "\\tomcat"
        ]
      },
      "selection_webserver_characteristics_tomcat2": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "CommandLine|contains": [
          "catalina.jar",
          "CATALINA_HOME"
        ]
      },
      "selection_susp_net_utility": {
        "OriginalFileName": [
          "net.exe",
          "net1.exe"
        ],
        "CommandLine|contains": [
          " user ",
          " use ",
          " group "
        ]
      },
      "selection_susp_ping_utility": {
        "OriginalFileName": "ping.exe",
        "CommandLine|contains": " -n "
      },
      "selection_susp_change_dir": {
        "CommandLine|contains": [
          "&cd&echo",
          "cd /d "
        ]
      },
      "selection_susp_wmic_utility": {
        "OriginalFileName": "wmic.exe",
        "CommandLine|contains": " /node:"
      },
      "selection_susp_misc_discovery_binaries": [
        {
          "Image|endswith": [
            "\\dsquery.exe",
            "\\find.exe",
            "\\findstr.exe",
            "\\ipconfig.exe",
            "\\netstat.exe",
            "\\nslookup.exe",
            "\\pathping.exe",
            "\\quser.exe",
            "\\schtasks.exe",
            "\\systeminfo.exe",
            "\\tasklist.exe",
            "\\tracert.exe",
            "\\ver.exe",
            "\\wevtutil.exe",
            "\\whoami.exe"
          ]
        },
        {
          "OriginalFileName": [
            "dsquery.exe",
            "find.exe",
            "findstr.exe",
            "ipconfig.exe",
            "netstat.exe",
            "nslookup.exe",
            "pathping.exe",
            "quser.exe",
            "schtasks.exe",
            "sysinfo.exe",
            "tasklist.exe",
            "tracert.exe",
            "ver.exe",
            "VSSADMIN.EXE",
            "wevtutil.exe",
            "whoami.exe"
          ]
        }
      ],
      "selection_susp_misc_discovery_commands": {
        "CommandLine|contains": [
          " Test-NetConnection ",
          "dir \\"
        ]
      },
      "condition": "1 of selection_webserver_* and 1 of selection_susp_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Process By Web Server Process",
    "id": 1217,
    "status": "test",
    "description": "Detects potentially suspicious processes being spawned by a web server process which could be the result of a successfully placed web shell or exploitation\n",
    "references": [
      "https://media.defense.gov/2020/Jun/09/2002313081/-1/-1/0/CSI-DETECT-AND-PREVENT-WEB-SHELL-MALWARE-20200422.PDF"
    ],
    "author": "Thomas Patzke, Florian Roth (Nextron Systems), Zach Stanford @svch0st, Tim Shelton, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2023/11/11",
    "tags": [
      "attack.persistence",
      "attack.t1505.003",
      "attack.t1190"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_webserver_image": {
        "ParentImage|endswith": [
          "\\caddy.exe",
          "\\httpd.exe",
          "\\nginx.exe",
          "\\php-cgi.exe",
          "\\php.exe",
          "\\tomcat.exe",
          "\\UMWorkerProcess.exe",
          "\\w3wp.exe",
          "\\ws_TomcatService.exe"
        ]
      },
      "selection_webserver_characteristics_tomcat1": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "ParentImage|contains": [
          "-tomcat-",
          "\\tomcat"
        ]
      },
      "selection_webserver_characteristics_tomcat2": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "ParentCommandLine|contains": [
          "CATALINA_HOME",
          "catalina.home",
          "catalina.jar"
        ]
      },
      "selection_anomaly_children": {
        "Image|endswith": [
          "\\arp.exe",
          "\\at.exe",
          "\\bash.exe",
          "\\bitsadmin.exe",
          "\\certutil.exe",
          "\\cmd.exe",
          "\\cscript.exe",
          "\\dsget.exe",
          "\\hostname.exe",
          "\\nbtstat.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\netdom.exe",
          "\\netsh.exe",
          "\\nltest.exe",
          "\\ntdutil.exe",
          "\\powershell_ise.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\qprocess.exe",
          "\\query.exe",
          "\\qwinsta.exe",
          "\\reg.exe",
          "\\rundll32.exe",
          "\\sc.exe",
          "\\sh.exe",
          "\\wmic.exe",
          "\\wscript.exe",
          "\\wusa.exe"
        ]
      },
      "filter_main_fp_1": {
        "ParentImage|endswith": "\\java.exe",
        "CommandLine|endswith": "Windows\\system32\\cmd.exe /c C:\\ManageEngine\\ADManager \"Plus\\ES\\bin\\elasticsearch.bat -Enode.name=RMP-NODE1 -pelasticsearch-pid.txt"
      },
      "filter_main_fp_2": {
        "ParentImage|endswith": "\\java.exe",
        "CommandLine|contains|all": [
          "sc query",
          "ADManager Plus"
        ]
      },
      "condition": "1 of selection_webserver_* and selection_anomaly_children and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Particular web applications may spawn a shell process legitimately"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Webshell Tool Reconnaissance Activity",
    "id": 1218,
    "status": "test",
    "description": "Detects processes spawned from web servers (PHP, Tomcat, IIS, etc.) that perform reconnaissance looking for the existence of popular scripting tools (perl, python, wget) on the system via the help commands\n",
    "references": [
      "https://ragged-lab.blogspot.com/2020/07/webshells-automating-reconnaissance.html"
    ],
    "author": "Cian Heasley, Florian Roth (Nextron Systems)",
    "date": "2020/07/22",
    "modified": "2023/11/09",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_webserver_image": {
        "ParentImage|endswith": [
          "\\caddy.exe",
          "\\httpd.exe",
          "\\nginx.exe",
          "\\php-cgi.exe",
          "\\w3wp.exe",
          "\\ws_tomcatservice.exe"
        ]
      },
      "selection_webserver_characteristics_tomcat1": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "ParentImage|contains": [
          "-tomcat-",
          "\\tomcat"
        ]
      },
      "selection_webserver_characteristics_tomcat2": {
        "ParentImage|endswith": [
          "\\java.exe",
          "\\javaw.exe"
        ],
        "CommandLine|contains": [
          "CATALINA_HOME",
          "catalina.jar"
        ]
      },
      "selection_recon": {
        "CommandLine|contains": [
          "perl --help",
          "perl -h",
          "python --help",
          "python -h",
          "python3 --help",
          "python3 -h",
          "wget --help"
        ]
      },
      "condition": "1 of selection_webserver_* and selection_recon"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Via WER",
    "id": 1219,
    "status": "test",
    "description": "Detects potential credential dumping via Windows Error Reporting LSASS Shtinkering technique which uses the Windows Error Reporting to dump lsass",
    "references": [
      "https://github.com/deepinstinct/Lsass-Shtinkering",
      "https://media.defcon.org/DEF%20CON%2030/DEF%20CON%2030%20presentations/Asaf%20Gilboa%20-%20LSASS%20Shtinkering%20Abusing%20Windows%20Error%20Reporting%20to%20Dump%20LSASS.pdf"
    ],
    "author": "@pbssubhash , Nasreddine Bencherchali",
    "date": "2022/12/08",
    "modified": "2022/12/09",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\Werfault.exe"
        },
        {
          "OriginalFileName": "WerFault.exe"
        }
      ],
      "selection_cli": {
        "ParentUser|contains": [
          "AUTHORI",
          "AUTORI"
        ],
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ],
        "CommandLine|contains|all": [
          " -u -p ",
          " -ip ",
          " -s "
        ]
      },
      "filter_lsass": {
        "ParentImage": "C:\\Windows\\System32\\lsass.exe"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Windows Error Reporting might produce similar behavior. In that case, check the PID associated with the \"-p\" parameter in the CommandLine."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential ReflectDebugger Content Execution Via WerFault.EXE",
    "id": 1220,
    "related": [
      {
        "id": "0cf2e1c6-8d10-4273-8059-738778f981ad",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of \"WerFault.exe\" with the \"-pr\" commandline flag that is used to run files stored in the ReflectDebugger key which could be used to store the path to the malware in order to masquerade the execution flow",
    "references": [
      "https://cocomelonc.github.io/malware/2022/11/02/malware-pers-18.html",
      "https://www.hexacorn.com/blog/2018/08/31/beyond-good-ol-run-key-part-85/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/06/30",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WerFault.exe"
        },
        {
          "OriginalFileName": "WerFault.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " -pr "
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Child Process Of Wermgr.EXE",
    "id": 1221,
    "related": [
      {
        "id": "5394fcc7-aeb2-43b5-9a09-cac9fc5edcd5",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious Windows Error Reporting manager (wermgr.exe) child process",
    "references": [
      "https://www.trendmicro.com/en_us/research/22/j/black-basta-infiltrates-networks-via-qakbot-brute-ratel-and-coba.html",
      "https://www.echotrail.io/insights/search/wermgr.exe",
      "https://github.com/binderlabs/DirCreate2System"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/10/14",
    "modified": "2023/08/23",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\wermgr.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\ipconfig.exe",
          "\\mshta.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\netstat.exe",
          "\\nslookup.exe",
          "\\powershell_ise.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\systeminfo.exe",
          "\\whoami.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Execution Location Of Wermgr.EXE",
    "id": 1222,
    "related": [
      {
        "id": "396f6630-f3ac-44e3-bfc8-1b161bc00c4e",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects suspicious Windows Error Reporting manager (wermgr.exe) execution location.",
    "references": [
      "https://www.trendmicro.com/en_us/research/22/j/black-basta-infiltrates-networks-via-qakbot-brute-ratel-and-coba.html",
      "https://www.echotrail.io/insights/search/wermgr.exe",
      "https://github.com/binderlabs/DirCreate2System"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/10/14",
    "modified": "2023/08/23",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\wermgr.exe"
      },
      "filter_main_legit_location": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Download From IP Via Wget.EXE",
    "id": 1223,
    "status": "experimental",
    "description": "Detects potentially suspicious file downloads directly from IP addresses using Wget.exe",
    "references": [
      "https://www.gnu.org/software/wget/manual/wget.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/27",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wget.exe"
        },
        {
          "OriginalFileName": "wget.exe"
        }
      ],
      "selection_ip": {
        "CommandLine|re": "://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_flag": [
        {
          "CommandLine|re": "\\s-O\\s"
        },
        {
          "CommandLine|contains": "--output-document"
        }
      ],
      "selection_ext": {
        "CommandLine|endswith": [
          ".ps1",
          ".ps1'",
          ".ps1\"",
          ".dat",
          ".dat'",
          ".dat\"",
          ".msi",
          ".msi'",
          ".msi\"",
          ".bat",
          ".bat'",
          ".bat\"",
          ".exe",
          ".exe'",
          ".exe\"",
          ".vbs",
          ".vbs'",
          ".vbs\"",
          ".vbe",
          ".vbe'",
          ".vbe\"",
          ".hta",
          ".hta'",
          ".hta\"",
          ".dll",
          ".dll'",
          ".dll\"",
          ".psm1",
          ".psm1'",
          ".psm1\""
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Download From File Sharing Domain Via Wget.EXE",
    "id": 1224,
    "status": "experimental",
    "description": "Detects potentially suspicious file downloads from file sharing domains using wget.exe",
    "references": [
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers",
      "https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "modified": "2024/02/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wget.exe"
        },
        {
          "OriginalFileName": "wget.exe"
        }
      ],
      "selection_websites": {
        "CommandLine|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_flag": [
        {
          "CommandLine|re": "\\s-O\\s"
        },
        {
          "CommandLine|contains": "--output-document"
        }
      ],
      "selection_ext": {
        "CommandLine|endswith": [
          ".ps1",
          ".ps1'",
          ".ps1\"",
          ".dat",
          ".dat'",
          ".dat\"",
          ".msi",
          ".msi'",
          ".msi\"",
          ".bat",
          ".bat'",
          ".bat\"",
          ".exe",
          ".exe'",
          ".exe\"",
          ".vbs",
          ".vbs'",
          ".vbs\"",
          ".vbe",
          ".vbe'",
          ".vbe\"",
          ".hta",
          ".hta'",
          ".hta\"",
          ".dll",
          ".dll'",
          ".dll\"",
          ".psm1",
          ".psm1'",
          ".psm1\""
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Download From IP Via Wget.EXE - Paths",
    "id": 1225,
    "status": "experimental",
    "description": "Detects potentially suspicious file downloads directly from IP addresses and stored in suspicious locations using Wget.exe",
    "references": [
      "https://www.gnu.org/software/wget/manual/wget.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/02/23",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wget.exe"
        },
        {
          "OriginalFileName": "wget.exe"
        }
      ],
      "selection_ip": {
        "CommandLine|re": "://[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}"
      },
      "selection_http": {
        "CommandLine|contains": "http"
      },
      "selection_flag": [
        {
          "CommandLine|re": "\\s-O\\s"
        },
        {
          "CommandLine|contains": "--output-document"
        }
      ],
      "selection_paths": [
        {
          "CommandLine|contains": [
            ":\\PerfLogs\\",
            ":\\Temp\\",
            ":\\Users\\Public\\",
            ":\\Windows\\Help\\",
            ":\\Windows\\Temp\\",
            "\\Temporary Internet"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        },
        {
          "CommandLine|contains|all": [
            ":\\Users\\",
            "\\Pictures\\"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Where Execution",
    "id": 1226,
    "status": "test",
    "description": "Adversaries may enumerate browser bookmarks to learn more about compromised hosts.\nBrowser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about\ninternal network resources such as servers, tools/dashboards, or other related infrastructure.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1217/T1217.md"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/13",
    "modified": "2022/06/29",
    "tags": [
      "attack.discovery",
      "attack.t1217"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "where_exe": [
        {
          "Image|endswith": "\\where.exe"
        },
        {
          "OriginalFileName": "where.exe"
        }
      ],
      "where_opt": {
        "CommandLine|contains": [
          "places.sqlite",
          "cookies.sqlite",
          "formhistory.sqlite",
          "logins.json",
          "key4.db",
          "key3.db",
          "sessionstore.jsonlz4",
          "History",
          "Bookmarks",
          "Cookies",
          "Login Data"
        ]
      },
      "condition": "all of where_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Enumerate All Information With Whoami.EXE",
    "id": 1227,
    "status": "experimental",
    "description": "Detects the execution of \"whoami.exe\" with the \"/all\" flag",
    "references": [
      "https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/",
      "https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/",
      "https://www.youtube.com/watch?v=DsJ9ByX84o4&t=6s"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/12/04",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_main_img": [
        {
          "Image|endswith": "\\whoami.exe"
        },
        {
          "OriginalFileName": "whoami.exe"
        }
      ],
      "selection_main_cli": {
        "CommandLine|contains": [
          " -all",
          " /all"
        ]
      },
      "condition": "all of selection_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Whoami Utility Execution",
    "id": 1228,
    "status": "test",
    "description": "Detects the execution of whoami, which is often used by attackers after exploitation / privilege escalation",
    "references": [
      "https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/",
      "https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/08/13",
    "modified": "2023/11/30",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\whoami.exe"
        },
        {
          "OriginalFileName": "whoami.exe"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Admin activity",
      "Scripts and administrative tools used in the monitored environment",
      "Monitoring activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Whoami.EXE Execution From Privileged Process",
    "id": 1229,
    "related": [
      {
        "id": "80167ada-7a12-41ed-b8e9-aa47195c66a1",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of \"whoami.exe\" by privileged accounts that are often abused by threat actors",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
      "https://nsudo.m2team.org/en-us/"
    ],
    "author": "Florian Roth (Nextron Systems), Teymur Kheirkhabarov",
    "date": "2022/01/28",
    "modified": "2023/12/04",
    "tags": [
      "attack.privilege_escalation",
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "whoami.exe"
        },
        {
          "Image|endswith": "\\whoami.exe"
        }
      ],
      "selection_user": {
        "User|contains": [
          "AUTHORI",
          "AUTORI",
          "TrustedInstaller"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Group Membership Reconnaissance Via Whoami.EXE",
    "id": 1230,
    "status": "test",
    "description": "Detects the execution of whoami.exe with the /group command line flag to show group membership for the current user, account type, security identifiers (SID), and attributes.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/whoami"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/28",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\whoami.exe"
        },
        {
          "OriginalFileName": "whoami.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /groups",
          " -groups"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Whoami.EXE Execution With Output Option",
    "id": 1231,
    "status": "experimental",
    "description": "Detects the execution of \"whoami.exe\" with the \"/FO\" flag to choose CSV as output format or with redirection options to export the results to a file for later use.",
    "references": [
      "https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/",
      "https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/",
      "https://www.youtube.com/watch?v=DsJ9ByX84o4&t=6s"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/28",
    "modified": "2023/12/04",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_main_img": [
        {
          "Image|endswith": "\\whoami.exe"
        },
        {
          "OriginalFileName": "whoami.exe"
        }
      ],
      "selection_main_cli": {
        "CommandLine|contains": [
          " /FO CSV",
          " -FO CSV"
        ]
      },
      "selection_special": {
        "CommandLine|contains": "whoami*>"
      },
      "condition": "all of selection_main_* or selection_special"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Whoami.EXE Execution Anomaly",
    "id": 1232,
    "status": "experimental",
    "description": "Detects the execution of whoami.exe with suspicious parent processes.",
    "references": [
      "https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/",
      "https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/",
      "https://www.youtube.com/watch?v=DsJ9ByX84o4&t=6s"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/12",
    "modified": "2023/12/04",
    "tags": [
      "attack.discovery",
      "attack.t1033",
      "car.2016-03-001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\whoami.exe"
        },
        {
          "OriginalFileName": "whoami.exe"
        }
      ],
      "filter_main_known_parents": {
        "ParentImage|endswith": [
          "\\cmd.exe",
          "\\powershell_ise.exe",
          "\\powershell.exe",
          "\\pwsh.exe"
        ]
      },
      "filter_optional_ms_monitoring_agent": {
        "ParentImage|endswith": ":\\Program Files\\Microsoft Monitoring Agent\\Agent\\MonitoringHost.exe"
      },
      "filter_main_parent_null": {
        "ParentImage": null
      },
      "filter_main_parent_empty": {
        "ParentImage": ""
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Admin activity",
      "Scripts and administrative tools used in the monitored environment",
      "Monitoring activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Security Privileges Enumeration Via Whoami.EXE",
    "id": 1233,
    "status": "test",
    "description": "Detects a whoami.exe executed with the /priv command line flag instructing the tool to show all current user privileges. This is often used after a privilege escalation attempt.",
    "references": [
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/whoami"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/05/05",
    "modified": "2023/02/28",
    "tags": [
      "attack.privilege_escalation",
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\whoami.exe"
        },
        {
          "OriginalFileName": "whoami.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " /priv",
          " -priv"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious WindowsTerminal Child Processes",
    "id": 1234,
    "status": "test",
    "description": "Detects suspicious children spawned via the Windows Terminal application which could be a sign of persistence via WindowsTerminal (see references section)",
    "references": [
      "https://persistence-info.github.io/Data/windowsterminalprofile.html",
      "https://twitter.com/nas_bench/status/1550836225652686848"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/25",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.persistence"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\WindowsTerminal.exe",
          "\\wt.exe"
        ]
      },
      "selection_susp": [
        {
          "Image|endswith": [
            "\\rundll32.exe",
            "\\regsvr32.exe",
            "\\certutil.exe",
            "\\cscript.exe",
            "\\wscript.exe",
            "\\csc.exe"
          ]
        },
        {
          "Image|contains": [
            "C:\\Users\\Public\\",
            "\\Downloads\\",
            "\\Desktop\\",
            "\\AppData\\Local\\Temp\\",
            "\\Windows\\TEMP\\"
          ]
        },
        {
          "CommandLine|contains": [
            " iex ",
            " icm",
            "Invoke-",
            "Import-Module ",
            "ipmo ",
            "DownloadString(",
            " /c ",
            " /k ",
            " /r "
          ]
        }
      ],
      "filter_builtin_visual_studio_shell": {
        "CommandLine|contains|all": [
          "Import-Module",
          "Microsoft.VisualStudio.DevShell.dll",
          "Enter-VsDevShell"
        ]
      },
      "filter_open_settings": {
        "CommandLine|contains|all": [
          "\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_",
          "\\LocalState\\settings.json"
        ]
      },
      "filter_vsdevcmd": {
        "CommandLine|contains|all": [
          "C:\\Program Files\\Microsoft Visual Studio\\",
          "\\Common7\\Tools\\VsDevCmd.bat"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Other legitimate \"Windows Terminal\" profiles"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Add New Download Source To Winget",
    "id": 1235,
    "related": [
      {
        "id": "81a0ecb5-0a41-4ba1-b2ba-c944eb92bfa2",
        "type": "similar"
      },
      {
        "id": "c15a46a0-07d4-4c87-b4b6-89207835a83b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of winget to add new additional download sources",
    "references": [
      "https://learn.microsoft.com/en-us/windows/package-manager/winget/source",
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/17",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\winget.exe"
        },
        {
          "OriginalFileName": "winget.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "source ",
          "add "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positive are expected with legitimate sources"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Add Insecure Download Source To Winget",
    "id": 1236,
    "related": [
      {
        "id": "05ebafc8-7aa2-4bcd-a269-2aec93f9e842",
        "type": "similar"
      },
      {
        "id": "c15a46a0-07d4-4c87-b4b6-89207835a83b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of winget to add a new insecure (http) download source.\nWinget will not allow the addition of insecure sources, hence this could indicate potential suspicious activity (or typos)\n",
    "references": [
      "https://learn.microsoft.com/en-us/windows/package-manager/winget/source",
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/17",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\winget.exe"
        },
        {
          "OriginalFileName": "winget.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "source ",
          "add ",
          "http://"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives might occur if the users are unaware of such control checks"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add Potential Suspicious New Download Source To Winget",
    "id": 1237,
    "related": [
      {
        "id": "05ebafc8-7aa2-4bcd-a269-2aec93f9e842",
        "type": "similar"
      },
      {
        "id": "81a0ecb5-0a41-4ba1-b2ba-c944eb92bfa2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of winget to add new potentially suspicious download sources",
    "references": [
      "https://learn.microsoft.com/en-us/windows/package-manager/winget/source",
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/17",
    "modified": "2023/12/04",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\winget.exe"
        },
        {
          "OriginalFileName": "winget.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "source ",
          "add "
        ]
      },
      "selection_source_direct_ip": {
        "CommandLine|re": "://\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Install New Package Via Winget Local Manifest",
    "id": 1238,
    "status": "experimental",
    "description": "Detects usage of winget to install applications via manifest file. Adversaries can abuse winget to download payloads remotely and execute them.\nThe manifest option enables you to install an application by passing in a YAML file directly to the client.\nWinget can be used to download and install exe, msi or msix files later.\n",
    "references": [
      "https://docs.microsoft.com/en-us/windows/package-manager/winget/install#local-install",
      "https://lolbas-project.github.io/lolbas/Binaries/Winget/",
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget"
    ],
    "author": "Sreeman, Florian Roth (Nextron Systems), frack113",
    "date": "2020/04/21",
    "modified": "2023/04/17",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\winget.exe"
        },
        {
          "OriginalFileName": "winget.exe"
        }
      ],
      "selection_install_flag": {
        "CommandLine|contains": [
          "install",
          " add "
        ]
      },
      "selection_manifest_flag": {
        "CommandLine|contains": [
          "-m ",
          "--manifest"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Some false positives are expected in some environment that may use this functionality to install and test their custom applications"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Winrar Compressing Dump Files",
    "id": 1239,
    "related": [
      {
        "id": "ec570e53-4c76-45a9-804d-dc3f355ff7a7",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects execution of WinRAR in order to compress a file with a \".dmp\"/\".dump\" extension, which could be a step in a process of dump file exfiltration.",
    "references": [
      "https://www.crowdstrike.com/blog/overwatch-exposes-aquatic-panda-in-possession-of-log-4-shell-exploit-tools/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/04",
    "modified": "2023/09/12",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": [
            "\\rar.exe",
            "\\winrar.exe"
          ]
        },
        {
          "Description": "Command line RAR"
        }
      ],
      "selection_extension": {
        "CommandLine|contains": [
          ".dmp",
          ".dump",
          ".hdmp"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of WinRAR with a command line in which \".dmp\" or \".dump\" appears accidentally",
      "Legitimate use of WinRAR to compress WER \".dmp\" files for troubleshooting"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Child Process Of WinRAR.EXE",
    "id": 1240,
    "related": [
      {
        "id": "ec3a3c2f-9bb0-4a9b-8f4b-5ec386544343",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of WinRAR.exe.",
    "references": [
      "https://www.group-ib.com/blog/cve-2023-38831-winrar-zero-day/",
      "https://github.com/knight0x07/WinRAR-Code-Execution-Vulnerability-CVE-2023-38831/blob/26ab6c40b6d2c09bb4fc60feaa4a3a90cfd20c23/Part-1-Overview.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/31",
    "tags": [
      "attack.execution",
      "attack.t1203"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\WinRAR.exe"
      },
      "selection_binaries": [
        {
          "Image|endswith": [
            "\\cmd.exe",
            "\\cscript.exe",
            "\\mshta.exe",
            "\\powershell.exe",
            "\\pwsh.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "OriginalFileName": [
            "Cmd.Exe",
            "cscript.exe",
            "mshta.exe",
            "PowerShell.EXE",
            "pwsh.dll",
            "regsvr32.exe",
            "RUNDLL32.EXE",
            "wscript.exe"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Winrar Execution in Non-Standard Folder",
    "id": 1241,
    "status": "test",
    "description": "Detects a suspicious winrar execution in a folder which is not the default installation folder",
    "references": [
      "https://twitter.com/cyb3rops/status/1460978167628406785"
    ],
    "author": "Florian Roth (Nextron Systems), Tigzy",
    "date": "2021/11/17",
    "modified": "2023/08/31",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": [
            "\\rar.exe",
            "\\winrar.exe"
          ]
        },
        {
          "Description": "Command line RAR"
        }
      ],
      "filter_main_unrar": {
        "Image|endswith": "\\UnRAR.exe"
      },
      "filter_main_path": {
        "Image|contains": [
          ":\\Program Files (x86)\\WinRAR\\",
          ":\\Program Files\\WinRAR\\"
        ]
      },
      "filter_optional_temp": {
        "Image|contains": ":\\Windows\\Temp\\"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate use of WinRAR in a folder of a software that bundles WinRAR"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl",
    "id": 1242,
    "status": "test",
    "description": "Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)",
    "references": [
      "https://posts.specterops.io/application-whitelisting-bypass-and-arbitrary-unsigned-code-execution-technique-in-winrm-vbs-c8c24fb40404"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/06",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "contains_format_pretty_arg": {
        "CommandLine|contains": [
          "format:pretty",
          "format:\"pretty\"",
          "format:\"text\"",
          "format:text"
        ]
      },
      "image_from_system_folder": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "contains_winrm": {
        "CommandLine|contains": "winrm"
      },
      "condition": "contains_winrm and (contains_format_pretty_arg and not image_from_system_folder)"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Code Execute via Winrm.vbs",
    "id": 1243,
    "status": "test",
    "description": "Detects an attempt to execute code or create service on remote host via winrm.vbs.",
    "references": [
      "https://twitter.com/bohops/status/994405551751815170",
      "https://redcanary.com/blog/lateral-movement-winrm-wmi/",
      "https://lolbas-project.github.io/lolbas/Scripts/Winrm/"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/07",
    "modified": "2023/03/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\cscript.exe"
        },
        {
          "OriginalFileName": "cscript.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "winrm",
          "invoke Create wmicimv2/Win32_",
          "-r:http"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote PowerShell Session Host Process (WinRM)",
    "id": 1244,
    "status": "test",
    "description": "Detects remote PowerShell sections by monitoring for wsmprovhost (WinRM host process) as a parent or child process (sign of an active PowerShell remote session).",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/09/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.t1021.006"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|endswith": "\\wsmprovhost.exe"
        },
        {
          "ParentImage|endswith": "\\wsmprovhost.exe"
        }
      ],
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "User",
      "CommandLine"
    ],
    "falsepositives": [
      "Legitimate usage of remote Powershell, e.g. for monitoring purposes."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Processes Spawned by WinRM",
    "id": 1245,
    "status": "test",
    "description": "Detects suspicious processes including shells spawnd from WinRM host process",
    "author": "Andreas Hunkeler (@Karneades), Markus Neis",
    "references": [
      "Internal Research"
    ],
    "date": "2021/05/20",
    "modified": "2022/07/14",
    "tags": [
      "attack.t1190",
      "attack.initial_access",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\wsmprovhost.exe",
        "Image|endswith": [
          "\\cmd.exe",
          "\\sh.exe",
          "\\bash.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wsl.exe",
          "\\schtasks.exe",
          "\\certutil.exe",
          "\\whoami.exe",
          "\\bitsadmin.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate WinRM usage"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Compress Data and Lock With Password for Exfiltration With WINZIP",
    "id": 1246,
    "status": "test",
    "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party utilities",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md"
    ],
    "author": "frack113",
    "date": "2021/07/27",
    "modified": "2022/12/25",
    "tags": [
      "attack.collection",
      "attack.t1560.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_winzip": {
        "CommandLine|contains": [
          "winzip.exe",
          "winzip64.exe"
        ]
      },
      "selection_password": {
        "CommandLine|contains": "-s\""
      },
      "selection_other": {
        "CommandLine|contains": [
          " -min ",
          " -a "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New ActiveScriptEventConsumer Created Via Wmic.EXE",
    "id": 1247,
    "status": "test",
    "description": "Detects WMIC executions in which an event consumer gets created. This could be used to establish persistence",
    "references": [
      "https://twitter.com/johnlatwc/status/1408062131321270282?s=12",
      "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/06/25",
    "modified": "2023/02/14",
    "tags": [
      "attack.persistence",
      "attack.t1546.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "ActiveScriptEventConsumer",
          " CREATE "
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Legitimate software creating script event consumers"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Windows Defender Tampering Via Wmic.EXE",
    "id": 1248,
    "status": "test",
    "description": "Detects potential tampering with Windows Defender settings such as adding exclusion using wmic",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/5c1e6f1b4fafd01c8d1ece85f510160fc1275fbf/atomics/T1562.001/T1562.001.md",
      "https://www.bleepingcomputer.com/news/security/gootkit-malware-bypasses-windows-defender-by-setting-path-exclusions/",
      "https://www.bleepingcomputer.com/news/security/iobit-forums-hacked-to-spread-ransomware-to-its-members/"
    ],
    "author": "frack113",
    "date": "2022/12/11",
    "modified": "2023/02/14",
    "tags": [
      "attack.credential_access",
      "attack.t1546.008"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "wmic.exe"
        },
        {
          "Image|endswith": "\\WMIC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "/Namespace:\\\\\\\\root\\\\Microsoft\\\\Windows\\\\Defender"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Process Created Via Wmic.EXE",
    "id": 1249,
    "related": [
      {
        "id": "3c89a1e8-0fba-449e-8f1b-8409d6267ec8",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects new process creation using WMIC via the \"process call create\" flag",
    "references": [
      "https://www.sans.org/blog/wmic-for-incident-response/",
      "https://github.com/redcanaryco/atomic-red-team/blob/84215139ee5127f8e3a117e063b604812bd71928/atomics/T1047/T1047.md#atomic-test-5---wmi-execute-local-process"
    ],
    "author": "Michael Haag, Florian Roth (Nextron Systems), juju4, oscd.community",
    "date": "2019/01/16",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "car.2016-03-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "process",
          "call",
          "create"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Computer System Reconnaissance Via Wmic.EXE",
    "id": 1250,
    "status": "test",
    "description": "Detects execution of wmic utility with the \"computersystem\" flag in order to obtain information about the machine such as the domain, username, model, etc.",
    "references": [
      "https://www.microsoft.com/security/blog/2022/09/07/profiling-dev-0270-phosphorus-ransomware-operations/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/08",
    "modified": "2023/02/14",
    "tags": [
      "attack.discovery",
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "computersystem"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Hardware Model Reconnaissance Via Wmic.EXE",
    "id": 1251,
    "status": "test",
    "description": "Detects the execution of WMIC with the \"csproduct\" which is used to obtain information such as hardware models and vendor information",
    "references": [
      "https://jonconwayuk.wordpress.com/2014/01/31/wmic-csproduct-using-wmi-to-identify-make-and-model-of-hardware/",
      "https://www.uptycs.com/blog/kuraystealer-a-bandit-using-discord-webhooks"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "car.2016-03-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "csproduct"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Local Groups Reconnaissance Via Wmic.EXE",
    "id": 1252,
    "status": "test",
    "description": "Detects the execution of \"wmic\" with the \"group\" flag.\nAdversaries may attempt to find local system groups and permission settings.\nThe knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.\nAdversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.001/T1069.001.md"
    ],
    "author": "frack113",
    "date": "2021/12/12",
    "modified": "2023/02/14",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " group"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Windows Hotfix Updates Reconnaissance Via Wmic.EXE",
    "id": 1253,
    "status": "test",
    "description": "Detects the execution of wmic with the \"qfe\" flag in order to obtain information about installed hotfix updates on the system. This is often used by pentester and attacker enumeration scripts",
    "references": [
      "https://github.com/carlospolop/PEASS-ng/blob/fa0f2e17fbc1d86f1fd66338a40e665e7182501d/winPEAS/winPEASbat/winPEAS.bat",
      "https://sushant747.gitbooks.io/total-oscp-guide/content/privilege_escalation_windows.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "wmic.exe"
        },
        {
          "Image|endswith": "\\WMIC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": " qfe"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Process Reconnaissance Via Wmic.EXE",
    "id": 1254,
    "status": "test",
    "description": "Detects the execution of \"wmic\" with the \"process\" flag, which adversary might use to list processes running on the compromised host or list installed software hotfixes and patches.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1047/T1047.md",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wmic"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "process"
      },
      "filter_main_creation": {
        "CommandLine|contains|all": [
          "call",
          "create"
        ]
      },
      "condition": "all of selection* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Product Reconnaissance Via Wmic.EXE",
    "id": 1255,
    "status": "test",
    "description": "Detects the execution of WMIC in order to get a list of firewall and antivirus products",
    "references": [
      "https://thedfirreport.com/2023/03/06/2022-year-in-review/",
      "https://www.yeahhub.com/list-installed-programs-version-path-windows/",
      "https://learn.microsoft.com/en-us/answers/questions/253555/software-list-inventory-wmic-product"
    ],
    "author": "Nasreddine Bencherchali",
    "date": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "Product"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Product Class Reconnaissance Via Wmic.EXE",
    "id": 1256,
    "status": "test",
    "description": "Detects the execution of WMIC in order to get a list of firewall and antivirus products",
    "references": [
      "https://github.com/albertzsigovits/malware-notes/blob/c820c7fea76cf76a861b28ebc77e06100e20ec29/Ransomware/Maze.md",
      "https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1"
    ],
    "author": "Michael Haag, Florian Roth (Nextron Systems), juju4, oscd.community",
    "date": "2023/02/14",
    "modified": "2023/03/07",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "car.2016-03-002"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "AntiVirusProduct",
          "FirewallProduct"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Service Reconnaissance Via Wmic.EXE",
    "id": 1257,
    "related": [
      {
        "id": "68bcd73b-37ef-49cb-95fc-edc809730be6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "An adversary might use WMI to check if a certain remote service is running on a remote device.\nWhen the test completes, a service information will be displayed on the screen if it exists.\nA common feedback message is that \"No instance(s) Available\" if the service queried is not running.\nA common error message is \"Node - (provided IP or default) ERROR Description =The RPC server is unavailable\" if the provided remote host is unreachable\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1047/T1047.md",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wmic"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "service"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uncommon System Information Discovery Via Wmic.EXE",
    "id": 1258,
    "related": [
      {
        "id": "d85ecdd7-b855-4e6e-af59-d9c78b5b861e",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the use of the WMI command-line (WMIC) utility to identify and display various system information,\nincluding OS, CPU, GPU, and disk drive names; memory capacity; display resolution; and baseboard, BIOS,\nand GPU driver products/versions.\nSome of these commands were used by Aurora Stealer in late 2022/early 2023.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/a2ccd19c37d0278b4ffa8583add3cf52060a5418/atomics/T1082/T1082.md#atomic-test-25---system-information-discovery-with-wmic",
      "https://nwgat.ninja/getting-system-information-with-wmic-on-windows/",
      "https://blog.sekoia.io/aurora-a-rising-stealer-flying-under-the-radar",
      "https://blog.cyble.com/2023/01/18/aurora-a-stealer-using-shapeshifting-tactics/",
      "https://app.any.run/tasks/a6aa0057-82ec-451f-8f99-55650ca537da/",
      "https://www.virustotal.com/gui/file/d6f6bc10ae0e634ed4301d584f61418cee18e5d58ad9af72f8aa552dc4aaeca3/behavior"
    ],
    "author": "TropChaud",
    "date": "2023/01/26",
    "modified": "2023/12/19",
    "tags": [
      "attack.discovery",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_wmic": [
        {
          "Description": "WMI Commandline Utility"
        },
        {
          "OriginalFileName": "wmic.exe"
        },
        {
          "Image|endswith": "\\WMIC.exe"
        }
      ],
      "selection_commands": {
        "CommandLine|contains": [
          "LOGICALDISK get Name,Size,FreeSpace",
          "os get Caption,OSArchitecture,Version"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Unquoted Service Path Reconnaissance Via Wmic.EXE",
    "id": 1259,
    "related": [
      {
        "id": "09658312-bc27-4a3b-91c5-e49ab9046d1b",
        "type": "similar"
      },
      {
        "id": "76f55eaa-d27f-4213-9d45-7b0e4b60bbae",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects known WMI recon method to look for unquoted service paths using wmic. Often used by pentester and attacker enumeration scripts",
    "references": [
      "https://github.com/nccgroup/redsnarf/blob/35949b30106ae543dc6f2bc3f1be10c6d9a8d40e/redsnarf.py",
      "https://github.com/S3cur3Th1sSh1t/Creds/blob/eac23d67f7f90c7fc8e3130587d86158c22aa398/PowershellScripts/jaws-enum.ps1",
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "modified": "2023/09/11",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "wmic.exe"
        },
        {
          "Image|endswith": "\\WMIC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " service get ",
          "name,displayname,pathname,startmode"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "System Disk And Volume Reconnaissance Via Wmic.EXE",
    "id": 1260,
    "related": [
      {
        "id": "d85ecdd7-b855-4e6e-af59-d9c78b5b861e",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "An adversary might use WMI to discover information about the system, such as the volume name, size,\nfree space, and other disk information. This can be done using the `wmic` command-line utility and has been\nobserved being used by threat actors such as Volt Typhoon.\n",
    "references": [
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-144a",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wmic"
    ],
    "author": "Stephen Lincoln `@slincoln-aiq`(AttackIQ)",
    "date": "2024/02/02",
    "tags": [
      "attack.execution",
      "attack.discovery",
      "attack.t1047",
      "attack.t1082"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "volume",
          "path win32_logicaldisk"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WMIC Remote Command Execution",
    "id": 1261,
    "related": [
      {
        "id": "e42af9df-d90b-4306-b7fb-05c863847ebd",
        "type": "obsoletes"
      },
      {
        "id": "09af397b-c5eb-4811-b2bb-08b3de464ebf",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the execution of WMIC to query information on a remote system",
    "references": [
      "https://securelist.com/moonbounce-the-dark-side-of-uefi-firmware/105468/",
      "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wmic"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": "/node:"
      },
      "filter_localhost": {
        "CommandLine|contains": [
          "/node:127.0.0.1 ",
          "/node:localhost "
        ]
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Service Started/Stopped Via Wmic.EXE",
    "id": 1262,
    "status": "test",
    "description": "Detects usage of wmic to start or stop a service",
    "references": [
      "https://sushant747.gitbooks.io/total-oscp-guide/content/privilege_escalation_windows.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": "wmic.exe"
        },
        {
          "Image|endswith": "\\WMIC.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          " service ",
          " call "
        ],
        "CommandLine|contains": [
          "stopservice",
          "startservice"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential SquiblyTwo Technique Execution",
    "id": 1263,
    "status": "test",
    "description": "Detects potential SquiblyTwo attack technique with possible renamed WMIC via Imphash and OriginalFileName fields",
    "references": [
      "https://web.archive.org/web/20190209154607/https://subt0x11.blogspot.com/2018/04/wmicexe-whitelisting-bypass-hacking.html",
      "https://twitter.com/mattifestation/status/986280382042595328",
      "https://atomicredteam.io/defense-evasion/T1220/",
      "https://lolbas-project.github.io/lolbas/Binaries/Wmic/"
    ],
    "author": "Markus Neis, Florian Roth",
    "date": "2019/01/16",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1047",
      "attack.t1220",
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_pe": [
        {
          "Image|endswith": "\\wmic.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        },
        {
          "Imphash": [
            "1B1A3F43BF37B5BFE60751F2EE2F326E",
            "37777A96245A3C74EB217308F3546F4C",
            "9D87C9D67CE724033C0B40CC4CA1B206"
          ]
        },
        {
          "Hashes|contains": [
            "IMPHASH=1B1A3F43BF37B5BFE60751F2EE2F326E",
            "IMPHASH=37777A96245A3C74EB217308F3546F4C",
            "IMPHASH=9D87C9D67CE724033C0B40CC4CA1B206"
          ]
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "format:",
          "http"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious WMIC Execution Via Office Process",
    "id": 1264,
    "related": [
      {
        "id": "438025f9-5856-4663-83f7-52f878a70a50",
        "type": "derived"
      },
      {
        "id": "518643ba-7d9c-4fa5-9f37-baed36059f6a",
        "type": "obsoletes"
      },
      {
        "id": "9d1c72f5-43f0-4da5-9320-648cf2099dd0",
        "type": "obsoletes"
      },
      {
        "id": "c0e1c3d5-4381-4f18-8145-2583f06a1fe5",
        "type": "obsoletes"
      },
      {
        "id": "04f5363a-6bca-42ff-be70-0d28bf629ead",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Office application called wmic to proxye execution through a LOLBIN process. This is often used to break suspicious parent-child chain (Office app spawns LOLBin).",
    "references": [
      "https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/",
      "https://github.com/vadim-hunter/Detection-Ideas-Rules/blob/02bcbfc2bfb8b4da601bb30de0344ae453aa1afe/Threat%20Intelligence/The%20DFIR%20Report/20210329_Sodinokibi_(aka_REvil)_Ransomware.yaml"
    ],
    "author": "Vadim Khrykov, Cyb3rEng",
    "date": "2021/08/23",
    "modified": "2023/02/14",
    "tags": [
      "attack.t1204.002",
      "attack.t1047",
      "attack.t1218.010",
      "attack.execution",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\WINWORD.EXE",
          "\\EXCEL.EXE",
          "\\POWERPNT.exe",
          "\\MSPUB.exe",
          "\\VISIO.exe",
          "\\MSACCESS.EXE",
          "\\EQNEDT32.EXE",
          "\\ONENOTE.EXE",
          "\\wordpad.exe",
          "\\wordview.exe"
        ]
      },
      "selection_wmic_img": [
        {
          "Image|endswith": "\\wbem\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_wmic_cli": {
        "CommandLine|contains|all": [
          "process",
          "create",
          "call"
        ],
        "CommandLine|contains": [
          "regsvr32",
          "rundll32",
          "msiexec",
          "mshta",
          "verclsid",
          "wscript",
          "cscript"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Process Created Via Wmic.EXE",
    "id": 1265,
    "related": [
      {
        "id": "526be59f-a573-4eea-b5f7-f0973207634d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects WMIC executing \"process call create\" with suspicious calls to processes such as \"rundll32\", \"regsrv32\", etc.",
    "references": [
      "https://thedfirreport.com/2020/10/08/ryuks-return/",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/ransomware-hive-conti-avoslocker"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/10/12",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "CommandLine|contains|all": [
          "process ",
          "call ",
          "create "
        ],
        "CommandLine|contains": [
          "rundll32",
          "bitsadmin",
          "regsvr32",
          "cmd.exe /c ",
          "cmd.exe /k ",
          "cmd.exe /r ",
          "cmd /c ",
          "cmd /k ",
          "cmd /r ",
          "powershell",
          "pwsh",
          "certutil",
          "cscript",
          "wscript",
          "mshta",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\",
          "\\AppData\\Local\\",
          "%temp%",
          "%tmp%",
          "%ProgramData%",
          "%appdata%",
          "%comspec%",
          "%localappdata%"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Application Terminated Via Wmic.EXE",
    "id": 1266,
    "related": [
      {
        "id": "847d5ff3-8a31-4737-a970-aeae8fe21765",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects calls to the \"terminate\" function via wmic in order to kill an application",
    "references": [
      "https://cyble.com/blog/lockfile-ransomware-using-proxyshell-attack-to-deploy-ransomware/",
      "https://www.bitdefender.com/files/News/CaseStudies/study/377/Bitdefender-Whitepaper-WMI-creat4871-en-EN-GenericUse.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/11",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "call",
          "terminate"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Application Removed Via Wmic.EXE",
    "id": 1267,
    "related": [
      {
        "id": "847d5ff3-8a31-4737-a970-aeae8fe21765",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Uninstall an application with wmic",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1047/T1047.md#atomic-test-10---application-uninstall-using-wmic"
    ],
    "author": "frack113",
    "date": "2022/01/28",
    "modified": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\WMIC.exe"
        },
        {
          "OriginalFileName": "wmic.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          "call",
          "uninstall"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Tampering With Security Products Via WMIC",
    "id": 1268,
    "related": [
      {
        "id": "b53317a0-8acf-4fd1-8de8-a5401e776b96",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects uninstallation or termination of security products using the WMIC utility",
    "references": [
      "https://twitter.com/cglyer/status/1355171195654709249",
      "https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/",
      "https://www.mandiant.com/resources/unc2165-shifts-to-evade-sanctions",
      "https://research.nccgroup.com/2022/08/19/back-in-black-unlocking-a-lockbit-3-0-ransomware-attack/",
      "https://www.trendmicro.com/en_us/research/23/a/vice-society-ransomware-group-targets-manufacturing-companies.html"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/01/30",
    "modified": "2023/02/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_cli_1": {
        "CommandLine|contains|all": [
          "wmic",
          "product where ",
          "call",
          "uninstall",
          "/nointeractive"
        ]
      },
      "selection_cli_2": {
        "CommandLine|contains|all": [
          "wmic",
          "caption like "
        ],
        "CommandLine|contains": [
          "call delete",
          "call terminate"
        ]
      },
      "selection_cli_3": {
        "CommandLine|contains|all": [
          "process ",
          "where ",
          "delete"
        ]
      },
      "selection_product": {
        "CommandLine|contains": [
          "%carbon%",
          "%cylance%",
          "%endpoint%",
          "%eset%",
          "%malware%",
          "%Sophos%",
          "%symantec%",
          "Antivirus",
          "AVG ",
          "Carbon Black",
          "CarbonBlack",
          "Cb Defense Sensor 64-bit",
          "Crowdstrike Sensor",
          "Cylance ",
          "Dell Threat Defense",
          "DLP Endpoint",
          "Endpoint Detection",
          "Endpoint Protection",
          "Endpoint Security",
          "Endpoint Sensor",
          "ESET File Security",
          "LogRhythm System Monitor Service",
          "Malwarebytes",
          "McAfee Agent",
          "Microsoft Security Client",
          "Sophos Anti-Virus",
          "Sophos AutoUpdate",
          "Sophos Credential Store",
          "Sophos Management Console",
          "Sophos Management Database",
          "Sophos Management Server",
          "Sophos Remote Management System",
          "Sophos Update Manager",
          "Threat Protection",
          "VirusScan",
          "Webroot SecureAnywhere",
          "Windows Defender"
        ]
      },
      "condition": "1 of selection_cli_* and selection_product"
    },
    "falsepositives": [
      "Legitimate administration"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "XSL Script Execution Via WMIC.EXE",
    "id": 1269,
    "status": "test",
    "description": "Detects the execution of WMIC with the \"format\" flag to potentially load XSL files.\nAdversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.\nExtensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1220/T1220.md"
    ],
    "author": "Timur Zinniatullin, oscd.community, Swachchhanda Shrawan Poudel",
    "date": "2019/10/21",
    "modified": "2023/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1220"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\wmic.exe",
        "CommandLine|contains": [
          "/format",
          "-format"
        ]
      },
      "filter_main_known_format": {
        "CommandLine|contains": [
          "Format:List",
          "Format:htable",
          "Format:hform",
          "Format:table",
          "Format:mof",
          "Format:value",
          "Format:rawxml",
          "Format:xml",
          "Format:csv"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "WMIC.exe FP depend on scripts and administrative methods used in the monitored environment.",
      "Static format arguments - https://petri.com/command-line-wmi-part-3"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WmiPrvSE Spawned A Process",
    "id": 1270,
    "related": [
      {
        "id": "8a582fe2-0882-4b89-a82a-da6b2dc32937",
        "type": "similar"
      },
      {
        "id": "692f0bec-83ba-4d04-af7e-e884a96059b6",
        "type": "similar"
      }
    ],
    "status": "stable",
    "description": "Detects WmiPrvSE spawning a process",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190815-RemoteServiceInstallation/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/15",
    "modified": "2023/03/23",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\WmiPrvSe.exe"
      },
      "filter_logonid": {
        "LogonId": [
          "0x3e7",
          "null"
        ]
      },
      "filter_system_user": {
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "filter_wmiprvse": {
        "Image|endswith": "\\WmiPrvSE.exe"
      },
      "filter_werfault": {
        "Image|endswith": "\\WerFault.exe"
      },
      "filter_null": {
        "LogonId": null
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "False positives are expected (e.g. in environments where WinRM is used legitimately)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential WMI Lateral Movement WmiPrvSE Spawned PowerShell",
    "id": 1271,
    "related": [
      {
        "id": "8a582fe2-0882-4b89-a82a-da6b2dc32937",
        "type": "similar"
      },
      {
        "id": "d21374ff-f574-44a7-9998-4a8c8bf33d7d",
        "type": "similar"
      }
    ],
    "status": "stable",
    "description": "Detects Powershell as a child of the WmiPrvSE process. Which could be a sign of lateral movement via WMI.",
    "references": [
      "https://any.run/report/68bc255f9b0db6a0d30a8f2dadfbee3256acfe12497bf93943bc1eab0735e45e/a2385d6f-34f7-403c-90d3-b1f9d2a90a5e"
    ],
    "author": "Markus Neis @Karneades",
    "date": "2019/04/03",
    "modified": "2023/03/29",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\WmiPrvSE.exe"
      },
      "selection_img": [
        {
          "Image|endswith": [
            "\\powershell.exe",
            "\\pwsh.exe"
          ]
        },
        {
          "OriginalFileName": [
            "PowerShell.EXE",
            "pwsh.dll"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "AppvClient",
      "CCM",
      "WinRM"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious WmiPrvSE Child Process",
    "id": 1272,
    "related": [
      {
        "id": "692f0bec-83ba-4d04-af7e-e884a96059b6",
        "type": "similar"
      },
      {
        "id": "d21374ff-f574-44a7-9998-4a8c8bf33d7d",
        "type": "similar"
      },
      {
        "id": "18cf6cf0-39b0-4c22-9593-e244bdc9a2d4",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects suspicious and uncommon child processes of WmiPrvSE",
    "references": [
      "https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/",
      "https://github.com/vadim-hunter/Detection-Ideas-Rules/blob/02bcbfc2bfb8b4da601bb30de0344ae453aa1afe/Threat%20Intelligence/The%20DFIR%20Report/20210329_Sodinokibi_(aka_REvil)_Ransomware.yaml",
      "https://blog.osarmor.com/319/onenote-attachment-delivers-asyncrat-malware/",
      "https://twitter.com/ForensicITGuy/status/1334734244120309760"
    ],
    "author": "Vadim Khrykov (ThreatIntel), Cyb3rEng, Florian Roth (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2023/11/10",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1047",
      "attack.t1204.002",
      "attack.t1218.010"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": "\\wbem\\WmiPrvSE.exe"
      },
      "selection_children_1": {
        "Image|endswith": [
          "\\certutil.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\msiexec.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\verclsid.exe",
          "\\wscript.exe"
        ]
      },
      "selection_children_2": {
        "Image|endswith": "\\cmd.exe",
        "CommandLine|contains": [
          "cscript",
          "mshta",
          "powershell",
          "pwsh",
          "regsvr32",
          "rundll32",
          "wscript"
        ]
      },
      "filter_main_werfault": {
        "Image|endswith": "\\WerFault.exe"
      },
      "filter_main_wmiprvse": {
        "Image|endswith": "\\WmiPrvSE.exe"
      },
      "filter_main_msiexec": {
        "Image|endswith": "\\msiexec.exe",
        "CommandLine|contains": "/i "
      },
      "condition": "selection_parent and 1 of selection_children_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WMI Backdoor Exchange Transport Agent",
    "id": 1273,
    "status": "test",
    "description": "Detects a WMI backdoor in Exchange Transport Agents via WMI event filters",
    "references": [
      "https://twitter.com/cglyer/status/1182389676876980224",
      "https://twitter.com/cglyer/status/1182391019633029120"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/10/11",
    "modified": "2023/02/08",
    "tags": [
      "attack.persistence",
      "attack.t1546.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "ParentImage|endswith": "\\EdgeTransport.exe"
      },
      "filter_conhost": {
        "Image": "C:\\Windows\\System32\\conhost.exe"
      },
      "filter_oleconverter": {
        "Image|startswith": "C:\\Program Files\\Microsoft\\Exchange Server\\",
        "Image|endswith": "\\Bin\\OleConverter.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "WMI Persistence - Script Event Consumer",
    "id": 1274,
    "status": "test",
    "description": "Detects WMI script event consumers",
    "references": [
      "https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"
    ],
    "author": "Thomas Patzke",
    "date": "2018/03/07",
    "modified": "2022/10/11",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.003"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image": "C:\\WINDOWS\\system32\\wbem\\scrcons.exe",
        "ParentImage": "C:\\Windows\\System32\\svchost.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate event consumers",
      "Dell computers on some versions register an event consumer that is known to cause false positives when brightness is changed by the corresponding keyboard button"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "UEFI Persistence Via Wpbbin - ProcessCreation",
    "id": 1275,
    "status": "test",
    "description": "Detects execution of the binary \"wpbbin\" which is used as part of the UEFI based persistence method described in the reference section",
    "references": [
      "https://grzegorztworek.medium.com/using-uefi-to-inject-executable-files-into-bitlocker-protected-drives-8ff4ca59c94c",
      "https://persistence-info.github.io/Data/wpbbin.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/18",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1542.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_creation"
    },
    "detection": {
      "selection": {
        "Image": "C:\\Windows\\System32\\wpbbin.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the file by hardware manufacturer such as lenovo (Thanks @0gtweet for the tip)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Dropper Script Execution Via WScript/CScript",
    "id": 1276,
    "related": [
      {
        "id": "1e33157c-53b1-41ad-bbcc-780b80b58288",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects wscript/cscript executions of scripts located in user directories",
    "references": [
      "https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/",
      "https://redcanary.com/blog/gootloader/"
    ],
    "author": "Margaritis Dimitrios (idea), Florian Roth (Nextron Systems), oscd.community, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/01/16",
    "modified": "2024/01/30",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_exec": {
        "Image|endswith": [
          "\\wscript.exe",
          "\\cscript.exe"
        ]
      },
      "selection_paths": {
        "CommandLine|contains": [
          ":\\Temp\\",
          ":\\Tmp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "selection_ext": {
        "CommandLine|contains": [
          ".js",
          ".jse",
          ".vba",
          ".vbe",
          ".vbs",
          ".wsf"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Some installers might generate a similar behavior. An initial baseline is required"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Cscript/Wscript Potentially Suspicious Child Process",
    "id": 1277,
    "status": "experimental",
    "description": "Detects potentially suspicious child processes of Wscript/Cscript. These include processes such as rundll32 with uncommon exports or PowerShell spawning rundll32 or regsvr32.\nMalware such as Pikabot and Qakbot were seen using similar techniques as well as many others.\n",
    "references": [
      "Internal Research",
      "https://github.com/pr0xylife/Pikabot/blob/main/Pikabot_30.10.2023.txt",
      "https://github.com/pr0xylife/Pikabot/blob/main/Pikabot_22.12.2023.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Alejandro Houspanossian ('@lekz86')",
    "date": "2023/05/15",
    "modified": "2024/01/02",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\wscript.exe",
          "\\cscript.exe"
        ]
      },
      "selection_cli_script_main": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\powershell.exe",
          "\\pwsh.exe"
        ]
      },
      "selection_cli_script_option_mshta": {
        "CommandLine|contains|all": [
          "mshta",
          "http"
        ]
      },
      "selection_cli_script_option_other": {
        "CommandLine|contains": [
          "rundll32",
          "regsvr32",
          "msiexec"
        ]
      },
      "selection_cli_standalone": {
        "Image|endswith": "\\rundll32.exe"
      },
      "filter_main_rundll32_known_exports": {
        "Image|endswith": "\\rundll32.exe",
        "CommandLine|contains": [
          "UpdatePerUserSystemParameters",
          "PrintUIEntry",
          "ClearMyTracksByProcess"
        ]
      },
      "condition": "selection_parent and ( selection_cli_standalone or (selection_cli_script_main and 1 of selection_cli_script_option_*) ) and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Some false positives might occur with admin or third party software scripts. Investigate and apply additional filters accordingly."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Cscript/Wscript Uncommon Script Extension Execution",
    "id": 1278,
    "status": "experimental",
    "description": "Detects Wscript/Cscript executing a file with an uncommon (i.e. non-script) extension",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/15",
    "modified": "2023/06/19",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "OriginalFileName": [
            "wscript.exe",
            "cscript.exe"
          ]
        },
        {
          "Image|endswith": [
            "\\wscript.exe",
            "\\cscript.exe"
          ]
        }
      ],
      "selection_extension": {
        "CommandLine|contains": [
          ".csv",
          ".dat",
          ".doc",
          ".gif",
          ".jpeg",
          ".jpg",
          ".png",
          ".ppt",
          ".txt",
          ".xls",
          ".xml"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WSL Child Process Anomaly",
    "id": 1279,
    "related": [
      {
        "id": "dec44ca7-61ad-493c-bfd7-8819c5faa09b",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects uncommon or suspicious child processes spawning from a WSL process. This could indicate an attempt to evade parent/child relationship detections or persistence attempts via cron using WSL",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wsl/",
      "https://twitter.com/nas_bench/status/1535431474429808642"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/23",
    "modified": "2023/08/15",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_parent": {
        "ParentImage|endswith": [
          "\\wsl.exe",
          "\\wslhost.exe"
        ]
      },
      "selection_children_images": {
        "Image|endswith": [
          "\\calc.exe",
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe"
        ]
      },
      "selection_children_paths": {
        "Image|contains": [
          "\\AppData\\Local\\Temp\\",
          "C:\\Users\\Public\\",
          "C:\\Windows\\Temp\\",
          "C:\\Temp\\",
          "\\Downloads\\",
          "\\Desktop\\"
        ]
      },
      "condition": "selection_parent and 1 of selection_children_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Arbitrary Command Execution Using WSL",
    "id": 1280,
    "related": [
      {
        "id": "2267fe65-0681-42ad-9a6d-46553d3f3480",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects potential abuse of Windows Subsystem for Linux (WSL) binary as a LOLBIN to execute arbitrary Linux or Windows commands",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wsl/",
      "https://twitter.com/nas_bench/status/1535431474429808642"
    ],
    "author": "oscd.community, Zach Stanford @svch0st, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/10/05",
    "modified": "2023/04/12",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1218",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wsl.exe"
        },
        {
          "OriginalFileName": "wsl.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains": [
          " -e ",
          " --exec",
          " --system",
          " --shell-type ",
          " /mnt/c",
          " --user root",
          " -u root",
          "--debug-shell"
        ]
      },
      "filter_main_kill": {
        "ParentImage|endswith": "\\cmd.exe",
        "CommandLine|contains|all": [
          " -d ",
          " -e kill "
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Automation and orchestration scripts may use this method to execute scripts etc.",
      "Legitimate use by Windows to kill processes opened via WSL (example VsCode WSL server)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Binary Executed From WSL",
    "id": 1281,
    "status": "test",
    "description": "Detects the execution of Windows binaries from within a WSL instance. This could be used to masquerade parent-child relationships",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/14",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|re": "[a-zA-Z]:\\\\",
        "CurrentDirectory|contains": "\\\\\\\\wsl.localhost"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Proxy Execution Via Wuauclt.EXE",
    "id": 1282,
    "related": [
      {
        "id": "ba1bb0cb-73da-42de-ad3a-de10c643a5d0",
        "type": "obsoletes"
      },
      {
        "id": "d7825193-b70a-48a4-b992-8b5b3015cc11",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the use of the Windows Update Client binary (wuauclt.exe) for proxy execution.",
    "references": [
      "https://dtm.uk/wuauclt/",
      "https://blog.malwarebytes.com/threat-intelligence/2022/01/north-koreas-lazarus-apt-leverages-windows-update-client-github-in-latest-campaign/"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research), Florian Roth (Nextron Systems), Sreeman, FPT.EagleEye Team",
    "date": "2020/10/12",
    "modified": "2023/11/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\wuauclt.exe"
        },
        {
          "OriginalFileName": "wuauclt.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|contains|all": [
          "UpdateDeploymentProvider",
          "RunHandlerComServer"
        ]
      },
      "filter_main_generic": {
        "CommandLine|contains": " /UpdateDeploymentProvider UpdateDeploymentProvider.dll "
      },
      "filter_main_wuaueng": {
        "CommandLine|contains": " wuaueng.dll "
      },
      "filter_main_uus": {
        "CommandLine|contains": [
          ":\\Windows\\UUS\\Packages\\Preview\\amd64\\updatedeploy.dll /ClassId",
          ":\\Windows\\UUS\\amd64\\UpdateDeploy.dll /ClassId"
        ]
      },
      "filter_main_winsxs": {
        "CommandLine|contains|all": [
          ":\\Windows\\WinSxS\\",
          "\\UpdateDeploy.dll /ClassId "
        ]
      },
      "condition": "all of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Windows Update Agent Empty Cmdline",
    "id": 1283,
    "status": "test",
    "description": "Detects suspicious Windows Update Agent activity in which a wuauclt.exe process command line doesn't contain any command line flags\n",
    "references": [
      "https://redcanary.com/blog/blackbyte-ransomware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/26",
    "modified": "2023/11/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": [
        {
          "Image|endswith": "\\Wuauclt.exe"
        },
        {
          "OriginalFileName": "Wuauclt.exe"
        }
      ],
      "selection_cli": {
        "CommandLine|endswith": [
          "Wuauclt",
          "Wuauclt.exe"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wusa Extracting Cab Files",
    "id": 1284,
    "status": "test",
    "description": "Detects usage of the \"wusa.exe\" (Windows Update Standalone Installer) utility to extract cab using the \"/extract\" argument which is not longer supported. This could indicate an attacker using an old technique",
    "references": [
      "https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/04",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\wusa.exe",
        "CommandLine|contains": "/extract:"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "The \"extract\" flag still works on older 'wusa.exe' versions, which could be a legitimate use (monitor the path of the cab being extracted)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wusa.EXE Extracting Cab Files From Suspicious Paths",
    "id": 1285,
    "status": "test",
    "description": "Detects usage of the \"wusa.exe\" (Windows Update Standalone Installer) utility to extract cab using the \"/extract\" argument from suspicious paths",
    "references": [
      "https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html",
      "https://www.echotrail.io/insights/search/wusa.exe/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "modified": "2023/11/28",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_root": {
        "Image|endswith": "\\wusa.exe",
        "CommandLine|contains": "/extract:"
      },
      "selection_paths": {
        "CommandLine|contains": [
          ":\\PerfLogs\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\Appdata\\Local\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wusa.EXE Executed By Parent Process Located In Suspicious Location",
    "id": 1286,
    "status": "experimental",
    "description": "Detects execution of the \"wusa.exe\" (Windows Update Standalone Installer) utility by a parent process that is located in a suspicious location.\n",
    "references": [
      "https://www.fortinet.com/blog/threat-research/konni-campaign-distributed-via-malicious-document"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/11/26",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "process_creation",
      "product": "windows"
    },
    "detection": {
      "selection_img": {
        "Image|endswith": "\\wusa.exe"
      },
      "selection_paths_1": {
        "ParentImage|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\Appdata\\Local\\Temp\\",
          "\\Temporary Internet"
        ]
      },
      "selection_paths_2": [
        {
          "ParentImage|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "ParentImage|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "ParentImage|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        },
        {
          "ParentImage|contains|all": [
            ":\\Users\\",
            "\\Pictures\\"
          ]
        }
      ],
      "condition": "selection_img and 1 of selection_paths_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Process Hollowing Activity",
    "id": 1287,
    "status": "experimental",
    "description": "Detects when a memory process image does not match the disk image, indicative of process hollowing.",
    "references": [
      "https://twitter.com/SecurePeacock/status/1486054048390332423?s=20",
      "https://www.bleepingcomputer.com/news/microsoft/microsoft-sysmon-now-detects-malware-process-tampering-attempts/"
    ],
    "author": "Christopher Peacock '@securepeacock', SCYTHE '@scythe_io', Sittikorn S",
    "date": "2022/01/25",
    "modified": "2023/11/28",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055.012"
    ],
    "logsource": {
      "product": "windows",
      "category": "process_tampering"
    },
    "detection": {
      "selection": {
        "Type": "Image is replaced"
      },
      "filter_main_generic": {
        "Image|contains": [
          ":\\Program Files (x86)",
          ":\\Program Files\\",
          ":\\Windows\\System32\\wbem\\WMIADAP.exe",
          ":\\Windows\\SysWOW64\\wbem\\WMIADAP.exe"
        ]
      },
      "filter_optional_opera": {
        "Image|contains": "\\AppData\\Local\\Programs\\Opera\\",
        "Image|endswith": "\\opera.exe"
      },
      "filter_optional_edge": {
        "Image|endswith": "\\WindowsApps\\MicrosoftEdge.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Defense Evasion Via Raw Disk Access By Uncommon Tools",
    "id": 1288,
    "status": "test",
    "description": "Detects raw disk access using uncommon tools or tools that are located in suspicious locations (heavy filtering is required), which could indicate possible defense evasion attempts",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community",
    "date": "2019/10/22",
    "modified": "2023/11/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1006"
    ],
    "logsource": {
      "product": "windows",
      "category": "raw_access_thread"
    },
    "detection": {
      "filter_main_floppy": {
        "Device|contains": "floppy"
      },
      "filter_main_generic": {
        "Image|contains": [
          ":\\$WINDOWS.~BT\\",
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\CCM\\",
          ":\\Windows\\explorer.exe",
          ":\\Windows\\servicing\\",
          ":\\Windows\\SoftwareDistribution\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SystemApps\\",
          ":\\Windows\\uus\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "filter_main_system_images": {
        "Image": [
          "Registry",
          "System"
        ]
      },
      "filter_main_windefender": {
        "Image|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
        "Image|endswith": "\\MsMpEng.exe"
      },
      "filter_main_microsoft_appdata": {
        "Image|contains|all": [
          ":\\Users\\",
          "\\AppData\\",
          "\\Microsoft\\"
        ]
      },
      "filter_main_ssd_nvme": {
        "Image|contains": ":\\Windows\\Temp\\",
        "Image|endswith": [
          "\\Executables\\SSDUpdate.exe",
          "\\HostMetadata\\NVMEHostmetadata.exe"
        ]
      },
      "filter_main_null": {
        "Image": null
      },
      "filter_main_systemsettings": {
        "Image|endswith": ":\\Windows\\ImmersiveControlPanel\\SystemSettings.exe"
      },
      "filter_optional_github_desktop": {
        "Image|contains": "\\AppData\\Local\\GitHubDesktop\\app-",
        "Image|endswith": "\\resources\\app\\git\\mingw64\\bin\\git.exe"
      },
      "filter_optional_nextron": {
        "Image|contains": ":\\Windows\\Temp\\asgard2-agent\\",
        "Image|endswith": "\\thor.exe"
      },
      "filter_optional_Keybase": {
        "Image|contains": "\\AppData\\Local\\Keybase\\upd.exe"
      },
      "condition": "not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Sysmon Configuration Change",
    "id": 1289,
    "status": "test",
    "description": "Detects a Sysmon configuration change, which could be the result of a legitimate reconfiguration or someone trying manipulate the configuration",
    "references": [
      "https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon"
    ],
    "author": "frack113",
    "date": "2022/01/12",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "sysmon"
    },
    "detection": {
      "selection": {
        "EventID": 16
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative action"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sysmon Configuration Error",
    "id": 1290,
    "status": "test",
    "description": "Detects when an adversary is trying to hide it's action from Sysmon logging based on error messages",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://talesfrominfosec.blogspot.com/2017/12/killing-sysmon-silently.html"
    ],
    "author": "frack113",
    "date": "2021/06/04",
    "modified": "2022/07/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564"
    ],
    "logsource": {
      "product": "windows",
      "category": "sysmon_error"
    },
    "detection": {
      "selection_error": {
        "Description|contains": [
          "Failed to open service configuration with error",
          "Failed to connect to the driver to update configuration"
        ]
      },
      "filter_generic_english": {
        "Description|contains|all": [
          "Failed to open service configuration with error",
          "Last error: The media is write protected."
        ]
      },
      "filter_by_errorcode": {
        "Description|contains": [
          "Failed to open service configuration with error 19",
          "Failed to open service configuration with error 93"
        ]
      },
      "condition": "selection_error and not 1 of filter*"
    },
    "falsepositives": [
      "Legitimate administrative action"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon Configuration Modification",
    "id": 1291,
    "status": "test",
    "description": "Detects when an attacker tries to hide from Sysmon by disabling or stopping it",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://talesfrominfosec.blogspot.com/2017/12/killing-sysmon-silently.html"
    ],
    "author": "frack113",
    "date": "2021/06/04",
    "modified": "2022/08/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564"
    ],
    "logsource": {
      "product": "windows",
      "category": "sysmon_status"
    },
    "detection": {
      "selection_stop": {
        "State": "Stopped"
      },
      "selection_conf": [
        "Sysmon config state changed"
      ],
      "filter": {
        "State": "Started"
      },
      "condition": "1 of selection_* and not filter"
    },
    "falsepositives": [
      "Legitimate administrative action"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon Blocked Executable",
    "id": 1292,
    "status": "experimental",
    "description": "Triggers on any Sysmon \"FileBlockExecutable\" event, which indicates a violation of the configured block policy",
    "references": [
      "https://medium.com/@olafhartong/sysmon-14-0-fileblockexecutable-13d7ba3dff3e"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/16",
    "modified": "2023/09/16",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "sysmon"
    },
    "detection": {
      "selection": {
        "EventID": 27
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon Blocked File Shredding",
    "id": 1293,
    "status": "experimental",
    "description": "Triggers on any Sysmon \"FileBlockShredding\" event, which indicates a violation of the configured shredding policy.",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon"
    ],
    "author": "frack113",
    "date": "2023/07/20",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "sysmon"
    },
    "detection": {
      "selection": {
        "EventID": 28
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon File Executable Creation Detected",
    "id": 1294,
    "status": "experimental",
    "description": "Triggers on any Sysmon \"FileExecutableDetected\" event, which triggers every time a PE that is monitored by the config is created.",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon",
      "https://medium.com/@olafhartong/sysmon-15-0-file-executable-detected-40fd64349f36"
    ],
    "author": "frack113",
    "date": "2023/07/20",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "sysmon"
    },
    "detection": {
      "selection": {
        "EventID": 29
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WMI Event Subscription",
    "id": 1295,
    "status": "test",
    "description": "Detects creation of WMI event subscription persistence method",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon#event-id-19-wmievent-wmieventfilter-activity-detected",
      "https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon#event-id-20-wmievent-wmieventconsumer-activity-detected",
      "https://learn.microsoft.com/en-us/sysinternals/downloads/sysmon#event-id-21-wmievent-wmieventconsumertofilter-activity-detected"
    ],
    "author": "Tom Ueltschi (@c_APT_ure)",
    "date": "2019/01/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.t1546.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "wmi_event"
    },
    "detection": {
      "selection": {
        "EventID": [
          19,
          20,
          21
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Exclude legitimate (vetted) use of WMI event subscription in your network"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Encoded Scripts in a WMI Consumer",
    "id": 1296,
    "status": "test",
    "description": "Detects suspicious encoded payloads in WMI Event Consumers",
    "references": [
      "https://github.com/RiccardoAncarani/LiquidSnake"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/09/01",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.persistence",
      "attack.t1546.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "wmi_event"
    },
    "detection": {
      "selection_destination": {
        "Destination|base64offset|contains": [
          "WriteProcessMemory",
          "This program cannot be run in DOS mode",
          "This program must be run under Win32"
        ]
      },
      "condition": "selection_destination"
    },
    "fields": [
      "User",
      "Operation"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Scripting in a WMI Consumer",
    "id": 1297,
    "status": "experimental",
    "description": "Detects suspicious commands that are related to scripting/powershell in WMI Event Consumers",
    "references": [
      "https://in.security/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/",
      "https://github.com/Neo23x0/signature-base/blob/615bf1f6bac3c1bdc417025c40c073e6c2771a76/yara/gen_susp_lnk_files.yar#L19",
      "https://github.com/RiccardoAncarani/LiquidSnake"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro",
    "date": "2019/04/15",
    "modified": "2023/09/09",
    "tags": [
      "attack.execution",
      "attack.t1059.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "wmi_event"
    },
    "detection": {
      "selection_destination": [
        {
          "Destination|contains|all": [
            "new-object",
            "net.webclient",
            ".downloadstring"
          ]
        },
        {
          "Destination|contains|all": [
            "new-object",
            "net.webclient",
            ".downloadfile"
          ]
        },
        {
          "Destination|contains": [
            " iex(",
            " -nop ",
            " -noprofile ",
            " -decode ",
            " -enc ",
            "WScript.Shell",
            "System.Security.Cryptography.FromBase64Transform"
          ]
        }
      ],
      "condition": "selection_destination"
    },
    "fields": [
      "User",
      "Operation"
    ],
    "falsepositives": [
      "Legitimate administrative scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Was Not Allowed To Run",
    "id": 1298,
    "status": "test",
    "description": "Detect run not allowed files. Applocker is a very useful tool, especially on servers where unprivileged users have access. For example terminal servers. You need configure applocker and log collect to receive these events.",
    "references": [
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/what-is-applocker",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/applocker/using-event-viewer-with-applocker",
      "https://nxlog.co/documentation/nxlog-user-guide/applocker.html"
    ],
    "author": "Pushkarev Dmitry",
    "date": "2020/06/28",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.t1204.002",
      "attack.t1059.001",
      "attack.t1059.003",
      "attack.t1059.005",
      "attack.t1059.006",
      "attack.t1059.007"
    ],
    "logsource": {
      "product": "windows",
      "service": "applocker"
    },
    "detection": {
      "selection": {
        "EventID": [
          8004,
          8007,
          8022,
          8025
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "PolicyName",
      "RuleId",
      "RuleName",
      "TargetUser",
      "TargetProcessId",
      "FilePath",
      "FileHash",
      "Fqbn"
    ],
    "falsepositives": [
      "Need tuning applocker or add exceptions in SIEM"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Sysinternals Tools AppX Versions Execution",
    "id": 1299,
    "status": "experimental",
    "description": "Detects execution of Sysinternals tools via an AppX package. Attackers could install the Sysinternals Suite to get access to tools such as psexec and procdump to avoid detection based on System paths",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "modified": "2023/09/12",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "service": "appmodel-runtime"
    },
    "detection": {
      "selection": {
        "EventID": 201,
        "ImageName": [
          "procdump.exe",
          "psloglist.exe",
          "psexec.exe",
          "livekd.exe",
          "ADExplorer.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the applications from the Windows Store"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Deployment AppX Package Was Blocked By AppLocker",
    "id": 1300,
    "status": "test",
    "description": "Detects an appx package deployment that was blocked by AppLocker policy",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting",
      "https://github.com/nasbench/EVTX-ETW-Resources/blob/7a806a148b3d9d381193d4a80356016e6e8b1ee8/ETWEventsList/CSV/Windows11/22H2/W11_22H2_Pro_20220920_22621.382/Providers/Microsoft-Windows-AppXDeployment-Server.csv"
    ],
    "author": "frack113",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": 412
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Malicious AppX Package Installation Attempts",
    "id": 1301,
    "status": "test",
    "description": "Detects potential installation or installation attempts of known malicious appx packages",
    "references": [
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/",
      "https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/",
      "https://forensicitguy.github.io/analyzing-magnitude-magniber-appx/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "modified": "2023/01/12",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": [
          400,
          401
        ],
        "PackageFullName|contains": "3669e262-ec02-4e9d-bcb4-3d008b4afac9"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare occasions where a malicious package uses the exact same name and version as a legtimate application"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Deployment Of The AppX Package Was Blocked By The Policy",
    "id": 1302,
    "status": "test",
    "description": "Detects an appx package deployment that was blocked by the local computer policy",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting",
      "https://github.com/nasbench/EVTX-ETW-Resources/blob/7a806a148b3d9d381193d4a80356016e6e8b1ee8/ETWEventsList/CSV/Windows11/22H2/W11_22H2_Pro_20220920_22621.382/Providers/Microsoft-Windows-AppXDeployment-Server.csv"
    ],
    "author": "frack113",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": [
          441,
          442,
          453,
          454
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious AppX Package Installation Attempt",
    "id": 1303,
    "status": "test",
    "description": "Detects an appx package installation with the error code \"0x80073cff\" which indicates that the package didn't meet the signing requirements and could be suspicious",
    "references": [
      "Internal Research",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/",
      "https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting",
      "https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": 401,
        "ErrorCode": "0x80073cff"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate AppX packages not signed by MS used part of an enterprise"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Remote AppX Package Locations",
    "id": 1304,
    "status": "experimental",
    "description": "Detects an appx package added the pipeline of the \"to be processed\" packages which is downloaded from a suspicious domain",
    "references": [
      "Internal Research",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/",
      "https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting",
      "https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": 854,
        "Path|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious AppX Package Locations",
    "id": 1305,
    "status": "test",
    "description": "Detects an appx package added the pipeline of the \"to be processed\" packages which is located in suspicious locations",
    "references": [
      "Internal Research",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/",
      "https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting",
      "https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": 854,
        "Path|contains": [
          "C:\\Users\\Public\\",
          "/users/public/",
          "C:\\PerfLogs\\",
          "C:/perflogs/",
          "\\Desktop\\",
          "/desktop/",
          "\\Downloads\\",
          "/Downloads/",
          "C:\\Windows\\Temp\\",
          "C:/Windows/Temp/",
          "\\AppdData\\Local\\Temp\\",
          "/AppdData/Local/Temp/"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon AppX Package Locations",
    "id": 1306,
    "status": "test",
    "description": "Detects an appx package added the pipeline of the \"to be processed\" packages which is located in uncommon locations",
    "references": [
      "Internal Research",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/",
      "https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting",
      "https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxdeployment-server"
    },
    "detection": {
      "selection": {
        "EventID": 854
      },
      "filter_generic": {
        "Path|contains": [
          "C:\\Program Files\\WindowsApps\\",
          "C:\\Program Files (x86)\\",
          "C:\\Windows\\SystemApps\\",
          "C:\\Windows\\PrintDialog\\",
          "C:\\Windows\\ImmersiveControlPanel\\",
          "x-windowsupdate://",
          "file:///C:/Program%20Files"
        ]
      },
      "filter_specific": {
        "Path|contains": [
          "https://statics.teams.cdn.office.net/",
          "microsoft.com"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Digital Signature Of AppX Package",
    "id": 1307,
    "status": "test",
    "description": "Detects execution of AppX packages with known suspicious or malicious signature",
    "references": [
      "Internal Research",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "service": "appxpackaging-om"
    },
    "detection": {
      "selection": {
        "EventID": 157,
        "subjectName": "CN=Foresee Consulting Inc., O=Foresee Consulting Inc., L=North York, S=Ontario, C=CA, SERIALNUMBER=1004913-1, OID.1.3.6.1.4.1.311.60.2.1.3=CA, OID.2.5.4.15=Private Organization"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New BITS Job Created Via Bitsadmin",
    "id": 1308,
    "status": "test",
    "description": "Detects the creation of a new bits job by Bitsadmin",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1197/T1197.md"
    ],
    "author": "frack113",
    "date": "2022/03/01",
    "modified": "2023/03/27",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 3,
        "processPath|endswith": "\\bitsadmin.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Many legitimate applications or scripts could leverage \"bitsadmin\". This event is best correlated with EID 16403 via the JobID field"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "New BITS Job Created Via PowerShell",
    "id": 1309,
    "status": "test",
    "description": "Detects the creation of a new bits job by PowerShell",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1197/T1197.md"
    ],
    "author": "frack113",
    "date": "2022/03/01",
    "modified": "2023/03/27",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 3,
        "processPath|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator PowerShell scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "BITS Transfer Job Downloading File Potential Suspicious Extension",
    "id": 1310,
    "status": "test",
    "description": "Detects new BITS transfer job saving local files with potential suspicious extensions",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1197/T1197.md"
    ],
    "author": "frack113",
    "date": "2022/03/01",
    "modified": "2023/03/27",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 16403,
        "LocalName|endswith": [
          ".bat",
          ".dll",
          ".exe",
          ".hta",
          ".ps1",
          ".psd1",
          ".sh",
          ".vbe",
          ".vbs"
        ]
      },
      "filter_optional_generic": {
        "LocalName|contains": "\\AppData\\",
        "RemoteName|contains": ".com"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "While the file extensions in question can be suspicious at times. It's best to add filters according to your environment to avoid large amount false positives"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "BITS Transfer Job Download From File Sharing Domains",
    "id": 1311,
    "status": "experimental",
    "description": "Detects BITS transfer job downloading files from a file sharing domain.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1197/T1197.md",
      "https://twitter.com/malmoeb/status/1535142803075960832",
      "https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/ransomware-hive-conti-avoslocker",
      "https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2024/02/09",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 16403,
        "RemoteName|contains": [
          ".githubusercontent.com",
          "anonfiles.com",
          "cdn.discordapp.com",
          "cdn.discordapp.com/attachments/",
          "ddns.net",
          "dl.dropboxusercontent.com",
          "ghostbin.co",
          "glitch.me",
          "gofile.io",
          "hastebin.com",
          "mediafire.com",
          "mega.nz",
          "onrender.com",
          "paste.ee",
          "pastebin.com",
          "pastebin.pl",
          "pastetext.net",
          "privatlab.com",
          "privatlab.net",
          "send.exploit.in",
          "sendspace.com",
          "storage.googleapis.com",
          "storjshare.io",
          "supabase.co",
          "temp.sh",
          "transfer.sh",
          "ufile.io"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "BITS Transfer Job Download From Direct IP",
    "id": 1312,
    "related": [
      {
        "id": "99c840f2-2012-46fd-9141-c761987550ef",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a BITS transfer job downloading file(s) from a direct IP address.",
    "references": [
      "https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin",
      "https://isc.sans.edu/diary/22264",
      "https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/",
      "https://blog.talosintelligence.com/breaking-the-silence-recent-truebot-activity/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "modified": "2023/03/27",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 16403,
        "RemoteName|contains": [
          "http://1",
          "http://2",
          "http://3",
          "http://4",
          "http://5",
          "http://6",
          "http://7",
          "http://8",
          "http://9",
          "https://1",
          "https://2",
          "https://3",
          "https://4",
          "https://5",
          "https://6",
          "https://7",
          "https://8",
          "https://9"
        ]
      },
      "filter_optional_local_networks": {
        "RemoteName|contains": [
          "://10.",
          "://192.168.",
          "://172.16.",
          "://172.17.",
          "://172.18.",
          "://172.19.",
          "://172.20.",
          "://172.21.",
          "://172.22.",
          "://172.23.",
          "://172.24.",
          "://172.25.",
          "://172.26.",
          "://172.27.",
          "://172.28.",
          "://172.29.",
          "://172.30.",
          "://172.31.",
          "://127.",
          "://169.254."
        ]
      },
      "filter_optional_seven_zip": {
        "RemoteName|contains": [
          "https://7-",
          "http://7-"
        ]
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "BITS Transfer Job With Uncommon Or Suspicious Remote TLD",
    "id": 1313,
    "status": "test",
    "description": "Detects a suspicious download using the BITS client from a FQDN that is unusual. Adversaries may abuse BITS jobs to persistently execute or clean up after malicious payloads.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1197/T1197.md",
      "https://twitter.com/malmoeb/status/1535142803075960832"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/10",
    "modified": "2023/03/27",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 16403
      },
      "filter_main_generic": {
        "RemoteName|contains": [
          ".azureedge.net/",
          ".com/",
          ".sfx.ms/",
          "download.mozilla.org/"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "This rule doesn't exclude other known TLDs such as \".org\" or \".net\". It's recommended to apply additional filters for software and scripts that leverage the BITS service"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "BITS Transfer Job Download To Potential Suspicious Folder",
    "id": 1314,
    "status": "test",
    "description": "Detects new BITS transfer job where the LocalName/Saved file is stored in a potentially suspicious location",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1197/T1197.md"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/28",
    "modified": "2023/03/27",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1197"
    ],
    "logsource": {
      "product": "windows",
      "service": "bits-client"
    },
    "detection": {
      "selection": {
        "EventID": 16403,
        "LocalName|contains": [
          "\\Desktop\\",
          "C:\\Users\\Public\\",
          "C:\\PerfLogs\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Certificate Private Key Acquired",
    "id": 1315,
    "status": "experimental",
    "description": "Detects when an application acquires a certificate private key",
    "references": [
      "https://www.splunk.com/en_us/blog/security/breaking-the-chain-defending-against-certificate-services-abuse.html"
    ],
    "author": "Zach Mathis",
    "date": "2023/05/13",
    "tags": [
      "attack.credential_access",
      "attack.t1649"
    ],
    "logsource": {
      "product": "windows",
      "service": "capi2",
      "definition": "Requirements: The CAPI2 Operational log needs to be enabled"
    },
    "detection": {
      "selection": {
        "EventID": 70
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate application requesting certificate exports will trigger this. Apply additional filters as needed"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Certificate Exported From Local Certificate Store",
    "id": 1316,
    "status": "experimental",
    "description": "Detects when an application exports a certificate (and potentially the private key as well) from the local Windows certificate store.",
    "references": [
      "https://www.splunk.com/en_us/blog/security/breaking-the-chain-defending-against-certificate-services-abuse.html"
    ],
    "author": "Zach Mathis",
    "date": "2023/05/13",
    "tags": [
      "attack.credential_access",
      "attack.t1649"
    ],
    "logsource": {
      "product": "windows",
      "service": "certificateservicesclient-lifecycle-system"
    },
    "detection": {
      "selection": {
        "EventID": 1007
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate application requesting certificate exports will trigger this. Apply additional filters as needed"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Unmet Signing Level Requirements By File Under Validation",
    "id": 1317,
    "status": "experimental",
    "description": "Detects attempted file load events that did not meet the signing level requirements. It often means the file's signature is revoked or a signature with the Lifetime Signing EKU has expired.\nThis event is best correlated with EID 3089 to determine the error of the validation.\n",
    "references": [
      "https://twitter.com/SBousseaden/status/1483810148602814466",
      "https://github.com/MicrosoftDocs/windows-itpro-docs/blob/40fe118976734578f83e5e839b9c63ae7a4af82d/windows/security/threat-protection/windows-defender-application-control/event-id-explanations.md#windows-codeintegrity-operational-log",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/20",
    "modified": "2023/11/15",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": [
          3033,
          3034
        ]
      },
      "filter_optional_dtrace": {
        "FileNameBuffer|endswith": "\\Program Files\\DTrace\\dtrace.dll",
        "ProcessNameBuffer|endswith": "\\Windows\\System32\\svchost.exe",
        "RequestedPolicy": 12
      },
      "filter_optional_av_generic": {
        "FileNameBuffer|contains": "\\Windows\\System32\\DriverStore\\FileRepository\\",
        "FileNameBuffer|endswith": "\\igd10iumd64.dll",
        "RequestedPolicy": 7
      },
      "filter_optional_electron_based_app": {
        "FileNameBuffer|endswith": "\\Windows\\System32\\nvspcap64.dll",
        "ProcessNameBuffer|endswith": [
          "\\AppData\\Local\\Keybase\\Gui\\Keybase.exe",
          "\\Microsoft\\Teams\\stage\\Teams.exe"
        ],
        "RequestedPolicy": 8
      },
      "filter_optional_bonjour": {
        "FileNameBuffer|endswith": "\\Program Files\\Bonjour\\mdnsNSP.dll",
        "ProcessNameBuffer|endswith": [
          "\\Windows\\System32\\svchost.exe",
          "\\Windows\\System32\\SIHClient.exe"
        ],
        "RequestedPolicy": [
          8,
          12
        ]
      },
      "filter_optional_msoffice": {
        "FileNameBuffer|contains": "\\Microsoft Office\\root\\vfs\\ProgramFilesCommonX64\\Microsoft Shared\\OFFICE",
        "FileNameBuffer|endswith": "\\MSOXMLMF.DLL",
        "RequestedPolicy": 7
      },
      "filter_optional_slack": {
        "FileNameBuffer|endswith": "\\Windows\\System32\\nvspcap64.dll",
        "ProcessNameBuffer|contains": "\\AppData\\Local\\slack\\app-",
        "ProcessNameBuffer|endswith": "\\slack.exe",
        "RequestedPolicy": 8
      },
      "filter_optional_firefox": {
        "FileNameBuffer|endswith": [
          "\\Mozilla Firefox\\mozavcodec.dll",
          "\\Mozilla Firefox\\mozavutil.dll"
        ],
        "ProcessNameBuffer|endswith": "\\Mozilla Firefox\\firefox.exe",
        "RequestedPolicy": 8
      },
      "filter_optional_avast": {
        "FileNameBuffer|endswith": [
          "\\Program Files\\Avast Software\\Avast\\aswAMSI.dll",
          "\\Program Files (x86)\\Avast Software\\Avast\\aswAMSI.dll"
        ],
        "RequestedPolicy": [
          8,
          12
        ]
      },
      "filter_main_gac": {
        "FileNameBuffer|contains": "\\Windows\\assembly\\GAC\\",
        "ProcessNameBuffer|endswith": "\\mscorsvw.exe",
        "ProcessNameBuffer|contains": "\\Windows\\Microsoft.NET\\",
        "RequestedPolicy": 8
      },
      "filter_optional_google_drive": {
        "FileNameBuffer|contains": "\\Program Files\\Google\\Drive File Stream\\",
        "FileNameBuffer|endswith": "\\crashpad_handler.exe",
        "ProcessNameBuffer|endswith": "\\Windows\\ImmersiveControlPanel\\SystemSettings.exe",
        "RequestedPolicy": 8
      },
      "filter_optional_trend_micro": {
        "FileNameBuffer|endswith": "\\Trend Micro\\Client Server Security Agent\\perficrcperfmonmgr.dll",
        "RequestedPolicy": 8
      },
      "filter_optional_mdns_responder": {
        "FileNameBuffer|endswith": "\\Program Files\\National Instruments\\Shared\\mDNS Responder\\nimdnsNSP.dll "
      },
      "filter_optional_mcafee": {
        "FileNameBuffer|endswith": [
          "\\Program Files\\McAfee\\Endpoint Security\\Threat Prevention\\MfeAmsiProvider.dll",
          "\\Program Files\\McAfee\\MfeAV\\AMSIExt.dll"
        ]
      },
      "filter_optional_eset": {
        "FileNameBuffer|endswith": "\\Program Files\\ESET\\ESET Security\\eamsi.dll"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Antivirus and other third party products are known to trigger this rule quite a lot. Initial filters and tuning is required before using this rule."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Disallowed File For Protected Processes Has Been Blocked",
    "id": 1318,
    "status": "experimental",
    "description": "Detects block events for files that are disallowed by code integrity for protected processes",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": 3104
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Blocked Image/Driver Load For Policy Violation",
    "id": 1319,
    "status": "experimental",
    "description": "Detects blocked load events that did not meet the authenticode signing level requirements or violated the code integrity policy.",
    "references": [
      "https://twitter.com/wdormann/status/1590434950335320065",
      "https://github.com/MicrosoftDocs/windows-itpro-docs/blob/40fe118976734578f83e5e839b9c63ae7a4af82d/windows/security/threat-protection/windows-defender-application-control/event-id-explanations.md#windows-codeintegrity-operational-log",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/10",
    "modified": "2023/06/07",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": 3077
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Blocked Driver Load With Revoked Certificate",
    "id": 1320,
    "status": "experimental",
    "description": "Detects blocked load attempts of revoked drivers",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": 3023
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Revoked Kernel Driver Loaded",
    "id": 1321,
    "status": "experimental",
    "description": "Detects the load of a revoked kernel driver",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": [
          3021,
          3022
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Blocked Image Load With Revoked Certificate",
    "id": 1322,
    "status": "experimental",
    "description": "Detects blocked image load events with revoked certificates by code integrity.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": 3036
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Revoked Image Loaded",
    "id": 1323,
    "status": "experimental",
    "description": "Detects image load events with revoked certificates by code integrity.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": [
          3032,
          3035
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Unsigned Kernel Module Loaded",
    "id": 1324,
    "status": "experimental",
    "description": "Detects the presence of a loaded unsigned kernel module on the system.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": 3001
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Unsigned Image Loaded",
    "id": 1325,
    "status": "experimental",
    "description": "Detects loaded unsigned image on the system",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": 3037
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CodeIntegrity - Unmet WHQL Requirements For Loaded Kernel Module",
    "id": 1326,
    "status": "experimental",
    "description": "Detects loaded kernel modules that did not meet the WHQL signing requirements.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-id-explanations",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/event-tag-explanations",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/06",
    "modified": "2023/06/14",
    "tags": [
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "codeintegrity-operational"
    },
    "detection": {
      "selection": {
        "EventID": [
          3082,
          3083
        ]
      },
      "filter_optional_vmware": {
        "FileNameBuffer": [
          "system32\\drivers\\vsock.sys",
          "System32\\drivers\\vmci.sys"
        ]
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DNS Query for Anonfiles.com Domain - DNS Client",
    "id": 1327,
    "related": [
      {
        "id": "065cceea-77ec-4030-9052-fc0affea7110",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects DNS queries for anonfiles.com, which is an anonymous file upload platform often used for malicious purposes",
    "references": [
      "https://www.trendmicro.com/vinfo/us/security/news/ransomware-spotlight/ransomware-spotlight-blackbyte"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-client",
      "definition": "Requirements: Microsoft-Windows-DNS Client Events/Operational Event Log must be enabled/collected in order to receive the events."
    },
    "detection": {
      "selection": {
        "EventID": 3008,
        "QueryName|contains": ".anonfiles.com"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate access to anonfiles.com"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DNS Query To MEGA Hosting Website - DNS Client",
    "id": 1328,
    "related": [
      {
        "id": "613c03ba-0779-4a53-8a1f-47f914a4ded3",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects DNS queries for subdomains related to MEGA sharing website",
    "references": [
      "https://research.nccgroup.com/2021/05/27/detecting-rclone-an-effective-tool-for-exfiltration/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-client",
      "definition": "Requirements: Microsoft-Windows-DNS Client Events/Operational Event Log must be enabled/collected in order to receive the events."
    },
    "detection": {
      "selection": {
        "EventID": 3008,
        "QueryName|contains": "userstorage.mega.co.nz"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate DNS queries and usage of Mega"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Query Tor Onion Address - DNS Client",
    "id": 1329,
    "related": [
      {
        "id": "b55ca2a3-7cff-4dda-8bdd-c7bfa63bf544",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects DNS resolution of an .onion address related to Tor routing networks",
    "references": [
      "https://www.logpoint.com/en/blog/detecting-tor-use-with-logpoint/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/02/20",
    "tags": [
      "attack.command_and_control",
      "attack.t1090.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-client",
      "definition": "Requirements: Microsoft-Windows-DNS Client Events/Operational Event Log must be enabled/collected in order to receive the events."
    },
    "detection": {
      "selection": {
        "EventID": 3008,
        "QueryName|contains": ".onion"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DNS Query To Ufile.io - DNS Client",
    "id": 1330,
    "related": [
      {
        "id": "1cbbeaaf-3c8c-4e4c-9d72-49485b6a176b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects DNS queries to \"ufile.io\", which was seen abused by malware and threat actors as a method for data exfiltration",
    "references": [
      "https://thedfirreport.com/2021/12/13/diavol-ransomware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "modified": "2023/09/18",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-client",
      "definition": "Requirements: Microsoft-Windows-DNS Client Events/Operational Event Log must be enabled/collected in order to receive the events."
    },
    "detection": {
      "selection": {
        "EventID": 3008,
        "QueryName|contains": "ufile.io"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "DNS queries for \"ufile\" are not malicious by nature necessarily. Investigate the source to determine the necessary actions to take"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Cobalt Strike DNS Beaconing - DNS Client",
    "id": 1331,
    "related": [
      {
        "id": "f356a9c4-effd-4608-bbf8-408afd5cd006",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a program that invoked suspicious DNS queries known from Cobalt Strike beacons",
    "references": [
      "https://www.icebrg.io/blog/footprints-of-fin7-tracking-actor-patterns",
      "https://www.sekoia.io/en/hunting-and-detecting-cobalt-strike/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-client",
      "definition": "Requirements: Microsoft-Windows-DNS Client Events/Operational Event Log must be enabled/collected in order to receive the events."
    },
    "detection": {
      "selection_eid": {
        "EventID": 3008
      },
      "selection_query_1": {
        "QueryName|startswith": [
          "aaa.stage.",
          "post.1"
        ]
      },
      "selection_query_2": {
        "QueryName|contains": ".stage.123456."
      },
      "condition": "selection_eid and 1 of selection_query_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Failed DNS Zone Transfer",
    "id": 1332,
    "status": "experimental",
    "description": "Detects when a DNS zone transfer failed.",
    "references": [
      "https://kb.eventtracker.com/evtpass/evtpages/EventId_6004_Microsoft-Windows-DNS-Server-Service_65410.asp"
    ],
    "author": "Zach Mathis",
    "date": "2023/05/24",
    "tags": [
      "attack.reconnaissance",
      "attack.t1590.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-server"
    },
    "detection": {
      "selection": {
        "EventID": 6004
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS Server Error Failed Loading the ServerLevelPluginDLL",
    "id": 1333,
    "related": [
      {
        "id": "e61e8a88-59a9-451c-874e-70fcc9740d67",
        "type": "derived"
      },
      {
        "id": "f63b56ee-3f79-4b8a-97fb-5c48007e8573",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded",
    "references": [
      "https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83",
      "https://technet.microsoft.com/en-us/library/cc735829(v=ws.10).aspx",
      "https://twitter.com/gentilkiwi/status/861641945944391680"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/05/08",
    "modified": "2023/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "dns-server"
    },
    "detection": {
      "selection": {
        "EventID": [
          150,
          770,
          771
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "USB Device Plugged",
    "id": 1334,
    "status": "test",
    "description": "Detects plugged/unplugged USB devices",
    "references": [
      "https://df-stream.com/2014/01/the-windows-7-event-log-and-usb-device/",
      "https://www.techrepublic.com/article/how-to-track-down-usb-flash-drive-usage-in-windows-10s-event-viewer/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/11/09",
    "modified": "2021/11/30",
    "tags": [
      "attack.initial_access",
      "attack.t1200"
    ],
    "logsource": {
      "product": "windows",
      "service": "driver-framework",
      "definition": "Requires enabling and collection of the Microsoft-Windows-DriverFrameworks-UserMode/Operational eventlog"
    },
    "detection": {
      "selection": {
        "EventID": [
          2003,
          2100,
          2102
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Uncommon New Firewall Rule Added In Windows Firewall Exception List",
    "id": 1335,
    "status": "experimental",
    "description": "Detects when a rule has been added to the Windows Firewall exception list",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)"
    ],
    "author": "frack113",
    "date": "2022/02/19",
    "modified": "2023/09/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": [
          2004,
          2071
        ]
      },
      "filter_main_block": {
        "Action": 2
      },
      "filter_main_generic": {
        "ApplicationPath|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\"
        ]
      },
      "filter_optional_msmpeng": {
        "ModifyingApplication|contains|all": [
          ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
          "\\MsMpEng.exe"
        ]
      },
      "filter_main_covered_paths": {
        "ApplicationPath|contains": [
          ":\\PerfLogs\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Firewall Rule Added In Windows Firewall Exception List For Potential Suspicious Application",
    "id": 1336,
    "related": [
      {
        "id": "cde0a575-7d3d-4a49-9817-b8004a7bf105",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the addition of a new rule to the Windows Firewall exception list for an application located in a potentially suspicious location.",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)",
      "https://app.any.run/tasks/7123e948-c91e-49e0-a813-00e8d72ab393/#"
    ],
    "author": "frack113",
    "date": "2023/02/26",
    "modified": "2024/01/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": [
          2004,
          2071
        ],
        "ApplicationPath|contains": [
          ":\\PerfLogs\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "filter_main_block": {
        "Action": 2
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "All Rules Have Been Deleted From The Windows Firewall Configuration",
    "id": 1337,
    "status": "experimental",
    "description": "Detects when a all the rules have been deleted from the Windows Defender Firewall configuration",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/17",
    "modified": "2024/01/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": [
          2033,
          2059
        ]
      },
      "filter_main_svchost": {
        "ModifyingApplication|endswith": ":\\Windows\\System32\\svchost.exe"
      },
      "filter_optional_msmpeng": {
        "ModifyingApplication|contains|all": [
          ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
          "\\MsMpEng.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "A Rule Has Been Deleted From The Windows Firewall Exception List",
    "id": 1338,
    "status": "experimental",
    "description": "Detects when a single rules or all of the rules have been deleted from the Windows Defender Firewall",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)"
    ],
    "author": "frack113",
    "date": "2022/02/19",
    "modified": "2023/06/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": [
          2006,
          2052
        ]
      },
      "filter_main_generic": {
        "ModifyingApplication|startswith": [
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "filter_main_svchost": {
        "ModifyingApplication": "C:\\Windows\\System32\\svchost.exe"
      },
      "filter_optional_msmpeng": {
        "ModifyingApplication|startswith": "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
        "ModifyingApplication|endswith": "\\MsMpEng.exe"
      },
      "filter_main_null": {
        "ModifyingApplication": null
      },
      "filter_main_empty": {
        "ModifyingApplication": ""
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "The Windows Defender Firewall Service Failed To Load Group Policy",
    "id": 1339,
    "status": "test",
    "description": "Detects activity when The Windows Defender Firewall service failed to load Group Policy",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)"
    ],
    "author": "frack113",
    "date": "2022/02/19",
    "modified": "2023/01/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": 2009
      },
      "condition": "selection"
    },
    "level": "low",
    "enable": true
  },
  {
    "title": "Windows Defender Firewall Has Been Reset To Its Default Configuration",
    "id": 1340,
    "status": "experimental",
    "description": "Detects activity when Windows Defender Firewall has been reset to its default configuration",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)"
    ],
    "author": "frack113",
    "date": "2022/02/19",
    "modified": "2023/04/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": [
          2032,
          2060
        ]
      },
      "condition": "selection"
    },
    "level": "low",
    "enable": true
  },
  {
    "title": "Windows Firewall Settings Have Been Changed",
    "id": 1341,
    "status": "experimental",
    "description": "Detects activity when the settings of the Windows firewall have been changed",
    "references": [
      "https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd364427(v=ws.10)"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/02/19",
    "modified": "2023/04/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "firewall-as"
    },
    "detection": {
      "selection": {
        "EventID": [
          2002,
          2083,
          2003,
          2082,
          2008
        ]
      },
      "condition": "selection"
    },
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Active Directory Reconnaissance/Enumeration Via LDAP",
    "id": 1342,
    "status": "test",
    "description": "Detects potential Active Directory enumeration via LDAP",
    "references": [
      "https://techcommunity.microsoft.com/t5/microsoft-defender-for-endpoint/hunting-for-reconnaissance-activities-using-ldap-search-filters/ba-p/824726",
      "https://github.com/PowerShellMafia/PowerSploit/blob/d943001a7defb5e0d1657085a77a0e78609be58f/Recon/PowerView.ps1",
      "https://github.com/BloodHoundAD/SharpHound3/blob/7d96b991b1887ff50349ce59c80980bc0d95c86a/SharpHound3/LdapBuilder.cs",
      "https://medium.com/falconforce/falconfriday-detecting-active-directory-data-collection-0xff21-c22d1a57494c",
      "https://github.com/fox-it/BloodHound.py/blob/d65eb614831cd30f26028ccb072f5e77ca287e0b/bloodhound/ad/domain.py#L427"
    ],
    "author": "Adeem Mawani",
    "date": "2021/06/22",
    "modified": "2023/11/03",
    "tags": [
      "attack.discovery",
      "attack.t1069.002",
      "attack.t1087.002",
      "attack.t1482"
    ],
    "logsource": {
      "product": "windows",
      "service": "ldap",
      "definition": "Requirements: Microsoft-Windows-LDAP-Client/Debug ETW logging"
    },
    "detection": {
      "generic_search": {
        "EventID": 30,
        "SearchFilter|contains": [
          "(groupType:1.2.840.113556.1.4.803:=2147483648)",
          "(groupType:1.2.840.113556.1.4.803:=2147483656)",
          "(groupType:1.2.840.113556.1.4.803:=2147483652)",
          "(groupType:1.2.840.113556.1.4.803:=2147483650)",
          "(sAMAccountType=805306369)",
          "(sAMAccountType=805306368)",
          "(sAMAccountType=536870913)",
          "(sAMAccountType=536870912)",
          "(sAMAccountType=268435457)",
          "(sAMAccountType=268435456)",
          "(objectCategory=groupPolicyContainer)",
          "(objectCategory=organizationalUnit)",
          "(objectCategory=Computer)",
          "(objectCategory=nTDSDSA)",
          "(objectCategory=server)",
          "(objectCategory=domain)",
          "(objectCategory=person)",
          "(objectCategory=group)",
          "(objectCategory=user)",
          "(objectClass=trustedDomain)",
          "(objectClass=computer)",
          "(objectClass=server)",
          "(objectClass=group)",
          "(objectClass=user)",
          "(primaryGroupID=521)",
          "(primaryGroupID=516)",
          "(primaryGroupID=515)",
          "(primaryGroupID=512)",
          "Domain Admins",
          "objectGUID=\\*",
          "(schemaIDGUID=\\*)"
        ]
      },
      "suspicious_flag": {
        "EventID": 30,
        "SearchFilter|contains": [
          "(userAccountControl:1.2.840.113556.1.4.803:=4194304)",
          "(userAccountControl:1.2.840.113556.1.4.803:=2097152)",
          "!(userAccountControl:1.2.840.113556.1.4.803:=1048574)",
          "(userAccountControl:1.2.840.113556.1.4.803:=524288)",
          "(userAccountControl:1.2.840.113556.1.4.803:=65536)",
          "(userAccountControl:1.2.840.113556.1.4.803:=8192)",
          "(userAccountControl:1.2.840.113556.1.4.803:=544)",
          "!(UserAccountControl:1.2.840.113556.1.4.803:=2)",
          "msDS-AllowedToActOnBehalfOfOtherIdentity",
          "msDS-AllowedToDelegateTo",
          "msDS-GroupManagedServiceAccount",
          "(accountExpires=9223372036854775807)",
          "(accountExpires=0)",
          "(adminCount=1)",
          "ms-MCS-AdmPwd"
        ]
      },
      "narrow_down_filter": {
        "EventID": 30,
        "SearchFilter|contains": [
          "(domainSid=*)",
          "(objectSid=*)"
        ]
      },
      "condition": "(generic_search and not narrow_down_filter) or suspicious_flag"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "Standard User In High Privileged Group",
    "id": 1343,
    "status": "experimental",
    "description": "Detect standard users login that are part of high privileged groups such as the Administrator group",
    "references": [
      "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-identifiers",
      "https://learn.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection",
      "https://github.com/nasbench/EVTX-ETW-Resources/blob/7a806a148b3d9d381193d4a80356016e6e8b1ee8/ETWProvidersManifests/Windows11/22H2/W11_22H2_Pro_20221220_22621.963/WEPExplorer/LsaSrv.xml"
    ],
    "author": "frack113",
    "date": "2023/01/13",
    "modified": "2023/05/05",
    "tags": [
      "attack.credential_access",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "service": "lsa-server",
      "definition": "Requirements: Microsoft-Windows-LSA/Operational (199FE037-2B82-40A9-82AC-E1D46C792B99) Event Log must be enabled and collected in order to use this rule."
    },
    "detection": {
      "selection": {
        "EventID": 300,
        "TargetUserSid|startswith": "S-1-5-21-",
        "SidList|contains": [
          "S-1-5-32-544",
          "-500}",
          "-518}",
          "-519}"
        ]
      },
      "filter_main_admin": {
        "TargetUserSid|endswith": [
          "-500",
          "-518",
          "-519"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Standard domain users who are part of the administrator group. These users shouldn't have these right. But in the case where it's necessary. They should be filtered out using the \"TargetUserName\" field"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ProxyLogon MSExchange OabVirtualDirectory",
    "id": 1344,
    "status": "test",
    "description": "Detects specific patterns found after a successful ProxyLogon exploitation in relation to a Commandlet invocation of Set-OabVirtualDirectory",
    "references": [
      "https://bi-zone.medium.com/hunting-down-ms-exchange-attacks-part-1-proxylogon-cve-2021-26855-26858-27065-26857-6e885c5f197c"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/08/09",
    "modified": "2023/01/23",
    "tags": [
      "attack.t1587.001",
      "attack.resource_development"
    ],
    "logsource": {
      "product": "windows",
      "service": "msexchange-management"
    },
    "detection": {
      "keywords_cmdlet": {
        "|all": [
          "OabVirtualDirectory",
          " -ExternalUrl "
        ]
      },
      "keywords_params": [
        "eval(request",
        "http://f/<script",
        "\"unsafe\"};",
        "function Page_Load()"
      ],
      "condition": "keywords_cmdlet and keywords_params"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Certificate Request Export to Exchange Webserver",
    "id": 1345,
    "status": "test",
    "description": "Detects a write of an Exchange CSR to an untypical directory or with aspx name suffix which can be used to place a webshell",
    "references": [
      "https://twitter.com/GossiTheDog/status/1429175908905127938"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2023/01/23",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "service": "msexchange-management",
      "product": "windows"
    },
    "detection": {
      "keywords_export_command": {
        "|all": [
          "New-ExchangeCertificate",
          " -GenerateRequest",
          " -BinaryEncoded",
          " -RequestFile"
        ]
      },
      "keywords_export_params": [
        "\\\\\\\\localhost\\\\C$",
        "\\\\\\\\127.0.0.1\\\\C$",
        "C:\\\\inetpub",
        ".aspx"
      ],
      "condition": "keywords_export_command and keywords_export_params"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Mailbox Export to Exchange Webserver",
    "id": 1346,
    "status": "experimental",
    "description": "Detects a successful export of an Exchange mailbox to untypical directory or with aspx name suffix which can be used to place a webshell or the needed role assignment for it",
    "references": [
      "https://blog.orange.tw/2021/08/proxylogon-a-new-attack-surface-on-ms-exchange-part-1.html"
    ],
    "author": "Florian Roth (Nextron Systems), Rich Warren, Christian Burkard (Nextron Systems)",
    "date": "2021/08/09",
    "modified": "2023/04/30",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "service": "msexchange-management",
      "product": "windows"
    },
    "detection": {
      "export_command": {
        "|all": [
          "New-MailboxExportRequest",
          " -Mailbox "
        ]
      },
      "export_params": [
        "-FilePath \"\\\\\\\\",
        ".aspx"
      ],
      "role_assignment": {
        "|all": [
          "New-ManagementRoleAssignment",
          " -Role \"Mailbox Import Export\"",
          " -User "
        ]
      },
      "condition": "(export_command and export_params) or role_assignment"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Remove Exported Mailbox from Exchange Webserver",
    "id": 1347,
    "status": "test",
    "description": "Detects removal of an exported Exchange mailbox which could be to cover tracks from ProxyShell exploit",
    "references": [
      "https://github.com/rapid7/metasploit-framework/blob/1416b5776d963f21b7b5b45d19f3e961201e0aed/modules/exploits/windows/http/exchange_proxyshell_rce.rb#L430"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/27",
    "modified": "2023/01/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "service": "msexchange-management",
      "product": "windows"
    },
    "detection": {
      "keywords": {
        "|all": [
          "Remove-MailboxExportRequest",
          " -Identity ",
          " -Confirm \"False\""
        ]
      },
      "condition": "keywords"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Exchange Set OabVirtualDirectory ExternalUrl Property",
    "id": 1348,
    "status": "test",
    "description": "Rule to detect an adversary setting OabVirtualDirectory External URL property to a script in Exchange Management log",
    "references": [
      "https://twitter.com/OTR_Community/status/1371053369071132675"
    ],
    "author": "Jose Rodriguez @Cyb3rPandaH",
    "date": "2021/03/15",
    "modified": "2023/01/23",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "msexchange-management"
    },
    "detection": {
      "keywords": {
        "|all": [
          "Set-OabVirtualDirectory",
          "ExternalUrl",
          "Page_Load",
          "script"
        ]
      },
      "condition": "keywords"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "MSExchange Transport Agent Installation - Builtin",
    "id": 1349,
    "related": [
      {
        "id": "83809e84-4475-4b69-bc3e-4aad8568612f",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the Installation of a Exchange Transport Agent",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=7"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2021/06/08",
    "modified": "2022/11/27",
    "tags": [
      "attack.persistence",
      "attack.t1505.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "msexchange-management"
    },
    "detection": {
      "selection": [
        "Install-TransportAgent"
      ],
      "condition": "selection"
    },
    "fields": [
      "AssemblyPath"
    ],
    "falsepositives": [
      "Legitimate installations of exchange TransportAgents. AssemblyPath is a good indicator for this."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Failed MSExchange Transport Agent Installation",
    "id": 1350,
    "status": "test",
    "description": "Detects a failed installation of a Exchange Transport Agent",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=8"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2021/06/08",
    "modified": "2022/07/12",
    "tags": [
      "attack.persistence",
      "attack.t1505.002"
    ],
    "logsource": {
      "service": "msexchange-management",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventID": 6,
        "Data|contains": "Install-TransportAgent"
      },
      "condition": "selection"
    },
    "fields": [
      "AssemblyPath"
    ],
    "falsepositives": [
      "Legitimate installations of exchange TransportAgents. AssemblyPath is a good indicator for this."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NTLM Logon",
    "id": 1351,
    "status": "test",
    "description": "Detects logons using NTLM, which could be caused by a legacy source or attackers",
    "references": [
      "https://twitter.com/JohnLaTwC/status/1004895028995477505",
      "https://goo.gl/PsqrhT"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/06/08",
    "modified": "2022/10/05",
    "tags": [
      "attack.lateral_movement",
      "attack.t1550.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "ntlm",
      "definition": "Requires events from Microsoft-Windows-NTLM/Operational"
    },
    "detection": {
      "selection": {
        "EventID": 8002,
        "ProcessName|contains": "*"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legacy hosts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "NTLM Brute Force",
    "id": 1352,
    "status": "test",
    "description": "Detects common NTLM brute force device names",
    "references": [
      "https://www.varonis.com/blog/investigate-ntlm-brute-force"
    ],
    "author": "Jerry Shockley '@jsh0x'",
    "date": "2022/02/02",
    "tags": [
      "attack.credential_access",
      "attack.t1110"
    ],
    "logsource": {
      "product": "windows",
      "service": "ntlm",
      "definition": "Requires events from Microsoft-Windows-NTLM/Operational"
    },
    "detection": {
      "selection": {
        "EventID": 8004
      },
      "devicename": {
        "WorkstationName": [
          "Rdesktop",
          "Remmina",
          "Freerdp",
          "Windows7",
          "Windows8",
          "Windows2012",
          "Windows2016",
          "Windows2019"
        ]
      },
      "condition": "selection and devicename"
    },
    "falsepositives": [
      "Systems with names equal to the spoofed ones used by the brute force tools"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Remote Desktop Connection to Non-Domain Host",
    "id": 1353,
    "status": "test",
    "description": "Detects logons using NTLM to hosts that are potentially not part of the domain.",
    "references": [
      "n/a"
    ],
    "author": "James Pemberton",
    "date": "2020/05/22",
    "modified": "2021/11/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "service": "ntlm",
      "definition": "Requires events from Microsoft-Windows-NTLM/Operational"
    },
    "detection": {
      "selection": {
        "EventID": 8001,
        "TargetName|startswith": "TERMSRV"
      },
      "condition": "selection"
    },
    "fields": [
      "Computer",
      "UserName",
      "DomainName",
      "TargetName"
    ],
    "falsepositives": [
      "Host connections to valid domains, exclude these.",
      "Host connections not using host FQDN.",
      "Host connections to external legitimate domains."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "OpenSSH Server Listening On Socket",
    "id": 1354,
    "status": "test",
    "description": "Detects scenarios where an attacker enables the OpenSSH server and server starts to listening on SSH socket.",
    "references": [
      "https://github.com/mdecrevoisier/EVTX-to-MITRE-Attack/tree/master/TA0008-Lateral%20Movement/T1021.004-Remote%20Service%20SSH",
      "https://winaero.com/enable-openssh-server-windows-10/",
      "https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse",
      "https://virtualizationreview.com/articles/2020/05/21/ssh-server-on-windows-10.aspx",
      "https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16"
    ],
    "author": "mdecrevoisier",
    "date": "2022/10/25",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "openssh"
    },
    "detection": {
      "selection": {
        "EventID": 4,
        "process": "sshd",
        "payload|startswith": "Server listening on "
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrator activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Azure AD Health Monitoring Agent Registry Keys Access",
    "id": 1355,
    "status": "test",
    "description": "This detection uses Windows security events to detect suspicious access attempts to the registry key of Azure AD Health monitoring agent.\nThis detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object HKLM\\SOFTWARE\\Microsoft\\Microsoft Online\\Reporting\\MonitoringAgent.\n",
    "references": [
      "https://o365blog.com/post/hybridhealthagent/",
      "https://github.com/OTRF/Set-AuditRule/blob/c3dec5443414231714d850565d364ca73475ade5/rules/registry/aad_connect_health_monitoring_agent.yml"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research), MSTIC",
    "date": "2021/08/26",
    "modified": "2022/10/09",
    "tags": [
      "attack.discovery",
      "attack.t1012"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4656,
          4663
        ],
        "ObjectType": "Key",
        "ObjectName": "\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Microsoft Online\\Reporting\\MonitoringAgent"
      },
      "filter": {
        "ProcessName|contains": [
          "Microsoft.Identity.Health.Adfs.DiagnosticsAgent.exe",
          "Microsoft.Identity.Health.Adfs.InsightsService.exe",
          "Microsoft.Identity.Health.Adfs.MonitoringAgent.Startup.exe",
          "Microsoft.Identity.Health.Adfs.PshSurrogate.exe",
          "Microsoft.Identity.Health.Common.Clients.ResourceMonitor.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Azure AD Health Service Agents Registry Keys Access",
    "id": 1356,
    "status": "test",
    "description": "This detection uses Windows security events to detect suspicious access attempts to the registry key values and sub-keys of Azure AD Health service agents (e.g AD FS).\nInformation from AD Health service agents can be used to potentially abuse some of the features provided by those services in the cloud (e.g. Federation).\nThis detection requires an access control entry (ACE) on the system access control list (SACL) of the following securable object: HKLM:\\SOFTWARE\\Microsoft\\ADHealthAgent.\nMake sure you set the SACL to propagate to its sub-keys.\n",
    "references": [
      "https://o365blog.com/post/hybridhealthagent/",
      "https://github.com/OTRF/Set-AuditRule/blob/c3dec5443414231714d850565d364ca73475ade5/rules/registry/aad_connect_health_service_agent.yml"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research), MSTIC",
    "date": "2021/08/26",
    "modified": "2022/10/09",
    "tags": [
      "attack.discovery",
      "attack.t1012"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4656,
          4663
        ],
        "ObjectType": "Key",
        "ObjectName": "\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\ADHealthAgent"
      },
      "filter": {
        "ProcessName|contains": [
          "Microsoft.Identity.Health.Adfs.DiagnosticsAgent.exe",
          "Microsoft.Identity.Health.Adfs.InsightsService.exe",
          "Microsoft.Identity.Health.Adfs.MonitoringAgent.Startup.exe",
          "Microsoft.Identity.Health.Adfs.PshSurrogate.exe",
          "Microsoft.Identity.Health.Common.Clients.ResourceMonitor.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powerview Add-DomainObjectAcl DCSync AD Extend Right",
    "id": 1357,
    "status": "test",
    "description": "Backdooring domain object to grant the rights associated with DCSync to a regular user or machine account using Powerview\\Add-DomainObjectAcl DCSync Extended Right cmdlet, will allow to re-obtain the pwd hashes of any user/computer",
    "references": [
      "https://twitter.com/menasec1/status/1111556090137903104",
      "https://www.specterops.io/assets/resources/an_ace_up_the_sleeve.pdf"
    ],
    "author": "Samir Bousseaden, Roberto Rodriguez @Cyb3rWard0g, oscd.community, Tim Shelton, Maxence Fossat",
    "date": "2019/04/03",
    "modified": "2022/08/16",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: The \"Audit Directory Service Changes\" logging policy must be configured in order to receive events. Audit events are generated only for objects with configured system access control lists (SACLs). Audit events are generated only for objects with configured system access control lists (SACLs) and only when accessed in a manner that matches their SACL settings. This policy covers the following events ids - 5136, 5137, 5138, 5139, 5141. Note that the default policy does not cover User objects. For that a custom AuditRule need to be setup (See https://github.com/OTRF/Set-AuditRule)"
    },
    "detection": {
      "selection": {
        "EventID": 5136,
        "AttributeLDAPDisplayName": "ntSecurityDescriptor",
        "AttributeValue|contains": [
          "1131f6ad-9c07-11d1-f79f-00c04fc2dcd2",
          "1131f6aa-9c07-11d1-f79f-00c04fc2dcd2",
          "89e95b76-444d-4c62-991a-0facbeda640c"
        ]
      },
      "filter_main_dns_object_class": {
        "ObjectClass": [
          "dnsNode",
          "dnsZoneScope",
          "dnsZone"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "New Domain Controller computer account, check user SIDs within the value attribute of event 5136 and verify if it's a regular user or DC computer account."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AD Privileged Users or Groups Reconnaissance",
    "id": 1358,
    "status": "test",
    "description": "Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs",
    "references": [
      "https://blog.menasec.net/2019/02/threat-hunting-5-detecting-enumeration.html"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2022/07/13",
    "tags": [
      "attack.discovery",
      "attack.t1087.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: enable Object Access SAM on your Domain Controllers"
    },
    "detection": {
      "selection": {
        "EventID": 4661,
        "ObjectType": [
          "SAM_USER",
          "SAM_GROUP"
        ]
      },
      "selection_object": [
        {
          "ObjectName|endswith": [
            "-512",
            "-502",
            "-500",
            "-505",
            "-519",
            "-520",
            "-544",
            "-551",
            "-555"
          ]
        },
        {
          "ObjectName|contains": "admin"
        }
      ],
      "filter": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "selection and selection_object and not filter"
    },
    "falsepositives": [
      "If source account name is not an admin then its super suspicious"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ADCS Certificate Template Configuration Vulnerability",
    "id": 1359,
    "status": "test",
    "description": "Detects certificate creation with template allowing risk permission subject",
    "references": [
      "https://www.specterops.io/assets/resources/Certified_Pre-Owned.pdf"
    ],
    "author": "Orlinum , BlueDefenZer",
    "date": "2021/11/17",
    "modified": "2022/12/25",
    "tags": [
      "attack.privilege_escalation",
      "attack.credential_access"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Certificate services loaded a template would trigger event ID 4898 and certificate Services template was updated would trigger event ID 4899. A risk permission seems to be coming if template contain specific flag."
    },
    "detection": {
      "selection1": {
        "EventID": 4898,
        "TemplateContent|contains": "CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT"
      },
      "selection2": {
        "EventID": 4899,
        "NewTemplateContent|contains": "CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT"
      },
      "condition": "selection1 or selection2"
    },
    "falsepositives": [
      "Administrator activity",
      "Proxy SSL certificate with subject modification",
      "Smart card enrollement"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "ADCS Certificate Template Configuration Vulnerability with Risky EKU",
    "id": 1360,
    "status": "test",
    "description": "Detects certificate creation with template allowing risk permission subject and risky EKU",
    "references": [
      "https://www.specterops.io/assets/resources/Certified_Pre-Owned.pdf"
    ],
    "author": "Orlinum , BlueDefenZer",
    "date": "2021/11/17",
    "modified": "2022/12/25",
    "tags": [
      "attack.privilege_escalation",
      "attack.credential_access"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Certificate services loaded a template would trigger event ID 4898 and certificate Services template was updated would trigger event ID 4899. A risk permission seems to be coming if template contain specific flag with risky EKU."
    },
    "detection": {
      "selection10": {
        "EventID": 4898,
        "TemplateContent|contains": [
          "1.3.6.1.5.5.7.3.2",
          "1.3.6.1.5.2.3.4",
          "1.3.6.1.4.1.311.20.2.2",
          "2.5.29.37.0"
        ]
      },
      "selection11": {
        "TemplateContent|contains": "CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT"
      },
      "selection20": {
        "EventID": 4899,
        "NewTemplateContent|contains": [
          "1.3.6.1.5.5.7.3.2",
          "1.3.6.1.5.2.3.4",
          "1.3.6.1.4.1.311.20.2.2",
          "2.5.29.37.0"
        ]
      },
      "selection21": {
        "NewTemplateContent|contains": "CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT"
      },
      "condition": "(selection10 and selection11) or (selection20 and selection21)"
    },
    "falsepositives": [
      "Administrator activity",
      "Proxy SSL certificate with subject modification",
      "Smart card enrollement"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add or Remove Computer from DC",
    "id": 1361,
    "status": "test",
    "description": "Detects the creation or removal of a computer. Can be used to detect attacks such as DCShadow via the creation of a new SPN.",
    "references": [
      "https://github.com/Yamato-Security/EnableWindowsLogSettings/blob/7f6d755d45ac7cc9fc35b0cbf498e6aa4ef19def/ConfiguringSecurityLogAuditPolicies.md",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4741",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4743"
    ],
    "author": "frack113",
    "date": "2022/10/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1207"
    ],
    "logsource": {
      "service": "security",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventID": [
          4741,
          4743
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Access To ADMIN$ Network Share",
    "id": 1362,
    "status": "test",
    "description": "Detects access to ADMIN$ network share",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5140"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/04",
    "modified": "2024/01/16",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: The advanced audit policy setting \"Object Access > Audit File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 5140,
        "ShareName": "Admin$"
      },
      "filter_main_computer_account": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate administrative activity"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "AD Object WriteDAC Access",
    "id": 1363,
    "status": "test",
    "description": "Detects WRITE_DAC access to a domain object",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/180815-ADObjectAccessReplication/notebook.html",
      "https://threathunterplaybook.com/library/windows/active_directory_replication.html",
      "https://threathunterplaybook.com/hunts/windows/190101-ADModDirectoryReplication/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/09/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1222.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4662,
        "ObjectServer": "DS",
        "AccessMask": "0x40000",
        "ObjectType": [
          "19195a5b-6da0-11d0-afd3-00c04fd930c9",
          "domainDNS"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Active Directory Replication from Non Machine Account",
    "id": 1364,
    "status": "test",
    "description": "Detects potential abuse of Active Directory Replication Service (ADRS) from a non machine account to request credentials.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/180815-ADObjectAccessReplication/notebook.html",
      "https://threathunterplaybook.com/library/windows/active_directory_replication.html",
      "https://threathunterplaybook.com/hunts/windows/190101-ADModDirectoryReplication/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/07/26",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.006"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4662,
        "AccessMask": "0x100",
        "Properties|contains": [
          "1131f6aa-9c07-11d1-f79f-00c04fc2dcd2",
          "1131f6ad-9c07-11d1-f79f-00c04fc2dcd2",
          "89e95b76-444d-4c62-991a-0facbeda640c"
        ]
      },
      "filter": [
        {
          "SubjectUserName|endswith": "$"
        },
        {
          "SubjectUserName|startswith": "MSOL_"
        }
      ],
      "condition": "selection and not filter"
    },
    "fields": [
      "ComputerName",
      "SubjectDomainName",
      "SubjectUserName"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Potential AD User Enumeration From Non-Machine Account",
    "id": 1365,
    "status": "test",
    "description": "Detects read access to a domain user from a non-machine account",
    "references": [
      "https://www.specterops.io/assets/resources/an_ace_up_the_sleeve.pdf",
      "http://www.stuffithoughtiknew.com/2019/02/detecting-bloodhound.html",
      "https://docs.microsoft.com/en-us/windows/win32/adschema/attributes-all",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4662"
    ],
    "author": "Maxime Thiebaut (@0xThiebaut)",
    "date": "2020/03/30",
    "modified": "2022/11/08",
    "tags": [
      "attack.discovery",
      "attack.t1087.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: The \"Read all properties\" permission on the user object needs to be audited for the \"Everyone\" principal"
    },
    "detection": {
      "selection": {
        "EventID": 4662,
        "ObjectType|contains": "bf967aba-0de6-11d0-a285-00aa003049e2",
        "AccessMask|endswith": [
          "1?",
          "3?",
          "4?",
          "7?",
          "9?",
          "B?",
          "D?",
          "F?"
        ]
      },
      "filter_main_machine_accounts": {
        "SubjectUserName|endswith": "$"
      },
      "filter_main_msql": {
        "SubjectUserName|startswith": "MSOL_"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrators configuring new users."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Enabled User Right in AD to Control User Objects",
    "id": 1366,
    "status": "test",
    "description": "Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.",
    "references": [
      "https://blog.harmj0y.net/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/"
    ],
    "author": "@neu5ron",
    "date": "2017/07/30",
    "modified": "2021/12/02",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Policy Change > Audit Authorization Policy Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change"
    },
    "detection": {
      "selection_base": {
        "EventID": 4704
      },
      "selection_keywords": {
        "PrivilegeList|contains": "SeEnableDelegationPrivilege"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Active Directory User Backdoors",
    "id": 1367,
    "status": "test",
    "description": "Detects scenarios where one can control another users or computers account without having to use their credentials.",
    "references": [
      "https://msdn.microsoft.com/en-us/library/cc220234.aspx",
      "https://adsecurity.org/?p=3466",
      "https://blog.harmj0y.net/redteaming/another-word-on-delegation/"
    ],
    "author": "@neu5ron",
    "date": "2017/04/13",
    "modified": "2024/02/26",
    "tags": [
      "attack.t1098",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management, DS Access > Audit Directory Service Changes, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\DS Access\\Audit Directory Service Changes"
    },
    "detection": {
      "selection1": {
        "EventID": 4738
      },
      "filter_empty": {
        "AllowedToDelegateTo": [
          "",
          "-"
        ]
      },
      "filter_null": {
        "AllowedToDelegateTo": null
      },
      "selection_5136_1": {
        "EventID": 5136,
        "AttributeLDAPDisplayName": "msDS-AllowedToDelegateTo"
      },
      "selection_5136_2": {
        "EventID": 5136,
        "ObjectClass": "user",
        "AttributeLDAPDisplayName": "servicePrincipalName"
      },
      "selection_5136_3": {
        "EventID": 5136,
        "AttributeLDAPDisplayName": "msDS-AllowedToActOnBehalfOfOtherIdentity"
      },
      "condition": "(selection1 and not 1 of filter_*) or 1 of selection_5136_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Weak Encryption Enabled and Kerberoast",
    "id": 1368,
    "status": "test",
    "description": "Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.",
    "references": [
      "https://adsecurity.org/?p=2053",
      "https://blog.harmj0y.net/redteaming/another-word-on-delegation/"
    ],
    "author": "@neu5ron",
    "date": "2017/07/30",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management"
    },
    "detection": {
      "selection": {
        "EventID": 4738
      },
      "olduac_des": {
        "OldUacValue|endswith": [
          "8???",
          "9???",
          "A???",
          "B???",
          "C???",
          "D???",
          "E???",
          "F???"
        ]
      },
      "newuac_des": {
        "NewUacValue|endswith": [
          "8???",
          "9???",
          "A???",
          "B???",
          "C???",
          "D???",
          "E???",
          "F???"
        ]
      },
      "olduac_preauth": {
        "OldUacValue|endswith": [
          "1????",
          "3????",
          "5????",
          "7????",
          "9????",
          "B????",
          "D????",
          "F????"
        ]
      },
      "newuac_preauth": {
        "NewUacValue|endswith": [
          "1????",
          "3????",
          "5????",
          "7????",
          "9????",
          "B????",
          "D????",
          "F????"
        ]
      },
      "olduac_encrypted": {
        "OldUacValue|endswith": [
          "8??",
          "9??",
          "A??",
          "B??",
          "C??",
          "D??",
          "E??",
          "F??"
        ]
      },
      "newuac_encrypted": {
        "NewUacValue|endswith": [
          "8??",
          "9??",
          "A??",
          "B??",
          "C??",
          "D??",
          "E??",
          "F??"
        ]
      },
      "condition": "selection and ((newuac_des and not olduac_des) or (newuac_preauth and not olduac_preauth) or (newuac_encrypted and not olduac_encrypted))"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Hacktool Ruler",
    "id": 1369,
    "status": "test",
    "description": "This events that are generated when using the hacktool Ruler by Sensepost",
    "references": [
      "https://github.com/sensepost/ruler",
      "https://github.com/sensepost/ruler/issues/47",
      "https://github.com/staaldraad/go-ntlm/blob/cd032d41aa8ce5751c07cb7945400c0f5c81e2eb/ntlm/ntlmv1.go#L427",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4624"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/05/31",
    "modified": "2022/10/09",
    "tags": [
      "attack.discovery",
      "attack.execution",
      "attack.t1087",
      "attack.t1114",
      "attack.t1059",
      "attack.t1550.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection1": {
        "EventID": 4776,
        "Workstation": "RULER"
      },
      "selection2": {
        "EventID": [
          4624,
          4625
        ],
        "WorkstationName": "RULER"
      },
      "condition": "(1 of selection*)"
    },
    "falsepositives": [
      "Go utilities that use staaldraad awesome NTLM library"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Task Creation via ATSVC Named Pipe",
    "id": 1370,
    "status": "test",
    "description": "Detects remote task creation via at.exe or API interacting with ATSVC namedpipe",
    "references": [
      "https://blog.menasec.net/2019/03/threat-hunting-25-scheduled-tasks-for.html"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2022/08/11",
    "tags": [
      "attack.lateral_movement",
      "attack.persistence",
      "car.2013-05-004",
      "car.2015-04-001",
      "attack.t1053.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\IPC$",
        "RelativeTargetName": "atsvc",
        "Accesses|contains": "WriteData"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Security Eventlog Cleared",
    "id": 1371,
    "related": [
      {
        "id": "f2f01843-e7b8-4f95-a35a-d23584476423",
        "type": "obsoletes"
      },
      {
        "id": "a122ac13-daf8-4175-83a2-72c387be339d",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "One of the Windows Eventlogs has been cleared. e.g. caused by \"wevtutil cl\" command execution",
    "references": [
      "https://twitter.com/deviouspolack/status/832535435960209408",
      "https://www.hybrid-analysis.com/sample/027cc450ef5f8c5f653329641ec1fed91f694e0d229928963b30f6b0d7d3a745?environmentId=100",
      "https://github.com/Azure/Azure-Sentinel/blob/f99542b94afe0ad2f19a82cc08262e7ac8e1428e/Detections/SecurityEvent/SecurityEventLogCleared.yaml"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/01/10",
    "modified": "2022/02/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.001",
      "car.2016-04-002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_517": {
        "EventID": 517,
        "Provider_Name": "Security"
      },
      "selection_1102": {
        "EventID": 1102,
        "Provider_Name": "Microsoft-Windows-Eventlog"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Rollout of log collection agents (the setup routine often includes a reset of the local Eventlog)",
      "System provisioning (system reset before the golden image creation)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Processes Accessing the Microphone and Webcam",
    "id": 1372,
    "status": "test",
    "description": "Potential adversaries accessing the microphone and webcam in an endpoint.",
    "references": [
      "https://twitter.com/duzvik/status/1269671601852813320",
      "https://medium.com/@7a616368/can-you-track-processes-accessing-the-camera-and-microphone-7e6885b37072"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/06/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.collection",
      "attack.t1123"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4657,
          4656,
          4663
        ],
        "ObjectName|contains": [
          "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\microphone\\NonPackaged",
          "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\webcam\\NonPackaged"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CobaltStrike Service Installations - Security",
    "id": 1373,
    "related": [
      {
        "id": "5a105d34-05fc-401e-8553-272b45c1522d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement",
    "references": [
      "https://www.sans.org/webcasts/119395",
      "https://www.crowdstrike.com/blog/getting-the-bacon-from-cobalt-strike-beacon/",
      "https://thedfirreport.com/2021/08/29/cobalt-strike-a-defenders-guide/"
    ],
    "author": "Florian Roth (Nextron Systems), Wojciech Lesicki",
    "date": "2021/05/26",
    "modified": "2022/11/27",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1543.003",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "event_id": {
        "EventID": 4697
      },
      "selection1": {
        "ServiceFileName|contains|all": [
          "ADMIN$",
          ".exe"
        ]
      },
      "selection2": {
        "ServiceFileName|contains|all": [
          "%COMSPEC%",
          "start",
          "powershell"
        ]
      },
      "selection3": {
        "ServiceFileName|contains": "powershell -nop -w hidden -encodedcommand"
      },
      "selection4": {
        "ServiceFileName|base64offset|contains": "IEX (New-Object Net.Webclient).DownloadString('http://127.0.0.1:"
      },
      "condition": "event_id and 1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Failed Code Integrity Checks",
    "id": 1374,
    "status": "stable",
    "description": "Detects code integrity failures such as missing page hashes or corrupted drivers due unauthorized modification. This could be a sign of tampered binaries.\n",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5038",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-6281"
    ],
    "author": "Thomas Patzke",
    "date": "2019/12/03",
    "modified": "2023/12/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          5038,
          6281
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Disk device errors"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "DCERPC SMB Spoolss Named Pipe",
    "id": 1375,
    "status": "test",
    "description": "Detects the use of the spoolss named pipe over SMB. This can be used to trigger the authentication via NTLM of any machine that has the spoolservice enabled.",
    "references": [
      "https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1",
      "https://dirkjanm.io/a-different-way-of-abusing-zerologon/",
      "https://twitter.com/_dirkjan/status/1309214379003588608"
    ],
    "author": "OTR (Open Threat Research)",
    "date": "2018/11/28",
    "modified": "2022/08/11",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\IPC$",
        "RelativeTargetName": "spoolss"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Domain Controllers acting as printer servers too? :)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DCOM InternetExplorer.Application Iertutil DLL Hijack - Security",
    "id": 1376,
    "status": "test",
    "description": "Detects a threat actor creating a file named `iertutil.dll` in the `C:\\Program Files\\Internet Explorer\\` directory over the network for a DCOM InternetExplorer DLL Hijack scenario.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/201009-RemoteDCOMIErtUtilDLLHijack/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR)",
    "date": "2020/10/12",
    "modified": "2022/11/26",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1021.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "RelativeTargetName|endswith": "\\Internet Explorer\\iertutil.dll"
      },
      "filter": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Mimikatz DC Sync",
    "id": 1377,
    "status": "test",
    "description": "Detects Mimikatz DC sync security events",
    "references": [
      "https://twitter.com/gentilkiwi/status/1003236624925413376",
      "https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2",
      "https://blog.blacklanternsecurity.com/p/detecting-dcsync?s=r",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4662"
    ],
    "author": "Benjamin Delpy, Florian Roth (Nextron Systems), Scott Dermott, Sorina Ionescu",
    "date": "2018/06/03",
    "modified": "2022/04/26",
    "tags": [
      "attack.credential_access",
      "attack.s0002",
      "attack.t1003.006"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4662,
        "Properties|contains": [
          "Replicating Directory Changes All",
          "1131f6ad-9c07-11d1-f79f-00c04fc2dcd2",
          "1131f6aa-9c07-11d1-f79f-00c04fc2dcd2",
          "9923a32a-3607-11d2-b9be-0000f87a36b2",
          "89e95b76-444d-4c62-991a-0facbeda640c"
        ],
        "AccessMask": "0x100"
      },
      "filter1": {
        "SubjectDomainName": "Window Manager"
      },
      "filter2": {
        "SubjectUserName|startswith": [
          "NT AUT",
          "MSOL_"
        ]
      },
      "filter3": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Valid DC Sync that is not covered by the filters; please report",
      "Local Domain Admin account used for Azure AD Connect"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Device Installation Blocked",
    "id": 1378,
    "status": "test",
    "description": "Detects an installation of a device that is forbidden by the system policy",
    "references": [
      "https://github.com/Yamato-Security/EnableWindowsLogSettings/blob/7f6d755d45ac7cc9fc35b0cbf498e6aa4ef19def/ConfiguringSecurityLogAuditPolicies.md",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-6423"
    ],
    "author": "frack113",
    "date": "2022/10/14",
    "tags": [
      "attack.initial_access",
      "attack.t1200"
    ],
    "logsource": {
      "service": "security",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventID": 6423
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Event Auditing Disabled",
    "id": 1379,
    "related": [
      {
        "id": "ab4561b1-6c7e-48a7-ad08-087cfb9ce8f1",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects scenarios where system auditing (i.e.: Windows event log auditing) is disabled.\nThis may be used in a scenario where an entity would want to bypass local logging to evade detection when Windows event logging is enabled and reviewed.\nAlso, it is recommended to turn off \"Local Group Policy Object Processing\" via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as \"gpedit.msc\".\nPlease note, that disabling \"Local Group Policy Object Processing\" may cause an issue in scenarios of one off specific GPO modifications - however, it is recommended to perform these modifications in Active Directory anyways.\n",
    "references": [
      "https://docs.google.com/presentation/d/1dkrldTTlN3La-OjWtkWJBb4hVk6vfsSMBFBERs6R8zA/edit"
    ],
    "author": "@neu5ron, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2017/11/19",
    "modified": "2023/11/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "dfd8c0f4-e6ad-4e07-b91b-f2fca0ddef64"
    },
    "detection": {
      "selection": {
        "EventID": 4719,
        "AuditPolicyChanges|contains": [
          "%%8448",
          "%%8450"
        ]
      },
      "filter_main_guid": {
        "SubcategoryGuid": [
          "{0CCE9210-69AE-11D9-BED3-505054503030}",
          "{0CCE9211-69AE-11D9-BED3-505054503030}",
          "{0CCE9212-69AE-11D9-BED3-505054503030}",
          "{0CCE9215-69AE-11D9-BED3-505054503030}",
          "{0CCE9217-69AE-11D9-BED3-505054503030}",
          "{0CCE921B-69AE-11D9-BED3-505054503030}",
          "{0CCE922B-69AE-11D9-BED3-505054503030}",
          "{0CCE922F-69AE-11D9-BED3-505054503030}",
          "{0CCE9230-69AE-11D9-BED3-505054503030}",
          "{0CCE9235-69AE-11D9-BED3-505054503030}",
          "{0CCE9236-69AE-11D9-BED3-505054503030}",
          "{0CCE9237-69AE-11D9-BED3-505054503030}",
          "{0CCE923F-69AE-11D9-BED3-505054503030}",
          "{0CCE9240-69AE-11D9-BED3-505054503030}",
          "{0CCE9242-69AE-11D9-BED3-505054503030}"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Important Windows Event Auditing Disabled",
    "id": 1380,
    "related": [
      {
        "id": "69aeb277-f15f-4d2d-b32a-55e883609563",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects scenarios where system auditing for important events such as \"Process Creation\" or \"Logon\" events is disabled.",
    "references": [
      "https://docs.google.com/presentation/d/1dkrldTTlN3La-OjWtkWJBb4hVk6vfsSMBFBERs6R8zA/edit",
      "https://github.com/SigmaHQ/sigma/blob/master/documentation/logsource-guides/windows/service/security.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/20",
    "modified": "2023/11/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "dfd8c0f4-e6ad-4e07-b91b-f2fca0ddef64"
    },
    "detection": {
      "selection_state_success_and_failure": {
        "EventID": 4719,
        "SubcategoryGuid": [
          "{0CCE9210-69AE-11D9-BED3-505054503030}",
          "{0CCE9211-69AE-11D9-BED3-505054503030}",
          "{0CCE9212-69AE-11D9-BED3-505054503030}",
          "{0CCE9215-69AE-11D9-BED3-505054503030}",
          "{0CCE921B-69AE-11D9-BED3-505054503030}",
          "{0CCE922B-69AE-11D9-BED3-505054503030}",
          "{0CCE922F-69AE-11D9-BED3-505054503030}",
          "{0CCE9230-69AE-11D9-BED3-505054503030}",
          "{0CCE9235-69AE-11D9-BED3-505054503030}",
          "{0CCE9236-69AE-11D9-BED3-505054503030}",
          "{0CCE9237-69AE-11D9-BED3-505054503030}",
          "{0CCE923F-69AE-11D9-BED3-505054503030}",
          "{0CCE9240-69AE-11D9-BED3-505054503030}",
          "{0CCE9242-69AE-11D9-BED3-505054503030}"
        ],
        "AuditPolicyChanges|contains": [
          "%%8448",
          "%%8450"
        ]
      },
      "selection_state_success_only": {
        "EventID": 4719,
        "SubcategoryGuid": "{0CCE9217-69AE-11D9-BED3-505054503030}",
        "AuditPolicyChanges|contains": "%%8448"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ETW Logging Disabled In .NET Processes - Registry",
    "id": 1381,
    "related": [
      {
        "id": "bf4fc428-dcc3-4bbd-99fe-2422aeee2544",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Potential adversaries stopping ETW providers recording loaded .NET assemblies.",
    "references": [
      "https://twitter.com/_xpn_/status/1268712093928378368",
      "https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr",
      "https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables",
      "https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38",
      "https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39",
      "https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_",
      "https://bunnyinside.com/?term=f71e8cb9c76a",
      "http://managed670.rssing.com/chan-5590147/all_p1.html",
      "https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code",
      "https://i.blackhat.com/EU-21/Wednesday/EU-21-Teodorescu-Veni-No-Vidi-No-Vici-Attacks-On-ETW-Blind-EDRs.pdf"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/06/05",
    "modified": "2022/12/20",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_etw_enabled": {
        "EventID": 4657,
        "ObjectName|endswith": "\\SOFTWARE\\Microsoft\\.NETFramework",
        "ObjectValueName": "ETWEnabled",
        "NewValue": 0
      },
      "selection_complus": {
        "EventID": 4657,
        "ObjectName|contains": "\\Environment",
        "ObjectValueName": [
          "COMPlus_ETWEnabled",
          "COMPlus_ETWFlags"
        ],
        "NewValue": 0
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DPAPI Domain Backup Key Extraction",
    "id": 1382,
    "status": "test",
    "description": "Detects tools extracting LSA secret DPAPI domain backup key from Domain Controllers",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190620-DomainDPAPIBackupKeyExtraction/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/06/20",
    "modified": "2022/02/24",
    "tags": [
      "attack.credential_access",
      "attack.t1003.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4662,
        "ObjectType": "SecretObject",
        "AccessMask": "0x2",
        "ObjectName|contains": "BCKUPKEY"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DPAPI Domain Master Key Backup Attempt",
    "id": 1383,
    "status": "test",
    "description": "Detects anyone attempting a backup for the DPAPI Master Key. This events gets generated at the source and not the Domain Controller.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190620-DomainDPAPIBackupKeyExtraction/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/10",
    "modified": "2023/03/15",
    "tags": [
      "attack.credential_access",
      "attack.t1003.004"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4692
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "SubjectDomainName",
      "SubjectUserName"
    ],
    "falsepositives": [
      "If a computer is a member of a domain, DPAPI has a backup mechanism to allow unprotection of the data. Which will trigger this event."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "External Disk Drive Or USB Storage Device Was Recognized By The System",
    "id": 1384,
    "status": "test",
    "description": "Detects external disk drives or plugged-in USB devices.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-6416"
    ],
    "author": "Keith Wright",
    "date": "2019/11/20",
    "modified": "2024/02/09",
    "tags": [
      "attack.t1091",
      "attack.t1200",
      "attack.lateral_movement",
      "attack.initial_access"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_eid": {
        "EventID": 6416
      },
      "selection_field": [
        {
          "ClassName": "DiskDrive"
        },
        {
          "DeviceDescription": "USB Mass Storage Device"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Persistence and Execution at Scale via GPO Scheduled Task",
    "id": 1385,
    "status": "test",
    "description": "Detect lateral movement using GPO scheduled task, usually used to deploy ransomware at scale",
    "references": [
      "https://twitter.com/menasec1/status/1106899890377052160",
      "https://www.secureworks.com/blog/ransomware-as-a-distraction"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.lateral_movement",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\SYSVOL",
        "RelativeTargetName|endswith": "ScheduledTasks.xml",
        "Accesses|contains": [
          "WriteData",
          "%%4417"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "If the source IP is not localhost then it's super suspicious, better to monitor both local and remote changes to GPO scheduledtasks"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Hidden Local User Creation",
    "id": 1386,
    "status": "test",
    "description": "Detects the creation of a local hidden user account which should not happen for event ID 4720.",
    "references": [
      "https://twitter.com/SBousseaden/status/1387743867663958021"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/05/03",
    "modified": "2024/01/16",
    "tags": [
      "attack.persistence",
      "attack.t1136.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4720,
        "TargetUserName|endswith": "$"
      },
      "filter_main_homegroup": {
        "TargetUserName": "HomeGroupUser$"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - EDRSilencer Execution - Filter Added",
    "id": 1387,
    "status": "experimental",
    "description": "Detects execution of EDRSilencer, a tool that abuses the Windows Filtering Platform (WFP) to block the outbound traffic of running EDR agents based on specific hardcoded filter names.\n",
    "references": [
      "https://github.com/netero1010/EDRSilencer"
    ],
    "author": "Thodoris Polyzos (@SmoothDeploy)",
    "date": "2024/01/29",
    "modified": "2024/01/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Filtering Platform Policy Change needs to be enabled"
    },
    "detection": {
      "selection": {
        "EventID": [
          5441,
          5447
        ],
        "FilterName|contains": "Custom Outbound Filter"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - NoFilter Execution",
    "id": 1388,
    "status": "experimental",
    "description": "Detects execution of NoFilter, a tool for abusing the Windows Filtering Platform for privilege escalation via hardcoded policy name indicators\n",
    "references": [
      "https://github.com/deepinstinct/NoFilter/blob/121d215ab130c5e8e3ad45a7e7fcd56f4de97b4d/NoFilter/Consts.cpp",
      "https://github.com/deepinstinct/NoFilter",
      "https://www.deepinstinct.com/blog/nofilter-abusing-windows-filtering-platform-for-privilege-escalation",
      "https://x.com/_st0pp3r_/status/1742203752361128162?s=20"
    ],
    "author": "Stamatis Chatzimangou (st0pp3r)",
    "date": "2024/01/05",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1134",
      "attack.t1134.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Filtering Platform Policy Change needs to be enabled"
    },
    "detection": {
      "selection_5447": {
        "EventID": 5447,
        "FilterName|contains": "RonPolicy"
      },
      "selection_5449": {
        "EventID": 5449,
        "ProviderContextName|contains": "RonPolicy"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HybridConnectionManager Service Installation",
    "id": 1389,
    "status": "test",
    "description": "Rule to detect the Hybrid Connection Manager service installation.",
    "references": [
      "https://twitter.com/Cyb3rWard0g/status/1381642789369286662"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2021/04/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.t1554"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceName": "HybridConnectionManager",
        "ServiceFileName|contains": "HybridConnectionManager"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of Hybrid Connection Manager via Azure function apps."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Impacket PsExec Execution",
    "id": 1390,
    "status": "test",
    "description": "Detects execution of Impacket's psexec.py.",
    "references": [
      "https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html"
    ],
    "author": "Bhabesh Raj",
    "date": "2020/12/14",
    "modified": "2022/09/22",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection1": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\IPC$",
        "RelativeTargetName|contains": [
          "RemCom_stdin",
          "RemCom_stdout",
          "RemCom_stderr"
        ]
      },
      "condition": "selection1"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Possible Impacket SecretDump Remote Activity",
    "id": 1391,
    "status": "test",
    "description": "Detect AD credential dumping using impacket secretdump HKTL",
    "references": [
      "https://blog.menasec.net/2019/02/threat-huting-10-impacketsecretdump.html"
    ],
    "author": "Samir Bousseaden, wagga",
    "date": "2019/04/03",
    "modified": "2022/08/11",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002",
      "attack.t1003.004",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\ADMIN$",
        "RelativeTargetName|contains|all": [
          "SYSTEM32\\",
          ".tmp"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation CLIP+ Launcher - Security",
    "id": 1392,
    "related": [
      {
        "id": "f7385ee2-0e0c-11eb-adc1-0242ac120002",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated use of Clip.exe to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "cmd",
          "&&",
          "clipboard]::"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Obfuscated IEX Invocation - Security",
    "id": 1393,
    "related": [
      {
        "id": "51aa9387-1c53-4153-91cc-d73c59ae1ca9",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the code block linked in the references",
    "references": [
      "https://github.com/danielbohannon/Invoke-Obfuscation/blob/f20e7f843edd0a3a7716736e9eddfa423395dd26/Out-ObfuscatedStringCommand.ps1#L873-L888"
    ],
    "author": "Daniel Bohannon (@Mandiant/@FireEye), oscd.community",
    "date": "2019/11/08",
    "modified": "2022/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection_eid": {
        "EventID": 4697
      },
      "selection_servicefilename": [
        {
          "ServiceFileName|re": "\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\["
        },
        {
          "ServiceFileName|re": "\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\["
        },
        {
          "ServiceFileName|re": "\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\["
        },
        {
          "ServiceFileName|re": "\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}"
        },
        {
          "ServiceFileName|re": "\\\\*mdr\\*\\W\\s*\\)\\.Name"
        },
        {
          "ServiceFileName|re": "\\$VerbosePreference\\.ToString\\("
        },
        {
          "ServiceFileName|re": "\\String\\]\\s*\\$VerbosePreference"
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation STDIN+ Launcher - Security",
    "id": 1394,
    "related": [
      {
        "id": "72862bf2-0eb1-11eb-adc1-0242ac120002",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated use of stdin to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "cmd",
          "powershell"
        ]
      },
      "selection2": {
        "ServiceFileName|contains": [
          "${input}",
          "noexit"
        ]
      },
      "selection3": {
        "ServiceFileName|contains": [
          " /c ",
          " /r "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR+ Launcher - Security",
    "id": 1395,
    "related": [
      {
        "id": "8ca7004b-e620-4ecb-870e-86129b5b8e75",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated use of Environment Variables to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "cmd",
          "\"set",
          "-f"
        ],
        "ServiceFileName|contains": [
          "/c",
          "/r"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation COMPRESS OBFUSCATION - Security",
    "id": 1396,
    "related": [
      {
        "id": "175997c5-803c-4b08-8bb0-70b099f47595",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via COMPRESS OBFUSCATION",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "new-object",
          "text.encoding]::ascii",
          "readtoend"
        ],
        "ServiceFileName|contains": [
          "system.io.compression.deflatestream",
          "system.io.streamreader"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation RUNDLL LAUNCHER - Security",
    "id": 1397,
    "related": [
      {
        "id": "11b52f18-aaec-4d60-9143-5dd8cc4706b9",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via RUNDLL LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "rundll32.exe",
          "shell32.dll",
          "shellexec_rundll",
          "powershell"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Stdin - Security",
    "id": 1398,
    "related": [
      {
        "id": "487c7524-f892-4054-b263-8a0ace63fc25",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via Stdin in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/12",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "set",
          "&&"
        ],
        "ServiceFileName|contains": [
          "environment",
          "invoke",
          "${input)"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Clip - Security",
    "id": 1399,
    "related": [
      {
        "id": "63e3365d-4824-42d8-8b82-e56810fefa0c",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Clip.exe in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains": "(Clipboard|i"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use MSHTA - Security",
    "id": 1400,
    "related": [
      {
        "id": "7e9c7999-0f9b-4d4a-a6ed-af6d553d4af4",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via use MSHTA in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "mshta",
          "vbscript:createobject",
          ".run",
          "window.close"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Rundll32 - Security",
    "id": 1401,
    "related": [
      {
        "id": "641a4bfb-c017-44f7-800c-2aee0184ce9b",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Rundll32 in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "&&",
          "rundll32",
          "shell32.dll",
          "shellexec_rundll"
        ],
        "ServiceFileName|contains": [
          "value",
          "invoke",
          "comspec",
          "iex"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION - Security",
    "id": 1402,
    "related": [
      {
        "id": "14bcba49-a428-42d9-b943-e2ce0f0f7ae6",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via VAR++ LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains|all": [
          "&&set",
          "cmd",
          "/c",
          "-f"
        ],
        "ServiceFileName|contains": [
          "{0}",
          "{1}",
          "{2}",
          "{3}",
          "{4}",
          "{5}"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ISO Image Mounted",
    "id": 1403,
    "status": "test",
    "description": "Detects the mount of an ISO image on an endpoint",
    "references": [
      "https://www.trendmicro.com/vinfo/hk-en/security/news/cybercrime-and-digital-threats/malicious-spam-campaign-uses-iso-image-files-to-deliver-lokibot-and-nanocore",
      "https://www.proofpoint.com/us/blog/threat-insight/threat-actor-profile-ta2719-uses-colorful-lures-deliver-rats-local-languages",
      "https://twitter.com/MsftSecIntel/status/1257324139515269121",
      "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1553.005/T1553.005.md#atomic-test-1---mount-iso-image"
    ],
    "author": "Syed Hasan (@syedhasan009)",
    "date": "2021/05/29",
    "modified": "2023/11/09",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Removable Storage\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 4663,
        "ObjectServer": "Security",
        "ObjectType": "File",
        "ObjectName|startswith": "\\Device\\CdRom"
      },
      "filter_main_generic": {
        "ObjectName": [
          "\\Device\\CdRom0\\autorun.ico",
          "\\Device\\CdRom0\\setup.exe",
          "\\Device\\CdRom0\\setup64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Software installation ISO files"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "First Time Seen Remote Named Pipe",
    "id": 1404,
    "status": "test",
    "description": "This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes",
    "references": [
      "https://twitter.com/menasec1/status/1104489274387451904"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2023/03/14",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection1": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\IPC$"
      },
      "false_positives": {
        "RelativeTargetName": [
          "atsvc",
          "samr",
          "lsarpc",
          "lsass",
          "winreg",
          "netlogon",
          "srvsvc",
          "protected_storage",
          "wkssvc",
          "browser",
          "netdfs",
          "svcctl",
          "spoolss",
          "ntsvcs",
          "LSM_API_service",
          "HydraLsPipe",
          "TermSrv_API_service",
          "MsFteWds",
          "sql\\query",
          "eventlog"
        ]
      },
      "condition": "selection1 and not false_positives"
    },
    "falsepositives": [
      "Update the excluded named pipe to filter out any newly observed legit named pipe"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSASS Access From Non System Account",
    "id": 1405,
    "status": "test",
    "description": "Detects potential mimikatz-like tools accessing LSASS from non system account",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/170105-LSASSMemoryReadAccess/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/06/20",
    "modified": "2023/12/11",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4663,
          4656
        ],
        "AccessMask": [
          "0x100000",
          "0x1010",
          "0x1400",
          "0x1410",
          "0x1418",
          "0x1438",
          "0x143a",
          "0x1f0fff",
          "0x1f1fff",
          "0x1f2fff",
          "0x1f3fff",
          "0x40",
          "143a",
          "1f0fff",
          "1f1fff",
          "1f2fff",
          "1f3fff"
        ],
        "ObjectType": "Process",
        "ObjectName|endswith": "\\lsass.exe"
      },
      "filter_main_service_account": {
        "SubjectUserName|endswith": "$"
      },
      "filter_main_generic": {
        "ProcessName|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\"
        ]
      },
      "filter_main_wmiprvse": {
        "ProcessName": "C:\\Windows\\System32\\wbem\\WmiPrvSE.exe",
        "AccessMask": "0x1410"
      },
      "filter_optional_steam": {
        "ProcessName|contains": "\\SteamLibrary\\steamapps\\"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Credential Dumping Tools Service Execution - Security",
    "id": 1406,
    "related": [
      {
        "id": "4976aa50-8f41-45c6-8b15-ab3fc10e79ed",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects well-known credential dumping tools execution via service execution events",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Florian Roth (Nextron Systems), Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community",
    "date": "2017/03/05",
    "modified": "2022/11/29",
    "tags": [
      "attack.credential_access",
      "attack.execution",
      "attack.t1003.001",
      "attack.t1003.002",
      "attack.t1003.004",
      "attack.t1003.005",
      "attack.t1003.006",
      "attack.t1569.002",
      "attack.s0005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains": [
          "cachedump",
          "dumpsvc",
          "fgexec",
          "gsecdump",
          "mimidrv",
          "pwdump",
          "servpw"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Administrator using credential dumping tool for password recovery"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Malicious Service Installations",
    "id": 1407,
    "related": [
      {
        "id": "2cfe636e-317a-4bee-9f2c-1066d9f54d1a",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects known malicious service installs that only appear in cases of lateral movement, credential dumping, and other suspicious activities.",
    "references": [
      "https://awakesecurity.com/blog/threat-hunting-for-paexec/",
      "https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html",
      "https://blog.f-secure.com/wp-content/uploads/2019/10/CosmicDuke.pdf"
    ],
    "author": "Florian Roth (Nextron Systems), Daniil Yugoslavskiy, oscd.community (update)",
    "date": "2017/03/27",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1003",
      "car.2013-09-005",
      "attack.t1543.003",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697
      },
      "malsvc_apt29": {
        "ServiceName": "javamtsup"
      },
      "condition": "selection and 1 of malsvc_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "WCE wceaux.dll Access",
    "id": 1408,
    "status": "test",
    "description": "Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host",
    "references": [
      "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
      "https://jpcertcc.github.io/ToolAnalysisResultSheet"
    ],
    "author": "Thomas Patzke",
    "date": "2017/06/14",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003",
      "attack.s0005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4656,
          4658,
          4660,
          4663
        ],
        "ObjectName|endswith": "\\wceaux.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Metasploit SMB Authentication",
    "id": 1409,
    "status": "test",
    "description": "Alerts on Metasploit host's authentications on the domain.",
    "references": [
      "https://github.com/rapid7/metasploit-framework/blob/1416b5776d963f21b7b5b45d19f3e961201e0aed/lib/rex/proto/smb/client.rb"
    ],
    "author": "Chakib Gzenayi (@Chak092), Hosni Mribah",
    "date": "2020/05/06",
    "modified": "2024/01/25",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection1": {
        "EventID": [
          4625,
          4624
        ],
        "LogonType": 3,
        "AuthenticationPackageName": "NTLM",
        "WorkstationName|re": "^[A-Za-z0-9]{16}$"
      },
      "selection2": {
        "EventID": 4776,
        "Workstation|re": "^[A-Za-z0-9]{16}$"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Linux hostnames composed of 16 characters."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Metasploit Or Impacket Service Installation Via SMB PsExec",
    "id": 1410,
    "related": [
      {
        "id": "1a17ce75-ff0d-4f02-9709-2b7bb5618cf0",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects usage of Metasploit SMB PsExec (exploit/windows/smb/psexec) and Impacket psexec.py by triggering on specific service installation",
    "references": [
      "https://bczyz1.github.io/2021/01/30/psexec.html"
    ],
    "author": "Bartlomiej Czyz, Relativity",
    "date": "2021/01/21",
    "modified": "2022/10/05",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1570",
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|re": "^%systemroot%\\\\[a-zA-Z]{8}\\.exe$",
        "ServiceName|re": "(^[a-zA-Z]{4}$)|(^[a-zA-Z]{8}$)|(^[a-zA-Z]{16}$)",
        "ServiceStartType": 3,
        "ServiceType": "0x10"
      },
      "filter": {
        "ServiceName": "PSEXESVC"
      },
      "condition": "selection and not filter"
    },
    "fields": [
      "ComputerName",
      "SubjectDomainName",
      "SubjectUserName",
      "ServiceName",
      "ServiceFileName"
    ],
    "falsepositives": [
      "Possible, different agents with a 8 character binary and a 4, 8 or 16 character service name"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Meterpreter or Cobalt Strike Getsystem Service Installation - Security",
    "id": 1411,
    "related": [
      {
        "id": "843544a7-56e0-4dcc-a44f-5cc266dd97d6",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service installation",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
      "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/"
    ],
    "author": "Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)",
    "date": "2019/10/26",
    "modified": "2023/11/15",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1134.001",
      "attack.t1134.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection_eid": {
        "EventID": 4697
      },
      "selection_cli_cmd": {
        "ServiceFileName|contains|all": [
          "/c",
          "echo",
          "\\pipe\\"
        ],
        "ServiceFileName|contains": [
          "cmd",
          "%COMSPEC%"
        ]
      },
      "selection_cli_rundll": {
        "ServiceFileName|contains|all": [
          "rundll32",
          ".dll,a",
          "/p:"
        ]
      },
      "selection_cli_share": {
        "ServiceFileName|startswith": "\\\\\\\\127.0.0.1\\\\ADMIN$\\"
      },
      "condition": "selection_eid and 1 of selection_cli_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NetNTLM Downgrade Attack",
    "id": 1412,
    "related": [
      {
        "id": "d67572a0-e2ec-45d6-b8db-c100d14b8ef2",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects NetNTLM downgrade attack",
    "references": [
      "https://www.optiv.com/blog/post-exploitation-using-netntlm-downgrade-attacks"
    ],
    "author": "Florian Roth (Nextron Systems), wagga",
    "date": "2018/03/20",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Object Access > Audit Registry (Success)"
    },
    "detection": {
      "selection": {
        "EventID": 4657,
        "ObjectName|contains|all": [
          "\\REGISTRY\\MACHINE\\SYSTEM",
          "ControlSet",
          "\\Control\\Lsa"
        ],
        "ObjectValueName": [
          "LmCompatibilityLevel",
          "NtlmMinClientSec",
          "RestrictSendingNTLMTraffic"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Network Access Suspicious desktop.ini Action",
    "id": 1413,
    "status": "test",
    "description": "Detects unusual processes accessing desktop.ini remotely over network share, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.",
    "references": [
      "https://isc.sans.edu/forums/diary/Desktopini+as+a+postexploitation+tool/25912/"
    ],
    "author": "Tim Shelton (HAWK.IO)",
    "date": "2021/12/06",
    "modified": "2022/01/16",
    "tags": [
      "attack.persistence",
      "attack.t1547.009"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ObjectType": "File",
        "RelativeTargetName|endswith": "\\desktop.ini",
        "AccessList|contains": [
          "WriteData",
          "DELETE",
          "WriteDAC",
          "AppendData",
          "AddSubdirectory"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Read only access list authority"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New or Renamed User Account with '$' Character",
    "id": 1414,
    "status": "test",
    "description": "Detects the creation of a user with the \"$\" character. This can be used by attackers to hide a user or trick detection systems that lack the parsing mechanisms.\n",
    "references": [
      "https://twitter.com/SBousseaden/status/1387743867663958021"
    ],
    "author": "Ilyas Ochkov, oscd.community",
    "date": "2019/10/25",
    "modified": "2024/01/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_create": {
        "EventID": 4720,
        "SamAccountName|contains": "$"
      },
      "selection_rename": {
        "EventID": 4781,
        "NewTargetUserName|contains": "$"
      },
      "filter_main_homegroup": {
        "EventID": 4720,
        "TargetUserName": "HomeGroupUser$"
      },
      "condition": "1 of selection_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Denied Access To Remote Desktop",
    "id": 1415,
    "status": "test",
    "description": "This event is generated when an authenticated user who is not allowed to log on remotely attempts to connect to this computer through Remote Desktop.\nOften, this event can be generated by attackers when searching for available windows servers in the network.\n",
    "references": [
      "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=4825"
    ],
    "author": "Pushkarev Dmitry",
    "date": "2020/06/27",
    "modified": "2021/11/27",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4825
      },
      "condition": "selection"
    },
    "fields": [
      "EventCode",
      "AccountName",
      "ClientAddress"
    ],
    "falsepositives": [
      "Valid user was not added to RDP group"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Password Policy Enumerated",
    "id": 1416,
    "status": "experimental",
    "description": "Detects when the password policy is enumerated.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4661",
      "https://github.com/jpalanco/alienvault-ossim/blob/f74359c0c027e42560924b5cff25cdf121e5505a/os-sim/agent/src/ParserUtil.py#L951"
    ],
    "author": "Zach Mathis",
    "date": "2023/05/19",
    "tags": [
      "attack.discovery",
      "attack.t1201"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "dfd8c0f4-e6ad-4e07-b91b-f2fca0ddef64"
    },
    "detection": {
      "selection": {
        "EventID": 4661,
        "AccessList|contains": "%%5392",
        "ObjectServer": "Security Account Manager"
      },
      "condition": "selection"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Pcap Drivers",
    "id": 1417,
    "status": "test",
    "description": "Detects Windows Pcap driver installation based on a list of associated .sys files.",
    "references": [
      "https://ragged-lab.blogspot.com/2020/06/capturing-pcap-driver-installations.html#more"
    ],
    "author": "Cian Heasley",
    "date": "2020/06/10",
    "modified": "2023/04/14",
    "tags": [
      "attack.discovery",
      "attack.credential_access",
      "attack.t1040"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains": [
          "pcap",
          "npcap",
          "npf",
          "nm3",
          "ndiscap",
          "nmnt",
          "windivert",
          "USBPcap",
          "pktmon"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "EventID",
      "ServiceFileName",
      "Account_Name",
      "Computer_Name",
      "Originating_Computer",
      "ServiceName"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Possible PetitPotam Coerce Authentication Attempt",
    "id": 1418,
    "status": "test",
    "description": "Detect PetitPotam coerced authentication activity.",
    "references": [
      "https://github.com/topotam/PetitPotam",
      "https://github.com/splunk/security_content/blob/0dd6de32de2118b2818550df9e65255f4109a56d/detections/endpoint/petitpotam_network_share_access_request.yml"
    ],
    "author": "Mauricio Velazco, Michael Haag",
    "date": "2021/09/02",
    "modified": "2022/08/11",
    "tags": [
      "attack.credential_access",
      "attack.t1187"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName|startswith": "\\\\\\\\",
        "ShareName|endswith": "\\IPC$",
        "RelativeTargetName": "lsarpc",
        "SubjectUserName": "ANONYMOUS LOGON"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown. Feedback welcomed."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PetitPotam Suspicious Kerberos TGT Request",
    "id": 1419,
    "status": "test",
    "description": "Detect suspicious Kerberos TGT requests.\nOnce an attacer obtains a computer certificate by abusing Active Directory Certificate Services in combination with PetitPotam, the next step would be to leverage the certificate for malicious purposes.\nOne way of doing this is to request a Kerberos Ticket Granting Ticket using a tool like Rubeus.\nThis request will generate a 4768 event with some unusual fields depending on the environment.\nThis analytic will require tuning, we recommend filtering Account_Name to the Domain Controller computer accounts.\n",
    "references": [
      "https://github.com/topotam/PetitPotam",
      "https://isc.sans.edu/forums/diary/Active+Directory+Certificate+Services+ADCS+PKI+domain+admin+vulnerability/27668/",
      "https://github.com/splunk/security_content/blob/develop/detections/endpoint/petitpotam_suspicious_kerberos_tgt_request.yml"
    ],
    "author": "Mauricio Velazco, Michael Haag",
    "date": "2021/09/02",
    "modified": "2022/10/05",
    "tags": [
      "attack.credential_access",
      "attack.t1187"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Account Logon > Kerberos Authentication Service\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 4768,
        "TargetUserName|endswith": "$",
        "CertThumbprint|contains": "*"
      },
      "filter_local": {
        "IpAddress": "::1"
      },
      "filter_thumbprint": {
        "CertThumbprint": ""
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "False positives are possible if the environment is using certificates for authentication. We recommend filtering Account_Name to the Domain Controller computer accounts."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Possible DC Shadow Attack",
    "id": 1420,
    "related": [
      {
        "id": "611eab06-a145-4dfa-a295-3ccc5c20f59a",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects DCShadow via create new SPN",
    "references": [
      "https://twitter.com/gentilkiwi/status/1003236624925413376",
      "https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2",
      "https://blog.alsid.eu/dcshadow-explained-4510f52fc19d"
    ],
    "author": "Ilyas Ochkov, oscd.community, Chakib Gzenayi (@Chak092), Hosni Mribah",
    "date": "2019/10/25",
    "modified": "2022/10/17",
    "tags": [
      "attack.credential_access",
      "attack.t1207"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The \"Audit Directory Service Changes\" logging policy must be configured in order to receive events. Audit events are generated only for objects with configured system access control lists (SACLs). Audit events are generated only for objects with configured system access control lists (SACLs) and only when accessed in a manner that matches their SACL settings. This policy covers the following events ids - 5136, 5137, 5138, 5139, 5141. Note that the default policy does not cover User objects. For that a custom AuditRule need to be setup (See https://github.com/OTRF/Set-AuditRule)"
    },
    "detection": {
      "selection1": {
        "EventID": 4742,
        "ServicePrincipalNames|contains": "GC/"
      },
      "selection2": {
        "EventID": 5136,
        "AttributeLDAPDisplayName": "servicePrincipalName",
        "AttributeValue|startswith": "GC/"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Valid on domain controllers; exclude known DCs"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Scripts Installed as Services - Security",
    "id": 1421,
    "related": [
      {
        "id": "a2e5019d-a658-4c6a-92bf-7197b54e2cae",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects powershell script installed as a Service",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
    ],
    "author": "oscd.community, Natalia Shornikova",
    "date": "2020/10/06",
    "modified": "2022/11/29",
    "tags": [
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains": [
          "powershell",
          "pwsh"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Protected Storage Service Access",
    "id": 1422,
    "status": "test",
    "description": "Detects access to a protected_storage service over the network. Potential abuse of DPAPI to extract domain backup keys from Domain Controllers",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190620-DomainDPAPIBackupKeyExtraction/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/10",
    "modified": "2021/11/27",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName|contains": "IPC",
        "RelativeTargetName": "protected_storage"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RDP over Reverse SSH Tunnel WFP",
    "id": 1423,
    "status": "test",
    "description": "Detects svchost hosting RDP termsvcs communicating with the loopback address",
    "references": [
      "https://twitter.com/SBousseaden/status/1096148422984384514",
      "https://github.com/sbousseaden/EVTX-ATTACK-SAMPLES/blob/44fbe85f72ee91582876b49678f9a26292a155fb/Command%20and%20Control/DE_RDP_Tunnel_5156.evtx"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/02/16",
    "modified": "2022/09/02",
    "tags": [
      "attack.defense_evasion",
      "attack.command_and_control",
      "attack.lateral_movement",
      "attack.t1090.001",
      "attack.t1090.002",
      "attack.t1021.001",
      "car.2013-07-002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5156
      },
      "sourceRDP": {
        "SourcePort": 3389,
        "DestAddress": [
          "127.*",
          "::1"
        ]
      },
      "destinationRDP": {
        "DestPort": 3389,
        "SourceAddress": [
          "127.*",
          "::1"
        ]
      },
      "filter_app_container": {
        "FilterOrigin": "AppContainer Loopback"
      },
      "filter_thor": {
        "Application|endswith": [
          "\\thor.exe",
          "\\thor64.exe"
        ]
      },
      "condition": "selection and ( sourceRDP or destinationRDP ) and not 1 of filter*"
    },
    "falsepositives": [
      "Programs that connect locally to the RDP port"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Register new Logon Process by Rubeus",
    "id": 1424,
    "status": "test",
    "description": "Detects potential use of Rubeus via registered new trusted logon process",
    "references": [
      "https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1"
    ],
    "author": "Roberto Rodriguez (source), Ilyas Ochkov (rule), oscd.community",
    "date": "2019/10/24",
    "modified": "2022/10/09",
    "tags": [
      "attack.lateral_movement",
      "attack.privilege_escalation",
      "attack.t1558.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4611,
        "LogonProcessName": "User32LogonProcesss"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Service Registry Key Read Access Request",
    "id": 1425,
    "status": "experimental",
    "description": "Detects \"read access\" requests on the services registry key.\nAdversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\nAdversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts.\n",
    "references": [
      "https://center-for-threat-informed-defense.github.io/summiting-the-pyramid/analytics/service_registry_permissions_weakness_check/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.011/T1574.011.md#atomic-test-1---service-registry-permissions-weakness"
    ],
    "author": "Center for Threat Informed Defense (CTID) Summiting the Pyramid Team",
    "date": "2023/09/28",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: SACLs must be enabled for \"READ_CONTROL\" on the registry keys used in this rule"
    },
    "detection": {
      "selection": {
        "EventID": 4663,
        "ObjectName|contains|all": [
          "\\SYSTEM\\",
          "ControlSet\\Services\\"
        ],
        "AccessList|contains": "%%1538"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Likely from legitimate applications reading their key. Requires heavy tuning"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Remote PowerShell Sessions Network Connections (WinRM)",
    "id": 1426,
    "status": "test",
    "description": "Detects basic PowerShell Remoting (WinRM) by monitoring for network inbound connections to ports 5985 OR 5986",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/09/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5156,
        "DestPort": [
          5985,
          5986
        ],
        "LayerRTID": 44
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of remote PowerShell execution"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Replay Attack Detected",
    "id": 1427,
    "status": "test",
    "description": "Detects possible Kerberos Replay Attack on the domain controllers when \"KRB_AP_ERR_REPEAT\" Kerberos response is sent to the client",
    "references": [
      "https://github.com/Yamato-Security/EnableWindowsLogSettings/blob/7f6d755d45ac7cc9fc35b0cbf498e6aa4ef19def/ConfiguringSecurityLogAuditPolicies.md",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4649"
    ],
    "author": "frack113",
    "date": "2022/10/14",
    "tags": [
      "attack.credential_access",
      "attack.t1558"
    ],
    "logsource": {
      "service": "security",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventID": 4649
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SAM Registry Hive Handle Request",
    "id": 1428,
    "status": "test",
    "description": "Detects handles requested to SAM registry hive",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190725-SAMRegistryHiveHandleRequest/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.discovery",
      "attack.t1012",
      "attack.credential_access",
      "attack.t1552.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4656,
        "ObjectType": "Key",
        "ObjectName|endswith": "\\SAM"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "SubjectDomainName",
      "SubjectUserName",
      "ProcessName",
      "ObjectName"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SCM Database Handle Failure",
    "id": 1429,
    "status": "test",
    "description": "Detects non-system users failing to get a handle of the SCM database.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190826-RemoteSCMHandle/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/12",
    "modified": "2022/07/11",
    "tags": [
      "attack.discovery",
      "attack.t1010"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4656,
        "ObjectType": "SC_MANAGER OBJECT",
        "ObjectName": "ServicesActive",
        "AccessMask": "0xf003f"
      },
      "filter": {
        "SubjectLogonId": "0x3e4"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SCM Database Privileged Operation",
    "id": 1430,
    "status": "test",
    "description": "Detects non-system users performing privileged operation os the SCM database",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190826-RemoteSCMHandle/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Tim Shelton",
    "date": "2019/08/15",
    "modified": "2022/09/18",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1548"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4674,
        "ObjectType": "SC_MANAGER OBJECT",
        "ObjectName": "servicesactive",
        "PrivilegeList": "SeTakeOwnershipPrivilege"
      },
      "filter": {
        "SubjectLogonId": "0x3e4",
        "ProcessName|endswith": ":\\Windows\\System32\\services.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Service Installed By Unusual Client - Security",
    "id": 1431,
    "related": [
      {
        "id": "71c276aa-49cd-43d2-b920-2dcd3e6962d5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a service installed by a client which has PID 0 or whose parent has PID 0",
    "references": [
      "https://www.elastic.co/guide/en/security/current/windows-service-installed-via-an-unusual-client.html",
      "https://www.x86matthew.com/view_post?id=create_svc_rpc",
      "https://twitter.com/SBousseaden/status/1490608838701166596"
    ],
    "author": "Tim Rauch (Nextron Systems), Elastic (idea)",
    "date": "2022/09/15",
    "modified": "2023/01/04",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1543"
    ],
    "logsource": {
      "service": "security",
      "product": "windows",
      "definition": "Requirements: The System Security Extension audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection_eid": {
        "EventID": 4697
      },
      "selection_pid": [
        {
          "ClientProcessId": 0
        },
        {
          "ParentProcessId": 0
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote Access Tool Services Have Been Installed - Security",
    "id": 1432,
    "related": [
      {
        "id": "1a31b18a-f00c-4061-9900-f735b96c99fc",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects service installation of different remote access tools software. These software are often abused by threat actors to perform",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Connor Martin, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/23",
    "modified": "2023/11/15",
    "tags": [
      "attack.persistence",
      "attack.t1543.003",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The 'System Security Extension' audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceName|contains": [
          "AmmyyAdmin",
          "Atera",
          "BASupportExpressSrvcUpdater",
          "BASupportExpressStandaloneService",
          "chromoting",
          "GoToAssist",
          "GoToMyPC",
          "jumpcloud",
          "LMIGuardianSvc",
          "LogMeIn",
          "monblanking",
          "Parsec",
          "RManService",
          "RPCPerformanceService",
          "RPCService",
          "SplashtopRemoteService",
          "SSUService",
          "TeamViewer",
          "TightVNC",
          "vncserver",
          "Zoho"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "The rule doesn't look for anything suspicious so false positives are expected. If you use one of the tools mentioned, comment it out"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SMB Create Remote File Admin Share",
    "id": 1433,
    "status": "test",
    "description": "Look for non-system accounts SMB accessing a file with write (0x2) access mask via administrative share (i.e C$).",
    "references": [
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/f7a58156dbfc9b019f17f638b8c62d22e557d350/playbooks/WIN-201012004336.yaml",
      "https://securitydatasets.com/notebooks/atomic/windows/lateral_movement/SDWIN-200806015757.html?highlight=create%20file"
    ],
    "author": "Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research)",
    "date": "2020/08/06",
    "modified": "2021/11/27",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName|endswith": "C$",
        "AccessMask": "0x2"
      },
      "filter": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "A New Trust Was Created To A Domain",
    "id": 1434,
    "status": "stable",
    "description": "Addition of domains is seldom and should be verified for legitimacy.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4706"
    ],
    "author": "Thomas Patzke",
    "date": "2019/12/03",
    "modified": "2024/01/16",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4706
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate extension of domain structure"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Addition of SID History to Active Directory Object",
    "id": 1435,
    "status": "stable",
    "description": "An attacker can use the SID history attribute to gain additional privileges.",
    "references": [
      "https://adsecurity.org/?p=1772"
    ],
    "author": "Thomas Patzke, @atc_project (improvements)",
    "date": "2017/02/19",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1134.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection1": {
        "EventID": [
          4765,
          4766
        ]
      },
      "selection2": {
        "EventID": 4738
      },
      "selection3": {
        "SidHistory": [
          "-",
          "%%1793"
        ]
      },
      "filter_null": {
        "SidHistory": null
      },
      "condition": "selection1 or (selection2 and not selection3 and not filter_null)"
    },
    "falsepositives": [
      "Migration of an account into a new domain"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Win Susp Computer Name Containing Samtheadmin",
    "id": 1436,
    "status": "test",
    "description": "Detects suspicious computer name samtheadmin-{1..100}$ generated by hacktool",
    "references": [
      "https://twitter.com/malmoeb/status/1511760068743766026",
      "https://github.com/WazeHell/sam-theadmin/blob/main/sam_the_admin.py",
      "https://github.com/helloexp/0day/blob/614227a7b9beb0e91e7e2c6a5e532e6f7a8e883c/00-CVE_EXP/CVE-2021-42287/sam-the-admin/sam_the_admin.py"
    ],
    "author": "elhoim",
    "date": "2022/09/09",
    "modified": "2023/01/04",
    "tags": [
      "cve.2021.42278",
      "cve.2021.42287",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1078"
    ],
    "logsource": {
      "service": "security",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "SamAccountName|startswith": "SAMTHEADMIN-",
        "SamAccountName|endswith": "$"
      },
      "selection2": {
        "TargetUserName|startswith": "SAMTHEADMIN-",
        "TargetUserName|endswith": "$"
      },
      "condition": "1 of selection*"
    },
    "fields": [
      "EventID",
      "SamAccountName",
      "SubjectUserName",
      "TargetUserName"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Password Change on Directory Service Restore Mode (DSRM) Account",
    "id": 1437,
    "status": "stable",
    "description": "The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.",
    "references": [
      "https://adsecurity.org/?p=1714"
    ],
    "author": "Thomas Patzke",
    "date": "2017/02/19",
    "modified": "2020/08/23",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4794
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Initial installation of a domain controller"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Account Tampering - Suspicious Failed Logon Reasons",
    "id": 1438,
    "status": "test",
    "description": "This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.",
    "references": [
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625",
      "https://twitter.com/SBousseaden/status/1101431884540710913"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/02/19",
    "modified": "2022/06/29",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.initial_access",
      "attack.t1078"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4625,
          4776
        ],
        "Status": [
          "0xC0000072",
          "0xC000006F",
          "0xC0000070",
          "0xC0000413",
          "0xC000018C",
          "0xC000015B"
        ]
      },
      "filter": {
        "SubjectUserSid": "S-1-0-0"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "User using a disabled account"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Kerberos Manipulation",
    "id": 1439,
    "status": "test",
    "description": "Detects failed Kerberos TGT issue operation. This can be a sign of manipulations of TGT messages by an attacker.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4771"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/02/10",
    "modified": "2024/01/16",
    "tags": [
      "attack.credential_access",
      "attack.t1212"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          675,
          4768,
          4769,
          4771
        ],
        "Status": [
          "0x9",
          "0xA",
          "0xB",
          "0xF",
          "0x10",
          "0x11",
          "0x13",
          "0x14",
          "0x1A",
          "0x1F",
          "0x21",
          "0x22",
          "0x23",
          "0x24",
          "0x26",
          "0x27",
          "0x28",
          "0x29",
          "0x2C",
          "0x2D",
          "0x2E",
          "0x2F",
          "0x31",
          "0x32",
          "0x3E",
          "0x3F",
          "0x40",
          "0x41",
          "0x43",
          "0x44"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Faulty legacy applications"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious LDAP-Attributes Used",
    "id": 1440,
    "status": "test",
    "description": "Detects the usage of particular AttributeLDAPDisplayNames, which are known for data exchange via LDAP by the tool LDAPFragger and are additionally not commonly used in companies.",
    "references": [
      "https://medium.com/@ivecodoe/detecting-ldapfragger-a-newly-released-cobalt-strike-beacon-using-ldap-for-c2-communication-c274a7f00961",
      "https://blog.fox-it.com/2020/03/19/ldapfragger-command-and-control-over-ldap-attributes/",
      "https://github.com/fox-it/LDAPFragger"
    ],
    "author": "xknow @xknow_infosec",
    "date": "2019/03/24",
    "modified": "2022/10/05",
    "tags": [
      "attack.t1001.003",
      "attack.command_and_control"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The \"Audit Directory Service Changes\" logging policy must be configured in order to receive events. Audit events are generated only for objects with configured system access control lists (SACLs). Audit events are generated only for objects with configured system access control lists (SACLs) and only when accessed in a manner that matches their SACL settings. This policy covers the following events ids - 5136, 5137, 5138, 5139, 5141. Note that the default policy does not cover User objects. For that a custom AuditRule need to be setup (See https://github.com/OTRF/Set-AuditRule)"
    },
    "detection": {
      "selection": {
        "EventID": 5136,
        "AttributeValue|contains": "*",
        "AttributeLDAPDisplayName": [
          "primaryInternationalISDNNumber",
          "otherFacsimileTelephoneNumber",
          "primaryTelexNumber"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Companies, who may use these default LDAP-Attributes for personal information"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Windows ANONYMOUS LOGON Local Account Created",
    "id": 1441,
    "status": "test",
    "description": "Detects the creation of suspicious accounts similar to ANONYMOUS LOGON, such as using additional spaces. Created as an covering detection for exclusion of Logon Type 3 from ANONYMOUS LOGON accounts.",
    "references": [
      "https://twitter.com/SBousseaden/status/1189469425482829824"
    ],
    "author": "James Pemberton / @4A616D6573",
    "date": "2019/10/31",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.t1136.001",
      "attack.t1136.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4720,
        "SamAccountName|contains|all": [
          "ANONYMOUS",
          "LOGON"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Remote Logon with Explicit Credentials",
    "id": 1442,
    "status": "test",
    "description": "Detects suspicious processes logging on with explicit credentials",
    "references": [
      "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view"
    ],
    "author": "oscd.community, Teymur Kheirkhabarov @HeirhabarovT, Zach Stanford @svch0st, Tim Shelton",
    "date": "2020/10/05",
    "modified": "2022/08/03",
    "tags": [
      "attack.t1078",
      "attack.lateral_movement"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4648,
        "ProcessName|endswith": [
          "\\cmd.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\winrs.exe",
          "\\wmic.exe",
          "\\net.exe",
          "\\net1.exe",
          "\\reg.exe"
        ]
      },
      "filter1": {
        "TargetServerName": "localhost"
      },
      "filter2": {
        "SubjectUserName|endswith": "$",
        "TargetUserName|endswith": "$"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Administrators that use the RunAS command or scheduled tasks"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Password Dumper Activity on LSASS",
    "id": 1443,
    "status": "test",
    "description": "Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN",
    "references": [
      "https://twitter.com/jackcr/status/807385668833968128"
    ],
    "author": "sigma",
    "date": "2017/02/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4656,
        "ProcessName|endswith": "\\lsass.exe",
        "AccessMask": "0x705",
        "ObjectType": "SAM_DOMAIN"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious AccessMask Requested From LSASS",
    "id": 1444,
    "status": "experimental",
    "description": "Detects process handle on LSASS process with certain access mask",
    "references": [
      "https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html",
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Roberto Rodriguez, Teymur Kheirkhabarov, Dimitrios Slamaris, Mark Russinovich, Aleksey Potapov, oscd.community (update)",
    "date": "2019/11/01",
    "modified": "2023/12/19",
    "tags": [
      "attack.credential_access",
      "car.2019-04-004",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_1": {
        "EventID": 4656,
        "ObjectName|endswith": "\\lsass.exe",
        "AccessMask|contains": [
          "0x40",
          "0x1400",
          "0x100000",
          "0x1410",
          "0x1010",
          "0x1438",
          "0x143a",
          "0x1418",
          "0x1f0fff",
          "0x1f1fff",
          "0x1f2fff",
          "0x1f3fff"
        ]
      },
      "selection_2": {
        "EventID": 4663,
        "ObjectName|endswith": "\\lsass.exe",
        "AccessList|contains": [
          "4484",
          "4416"
        ]
      },
      "filter_main_specific": {
        "ProcessName|endswith": [
          "\\csrss.exe",
          "\\GamingServices.exe",
          "\\lsm.exe",
          "\\MicrosoftEdgeUpdate.exe",
          "\\minionhost.exe",
          "\\MRT.exe",
          "\\MsMpEng.exe",
          "\\perfmon.exe",
          "\\procexp.exe",
          "\\procexp64.exe",
          "\\svchost.exe",
          "\\taskmgr.exe",
          "\\thor.exe",
          "\\thor64.exe",
          "\\vmtoolsd.exe",
          "\\VsTskMgr.exe",
          "\\wininit.exe",
          "\\wmiprvse.exe",
          "RtkAudUService64"
        ],
        "ProcessName|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
          ":\\Windows\\SysNative\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWow64\\",
          ":\\Windows\\Temp\\asgard2-agent\\"
        ]
      },
      "filter_main_generic": {
        "ProcessName|contains": ":\\Program Files"
      },
      "filter_main_exact": {
        "ProcessName|endswith": [
          ":\\Windows\\System32\\taskhostw.exe",
          ":\\Windows\\System32\\msiexec.exe",
          ":\\Windows\\CCM\\CcmExec.exe"
        ]
      },
      "filter_main_sysmon": {
        "ProcessName|endswith": ":\\Windows\\Sysmon64.exe",
        "AccessList|contains": "%%4484"
      },
      "filter_main_aurora": {
        "ProcessName|contains": ":\\Windows\\Temp\\asgard2-agent-sc\\aurora\\",
        "ProcessName|endswith": "\\aurora-agent-64.exe",
        "AccessList|contains": "%%4484"
      },
      "filter_main_scenarioengine": {
        "ProcessName|endswith": "\\x64\\SCENARIOENGINE.EXE",
        "AccessList|contains": "%%4484"
      },
      "filter_main_avira1": {
        "ProcessName|contains|all": [
          ":\\Users\\",
          "\\AppData\\Local\\Temp\\is-"
        ],
        "ProcessName|endswith": "\\avira_system_speedup.tmp",
        "AccessList|contains": "%%4484"
      },
      "filter_main_avira2": {
        "ProcessName|contains": ":\\Windows\\Temp\\",
        "ProcessName|endswith": "\\avira_speedup_setup_update.tmp",
        "AccessList|contains": "%%4484"
      },
      "filter_main_snmp": {
        "ProcessName|endswith": ":\\Windows\\System32\\snmp.exe",
        "AccessList|contains": "%%4484"
      },
      "filter_main_googleupdate": {
        "ProcessName|contains": ":\\Windows\\SystemTemp\\",
        "ProcessName|endswith": "\\GoogleUpdate.exe",
        "AccessList|contains": "%%4484"
      },
      "filter_optional_procmon": {
        "ProcessName|endswith": [
          "\\procmon64.exe",
          "\\procmon.exe"
        ],
        "AccessList|contains": "%%4484"
      },
      "condition": "1 of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate software accessing LSASS process for legitimate reason; update the whitelist with it"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Reconnaissance Activity",
    "id": 1445,
    "status": "test",
    "description": "Detects activity as \"net user administrator /domain\" and \"net group domain admins /domain\"",
    "references": [
      "https://findingbad.blogspot.de/2017/01/hunting-what-does-it-look-like.html"
    ],
    "author": "Florian Roth (Nextron Systems), Jack Croock (method), Jonhnathan Ribeiro (improvements), oscd.community",
    "date": "2017/03/07",
    "modified": "2022/08/22",
    "tags": [
      "attack.discovery",
      "attack.t1087.002",
      "attack.t1069.002",
      "attack.s0039"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The volume of Event ID 4661 is high on Domain Controllers and therefore \"Audit SAM\" and \"Audit Kernel Object\" advanced audit policy settings are not configured in the recommendations for server systems"
    },
    "detection": {
      "selection": {
        "EventID": 4661,
        "AccessMask": "0x2d",
        "ObjectType": [
          "SAM_USER",
          "SAM_GROUP"
        ],
        "ObjectName|startswith": "S-1-5-21-",
        "ObjectName|endswith": [
          "-500",
          "-512"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Password Protected ZIP File Opened",
    "id": 1446,
    "status": "test",
    "description": "Detects the extraction of password protected ZIP archives. See the filename variable for more details on which file has been opened.",
    "references": [
      "https://twitter.com/sbousseaden/status/1523383197513379841"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5379,
        "TargetName|contains": "Microsoft_Windows_Shell_ZipFolder:filename"
      },
      "filter": {
        "TargetName|contains": "\\Temporary Internet Files\\Content.Outlook"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate used of encrypted ZIP files"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Password Protected ZIP File Opened (Suspicious Filenames)",
    "id": 1447,
    "status": "test",
    "description": "Detects the extraction of password protected ZIP archives with suspicious file names. See the filename variable for more details on which file has been opened.",
    "references": [
      "https://twitter.com/sbousseaden/status/1523383197513379841"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/09",
    "tags": [
      "attack.command_and_control",
      "attack.defense_evasion",
      "attack.t1027",
      "attack.t1105",
      "attack.t1036"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5379,
        "TargetName|contains": "Microsoft_Windows_Shell_ZipFolder:filename"
      },
      "selection_filename": {
        "TargetName|contains": [
          "invoice",
          "new order",
          "rechnung",
          "factura",
          "delivery",
          "purchase",
          "order",
          "payment"
        ]
      },
      "condition": "selection and selection_filename"
    },
    "falsepositives": [
      "Legitimate used of encrypted ZIP files"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Password Protected ZIP File Opened (Email Attachment)",
    "id": 1448,
    "status": "test",
    "description": "Detects the extraction of password protected ZIP archives. See the filename variable for more details on which file has been opened.",
    "references": [
      "https://twitter.com/sbousseaden/status/1523383197513379841"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.initial_access",
      "attack.t1027",
      "attack.t1566.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5379,
        "TargetName|contains|all": [
          "Microsoft_Windows_Shell_ZipFolder:filename",
          "\\Temporary Internet Files\\Content.Outlook"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate used of encrypted ZIP files"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Outbound Kerberos Connection - Security",
    "id": 1449,
    "related": [
      {
        "id": "e54979bd-c5f9-4d6c-967b-a04b19ac4c74",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious outbound network activity via kerberos default port indicating possible lateral movement or first stage PrivEsc via delegation.",
    "references": [
      "https://github.com/GhostPack/Rubeus"
    ],
    "author": "Ilyas Ochkov, oscd.community",
    "date": "2019/10/24",
    "modified": "2023/01/30",
    "tags": [
      "attack.lateral_movement",
      "attack.t1558.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5156,
        "DestPort": 88
      },
      "filter_exact": {
        "Application": [
          "C:\\Windows\\System32\\lsass.exe",
          "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe",
          "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
          "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Web Browsers"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Possible Shadow Credentials Added",
    "id": 1450,
    "status": "test",
    "description": "Detects possible addition of shadow credentials to an active directory object.",
    "references": [
      "https://www.elastic.co/guide/en/security/8.4/potential-shadow-credentials-added-to-ad-object.html",
      "https://cyberstoph.org/posts/2022/03/detecting-shadow-credentials/",
      "https://twitter.com/SBousseaden/status/1581300963650187264?"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Elastic (idea)",
    "date": "2022/10/17",
    "tags": [
      "attack.credential_access",
      "attack.t1556"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The \"Audit Directory Service Changes\" logging policy must be configured in order to receive events. Audit events are generated only for objects with configured system access control lists (SACLs). Audit events are generated only for objects with configured system access control lists (SACLs) and only when accessed in a manner that matches their SACL settings. This policy covers the following events ids - 5136, 5137, 5138, 5139, 5141. Note that the default policy does not cover User objects. For that a custom AuditRule need to be setup (See https://github.com/OTRF/Set-AuditRule)"
    },
    "detection": {
      "selection": {
        "EventID": 5136,
        "AttributeLDAPDisplayName": "msDS-KeyCredentialLink"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Modifications in the msDS-KeyCredentialLink attribute can be done legitimately by the Azure AD Connect synchronization account or the ADFS service account. These accounts can be added as Exceptions. (From elastic FP section)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PsExec Execution",
    "id": 1451,
    "status": "test",
    "description": "detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one",
    "references": [
      "https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2022/08/11",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection1": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\IPC$",
        "RelativeTargetName|endswith": [
          "-stdin",
          "-stdout",
          "-stderr"
        ]
      },
      "filter": {
        "RelativeTargetName|startswith": "PSEXESVC"
      },
      "condition": "selection1 and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Access to Sensitive File Extensions",
    "id": 1452,
    "related": [
      {
        "id": "286b47ed-f6fe-40b3-b3a8-35129acd43bc",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects known sensitive file extensions accessed on a network share",
    "references": [
      "Internal Research"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2022/10/09",
    "tags": [
      "attack.collection",
      "attack.t1039"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "RelativeTargetName|endswith": [
          ".bak",
          ".dmp",
          ".edb",
          ".kirbi",
          ".msg",
          ".nsf",
          ".nst",
          ".oab",
          ".ost",
          ".pst",
          ".rdp",
          "\\groups.xml"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Help Desk operator doing backup or re-imaging end user machine or backup software",
      "Users working with these data types or exchanging message files"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Kerberos RC4 Ticket Encryption",
    "id": 1453,
    "status": "test",
    "description": "Detects service ticket requests using RC4 encryption type",
    "references": [
      "https://adsecurity.org/?p=3458",
      "https://www.trimarcsecurity.com/single-post/TrimarcResearch/Detecting-Kerberoasting-Activity"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/02/06",
    "modified": "2022/06/19",
    "tags": [
      "attack.credential_access",
      "attack.t1558.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4769,
        "TicketOptions": "0x40810000",
        "TicketEncryptionType": "0x17"
      },
      "reduction": {
        "ServiceName|endswith": "$"
      },
      "condition": "selection and not reduction"
    },
    "falsepositives": [
      "Service accounts used on legacy systems (e.g. NetApp)",
      "Windows Domains with DFL 2003 and legacy systems"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Scheduled Task Creation",
    "id": 1454,
    "status": "test",
    "description": "Detects suspicious scheduled task creation events. Based on attributes such as paths, commands line flags, etc.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4698"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/05",
    "modified": "2022/12/07",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The Advanced Audit Policy setting Object Access > Audit Other Object Access Events has to be configured to allow this detection. We also recommend extracting the Command field from the embedded XML in the event data."
    },
    "detection": {
      "selection_eid": {
        "EventID": 4698
      },
      "selection_paths": {
        "TaskContent|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\",
          "\\Users\\Public\\",
          "\\WINDOWS\\Temp\\",
          "C:\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Temporary Internet",
          "C:\\ProgramData\\",
          "C:\\Perflogs\\"
        ]
      },
      "selection_commands": {
        "TaskContent|contains": [
          "regsvr32",
          "rundll32",
          "cmd.exe</Command>",
          "cmd</Command>",
          "<Arguments>/c ",
          "<Arguments>/k ",
          "<Arguments>/r ",
          "powershell",
          "pwsh",
          "mshta",
          "wscript",
          "cscript",
          "certutil",
          "bitsadmin",
          "bash.exe",
          "bash ",
          "scrcons",
          "wmic ",
          "wmic.exe",
          "forfiles",
          "scriptrunner",
          "hh.exe"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Important Scheduled Task Deleted/Disabled",
    "id": 1455,
    "related": [
      {
        "id": "dbc1f800-0fe0-4bc0-9c66-292c2abe3f78",
        "type": "similar"
      },
      {
        "id": "9ac94dc8-9042-493c-ba45-3b5e7c86b980",
        "type": "similar"
      },
      {
        "id": "9e3cb244-bdb8-4632-8c90-6079c8f4f16d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when adversaries stop services or processes by deleting or disabling their respective scheduled tasks in order to conduct data destructive activities",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4699",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4701"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/05",
    "modified": "2023/03/13",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The Advanced Audit Policy setting Object Access > Audit Other Object Access Events has to be configured to allow this detection. We also recommend extracting the Command field from the embedded XML in the event data."
    },
    "detection": {
      "selection": {
        "EventID": [
          4699,
          4701
        ],
        "TaskName|contains": [
          "\\Windows\\SystemRestore\\SR",
          "\\Windows\\Windows Defender\\",
          "\\Windows\\BitLocker",
          "\\Windows\\WindowsBackup\\",
          "\\Windows\\WindowsUpdate\\",
          "\\Windows\\UpdateOrchestrator\\Schedule",
          "\\Windows\\ExploitGuard"
        ]
      },
      "filter_sys_username": {
        "EventID": 4699,
        "SubjectUserName|endswith": "$",
        "TaskName|contains": "\\Windows\\Windows Defender\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Scheduled Task Update",
    "id": 1456,
    "related": [
      {
        "id": "1c0e41cd-21bb-4433-9acc-4a2cd6367b9b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects update to a scheduled task event that contain suspicious keywords.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4698"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/05",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The Advanced Audit Policy setting Object Access > Audit Other Object Access Events has to be configured to allow this detection. We also recommend extracting the Command field from the embedded XML in the event data."
    },
    "detection": {
      "selection_eid": {
        "EventID": 4702
      },
      "selection_paths": {
        "TaskContentNew|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\",
          "\\Users\\Public\\",
          "\\WINDOWS\\Temp\\",
          "C:\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Temporary Internet",
          "C:\\ProgramData\\",
          "C:\\Perflogs\\"
        ]
      },
      "selection_commands": {
        "TaskContentNew|contains": [
          "regsvr32",
          "rundll32",
          "cmd.exe</Command>",
          "cmd</Command>",
          "<Arguments>/c ",
          "<Arguments>/k ",
          "<Arguments>/r ",
          "powershell",
          "pwsh",
          "mshta",
          "wscript",
          "cscript",
          "certutil",
          "bitsadmin",
          "bash.exe",
          "bash ",
          "scrcons",
          "wmic ",
          "wmic.exe",
          "forfiles",
          "scriptrunner",
          "hh.exe"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Secure Deletion with SDelete",
    "id": 1457,
    "status": "test",
    "description": "Detects renaming of file while deletion with SDelete tool.",
    "references": [
      "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/sdelete.htm",
      "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
      "https://docs.microsoft.com/en-gb/sysinternals/downloads/sdelete"
    ],
    "author": "Thomas Patzke",
    "date": "2017/06/14",
    "modified": "2021/11/27",
    "tags": [
      "attack.impact",
      "attack.defense_evasion",
      "attack.t1070.004",
      "attack.t1027.005",
      "attack.t1485",
      "attack.t1553.002",
      "attack.s0195"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4656,
          4663,
          4658
        ],
        "ObjectName|endswith": [
          ".AAA",
          ".ZZZ"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of SDelete"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Unauthorized System Time Modification",
    "id": 1458,
    "status": "test",
    "description": "Detect scenarios where a potentially unauthorized application or user is modifying the system time.",
    "references": [
      "Private Cuckoo Sandbox (from many years ago, no longer have hash, NDA as well)",
      "Live environment caused by malware",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4616"
    ],
    "author": "@neu5ron",
    "date": "2019/02/05",
    "modified": "2022/08/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.006"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : System > Audit Security State Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\System\\Audit Security State Change"
    },
    "detection": {
      "selection": {
        "EventID": 4616
      },
      "filter1": {
        "ProcessName": [
          "C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe",
          "C:\\Windows\\System32\\VBoxService.exe",
          "C:\\Windows\\System32\\oobe\\msoobe.exe"
        ]
      },
      "filter2": {
        "ProcessName": "C:\\Windows\\System32\\svchost.exe",
        "SubjectUserSid": "S-1-5-19"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "HyperV or other virtualization technologies with binary not listed in filter portion of detection"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Remote Service Activity via SVCCTL Named Pipe",
    "id": 1459,
    "status": "test",
    "description": "Detects remote service activity via remote access to the svcctl named pipe",
    "references": [
      "https://blog.menasec.net/2019/03/threat-hunting-26-remote-windows.html"
    ],
    "author": "Samir Bousseaden",
    "date": "2019/04/03",
    "modified": "2022/08/11",
    "tags": [
      "attack.lateral_movement",
      "attack.persistence",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "ShareName": "\\\\\\\\\\*\\\\IPC$",
        "RelativeTargetName": "svcctl",
        "Accesses|contains": "WriteData"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SysKey Registry Keys Access",
    "id": 1460,
    "status": "test",
    "description": "Detects handle requests and access operations to specific registry keys to calculate the SysKey",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190625-RegKeyAccessSyskey/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/12",
    "modified": "2021/11/27",
    "tags": [
      "attack.discovery",
      "attack.t1012"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": [
          4656,
          4663
        ],
        "ObjectType": "key",
        "ObjectName|endswith": [
          "lsa\\JD",
          "lsa\\GBG",
          "lsa\\Skew1",
          "lsa\\Data"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Sysmon Channel Reference Deletion",
    "id": 1461,
    "status": "test",
    "description": "Potential threat actor tampering with Sysmon manifest and eventually disabling it",
    "references": [
      "https://twitter.com/Flangvik/status/1283054508084473861",
      "https://twitter.com/SecurityJosh/status/1283027365770276866",
      "https://securityjosh.github.io/2020/04/23/Mute-Sysmon.html",
      "https://gist.github.com/Cyb3rWard0g/cf08c38c61f7e46e8404b38201ca01c8"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/07/14",
    "modified": "2022/10/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection1": {
        "EventID": 4657,
        "ObjectName|contains": [
          "WINEVT\\Publishers\\{5770385f-c22a-43e0-bf4c-06f5698ffbd9}",
          "WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational"
        ],
        "ObjectValueName": "Enabled",
        "NewValue": 0
      },
      "selection2": {
        "EventID": 4663,
        "ObjectName|contains": [
          "WINEVT\\Publishers\\{5770385f-c22a-43e0-bf4c-06f5698ffbd9}",
          "WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational"
        ],
        "AccessMask": 65536
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Tap Driver Installation - Security",
    "id": 1462,
    "related": [
      {
        "id": "8e4cf0e5-aa5d-4dc3-beff-dc26917744a9",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the installation of a well-known TAP driver service. This could be a sign of potential preparation for data exfiltration using tunnelling techniques.\n",
    "references": [
      "https://community.openvpn.net/openvpn/wiki/ManagingWindowsTAPDrivers"
    ],
    "author": "Daniil Yugoslavskiy, Ian Davis, oscd.community",
    "date": "2019/10/24",
    "modified": "2022/11/29",
    "tags": [
      "attack.exfiltration",
      "attack.t1048"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: The System Security Extension audit subcategory need to be enabled to log the EID 4697"
    },
    "detection": {
      "selection": {
        "EventID": 4697,
        "ServiceFileName|contains": "tap0901"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate OpenVPN TAP installation"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Teams Application Related ObjectAcess Event",
    "id": 1463,
    "status": "test",
    "description": "Detects an access to authentication tokens and accounts of Microsoft Teams desktop application.",
    "references": [
      "https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/",
      "https://www.vectra.ai/blogpost/undermining-microsoft-teams-security-by-mining-tokens"
    ],
    "author": "@SerkinValery",
    "date": "2022/09/16",
    "tags": [
      "attack.credential_access",
      "attack.t1528"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4663,
        "ObjectName|contains": [
          "\\Microsoft\\Teams\\Cookies",
          "\\Microsoft\\Teams\\Local Storage\\leveldb"
        ]
      },
      "filter": {
        "ProcessName|contains": "\\Microsoft\\Teams\\current\\Teams.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Transferring Files with Credential Data via Network Shares",
    "id": 1464,
    "related": [
      {
        "id": "2e69f167-47b5-4ae7-a390-47764529eff5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Transferring files with well-known filenames (sensitive files with credential data) using network shares",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community",
    "date": "2019/10/22",
    "modified": "2021/11/30",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002",
      "attack.t1003.001",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "RelativeTargetName|contains": [
          "\\mimidrv",
          "\\lsass",
          "\\windows\\minidump\\",
          "\\hiberfil",
          "\\sqldmpr",
          "\\sam",
          "\\ntds.dit",
          "\\security"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Transferring sensitive files for legitimate administration work by legitimate administrator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "User Added to Local Administrator Group",
    "id": 1465,
    "status": "stable",
    "description": "Detects the addition of a new member to the local administrator group, which could be legitimate activity or a sign of privilege escalation activity",
    "references": [
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4732",
      "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-identifiers"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/14",
    "modified": "2021/01/17",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1078",
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_eid": {
        "EventID": 4732
      },
      "selection_group": [
        {
          "TargetUserName|startswith": "Administr"
        },
        {
          "TargetSid": "S-1-5-32-544"
        }
      ],
      "filter_main_computer_accounts": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "User Couldn't Call a Privileged Service 'LsaRegisterLogonProcess'",
    "id": 1466,
    "status": "test",
    "description": "The 'LsaRegisterLogonProcess' function verifies that the application making the function call is a logon process by checking that it has the SeTcbPrivilege privilege set. Possible Rubeus tries to get a handle to LSA.",
    "references": [
      "https://posts.specterops.io/hunting-in-active-directory-unconstrained-delegation-forests-trusts-71f2b33688e1"
    ],
    "author": "Roberto Rodriguez (source), Ilyas Ochkov (rule), oscd.community",
    "date": "2019/10/24",
    "modified": "2022/12/25",
    "tags": [
      "attack.lateral_movement",
      "attack.privilege_escalation",
      "attack.t1558.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4673,
        "Service": "LsaRegisterLogonProcess()",
        "Keywords": "0x8010000000000000"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Local User Creation",
    "id": 1467,
    "status": "test",
    "description": "Detects local user creation on Windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your Windows server logs and not on your DC logs.\n",
    "references": [
      "https://patrick-bareiss.com/detecting-local-user-creation-in-ad-with-sigma/"
    ],
    "author": "Patrick Bareiss",
    "date": "2019/04/18",
    "modified": "2021/01/17",
    "tags": [
      "attack.persistence",
      "attack.t1136.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4720
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Domain Controller Logs",
      "Local accounts managed by privileged account management tools"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Privileged System Service Operation - SeLoadDriverPrivilege",
    "id": 1468,
    "status": "test",
    "description": "Detects the usage of the 'SeLoadDriverPrivilege' privilege. This privilege is required to load or unload a device driver.\nWith this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode.\nThis user right does not apply to Plug and Play device drivers.\nIf you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers.\nThis will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff.\n",
    "references": [
      "https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/",
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4673"
    ],
    "author": "xknow (@xknow_infosec), xorxes (@xor_xes)",
    "date": "2019/04/08",
    "modified": "2023/01/20",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection_1": {
        "EventID": 4673,
        "PrivilegeList": "SeLoadDriverPrivilege",
        "Service": "-"
      },
      "filter_exact": {
        "ProcessName": [
          "C:\\Windows\\System32\\Dism.exe",
          "C:\\Windows\\System32\\rundll32.exe",
          "C:\\Windows\\System32\\fltMC.exe",
          "C:\\Windows\\HelpPane.exe",
          "C:\\Windows\\System32\\mmc.exe",
          "C:\\Windows\\System32\\svchost.exe",
          "C:\\Windows\\System32\\wimserv.exe",
          "C:\\Windows\\System32\\RuntimeBroker.exe",
          "C:\\Windows\\System32\\SystemSettingsBroker.exe",
          "C:\\Windows\\explorer.exe"
        ]
      },
      "filter_endswith": {
        "ProcessName|endswith": [
          "\\procexp64.exe",
          "\\procexp.exe",
          "\\procmon64.exe",
          "\\procmon.exe",
          "\\Google\\Chrome\\Application\\chrome.exe",
          "\\AppData\\Local\\Microsoft\\Teams\\current\\Teams.exe"
        ]
      },
      "filter_startswith": {
        "ProcessName|startswith": "C:\\Program Files\\WindowsApps\\Microsoft"
      },
      "condition": "selection_1 and not 1 of filter_*"
    },
    "falsepositives": [
      "Other legimate tools loading drivers. Including but not limited to, Sysinternals, CPU-Z, AVs etc. A baseline needs to be created according to the used products and allowed tools. A good thing to do is to try and exclude users who are allowed to load drivers."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "User Logoff Event",
    "id": 1469,
    "status": "test",
    "description": "Detects a user log-off activity. Could be used for example to correlate information during forensic investigations",
    "references": [
      "https://github.com/Yamato-Security/EnableWindowsLogSettings/blob/7f6d755d45ac7cc9fc35b0cbf498e6aa4ef19def/ConfiguringSecurityLogAuditPolicies.md",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4634",
      "https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4647"
    ],
    "author": "frack113",
    "date": "2022/10/14",
    "tags": [
      "attack.impact",
      "attack.t1531"
    ],
    "logsource": {
      "service": "security",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventID": [
          4634,
          4647
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "VSSAudit Security Event Source Registration",
    "id": 1470,
    "status": "test",
    "description": "Detects the registration of the security event source VSSAudit. It would usually trigger when volume shadow copy operations happen.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md#atomic-test-3---esentutlexe-sam-copy"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR)",
    "date": "2020/10/20",
    "modified": "2022/04/28",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "AuditSourceName": "VSSAudit",
        "EventID": [
          4904,
          4905
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of VSSVC. Maybe backup operations. It would usually be done by C:\\Windows\\System32\\VSSVC.exe."
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Windows Defender Exclusion List Modified",
    "id": 1471,
    "related": [
      {
        "id": "e9c8808f-4cfb-4ba9-97d4-e5f3beaa244d",
        "type": "derived"
      },
      {
        "id": "a33f8808-2812-4373-ae95-8cfb82134978",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects modifications to the Windows Defender exclusion registry key. This could indicate a potentially suspicious or even malicious activity by an attacker trying to add a new exclusion in order to bypass security.\n",
    "references": [
      "https://www.bleepingcomputer.com/news/security/gootkit-malware-bypasses-windows-defender-by-setting-path-exclusions/"
    ],
    "author": "@BarryShooshooga",
    "date": "2019/10/26",
    "modified": "2023/11/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Security Settings/Local Policies/Audit Policy, Registry System Access Control (SACL): Auditing/User"
    },
    "detection": {
      "selection": {
        "EventID": 4657,
        "ObjectName|contains": "\\Microsoft\\Windows Defender\\Exclusions\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Intended exclusions by administrators"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Defender Exclusion Reigstry Key - Write Access Requested",
    "id": 1472,
    "related": [
      {
        "id": "46a68649-f218-4f86-aea1-16a759d81820",
        "type": "derived"
      },
      {
        "id": "a33f8808-2812-4373-ae95-8cfb82134978",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects write access requests to the Windows Defender exclusions registry keys. This could be an indication of an attacker trying to request a handle or access the object to write new exclusions in order to bypass security.\n",
    "references": [
      "https://www.bleepingcomputer.com/news/security/gootkit-malware-bypasses-windows-defender-by-setting-path-exclusions/"
    ],
    "author": "@BarryShooshooga, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/26",
    "modified": "2023/11/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Security Settings/Local Policies/Audit Policy, Registry System Access Control (SACL): Auditing/User"
    },
    "detection": {
      "selection": {
        "AccessList|contains": [
          "%%4417",
          "%%4418"
        ],
        "EventID": [
          4656,
          4663
        ],
        "ObjectName|contains": "\\Microsoft\\Windows Defender\\Exclusions\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Defender Exclusion Deleted",
    "id": 1473,
    "related": [
      {
        "id": "e9c8808f-4cfb-4ba9-97d4-e5f3beaa244d",
        "type": "derived"
      },
      {
        "id": "46a68649-f218-4f86-aea1-16a759d81820",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects when a Windows Defender exclusion has been deleted. This could indicate an attacker trying to delete their tracks by removing the added exclusions\n",
    "references": [
      "https://www.bleepingcomputer.com/news/security/gootkit-malware-bypasses-windows-defender-by-setting-path-exclusions/"
    ],
    "author": "@BarryShooshooga",
    "date": "2019/10/26",
    "modified": "2023/11/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "security",
      "definition": "Requirements: Audit Policy : Security Settings/Local Policies/Audit Policy, Registry System Access Control (SACL): Auditing/User"
    },
    "detection": {
      "selection": {
        "EventID": 4660,
        "ObjectName|contains": "\\Microsoft\\Windows Defender\\Exclusions\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "T1047 Wmiprvse Wbemcomn DLL Hijack",
    "id": 1474,
    "status": "test",
    "description": "Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\\Windows\\System32\\wbem\\` directory over the network for a WMI DLL Hijack scenario.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/201009-RemoteWMIWbemcomnDLLHijack/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR)",
    "date": "2020/10/12",
    "modified": "2022/02/24",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 5145,
        "RelativeTargetName|endswith": "\\wbem\\wbemcomn.dll"
      },
      "filter": {
        "SubjectUserName|endswith": "$"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WMI Persistence - Security",
    "id": 1475,
    "related": [
      {
        "id": "0b7889b4-5577-4521-a60a-3376ee7f9f7b",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious WMI event filter and command line event consumer based on WMI and Security Logs.",
    "references": [
      "https://twitter.com/mattifestation/status/899646620148539397",
      "https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"
    ],
    "author": "Florian Roth (Nextron Systems), Gleb Sukhodolskiy, Timur Zinniatullin oscd.community",
    "date": "2017/08/22",
    "modified": "2022/11/29",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4662,
        "ObjectType": "WMI Namespace",
        "ObjectName|contains": "subscription"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown (data set is too small; further testing needed)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Locked Workstation",
    "id": 1476,
    "status": "stable",
    "description": "Detects locked workstation session events that occur automatically after a standard period of inactivity.",
    "references": [
      "https://www.cisecurity.org/controls/cis-controls-list/",
      "https://www.pcisecuritystandards.org/documents/PCI_DSS_v3-2-1.pdf",
      "https://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.04162018.pdf",
      "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4800"
    ],
    "author": "Alexandr Yampolskyi, SOC Prime",
    "date": "2019/03/26",
    "modified": "2023/12/11",
    "tags": [
      "attack.impact"
    ],
    "logsource": {
      "product": "windows",
      "service": "security"
    },
    "detection": {
      "selection": {
        "EventID": 4800
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Microsoft Defender Blocked from Loading Unsigned DLL",
    "id": 1477,
    "status": "test",
    "description": "Detects Code Integrity (CI) engine blocking Microsoft Defender's processes (MpCmdRun and NisSrv) from loading unsigned DLLs which may be an attempt to sideload arbitrary DLL",
    "references": [
      "https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool"
    ],
    "author": "Bhabesh Raj",
    "date": "2022/08/02",
    "modified": "2022/09/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security-mitigations"
    },
    "detection": {
      "selection": {
        "EventID": [
          11,
          12
        ],
        "ProcessPath|endswith": [
          "\\MpCmdRun.exe",
          "\\NisSrv.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Unsigned Binary Loaded From Suspicious Location",
    "id": 1478,
    "status": "test",
    "description": "Detects Code Integrity (CI) engine blocking processes from loading unsigned DLLs residing in suspicious locations",
    "references": [
      "https://github.com/nasbench/EVTX-ETW-Resources/blob/45fd5be71a51aa518b1b36d4e1f36af498084e27/ETWEventsList/CSV/Windows11/21H2/W11_21H2_Pro_20220719_22000.795/Providers/Microsoft-Windows-Security-Mitigations.csv"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/03",
    "modified": "2022/09/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "security-mitigations"
    },
    "detection": {
      "selection": {
        "EventID": [
          11,
          12
        ],
        "ImageName|contains": [
          "\\Users\\Public\\",
          "\\PerfLogs\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\AppData\\Local\\Temp\\",
          "C:\\Windows\\TEMP\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HybridConnectionManager Service Running",
    "id": 1479,
    "status": "test",
    "description": "Rule to detect the Hybrid Connection Manager service running on an endpoint.",
    "references": [
      "https://twitter.com/Cyb3rWard0g/status/1381642789369286662"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2021/04/12",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.t1554"
    ],
    "logsource": {
      "product": "windows",
      "service": "microsoft-servicebus-client"
    },
    "detection": {
      "selection": {
        "EventID": [
          40300,
          40301,
          40302
        ]
      },
      "keywords": [
        "HybridConnection",
        "sb://",
        "servicebus.windows.net",
        "HybridConnectionManage"
      ],
      "condition": "selection and keywords"
    },
    "falsepositives": [
      "Legitimate use of Hybrid Connection Manager via Azure function apps."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Application Installed",
    "id": 1480,
    "status": "test",
    "description": "Detects suspicious application installed by looking at the added shortcut to the app resolver cache",
    "references": [
      "https://nasbench.medium.com/finding-forensic-goodness-in-obscure-windows-event-logs-60e978ea45a3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/14",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "service": "shell-core"
    },
    "detection": {
      "selection_name": {
        "EventID": 28115,
        "Name|contains": [
          "Zenmap",
          "AnyDesk",
          "wireshark",
          "openvpn"
        ]
      },
      "selection_packageid": {
        "EventID": 28115,
        "AppID|contains": [
          "zenmap.exe",
          "prokzult ad",
          "wireshark",
          "openvpn"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Packages or applications being legitimately used by users or administrators"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Scheduled Task Executed From A Suspicious Location",
    "id": 1481,
    "status": "test",
    "description": "Detects the execution of Scheduled Tasks where the Program being run is located in a suspicious location or it's an unusale program to be run from a Scheduled Task",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/05",
    "modified": "2023/02/07",
    "tags": [
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "taskscheduler",
      "definition": "Requirements: The \"Microsoft-Windows-TaskScheduler/Operational\" is disabled by default and needs to be enabled in order for this detection to trigger"
    },
    "detection": {
      "selection": {
        "EventID": 129,
        "Path|contains": [
          "C:\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Users\\Public\\",
          "C:\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Scheduled Task Executed Uncommon LOLBIN",
    "id": 1482,
    "status": "test",
    "description": "Detects the execution of Scheduled Tasks where the program being run is located in a suspicious location or where it is an unusual program to be run from a Scheduled Task",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/05",
    "modified": "2023/02/07",
    "tags": [
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "service": "taskscheduler",
      "definition": "Requirements: The \"Microsoft-Windows-TaskScheduler/Operational\" is disabled by default and needs to be enabled in order for this detection to trigger"
    },
    "detection": {
      "selection": {
        "EventID": 129,
        "Path|endswith": [
          "\\calc.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\mspaint.exe",
          "\\notepad.exe",
          "\\regsvr32.exe",
          "\\wscript.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives may occur with some of the selected binaries if you have tasks using them (which could be very common in your environment). Exclude all the specific trusted tasks before using this rule"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Important Scheduled Task Deleted",
    "id": 1483,
    "related": [
      {
        "id": "dbc1f800-0fe0-4bc0-9c66-292c2abe3f78",
        "type": "similar"
      },
      {
        "id": "7595ba94-cf3b-4471-aa03-4f6baa9e5fad",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when adversaries try to stop system services or processes by deleting their respective scheduled tasks in order to conduct data destructive activities\n",
    "references": [
      "https://www.socinvestigation.com/most-common-windows-event-ids-to-hunt-mind-map/"
    ],
    "author": "frack113",
    "date": "2023/01/13",
    "modified": "2023/02/07",
    "tags": [
      "attack.impact",
      "attack.t1489"
    ],
    "logsource": {
      "product": "windows",
      "service": "taskscheduler",
      "definition": "Requirements: The \"Microsoft-Windows-TaskScheduler/Operational\" is disabled by default and needs to be enabled in order for this detection to trigger"
    },
    "detection": {
      "selection": {
        "EventID": 141,
        "TaskName|contains": [
          "\\Windows\\SystemRestore\\SR",
          "\\Windows\\Windows Defender\\",
          "\\Windows\\BitLocker",
          "\\Windows\\WindowsBackup\\",
          "\\Windows\\WindowsUpdate\\",
          "\\Windows\\UpdateOrchestrator\\",
          "\\Windows\\ExploitGuard"
        ]
      },
      "filter": {
        "UserName|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Ngrok Usage with Remote Desktop Service",
    "id": 1484,
    "status": "test",
    "description": "Detects cases in which ngrok, a reverse proxy tool, forwards events to the local RDP port, which could be a sign of malicious behaviour",
    "references": [
      "https://twitter.com/tekdefense/status/1519711183162556416?s=12&t=OTsHCBkQOTNs1k3USz65Zg",
      "https://ngrok.com/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/04/29",
    "tags": [
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "product": "windows",
      "service": "terminalservices-localsessionmanager"
    },
    "detection": {
      "selection": {
        "EventID": 21,
        "Address|contains": "16777216"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSASS Access Detected via Attack Surface Reduction",
    "id": 1485,
    "status": "test",
    "description": "Detects Access to LSASS Process",
    "references": [
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-exploit-guard/attack-surface-reduction-exploit-guard?WT.mc_id=twitter"
    ],
    "author": "Markus Neis",
    "date": "2018/08/26",
    "modified": "2022/08/13",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend",
      "definition": "Requirements:Enabled Block credential stealing from the Windows local security authority subsystem (lsass.exe) from Attack Surface Reduction (GUID: 9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2)"
    },
    "detection": {
      "selection": {
        "EventID": 1121,
        "Path|endswith": "\\lsass.exe"
      },
      "filter_thor": {
        "ProcessName|startswith": "C:\\Windows\\Temp\\asgard2-agent\\",
        "ProcessName|endswith": [
          "\\thor64.exe",
          "\\thor.exe"
        ]
      },
      "filter_exact": {
        "ProcessName": [
          "C:\\Windows\\System32\\atiesrxx.exe",
          "C:\\Windows\\System32\\CompatTelRunner.exe",
          "C:\\Windows\\System32\\msiexec.exe",
          "C:\\Windows\\System32\\nvwmi64.exe",
          "C:\\Windows\\System32\\svchost.exe",
          "C:\\Windows\\System32\\Taskmgr.exe",
          "C:\\Windows\\System32\\wbem\\WmiPrvSE.exe",
          "C:\\Windows\\SysWOW64\\msiexec.exe"
        ]
      },
      "filter_begins": {
        "ProcessName|startswith": [
          "C:\\Windows\\System32\\DriverStore\\",
          "C:\\WINDOWS\\Installer\\",
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Google Chrome GoogleUpdate.exe",
      "Some Taskmgr.exe related activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PSExec and WMI Process Creations Block",
    "id": 1486,
    "status": "test",
    "description": "Detects blocking of process creations originating from PSExec and WMI commands",
    "references": [
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-atp/attack-surface-reduction?WT.mc_id=twitter#block-process-creations-originating-from-psexec-and-wmi-commands",
      "https://twitter.com/duff22b/status/1280166329660497920"
    ],
    "author": "Bhabesh Raj",
    "date": "2020/07/14",
    "modified": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.lateral_movement",
      "attack.t1047",
      "attack.t1569.002"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend",
      "definition": "Requirements:Enabled Block process creations originating from PSExec and WMI commands from Attack Surface Reduction (GUID: d1e49aac-8f56-4280-b9ba-993a6d77406c)"
    },
    "detection": {
      "selection": {
        "EventID": 1121,
        "ProcessName|endswith": [
          "\\wmiprvse.exe",
          "\\psexesvc.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Defender Exclusions Added",
    "id": 1487,
    "status": "stable",
    "description": "Detects the Setting of Windows Defender Exclusions",
    "references": [
      "https://twitter.com/_nullbind/status/1204923340810543109"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/07/06",
    "modified": "2022/12/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 5007,
        "NewValue|contains": "\\Microsoft\\Windows Defender\\Exclusions"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator actions"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Defender Exploit Guard Tamper",
    "id": 1488,
    "status": "test",
    "description": "Detects when someone is adding or removing applications or folders from exploit guard \"ProtectedFolders\" or \"AllowedApplications\"\n",
    "references": [
      "https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/windows-10-controlled-folder-access-event-search/ba-p/2326088"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "modified": "2022/12/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "allowed_apps_key": {
        "EventID": 5007,
        "NewValue|contains": "\\Windows Defender\\Windows Defender Exploit Guard\\Controlled Folder Access\\AllowedApplications\\"
      },
      "allowed_apps_path": {
        "NewValue|contains": [
          "\\Users\\Public\\",
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\PerfLogs\\",
          "\\Windows\\Temp\\"
        ]
      },
      "protected_folders": {
        "EventID": 5007,
        "OldValue|contains": "\\Windows Defender\\Windows Defender Exploit Guard\\Controlled Folder Access\\ProtectedFolders\\"
      },
      "condition": "all of allowed_apps* or protected_folders"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Defender Submit Sample Feature Disabled",
    "id": 1489,
    "related": [
      {
        "id": "1321dc4e-a1fe-481d-a016-52c45f0c8b4f",
        "type": "similar"
      },
      {
        "id": "a3ab73f1-bd46-4319-8f06-4b20d0617886",
        "type": "similar"
      },
      {
        "id": "801bd44f-ceed-4eb6-887c-11544633c0aa",
        "type": "similar"
      }
    ],
    "status": "stable",
    "description": "Detects disabling of the \"Automatic Sample Submission\" feature of Windows Defender.",
    "references": [
      "https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus?view=o365-worldwide",
      "https://bidouillesecurity.com/disable-windows-defender-in-powershell/#DisableAntiSpyware"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 5007,
        "NewValue|contains": "\\Real-Time Protection\\SubmitSamplesConsent = 0x0"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator activity (must be investigated)"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Windows Defender Malware Detection History Deletion",
    "id": 1490,
    "status": "test",
    "description": "Windows Defender logs when the history of detected infections is deleted.",
    "references": [
      "https://docs.microsoft.com/en-us/windows/security/threat-protection/microsoft-defender-antivirus/troubleshoot-microsoft-defender-antivirus",
      "https://web.archive.org/web/20160727113019/https://answers.microsoft.com/en-us/protect/forum/mse-protect_scanning/microsoft-antimalware-has-removed-history-of/f15af6c9-01a9-4065-8c6c-3f2bdc7de45e"
    ],
    "author": "Cian Heasley",
    "date": "2020/08/13",
    "modified": "2023/11/24",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 1013
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Deletion of Defender malware detections history for legitimate reasons"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Windows Defender AMSI Trigger Detected",
    "id": 1491,
    "status": "stable",
    "description": "Detects triggering of AMSI by Windows Defender.",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/amsi/how-amsi-helps"
    ],
    "author": "Bhabesh Raj",
    "date": "2020/09/14",
    "modified": "2022/12/07",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 1116,
        "SourceName": "AMSI"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Defender Real-Time Protection Failure/Restart",
    "id": 1492,
    "status": "stable",
    "description": "Detects issues with Windows Defender Real-Time Protection features",
    "references": [
      "Internal Research",
      "https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/",
      "https://gist.github.com/nasbench/33732d6705cbdc712fae356f07666346"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Christopher Peacock '@securepeacock' (Update)",
    "date": "2023/03/28",
    "modified": "2023/05/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": [
          3002,
          3007
        ]
      },
      "filter_optional_network_inspection": {
        "Feature_Name": "%%886",
        "Reason": [
          "%%892",
          "%%858"
        ]
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Some crashes can occur sometimes and the event doesn't provide enough information to tune out these cases. Manual exception is required"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Win Defender Restored Quarantine File",
    "id": 1493,
    "status": "test",
    "description": "Detects the restoration of files from the defender quarantine",
    "references": [
      "https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus?view=o365-worldwide"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 1009
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrator activity restoring a file"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Defender Configuration Changes",
    "id": 1494,
    "related": [
      {
        "id": "1321dc4e-a1fe-481d-a016-52c45f0c8b4f",
        "type": "similar"
      },
      {
        "id": "a3ab73f1-bd46-4319-8f06-4b20d0617886",
        "type": "similar"
      },
      {
        "id": "91903aba-1088-42ee-b680-d6d94fe002b0",
        "type": "similar"
      }
    ],
    "status": "stable",
    "description": "Detects suspicious changes to the Windows Defender configuration",
    "references": [
      "https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus?view=o365-worldwide",
      "https://bidouillesecurity.com/disable-windows-defender-in-powershell/#DisableAntiSpyware"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/06",
    "modified": "2023/11/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 5007,
        "NewValue|contains": [
          "\\Windows Defender\\DisableAntiSpyware ",
          "\\Windows Defender\\Scan\\DisableRemovableDriveScanning ",
          "\\Windows Defender\\Scan\\DisableScanningMappedNetworkDrivesForFullScan ",
          "\\Windows Defender\\SpyNet\\DisableBlockAtFirstSeen ",
          "\\Real-Time Protection\\SpyNetReporting "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator activity (must be investigated)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Microsoft Defender Tamper Protection Trigger",
    "id": 1495,
    "status": "stable",
    "description": "Detects blocked attempts to change any of Defender's settings such as \"Real Time Monitoring\" and \"Behavior Monitoring\"",
    "references": [
      "https://bhabeshraj.com/post/tampering-with-microsoft-defenders-tamper-protection",
      "https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/troubleshoot-microsoft-defender-antivirus?view=o365-worldwide"
    ],
    "author": "Bhabesh Raj, Nasreddine Bencherchali",
    "date": "2021/07/05",
    "modified": "2022/12/06",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "windefend"
    },
    "detection": {
      "selection": {
        "EventID": 5013,
        "Value|endswith": [
          "\\Windows Defender\\DisableAntiSpyware",
          "\\Windows Defender\\DisableAntiVirus",
          "\\Windows Defender\\Scan\\DisableArchiveScanning",
          "\\Windows Defender\\Scan\\DisableScanningNetworkFiles",
          "\\Real-Time Protection\\DisableRealtimeMonitoring",
          "\\Real-Time Protection\\DisableBehaviorMonitoring",
          "\\Real-Time Protection\\DisableIOAVProtection",
          "\\Real-Time Protection\\DisableScriptScanning"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator might try to disable defender features during testing (must be investigated)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WMI Persistence",
    "id": 1496,
    "status": "test",
    "description": "Detects suspicious WMI event filter and command line event consumer based on WMI and Security Logs.",
    "references": [
      "https://twitter.com/mattifestation/status/899646620148539397",
      "https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"
    ],
    "author": "Florian Roth (Nextron Systems), Gleb Sukhodolskiy, Timur Zinniatullin oscd.community",
    "date": "2017/08/22",
    "modified": "2022/02/10",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "wmi",
      "definition": "WMI Namespaces Auditing and SACL should be configured, EventID 5861 and 5859 detection requires Windows 10, 2012 and higher"
    },
    "detection": {
      "wmi_filter_to_consumer_binding": {
        "EventID": 5861
      },
      "consumer_keywords": [
        "ActiveScriptEventConsumer",
        "CommandLineEventConsumer",
        "CommandLineTemplate"
      ],
      "wmi_filter_registration": {
        "EventID": 5859
      },
      "filter_scmevent": {
        "Provider": "SCM Event Provider",
        "Query": "select * from MSFT_SCMEventLogEvent",
        "User": "S-1-5-32-544",
        "PossibleCause": "Permanent"
      },
      "condition": "( (wmi_filter_to_consumer_binding and consumer_keywords) or (wmi_filter_registration) ) and not filter_scmevent"
    },
    "falsepositives": [
      "Unknown (data set is too small; further testing needed)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Access To Browser Credential Files By Uncommon Application",
    "id": 1497,
    "status": "experimental",
    "description": "Detects file access requests to browser credential stores by uncommon processes.\nCould indicate potential attempt of credential stealing.\nRequires heavy baselining before usage\n",
    "references": [
      "https://www.zscaler.com/blogs/security-research/ffdroider-stealer-targeting-social-media-platform-users",
      "https://github.com/lclevy/firepwd"
    ],
    "author": "frack113",
    "date": "2022/04/09",
    "modified": "2023/12/18",
    "tags": [
      "attack.t1003",
      "attack.credential_access"
    ],
    "logsource": {
      "category": "file_access",
      "product": "windows",
      "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider"
    },
    "detection": {
      "selection_ie": {
        "FileName|endswith": "\\Appdata\\Local\\Microsoft\\Windows\\WebCache\\WebCacheV01.dat"
      },
      "selection_firefox": {
        "FileName|endswith": [
          "\\cookies.sqlite",
          "release\\key3.db",
          "release\\key4.db",
          "release\\logins.json"
        ]
      },
      "selection_chromium": {
        "FileName|contains": [
          "\\Appdata\\Local\\Chrome\\User Data\\Default\\Login Data",
          "\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Network\\Cookies",
          "\\AppData\\Local\\Google\\Chrome\\User Data\\Local State"
        ]
      },
      "filter_main_system": {
        "Image": "System"
      },
      "filter_main_generic": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\",
          ":\\WINDOWS\\system32\\",
          ":\\WINDOWS\\SysWOW64\\"
        ]
      },
      "filter_optional_defender": {
        "Image|contains": ":\\ProgramData\\Microsoft\\Windows Defender\\",
        "Image|endswith": [
          "\\MpCopyAccelerator.exe",
          "\\MsMpEng.exe"
        ]
      },
      "filter_optional_thor": {
        "Image|endswith": [
          "\\thor64.exe",
          "\\thor.exe"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Antivirus, Anti-Spyware, Anti-Malware Software",
      "Backup software",
      "Legitimate software installed on partitions other than \"C:\\\"",
      "Searching software such as \"everything.exe\""
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Credential Manager Access By Uncommon Application",
    "id": 1498,
    "status": "experimental",
    "description": "Detects suspicious processes based on name and location that access the windows credential manager and vault.\nWhich can be a sign of credential stealing. Example case would be usage of mimikatz \"dpapi::cred\" function\n",
    "references": [
      "https://hunter2.gitbook.io/darthsidious/privilege-escalation/mimikatz",
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/11",
    "modified": "2023/12/18",
    "tags": [
      "attack.t1003",
      "attack.credential_access"
    ],
    "logsource": {
      "category": "file_access",
      "product": "windows",
      "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider"
    },
    "detection": {
      "selection": {
        "FileName|contains": [
          "\\AppData\\Local\\Microsoft\\Credentials\\",
          "\\AppData\\Roaming\\Microsoft\\Credentials\\",
          "\\AppData\\Local\\Microsoft\\Vault\\",
          "\\ProgramData\\Microsoft\\Vault\\"
        ]
      },
      "filter_system_folders": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\",
          ":\\Windows\\system32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate software installed by the users for example in the \"AppData\" directory may access these files (for any reason)."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Access To Windows DPAPI Master Keys By Uncommon Application",
    "id": 1499,
    "status": "experimental",
    "description": "Detects file access requests to the the Windows Data Protection API Master keys by an uncommon application.\nThis can be a sign of credential stealing. Example case would be usage of mimikatz \"dpapi::masterkey\" function\n",
    "references": [
      "http://blog.harmj0y.net/redteaming/operational-guidance-for-offensive-user-dpapi-abuse/",
      "https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation/dpapi-extracting-passwords"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/17",
    "modified": "2023/12/18",
    "tags": [
      "attack.credential_access",
      "attack.t1555.004"
    ],
    "logsource": {
      "category": "file_access",
      "product": "windows",
      "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider"
    },
    "detection": {
      "selection": {
        "FileName|contains": [
          "\\Microsoft\\Protect\\S-1-5-18\\",
          "\\Microsoft\\Protect\\S-1-5-21-"
        ]
      },
      "filter_system_folders": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\",
          ":\\Windows\\system32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Access To .Reg/.Hive Files By Uncommon Application",
    "id": 1500,
    "status": "experimental",
    "description": "Detects file access requests to files ending with either the \".hive\"/\".reg\" extension, usually associated with Windows Registry backups.",
    "references": [
      "https://github.com/tccontre/Reg-Restore-Persistence-Mole"
    ],
    "author": "frack113",
    "date": "2023/09/15",
    "tags": [
      "attack.t1112",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_access",
      "product": "windows",
      "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider"
    },
    "detection": {
      "selection": {
        "FileName|endswith": [
          ".hive",
          ".reg"
        ]
      },
      "filter_main_generic": {
        "Image|contains": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Third party software installed in the user context might generate a lot of FPs. Heavy baselining and tuning might be required."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Access To Windows Credential History File By Uncommon Application",
    "id": 1501,
    "status": "experimental",
    "description": "Detects file access requests to the Windows Credential History File by an uncommon application.\nThis can be a sign of credential stealing. Example case would be usage of mimikatz \"dpapi::credhist\" function\n",
    "references": [
      "https://tools.thehacker.recipes/mimikatz/modules/dpapi/credhist",
      "https://www.passcape.com/windows_password_recovery_dpapi_credhist"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/17",
    "modified": "2023/12/18",
    "tags": [
      "attack.credential_access",
      "attack.t1555.004"
    ],
    "logsource": {
      "category": "file_access",
      "product": "windows",
      "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider"
    },
    "detection": {
      "selection": {
        "FileName|endswith": "\\Microsoft\\Protect\\CREDHIST"
      },
      "filter_main_system_folders": {
        "Image|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\",
          ":\\Windows\\system32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "filter_main_explorer": {
        "Image|endswith": ":\\Windows\\explorer.exe"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Access To Potentially Sensitive Sysvol Files By Uncommon Application",
    "id": 1502,
    "related": [
      {
        "id": "8344c19f-a023-45ff-ad63-a01c5396aea0",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects file access requests to potentially sensitive files hosted on the Windows Sysvol share.",
    "references": [
      "https://github.com/vletoux/pingcastle"
    ],
    "author": "frack113",
    "date": "2023/12/21",
    "tags": [
      "attack.credential_access",
      "attack.t1552.006"
    ],
    "logsource": {
      "category": "file_access",
      "product": "windows",
      "definition": "Requirements: Microsoft-Windows-Kernel-File ETW provider"
    },
    "detection": {
      "selection": {
        "FileName|startswith": "\\\\",
        "FileName|contains|all": [
          "\\sysvol\\",
          "\\Policies\\"
        ],
        "FileName|endswith": [
          "audit.csv",
          "Files.xml",
          "GptTmpl.inf",
          "groups.xml",
          "Registry.pol",
          "Registry.xml",
          "scheduledtasks.xml",
          "scripts.ini",
          "services.xml"
        ]
      },
      "filter_main_generic": {
        "Image|startswith": [
          ":\\Program Files (x86)\\",
          ":\\Program Files\\",
          ":\\Windows\\explorer.exe",
          ":\\Windows\\system32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Creation Date Changed to Another Year",
    "id": 1503,
    "status": "test",
    "description": "Attackers may change the file creation time of a backdoor to make it look like it was installed with the operating system.\nNote that many processes legitimately change the creation time of a file; it does not necessarily indicate malicious activity.\n",
    "references": [
      "https://www.inversecos.com/2022/04/defence-evasion-technique-timestomping.html"
    ],
    "author": "frack113, Florian Roth (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2022/10/25",
    "tags": [
      "attack.t1070.006",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_change",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "PreviousCreationUtcTime|startswith": "2022"
      },
      "filter1": {
        "CreationUtcTime|startswith": "2022"
      },
      "selection2": {
        "PreviousCreationUtcTime|startswith": "202"
      },
      "filter2": {
        "CreationUtcTime|startswith": "202"
      },
      "gen_filter_updates": [
        {
          "Image": [
            "C:\\Windows\\system32\\ProvTool.exe",
            "C:\\Windows\\System32\\usocoreworker.exe",
            "C:\\Windows\\ImmersiveControlPanel\\SystemSettings.exe"
          ]
        },
        {
          "TargetFilename|startswith": "C:\\ProgramData\\USOPrivate\\UpdateStore\\"
        },
        {
          "TargetFilename|endswith": [
            ".tmp",
            ".temp"
          ]
        }
      ],
      "gen_filter_tiworker": {
        "Image|startswith": "C:\\WINDOWS\\",
        "Image|endswith": "\\TiWorker.exe",
        "TargetFilename|endswith": ".cab"
      },
      "condition": "(( selection1 and not filter1 ) or ( selection2 and not filter2 )) and not 1 of gen_filter*"
    },
    "falsepositives": [
      "Changes made to or by the local NTP service"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Unusual File Modification by dns.exe",
    "id": 1504,
    "related": [
      {
        "id": "8f0b1fb1-9bd4-4e74-8cdf-a8de4d2adfd0",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects an unexpected file being modified by dns.exe which my indicate activity related to remote code execution or other forms of exploitation as seen in CVE-2020-1350 (SigRed)",
    "references": [
      "https://www.elastic.co/guide/en/security/current/unusual-file-modification-by-dns.exe.html"
    ],
    "author": "Tim Rauch (Nextron Systems), Elastic (idea)",
    "date": "2022/09/27",
    "tags": [
      "attack.initial_access",
      "attack.t1133"
    ],
    "logsource": {
      "category": "file_change",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dns.exe"
      },
      "filter": {
        "TargetFilename|endswith": "\\dns.log"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PrintNightmare Exploitation Attempt",
    "id": 1505,
    "status": "test",
    "description": "Detect DLL deletions from Spooler Service driver folder. This might be a potential exploitation attempt of CVE-2021-1675",
    "references": [
      "https://github.com/hhlxf/PrintNightmare",
      "https://github.com/cube0x0/CVE-2021-1675"
    ],
    "author": "Bhabesh Raj",
    "date": "2021/07/01",
    "modified": "2023/02/17",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574",
      "cve.2021.1675"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\spoolsv.exe",
        "TargetFilename|contains": "C:\\Windows\\System32\\spool\\drivers\\x64\\3\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Backup Files Deleted",
    "id": 1506,
    "status": "test",
    "description": "Detects deletion of files with extensions often used for backup files. Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-6---windows---delete-backup-files"
    ],
    "author": "frack113",
    "date": "2022/01/02",
    "modified": "2023/02/15",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_delete"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wt.exe",
          "\\rundll32.exe",
          "\\regsvr32.exe"
        ],
        "TargetFilename|endswith": [
          ".VHD",
          ".bac",
          ".bak",
          ".wbcat",
          ".bkf",
          ".set",
          ".win",
          ".dsk"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitime usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "EventLog EVTX File Deleted",
    "id": 1507,
    "status": "test",
    "description": "Detects the deletion of the event log files which may indicate an attempt to destroy forensic evidence",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\System32\\winevt\\Logs\\",
        "TargetFilename|endswith": ".evtx"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Exchange PowerShell Cmdlet History Deleted",
    "id": 1508,
    "status": "test",
    "description": "Detects the deletion of the Exchange PowerShell cmdlet History logs which may indicate an attempt to destroy forensic evidence",
    "references": [
      "https://m365internals.com/2022/10/07/hunting-in-on-premises-exchange-server-logs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/26",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "\\Logging\\CmdletInfra\\LocalPowerShell\\Cmdlet\\",
        "TargetFilename|contains": "_Cmdlet_"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Possible FP during log rotation"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "IIS WebServer Access Logs Deleted",
    "id": 1509,
    "status": "test",
    "description": "Detects the deletion of IIS WebServer access logs which may indicate an attempt to destroy forensic evidence",
    "references": [
      "https://www.elastic.co/guide/en/security/current/webserver-access-logs-deleted.html"
    ],
    "author": "Tim Rauch (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/16",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\inetpub\\logs\\LogFiles\\",
        "TargetFilename|endswith": ".log"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "During uninstallation of the IIS service",
      "During log rotation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Console History Logs Deleted",
    "id": 1510,
    "status": "test",
    "description": "Detects the deletion of the PowerShell console History logs which may indicate an attempt to destroy forensic evidence",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\PSReadLine\\ConsoleHost_history.txt"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Prefetch File Deleted",
    "id": 1511,
    "status": "test",
    "description": "Detects the deletion of a prefetch file which may indicate an attempt to destroy forensic evidence",
    "references": [
      "Internal Research",
      "https://www.group-ib.com/blog/hunting-for-ttps-with-prefetch-files/"
    ],
    "author": "Cedric MAURUGEON",
    "date": "2021/09/29",
    "modified": "2024/01/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_delete"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": ":\\Windows\\Prefetch\\",
        "TargetFilename|endswith": ".pf"
      },
      "filter_main_svchost": {
        "Image|endswith": ":\\windows\\system32\\svchost.exe",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "TeamViewer Log File Deleted",
    "id": 1512,
    "status": "test",
    "description": "Detects the deletion of the TeamViewer log files which may indicate an attempt to destroy forensic evidence",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md"
    ],
    "author": "frack113",
    "date": "2022/01/16",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_delete"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\TeamViewer_",
        "TargetFilename|endswith": ".log"
      },
      "filter": {
        "Image": "C:\\Windows\\system32\\svchost.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Tomcat WebServer Logs Deleted",
    "id": 1513,
    "status": "test",
    "description": "Detects the deletion of tomcat WebServer logs which may indicate an attempt to destroy forensic evidence",
    "references": [
      "Internal Research",
      "https://linuxhint.com/view-tomcat-logs-windows/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains|all": [
          "\\Tomcat",
          "\\logs\\"
        ],
        "TargetFilename|contains": [
          "catalina.",
          "_access_log.",
          "localhost."
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "During uninstallation of the tomcat server",
      "During log rotation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "File Deleted Via Sysinternals SDelete",
    "id": 1514,
    "status": "test",
    "description": "Detects the deletion of files by the Sysinternals SDelete utility. It looks for the common name pattern used to rename files.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/9",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/4.B.4_83D62033-105A-4A02-8B75-DAB52D8D51EC.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2023/02/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_delete"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          ".AAA",
          ".ZZZ"
        ]
      },
      "filter_wireshark": {
        "TargetFilename|endswith": "\\Wireshark\\radius\\dictionary.alcatel-lucent.aaa"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitime usage of SDelete"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Unusual File Deletion by Dns.exe",
    "id": 1515,
    "related": [
      {
        "id": "9f383dc0-fdeb-4d56-acbc-9f9f4f8f20f3",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects an unexpected file being deleted by dns.exe which my indicate activity related to remote code execution or other forms of exploitation as seen in CVE-2020-1350 (SigRed)",
    "references": [
      "https://www.elastic.co/guide/en/security/current/unusual-file-modification-by-dns.exe.html"
    ],
    "author": "Tim Rauch (Nextron Systems), Elastic (idea)",
    "date": "2022/09/27",
    "modified": "2023/02/15",
    "tags": [
      "attack.initial_access",
      "attack.t1133"
    ],
    "logsource": {
      "category": "file_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\dns.exe"
      },
      "filter": {
        "TargetFilename|endswith": "\\dns.log"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ADS Zone.Identifier Deleted By Uncommon Application",
    "id": 1516,
    "related": [
      {
        "id": "7eac0a16-5832-4e81-865f-0268a6d19e4b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the deletion of the \"Zone.Identifier\" ADS by an uncommon process. Attackers can leverage this in order to bypass security restrictions that make use of the ADS such as Microsoft Office apps.",
    "references": [
      "https://securityliterate.com/how-malware-abuses-the-zone-identifier-to-circumvent-detection-and-analysis/",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/04",
    "modified": "2023/10/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_delete"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ":Zone.Identifier"
      },
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Program Files\\PowerShell\\7-preview\\pwsh.exe",
          ":\\Program Files\\PowerShell\\7\\pwsh.exe",
          ":\\Windows\\explorer.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
          ":\\Windows\\SysWOW64\\explorer.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Other third party applications not listed."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Event With Teams Objects",
    "id": 1517,
    "status": "test",
    "description": "Detects an access to authentication tokens and accounts of Microsoft Teams desktop application.",
    "references": [
      "https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/",
      "https://www.vectra.ai/blogpost/undermining-microsoft-teams-security-by-mining-tokens"
    ],
    "author": "@SerkinValery",
    "date": "2022/09/16",
    "tags": [
      "attack.credential_access",
      "attack.t1528"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          "\\Microsoft\\Teams\\Cookies",
          "\\Microsoft\\Teams\\Local Storage\\leveldb"
        ]
      },
      "filter": {
        "Image|contains": "\\Microsoft\\Teams\\current\\Teams.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Unattend.xml File Access",
    "id": 1518,
    "status": "test",
    "description": "Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.\nIf these files exist, their contents will be displayed. They are used to store credentials/answers during the unattended windows install process\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.001/T1552.001.md"
    ],
    "author": "frack113",
    "date": "2021/12/19",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1552.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\unattend.xml"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ADSI-Cache File Creation By Uncommon Tool",
    "id": 1519,
    "status": "test",
    "description": "Detects the creation of an \"Active Directory Schema Cache File\" (.sch) file by an uncommon tool.",
    "references": [
      "https://medium.com/@ivecodoe/detecting-ldapfragger-a-newly-released-cobalt-strike-beacon-using-ldap-for-c2-communication-c274a7f00961",
      "https://blog.fox-it.com/2020/03/19/ldapfragger-command-and-control-over-ldap-attributes/",
      "https://github.com/fox-it/LDAPFragger"
    ],
    "author": "xknow @xknow_infosec, Tim Shelton",
    "date": "2019/03/24",
    "modified": "2023/10/18",
    "tags": [
      "attack.t1001.003",
      "attack.command_and_control"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Local\\Microsoft\\Windows\\SchCache\\",
        "TargetFilename|endswith": ".sch"
      },
      "filter_main_generic": [
        {
          "Image|endswith": [
            ":\\Program Files\\Cylance\\Desktop\\CylanceSvc.exe",
            ":\\Windows\\CCM\\CcmExec.exe",
            ":\\windows\\system32\\dllhost.exe",
            ":\\Windows\\system32\\dsac.exe",
            ":\\Windows\\system32\\efsui.exe",
            ":\\windows\\system32\\mmc.exe",
            ":\\windows\\system32\\svchost.exe",
            ":\\Windows\\System32\\wbem\\WmiPrvSE.exe",
            ":\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe"
          ]
        },
        {
          "Image|contains": [
            ":\\Windows\\ccmsetup\\autoupgrade\\ccmsetup",
            ":\\Program Files\\SentinelOne\\Sentinel Agent"
          ]
        }
      ],
      "filter_main_office": {
        "Image|contains|all": [
          ":\\Program Files\\",
          "\\Microsoft Office"
        ],
        "Image|endswith": "\\OUTLOOK.EXE"
      },
      "filter_optional_ldapwhoami": {
        "Image|endswith": "\\LANDesk\\LDCLient\\ldapwhoami.exe"
      },
      "filter_optional_citrix": {
        "Image|endswith": ":\\Program Files\\Citrix\\Receiver StoreFront\\Services\\DefaultDomainServices\\Citrix.DeliveryServices.DomainServices.ServiceHost.exe"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Other legimate tools, which do ADSI (LDAP) operations, e.g. any remoting activity by MMC, Powershell, Windows etc."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Advanced IP Scanner - File Event",
    "id": 1520,
    "related": [
      {
        "id": "bef37fa2-f205-4a7b-b484-0759bfd5f86f",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the use of Advanced IP Scanner. Seems to be a popular tool for ransomware groups.",
    "references": [
      "https://news.sophos.com/en-us/2019/12/09/snatch-ransomware-reboots-pcs-into-safe-mode-to-bypass-protection/",
      "https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html",
      "https://labs.f-secure.com/blog/prelude-to-ransomware-systembc",
      "https://assets.documentcloud.org/documents/20444693/fbi-pin-egregor-ransomware-bc-01062021.pdf",
      "https://thedfirreport.com/2021/01/18/all-that-for-a-coinminer"
    ],
    "author": "@ROxPinTeddy",
    "date": "2020/05/12",
    "modified": "2022/11/29",
    "tags": [
      "attack.discovery",
      "attack.t1046"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\Advanced IP Scanner 2"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Anydesk Temporary Artefact",
    "id": 1521,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-2---anydesk-files-detected-test-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/11",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          "\\AppData\\Roaming\\AnyDesk\\user.conf",
          "\\AppData\\Roaming\\AnyDesk\\system.conf"
        ],
        "TargetFilename|endswith": ".temp"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Binary Writes Via AnyDesk",
    "id": 1522,
    "status": "test",
    "description": "Detects AnyDesk writing binary files to disk other than \"gcapi.dll\".\nAccording to RedCanary research it is highly abnormal for AnyDesk to write executable files to disk besides gcapi.dll,\nwhich is a legitimate DLL that is part of the Google Chrome web browser used to interact with the Google Cloud API. (See reference section for more details)\n",
    "references": [
      "https://redcanary.com/blog/misbehaving-rats/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/28",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\anydesk.exe",
        "TargetFilename|endswith": [
          ".dll",
          ".exe"
        ]
      },
      "filter_dlls": {
        "TargetFilename|endswith": "\\gcapi.dll"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Assembly DLL Creation Via AspNetCompiler",
    "id": 1523,
    "related": [
      {
        "id": "9ccba514-7cb6-4c5c-b377-700758f2f120",
        "type": "similar"
      },
      {
        "id": "9f50fe98-fe5c-4a2d-86c7-fad7f63ed622",
        "type": "similar"
      },
      {
        "id": "a01b8329-5953-4f73-ae2d-aa01e1f35f00",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of new DLL assembly files by \"aspnet_compiler.exe\", which could be a sign of \"aspnet_compiler\" abuse to proxy execution through a build provider.\n",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/14",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\aspnet_compiler.exe",
        "TargetFilename|contains|all": [
          "\\Temporary ASP.NET Files\\",
          "\\assembly\\tmp\\",
          ".dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate assembly compilation using a build provider"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "BloodHound Collection Files",
    "id": 1524,
    "status": "test",
    "description": "Detects default file names outputted by the BloodHound collection tool SharpHound",
    "references": [
      "https://academy.hackthebox.com/course/preview/active-directory-bloodhound/bloodhound--data-collection"
    ],
    "author": "C.J. May",
    "date": "2022/08/09",
    "modified": "2023/03/29",
    "tags": [
      "attack.discovery",
      "attack.t1087.001",
      "attack.t1087.002",
      "attack.t1482",
      "attack.t1069.001",
      "attack.t1069.002",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "BloodHound.zip",
          "_computers.json",
          "_containers.json",
          "_domains.json",
          "_gpos.json",
          "_groups.json",
          "_ous.json",
          "_users.json"
        ]
      },
      "filter_optional_ms_winapps": {
        "Image|endswith": "\\svchost.exe",
        "TargetFilename|startswith": "C:\\Program Files\\WindowsApps\\Microsoft.",
        "TargetFilename|endswith": "\\pocket_containers.json"
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Some false positives may arise in some environment and this may require some tuning. Add additional filters or reduce level depending on the level of noise"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CrackMapExec File Creation Patterns",
    "id": 1525,
    "status": "test",
    "description": "Detects suspicious file creation patterns found in logs when CrackMapExec is used",
    "references": [
      "https://mpgn.gitbook.io/crackmapexec/smb-protocol/obtaining-credentials/dump-lsass"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/12",
    "modified": "2022/05/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_lsass_dump1": {
        "TargetFilename|startswith": "C:\\Windows\\Temp\\",
        "Image": "C:\\WINDOWS\\system32\\rundll32.exe",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ],
        "TargetFilename|endswith": [
          ".rtf",
          ".otf",
          ".odt",
          ".txt",
          ".doc",
          ".pdf",
          ".dll",
          ".docx",
          ".wpd",
          ".icns",
          ".db",
          ".ini",
          ".tex",
          ".sys",
          ".csv",
          ".fon",
          ".tar",
          ".ttf",
          ".xml",
          ".cfg",
          ".cpl",
          ".jpg",
          ".drv",
          ".cur",
          ".tmp"
        ]
      },
      "selection_procdump": {
        "TargetFilename": "C:\\Windows\\Temp\\procdump.exe",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "EVTX Created In Uncommon Location",
    "id": 1526,
    "status": "experimental",
    "description": "Detects the creation of new files with the \".evtx\" extension in non-common locations. Which could indicate tampering with default evtx locations in order to evade security controls",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/eventlog/eventlog-key"
    ],
    "author": "D3F7A5105",
    "date": "2023/01/02",
    "modified": "2023/07/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows",
      "definition": "Requirements: The \".evtx\" extension should be monitored via a Sysmon configuration. Example: <TargetFilename condition=\"end with\">.evtx<TargetFilename>"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".evtx"
      },
      "filter_main_path": {
        "TargetFilename|contains": ":\\Windows\\System32\\winevt\\Logs\\"
      },
      "filter_main_baseimage": {
        "TargetFilename|contains": ":\\ProgramData\\Microsoft\\Windows\\Containers\\BaseImages\\",
        "TargetFilename|endswith": "\\Windows\\System32\\winevt\\Logs\\"
      },
      "filter_main_generic_img": {
        "Image|endswith": [
          ":\\Windows\\explorer.exe",
          ":\\Windows\\system32\\dllhost.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrator or backup activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Creation Of Non-Existent System DLL",
    "id": 1527,
    "related": [
      {
        "id": "6b98b92b-4f00-4f62-b4fe-4d1920215771",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of system DLLs that are usually not present on the system (or at least not in system directories).\nUsually this technique is used to achieve DLL hijacking.\n",
    "references": [
      "https://decoded.avast.io/martinchlumecky/png-steganography/",
      "https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992",
      "https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/",
      "https://github.com/Wh04m1001/SysmonEoP",
      "https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/",
      "https://github.com/blackarrowsec/redteam-research/tree/26e6fc0c0d30d364758fa11c2922064a9a7fd309/LPE%20via%20StorSvc"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), fornotes",
    "date": "2022/12/01",
    "modified": "2024/01/10",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1574.001",
      "attack.t1574.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          ":\\Windows\\System32\\TSMSISrv.dll",
          ":\\Windows\\System32\\TSVIPSrv.dll",
          ":\\Windows\\System32\\wbem\\wbemcomn.dll",
          ":\\Windows\\System32\\WLBSCTRL.dll",
          ":\\Windows\\System32\\wow64log.dll",
          ":\\Windows\\System32\\WptsExtensions.dll",
          "\\SprintCSP.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Custom Shim Database Created",
    "id": 1528,
    "status": "test",
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.\nThe Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.011/T1546.011.md#atomic-test-2---new-shim-database-files-created-in-the-default-shim-database-directory",
      "https://www.mandiant.com/resources/blog/fin7-shim-databases-persistence",
      "https://liberty-shell.com/sec/2020/02/25/shim-persistence/",
      "https://andreafortuna.org/2018/11/12/process-injection-and-persistence-using-application-shimming/"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/29",
    "modified": "2023/12/06",
    "tags": [
      "attack.persistence",
      "attack.t1547.009"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          ":\\Windows\\apppatch\\Custom\\",
          ":\\Windows\\apppatch\\CustomSDB\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate custom SHIM installations will also trigger this rule"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Screensaver Binary File Creation",
    "id": 1529,
    "status": "test",
    "description": "Adversaries may establish persistence by executing malicious content triggered by user inactivity.\nScreensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.002/T1546.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/29",
    "modified": "2022/11/08",
    "tags": [
      "attack.persistence",
      "attack.t1546.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".scr"
      },
      "filter_generic": {
        "Image|endswith": [
          "\\Kindle.exe",
          "\\Bin\\ccSvcHst.exe"
        ]
      },
      "filter_tiworker": {
        "Image|endswith": "\\TiWorker.exe",
        "TargetFilename|endswith": "\\uwfservicingscr.scr"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Files With System Process Name In Unsuspected Locations",
    "id": 1530,
    "status": "test",
    "description": "Detects the creation of an executable with a system process name in folders other than the system ones (System32, SysWOW64, etc.).\n",
    "references": [
      "Internal Research"
    ],
    "author": "Sander Wiebing, Tim Shelton, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/05/26",
    "modified": "2023/11/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.005"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\AtBroker.exe",
          "\\audiodg.exe",
          "\\backgroundTaskHost.exe",
          "\\bcdedit.exe",
          "\\bitsadmin.exe",
          "\\cmdl32.exe",
          "\\cmstp.exe",
          "\\conhost.exe",
          "\\csrss.exe",
          "\\dasHost.exe",
          "\\dfrgui.exe",
          "\\dllhost.exe",
          "\\dwm.exe",
          "\\eventcreate.exe",
          "\\eventvwr.exe",
          "\\explorer.exe",
          "\\extrac32.exe",
          "\\fontdrvhost.exe",
          "\\ipconfig.exe",
          "\\iscsicli.exe",
          "\\iscsicpl.exe",
          "\\logman.exe",
          "\\LogonUI.exe",
          "\\LsaIso.exe",
          "\\lsass.exe",
          "\\lsm.exe",
          "\\msiexec.exe",
          "\\msinfo32.exe",
          "\\mstsc.exe",
          "\\nbtstat.exe",
          "\\odbcconf.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regini.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\RuntimeBroker.exe",
          "\\schtasks.exe",
          "\\SearchFilterHost.exe",
          "\\SearchIndexer.exe",
          "\\SearchProtocolHost.exe",
          "\\SecurityHealthService.exe",
          "\\SecurityHealthSystray.exe",
          "\\services.exe",
          "\\ShellAppRuntime.exe",
          "\\sihost.exe",
          "\\smartscreen.exe",
          "\\smss.exe",
          "\\spoolsv.exe",
          "\\svchost.exe",
          "\\SystemSettingsBroker.exe",
          "\\taskhost.exe",
          "\\taskhostw.exe",
          "\\Taskmgr.exe",
          "\\TiWorker.exe",
          "\\vssadmin.exe",
          "\\w32tm.exe",
          "\\WerFault.exe",
          "\\WerFaultSecure.exe",
          "\\wermgr.exe",
          "\\wevtutil.exe",
          "\\wininit.exe",
          "\\winlogon.exe",
          "\\winrshost.exe",
          "\\WinRTNetMUAHostServer.exe",
          "\\wlanext.exe",
          "\\wlrmdr.exe",
          "\\WmiPrvSE.exe",
          "\\wslhost.exe",
          "\\WSReset.exe",
          "\\WUDFHost.exe",
          "\\WWAHost.exe"
        ]
      },
      "filter_main_dism_tiworker": {
        "TargetFilename|contains": [
          ":\\Windows\\SoftwareDistribution\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\",
          "\\SystemRoot\\System32\\"
        ],
        "Image|endswith": [
          "\\Windows\\System32\\dism.exe",
          "\\TiWorker.exe"
        ]
      },
      "filter_main_setuphost": {
        "TargetFilename|contains": ":\\$WINDOWS.~BT\\",
        "Image|endswith": ":\\$WINDOWS.~BT\\Sources\\SetupHost.exe"
      },
      "filter_main_wbengine": {
        "TargetFilename|endswith": "\\RuntimeBroker.exe",
        "Image|endswith": ":\\Windows\\system32\\wbengine.exe"
      },
      "filter_main_svchost": {
        "Image|endswith": ":\\Windows\\system32\\svchost.exe",
        "TargetFilename|contains": [
          ":\\Windows\\SoftwareDistribution\\Download\\",
          ":\\Program Files\\WindowsApps\\"
        ]
      },
      "filter_main_wuauclt": {
        "Image|endswith": ":\\Windows\\System32\\wuauclt.exe"
      },
      "filter_main_explorer": {
        "TargetFilename|endswith": ":\\Windows\\explorer.exe"
      },
      "filter_main_msiexec": {
        "Image|endswith": ":\\WINDOWS\\system32\\msiexec.exe",
        "TargetFilename|endswith": [
          ":\\Program Files\\PowerShell\\7\\pwsh.exe",
          ":\\Program Files\\PowerShell\\7-preview\\pwsh.exe"
        ]
      },
      "filter_main_healtray": {
        "TargetFilename|contains": ":\\Windows\\System32\\SecurityHealth\\",
        "TargetFilename|endswith": "\\SecurityHealthSystray.exe",
        "Image|endswith": "\\SecurityHealthSetup.exe"
      },
      "filter_main_wuaucltcore": {
        "Image|contains": ":\\Windows\\uus\\",
        "Image|endswith": "\\wuaucltcore.exe",
        "TargetFilename|contains": ":\\$WinREAgent\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "System processes copied outside their default folders for testing purposes",
      "Third party software naming their software with the same names as the processes mentioned here"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Creation Exe for Service with Unquoted Path",
    "id": 1531,
    "status": "test",
    "description": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.\nAdversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.009/T1574.009.md"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "tags": [
      "attack.persistence",
      "attack.t1547.009"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename": "C:\\program.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Cred Dump Tools Dropped Files",
    "id": 1532,
    "status": "test",
    "description": "Files with well-known filenames (parts of credential dump software or files produced by them) creation",
    "references": [
      "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment"
    ],
    "author": "Teymur Kheirkhabarov, oscd.community",
    "date": "2019/11/01",
    "modified": "2022/09/21",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.t1003.002",
      "attack.t1003.003",
      "attack.t1003.004",
      "attack.t1003.005"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "TargetFilename|contains": [
            "\\fgdump-log",
            "\\kirbi",
            "\\pwdump",
            "\\pwhashes",
            "\\wce_ccache",
            "\\wce_krbtkts"
          ]
        },
        {
          "TargetFilename|endswith": [
            "\\cachedump.exe",
            "\\cachedump64.exe",
            "\\DumpExt.dll",
            "\\DumpSvc.exe",
            "\\Dumpy.exe",
            "\\fgexec.exe",
            "\\lsremora.dll",
            "\\lsremora64.dll",
            "\\NTDS.out",
            "\\procdump64.exe",
            "\\pstgdump.exe",
            "\\pwdump.exe",
            "\\SAM.out",
            "\\SECURITY.out",
            "\\servpw.exe",
            "\\servpw64.exe",
            "\\SYSTEM.out",
            "\\test.pwd",
            "\\wceaux.dll"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Administrator using tool for password recovery"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WScript or CScript Dropper - File",
    "id": 1533,
    "related": [
      {
        "id": "cea72823-df4d-4567-950c-0b579eaf0846",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects a file ending in jse, vbe, js, vba, vbs written by cscript.exe or wscript.exe",
    "references": [
      "WScript or CScript Dropper (cea72823-df4d-4567-950c-0b579eaf0846)"
    ],
    "author": "Tim Shelton",
    "date": "2022/01/10",
    "modified": "2022/12/02",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\wscript.exe",
          "\\cscript.exe"
        ],
        "TargetFilename|startswith": [
          "C:\\Users\\",
          "C:\\ProgramData"
        ],
        "TargetFilename|endswith": [
          ".jse",
          ".vbe",
          ".js",
          ".vba",
          ".vbs"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "Image",
      "TargetFilename"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CSExec Service File Creation",
    "id": 1534,
    "status": "test",
    "description": "Detects default CSExec service filename which indicates CSExec service installation and execution",
    "references": [
      "https://github.com/malcomvetter/CSExec"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/04",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\csexecsvc.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Dynamic CSharp Compile Artefact",
    "id": 1535,
    "status": "test",
    "description": "When C# is compiled dynamically, a .cmdline file will be created as a part of the process.\nCertain processes are not typically observed compiling C# code, but can do so without touching disk.\nThis can be used to unpack a payload for execution\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1027.004/T1027.004.md#atomic-test-2---dynamic-c-compile"
    ],
    "author": "frack113",
    "date": "2022/01/09",
    "modified": "2023/02/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".cmdline"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential DCOM InternetExplorer.Application DLL Hijack",
    "id": 1536,
    "related": [
      {
        "id": "e554f142-5cf3-4e55-ace9-a1b59e0def65",
        "type": "obsoletes"
      },
      {
        "id": "f354eba5-623b-450f-b073-0b5b2773b6aa",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects potential DLL hijack of \"iertutil.dll\" found in the DCOM InternetExplorer.Application Class over the network",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/201009-RemoteDCOMIErtUtilDLLHijack/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Open Threat Research (OTR), wagga",
    "date": "2020/10/12",
    "modified": "2022/12/18",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1021.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image": "System",
        "TargetFilename|endswith": "\\Internet Explorer\\iertutil.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "DLL Search Order Hijackig Via Additional Space in Path",
    "id": 1537,
    "status": "test",
    "description": "Detects when an attacker create a similar folder structure to windows system folders such as (Windows, Program Files...)\nbut with a space in order to trick DLL load search order and perform a \"DLL Search Order Hijacking\" attack\n",
    "references": [
      "https://twitter.com/cyb3rops/status/1552932770464292864",
      "https://www.wietzebeukema.nl/blog/hijacking-dlls-in-windows"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2022/07/30",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1574.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": [
          "C:\\Windows \\",
          "C:\\Program Files \\",
          "C:\\Program Files (x86) \\"
        ],
        "TargetFilename|endswith": ".dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potentially Suspicious DMP/HDMP File Creation",
    "id": 1538,
    "related": [
      {
        "id": "3a525307-d100-48ae-b3b9-0964699d7f97",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of a file with the \".dmp\"/\".hdmp\" extension by a shell or scripting application such as \"cmd\", \"powershell\", etc. Often created by software during a crash. Memory dumps can sometimes contain sensitive information such as credentials. It's best to determine the source of the crash.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/wer/collecting-user-mode-dumps"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/07",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wscript.exe"
        ],
        "TargetFilename|endswith": [
          ".dmp",
          ".dump",
          ".hdmp"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Some administrative PowerShell or VB scripts might have the ability to collect dumps and move them to other folders which might trigger a false positive."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Attempt Via ErrorHandler.Cmd",
    "id": 1539,
    "status": "test",
    "description": "Detects creation of a file named \"ErrorHandler.cmd\" in the \"C:\\WINDOWS\\Setup\\Scripts\\\" directory which could be used as a method of persistence\nThe content of C:\\WINDOWS\\Setup\\Scripts\\ErrorHandler.cmd is read whenever some tools under C:\\WINDOWS\\System32\\oobe\\ (e.g. Setup.exe) fail to run for any reason.\n",
    "references": [
      "https://www.hexacorn.com/blog/2022/01/16/beyond-good-ol-run-key-part-135/",
      "https://github.com/last-byte/PersistenceSniper"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/09",
    "modified": "2022/12/19",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\WINDOWS\\Setup\\Scripts\\ErrorHandler.cmd"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious ASPX File Drop by Exchange",
    "id": 1540,
    "related": [
      {
        "id": "6b269392-9eba-40b5-acb6-55c882b20ba6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious file type dropped by an Exchange component in IIS into a suspicious folder",
    "references": [
      "https://www.microsoft.com/security/blog/2022/09/30/analyzing-attacks-using-the-exchange-vulnerabilities-cve-2022-41040-and-cve-2022-41082/",
      "https://www.gteltsc.vn/blog/canh-bao-chien-dich-tan-cong-su-dung-lo-hong-zero-day-tren-microsoft-exchange-server-12714.html",
      "https://en.gteltsc.vn/blog/cap-nhat-nhe-ve-lo-hong-bao-mat-0day-microsoft-exchange-dang-duoc-su-dung-de-tan-cong-cac-to-chuc-tai-viet-nam-9685.html"
    ],
    "author": "Florian Roth (Nextron Systems), MSTI (query, idea)",
    "date": "2022/10/01",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\w3wp.exe",
        "CommandLine|contains": "MSExchange",
        "TargetFilename|contains": [
          "FrontEnd\\HttpProxy\\",
          "\\inetpub\\wwwroot\\aspnet_client\\"
        ]
      },
      "selection_types": {
        "TargetFilename|endswith": [
          ".aspx",
          ".asp",
          ".ashx"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Drop by Exchange",
    "id": 1541,
    "related": [
      {
        "id": "bd1212e5-78da-431e-95fa-c58e3237a8e6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious file type dropped by an Exchange component in IIS",
    "references": [
      "https://www.microsoft.com/security/blog/2022/09/30/analyzing-attacks-using-the-exchange-vulnerabilities-cve-2022-41040-and-cve-2022-41082/",
      "https://www.gteltsc.vn/blog/canh-bao-chien-dich-tan-cong-su-dung-lo-hong-zero-day-tren-microsoft-exchange-server-12714.html",
      "https://en.gteltsc.vn/blog/cap-nhat-nhe-ve-lo-hong-bao-mat-0day-microsoft-exchange-dang-duoc-su-dung-de-tan-cong-cac-to-chuc-tai-viet-nam-9685.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/10/04",
    "tags": [
      "attack.persistence",
      "attack.t1190",
      "attack.initial_access",
      "attack.t1505.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\w3wp.exe",
        "CommandLine|contains": "MSExchange"
      },
      "selection_types": {
        "TargetFilename|endswith": [
          ".aspx",
          ".asp",
          ".ashx",
          ".ps1",
          ".bat",
          ".exe",
          ".dll",
          ".vbs"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "GoToAssist Temporary Installation Artefact",
    "id": 1542,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-4---gotoassist-files-detected-test-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\LogMeInInc\\GoToAssist Remote Support Expert\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "HackTool - Dumpert Process Dumper Default File",
    "id": 1543,
    "related": [
      {
        "id": "2704ab9e-afe2-4854-a3b1-0c0706d03578",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the creation of the default dump file used by Outflank Dumpert tool. A process dumper, which dumps the lsass process memory",
    "references": [
      "https://github.com/outflanknl/Dumpert",
      "https://unit42.paloaltonetworks.com/actors-still-exploiting-sharepoint-vulnerability/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/02/04",
    "modified": "2023/05/09",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "dumpert.dmp"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Very unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Typical HiveNightmare SAM File Export",
    "id": 1544,
    "status": "test",
    "description": "Detects files written by the different tools that exploit HiveNightmare",
    "references": [
      "https://github.com/GossiTheDog/HiveNightmare",
      "https://github.com/FireFart/hivenightmare/",
      "https://github.com/WiredPulse/Invoke-HiveNightmare",
      "https://twitter.com/cube0x0/status/1418920190759378944"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/07/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.credential_access",
      "attack.t1552.001",
      "cve.2021.36934"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": [
        {
          "TargetFilename|contains": [
            "\\hive_sam_",
            "\\SAM-2021-",
            "\\SAM-2022-",
            "\\SAM-2023-",
            "\\SAM-haxx",
            "\\Sam.save"
          ]
        },
        {
          "TargetFilename": "C:\\windows\\temp\\sam"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Files that accidentally contain these strings"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Inveigh Execution Artefacts",
    "id": 1545,
    "status": "test",
    "description": "Detects the presence and execution of Inveigh via dropped artefacts",
    "references": [
      "https://github.com/Kevin-Robertson/Inveigh/blob/29d9e3c3a625b3033cdaf4683efaafadcecb9007/Inveigh/Support/Output.cs",
      "https://github.com/Kevin-Robertson/Inveigh/blob/29d9e3c3a625b3033cdaf4683efaafadcecb9007/Inveigh/Support/Control.cs",
      "https://thedfirreport.com/2020/11/23/pysa-mespinoza-ransomware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/24",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\Inveigh-Log.txt",
          "\\Inveigh-Cleartext.txt",
          "\\Inveigh-NTLMv1Users.txt",
          "\\Inveigh-NTLMv2Users.txt",
          "\\Inveigh-NTLMv1.txt",
          "\\Inveigh-NTLMv2.txt",
          "\\Inveigh-FormInput.txt",
          "\\Inveigh.dll",
          "\\Inveigh.exe",
          "\\Inveigh.ps1",
          "\\Inveigh-Relay.ps1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Mimikatz Kirbi File Creation",
    "id": 1546,
    "related": [
      {
        "id": "034affe8-6170-11ec-844f-0f78aa0c4d66",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the creation of files created by mimikatz such as \".kirbi\", \"mimilsa.log\", etc.",
    "references": [
      "https://cobalt.io/blog/kerberoast-attack-techniques",
      "https://pentestlab.blog/2019/10/21/persistence-security-support-provider/"
    ],
    "author": "Florian Roth (Nextron Systems), David ANDRE",
    "date": "2021/11/08",
    "modified": "2023/02/16",
    "tags": [
      "attack.credential_access",
      "attack.t1558"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          ".kirbi",
          "mimilsa.log"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "NPPSpy Hacktool Usage",
    "id": 1547,
    "status": "test",
    "description": "Detects the use of NPPSpy hacktool that stores cleartext passwords of users that logged in to a local file",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003/T1003.md#atomic-test-2---credential-dumping-with-nppspy",
      "https://twitter.com/0gtweet/status/1465282548494487554"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/11/29",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\NPPSpy.txt",
          "\\NPPSpy.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powerup Write Hijack DLL",
    "id": 1548,
    "status": "test",
    "description": "Powerup tool's Write Hijack DLL exploits DLL hijacking for privilege escalation.\nIn it's default mode, it builds a self deleting .bat file which executes malicious command.\nThe detection rule relies on creation of the malicious bat file (debug.bat by default).\n",
    "references": [
      "https://powersploit.readthedocs.io/en/latest/Privesc/Write-HijackDll/"
    ],
    "author": "Subhash Popuri (@pbssubhash)",
    "date": "2021/08/21",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1574.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetFilename|endswith": ".bat"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Any powershell script that creates bat files"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "QuarksPwDump Dump File",
    "id": 1549,
    "status": "test",
    "description": "Detects a dump file written by QuarksPwDump password dumper",
    "references": [
      "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/QuarksPWDump.htm"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2018/02/10",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains|all": [
          "\\AppData\\Local\\Temp\\SAM-",
          ".dmp"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Potential Remote Credential Dumping Activity",
    "id": 1550,
    "status": "test",
    "description": "Detects default filenames output from the execution of CrackMapExec and Impacket-secretsdump against an endpoint.",
    "references": [
      "https://github.com/Porchetta-Industries/CrackMapExec",
      "https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py"
    ],
    "author": "SecurityAura",
    "date": "2022/11/16",
    "modified": "2023/01/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\svchost.exe",
        "TargetFilename|re": "\\\\Windows\\\\System32\\\\[a-zA-Z0-9]{8}\\.tmp$"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SafetyKatz Default Dump Filename",
    "id": 1551,
    "status": "test",
    "description": "Detects default lsass dump filename from SafetyKatz",
    "references": [
      "https://github.com/GhostPack/SafetyKatz",
      "https://github.com/GhostPack/SafetyKatz/blob/715b311f76eb3a4c8d00a1bd29c6cd1899e450b7/SafetyKatz/Program.cs#L63"
    ],
    "author": "Markus Neis",
    "date": "2018/07/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\Temp\\debug.bin"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate files with similar filename structure"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Initial Access via DLL Search Order Hijacking",
    "id": 1552,
    "status": "test",
    "description": "Detects attempts to create a DLL file to a known desktop application dependencies folder such as Slack, Teams or OneDrive and by an unusual process. This may indicate an attempt to load a malicious module via DLL search order hijacking.",
    "references": [
      "https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-5d46dd4ac6866b4337ec126be8cee0e115467b3e8703794ba6f6df6432c806bc",
      "https://posts.specterops.io/automating-dll-hijack-discovery-81c4295904b0"
    ],
    "author": "Tim Rauch (rule), Elastic (idea)",
    "date": "2022/10/21",
    "tags": [
      "attack.t1566",
      "attack.t1566.001",
      "attack.initial_access",
      "attack.t1574",
      "attack.t1574.001",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\winword.exe",
          "\\excel.exe",
          "\\powerpnt.exe",
          "\\MSACCESS.EXE",
          "\\MSPUB.EXE",
          "\\fltldr.exe",
          "\\cmd.exe",
          "\\certutil.exe",
          "\\mshta.exe",
          "\\cscript.exe",
          "\\wscript.exe",
          "\\curl.exe",
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetFilename|endswith": ".dll",
        "TargetFilename|contains|all": [
          "\\Users\\",
          "\\AppData\\"
        ],
        "TargetFilename|contains": [
          "\\Microsoft\\OneDrive\\",
          "\\Microsoft OneDrive\\",
          "\\Microsoft\\Teams\\",
          "\\Local\\slack\\app-",
          "\\Local\\Programs\\Microsoft VS Code\\"
        ]
      },
      "filter": {
        "Image|endswith": "\\cmd.exe",
        "TargetFilename|contains|all": [
          "\\Users\\",
          "\\AppData\\",
          "\\Microsoft\\OneDrive\\",
          "\\api-ms-win-core-"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Installation of TeamViewer Desktop",
    "id": 1553,
    "status": "test",
    "description": "TeamViewer_Desktop.exe is create during install",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-1---teamviewer-files-detected-test-on-windows"
    ],
    "author": "frack113",
    "date": "2022/01/28",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\TeamViewer_Desktop.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ISO File Created Within Temp Folders",
    "id": 1554,
    "status": "test",
    "description": "Detects the creation of a ISO file in the Outlook temp folder or in the Appdata temp folder. Typical of Qakbot TTP from end-July 2022.",
    "references": [
      "https://twitter.com/Sam0x90/status/1552011547974696960",
      "https://securityaffairs.co/wordpress/133680/malware/dll-sideloading-spread-qakbot.html",
      "https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1553.005/T1553.005.md#atomic-test-1---mount-iso-image"
    ],
    "author": "@sam0x90",
    "date": "2022/07/30",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "TargetFilename|contains|all": [
          "\\AppData\\Local\\Temp\\",
          ".zip\\"
        ],
        "TargetFilename|endswith": ".iso"
      },
      "selection_2": {
        "TargetFilename|contains": "\\AppData\\Local\\Microsoft\\Windows\\INetCache\\Content.Outlook\\",
        "TargetFilename|endswith": ".iso"
      },
      "condition": "1 of selection*"
    },
    "fields": [
      "Image",
      "ComputerName",
      "TargetFileName"
    ],
    "falsepositives": [
      "Potential FP by sysadmin opening a zip file containing a legitimate ISO file"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ISO or Image Mount Indicator in Recent Files",
    "id": 1555,
    "status": "test",
    "description": "Detects the creation of recent element file that points to an .ISO, .IMG, .VHD or .VHDX file as often used in phishing attacks.\nThis can be a false positive on server systems but on workstations users should rarely mount .iso or .img files.\n",
    "references": [
      "https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/",
      "https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/malicious-spam-campaign-uses-iso-image-files-to-deliver-lokibot-and-nanocore",
      "https://blog.emsisoft.com/en/32373/beware-new-wave-of-malware-spreads-via-iso-file-email-attachments/",
      "https://insights.sei.cmu.edu/blog/the-dangers-of-vhd-and-vhdx-files/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/11",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          ".iso.lnk",
          ".img.lnk",
          ".vhd.lnk",
          ".vhdx.lnk"
        ],
        "TargetFilename|contains": "\\Microsoft\\Windows\\Recent\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Cases in which a user mounts an image file for legitimate reasons"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "GatherNetworkInfo.VBS Reconnaissance Script Output",
    "id": 1556,
    "related": [
      {
        "id": "575dce0c-8139-4e30-9295-1ee75969f7fe",
        "type": "similar"
      },
      {
        "id": "07aa184a-870d-413d-893a-157f317f6f58",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects creation of files which are the results of executing the built-in reconnaissance script \"C:\\Windows\\System32\\gatherNetworkInfo.vbs\".",
    "references": [
      "https://posts.slayerlabs.com/living-off-the-land/#gathernetworkinfovbs",
      "https://www.mandiant.com/resources/blog/trojanized-windows-installers-ukrainian-government"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/08",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\System32\\config",
        "TargetFilename|endswith": [
          "\\Hotfixinfo.txt",
          "\\netiostate.txt",
          "\\sysportslog.txt",
          "\\VmSwitchLog.evtx"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LSASS Process Memory Dump Files",
    "id": 1557,
    "related": [
      {
        "id": "db2110f3-479d-42a6-94fb-d35bc1e46492",
        "type": "obsoletes"
      },
      {
        "id": "5e3d3601-0662-4af0-b1d2-36a05e90c40a",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects creation of files with names used by different memory dumping tools to create a memory dump of the LSASS process memory, which contains user credentials.",
    "references": [
      "https://www.google.com/search?q=procdump+lsass",
      "https://medium.com/@markmotig/some-ways-to-dump-lsass-exe-c4a75fdc49bf",
      "https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/windows/credential_access_lsass_memdump_file_created.toml",
      "https://www.whiteoaksecurity.com/blog/attacks-defenses-dumping-lsass-no-mimikatz/",
      "https://github.com/helpsystems/nanodump",
      "https://github.com/CCob/MirrorDump"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/11/15",
    "modified": "2023/09/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_1": {
        "TargetFilename|endswith": [
          "\\lsass.dmp",
          "\\lsass.zip",
          "\\lsass.rar",
          "\\Andrew.dmp",
          "\\Coredump.dmp",
          "\\NotLSASS.zip",
          "\\PPLBlade.dmp"
        ]
      },
      "selection_2": {
        "TargetFilename|contains": [
          "\\lsass_2",
          "\\lsassdump",
          "\\lsassdmp"
        ]
      },
      "selection_3": {
        "TargetFilename|contains|all": [
          "\\lsass",
          ".dmp"
        ]
      },
      "selection_4": {
        "TargetFilename|contains": "SQLDmpr",
        "TargetFilename|endswith": ".mdmp"
      },
      "selection_5": {
        "TargetFilename|startswith": "nanodump",
        "TargetFilename|endswith": ".dmp"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSASS Process Dump Artefact In CrashDumps Folder",
    "id": 1558,
    "status": "test",
    "description": "Detects the presence of an LSASS dump file in the \"CrashDumps\" folder. This could be a sign of LSASS credential dumping. Techniques such as the LSASS Shtinkering have been seen abusing the Windows Error Reporting to dump said process.",
    "references": [
      "https://github.com/deepinstinct/Lsass-Shtinkering",
      "https://media.defcon.org/DEF%20CON%2030/DEF%20CON%2030%20presentations/Asaf%20Gilboa%20-%20LSASS%20Shtinkering%20Abusing%20Windows%20Error%20Reporting%20to%20Dump%20LSASS.pdf"
    ],
    "author": "@pbssubhash",
    "date": "2022/12/08",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\System32\\config\\systemprofile\\AppData\\Local\\CrashDumps\\",
        "TargetFilename|contains": "lsass.exe.",
        "TargetFilename|endswith": ".dmp"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate dump of the process by the operating system due to a crash of lsass"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WerFault LSASS Process Memory Dump",
    "id": 1559,
    "status": "test",
    "description": "Detects WerFault creating a dump file with a name that indicates that the dump file could be an LSASS process memory, which contains user credentials",
    "references": [
      "https://github.com/helpsystems/nanodump"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/06/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image": "C:\\WINDOWS\\system32\\WerFault.exe",
        "TargetFilename|contains": [
          "\\lsass",
          "lsass.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Adwind RAT / JRAT File Artifact",
    "id": 1560,
    "related": [
      {
        "id": "1fac1481-2dbc-48b2-9096-753c49b4ec71",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects javaw.exe in AppData folder as used by Adwind / JRAT",
    "references": [
      "https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100",
      "https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf"
    ],
    "author": "Florian Roth (Nextron Systems), Tom Ueltschi, Jonhnathan Ribeiro, oscd.community",
    "date": "2017/11/10",
    "modified": "2022/12/02",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "TargetFilename|contains|all": [
            "\\AppData\\Roaming\\Oracle\\bin\\java",
            ".exe"
          ]
        },
        {
          "TargetFilename|contains|all": [
            "\\Retrive",
            ".vbs"
          ]
        }
      ],
      "condition": "selection"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "Octopus Scanner Malware",
    "id": 1561,
    "status": "test",
    "description": "Detects Octopus Scanner Malware.",
    "references": [
      "https://securitylab.github.com/research/octopus-scanner-malware-open-source-supply-chain"
    ],
    "author": "NVISO",
    "date": "2020/06/09",
    "modified": "2021/11/27",
    "tags": [
      "attack.t1195",
      "attack.t1195.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\AppData\\Local\\Microsoft\\Cache134.dat",
          "\\AppData\\Local\\Microsoft\\ExplorerSync.db"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File Creation In Suspicious Directory By Msdt.EXE",
    "id": 1562,
    "status": "test",
    "description": "Detects msdt.exe creating files in suspicious directories which could be a sign of exploitation of either Follina or Dogwalk vulnerabilities",
    "references": [
      "https://irsl.medium.com/the-trouble-with-microsofts-troubleshooters-6e32fc80b8bd",
      "https://msrc-blog.microsoft.com/2022/05/30/guidance-for-cve-2022-30190-microsoft-support-diagnostic-tool-vulnerability/"
    ],
    "author": "Vadim Varganov, Florian Roth (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2023/02/23",
    "tags": [
      "attack.persistence",
      "attack.t1547.001",
      "cve.2022.30190"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\msdt.exe",
        "TargetFilename|contains": [
          "\\Desktop\\",
          "\\Start Menu\\Programs\\Startup\\",
          "C:\\PerfLogs\\",
          "C:\\ProgramData\\",
          "C:\\Users\\Public\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious DotNET CLR Usage Log Artifact",
    "id": 1563,
    "related": [
      {
        "id": "4508a70e-97ef-4300-b62b-ff27992990ea",
        "type": "derived"
      },
      {
        "id": "e4b63079-6198-405c-abd7-3fe8b0ce3263",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the creation of Usage Log files by the CLR (clr.dll). These files are named after the executing process once the assembly is finished executing for the first time in the (user) session context.",
    "references": [
      "https://bohops.com/2021/03/16/investigating-net-clr-usage-log-tampering-techniques-for-edr-evasion/",
      "https://github.com/olafhartong/sysmon-modular/blob/fa1ae53132403d262be2bbd7f17ceea7e15e8c78/11_file_create/include_dotnet.xml",
      "https://web.archive.org/web/20221026202428/https://gist.github.com/code-scrap/d7f152ffcdb3e0b02f7f394f5187f008",
      "https://blog.menasec.net/2019/07/interesting-difr-traces-of-net-clr.html"
    ],
    "author": "frack113, omkar72, oscd.community, Wojciech Lesicki",
    "date": "2022/11/18",
    "modified": "2023/02/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows",
      "definition": "Requirements: UsageLogs folder must be monitored by the sysmon configuration"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\UsageLogs\\cmstp.exe.log",
          "\\UsageLogs\\cscript.exe.log",
          "\\UsageLogs\\mshta.exe.log",
          "\\UsageLogs\\msxsl.exe.log",
          "\\UsageLogs\\regsvr32.exe.log",
          "\\UsageLogs\\rundll32.exe.log",
          "\\UsageLogs\\svchost.exe.log",
          "\\UsageLogs\\wscript.exe.log",
          "\\UsageLogs\\wmic.exe.log"
        ]
      },
      "filter_main_rundll32": {
        "ParentImage|endswith": "\\MsiExec.exe",
        "ParentCommandLine|contains": " -Embedding",
        "Image|endswith": "\\rundll32.exe",
        "CommandLine|contains|all": [
          "Temp",
          "zzzzInvokeManagedCustomActionOutOfProc"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Rundll32.exe with zzzzInvokeManagedCustomActionOutOfProc in command line and msiexec.exe as parent process - https://twitter.com/SBousseaden/status/1388064061087260675"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Creation In Uncommon AppData Folder",
    "id": 1564,
    "status": "test",
    "description": "Detects the creation of suspicious files and folders inside the user's AppData folder but not inside any of the common and well known directories (Local, Romaing, LocalLow). This method could be used as a method to bypass detection who exclude the AppData folder in fear of FPs",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "modified": "2023/02/23",
    "tags": [
      "attack.defense_evasion",
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|contains": "\\AppData\\",
        "TargetFilename|endswith": [
          ".bat",
          ".cmd",
          ".cpl",
          ".dll",
          ".exe",
          ".hta",
          ".iso",
          ".lnk",
          ".msi",
          ".ps1",
          ".psm1",
          ".scr",
          ".vbe",
          ".vbs"
        ]
      },
      "filter_main": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|contains": [
          "\\AppData\\Local\\",
          "\\AppData\\LocalLow\\",
          "\\AppData\\Roaming\\"
        ]
      },
      "condition": "selection and not filter_main"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "SCR File Write Event",
    "id": 1565,
    "status": "experimental",
    "description": "Detects the creation of screensaver files (.scr) outside of system folders. Attackers may execute an application as an \".SCR\" file using \"rundll32.exe desk.cpl,InstallScreenSaver\" for example.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Libraries/Desk/"
    ],
    "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io",
    "date": "2022/04/27",
    "modified": "2023/08/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".scr"
      },
      "filter": {
        "TargetFilename|contains": [
          ":\\$WINDOWS.~BT\\NewOS\\",
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\",
          ":\\Windows\\WinSxS\\",
          ":\\WUDownloadCache\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "The installation of new screen savers by third party software"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Notepad++ Plugins",
    "id": 1566,
    "status": "test",
    "description": "Detects creation of new \".dll\" files inside the plugins directory of a notepad++ installation by a process other than \"gup.exe\". Which could indicates possible persistence",
    "references": [
      "https://pentestlab.blog/2022/02/14/persistence-notepad-plugins/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/10",
    "modified": "2023/01/05",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Notepad++\\plugins\\",
        "TargetFilename|endswith": ".dll"
      },
      "filter_gup": {
        "Image|endswith": "\\Notepad++\\updater\\gup.exe"
      },
      "filter_install": {
        "Image|startswith": "C:\\Users\\",
        "Image|contains": "\\AppData\\Local\\Temp\\",
        "Image|endswith": [
          "\\target.exe",
          "Installer.x64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Possible FPs during first installation of Notepad++",
      "Legitimate use of custom plugins by users in order to enhance notepad++ functionalities"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "NTDS.DIT Created",
    "id": 1567,
    "status": "experimental",
    "description": "Detects creation of a file named \"ntds.dit\" (Active Directory Database)",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "ntds.dit"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "NTDS.DIT Creation By Uncommon Parent Process",
    "id": 1568,
    "related": [
      {
        "id": "11b1ed55-154d-4e82-8ad7-83739298f720",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects creation of a file named \"ntds.dit\" (Active Directory Database) by an uncommon parent process or directory",
    "references": [
      "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/ntds.dit-enumeration",
      "https://www.n00py.io/2022/03/manipulating-user-passwords-without-mimikatz/",
      "https://pentestlab.blog/tag/ntds-dit/",
      "https://github.com/samratashok/nishang/blob/414ee1104526d7057f9adaeee196d91ae447283e/Gather/Copy-VSS.ps1"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/11",
    "modified": "2023/01/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event",
      "definition": "Requirements: The \"ParentImage\" field is not available by default on EID 11 of Sysmon logs. To be able to use this rule to the full extent you need to enrich the log with additional ParentImage data"
    },
    "detection": {
      "selection_file": {
        "TargetFilename|endswith": "\\ntds.dit"
      },
      "selection_process_parent": {
        "ParentImage|endswith": [
          "\\cscript.exe",
          "\\httpd.exe",
          "\\nginx.exe",
          "\\php-cgi.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\w3wp.exe",
          "\\wscript.exe"
        ]
      },
      "selection_process_parent_path": {
        "ParentImage|contains": [
          "\\apache",
          "\\tomcat",
          "\\AppData\\",
          "\\Temp\\",
          "\\Public\\",
          "\\PerfLogs\\"
        ]
      },
      "condition": "selection_file and 1 of selection_process_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NTDS.DIT Creation By Uncommon Process",
    "id": 1569,
    "related": [
      {
        "id": "4e7050dd-e548-483f-b7d6-527ab4fa784d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects creation of a file named \"ntds.dit\" (Active Directory Database) by an uncommon process or a process located in a suspicious directory",
    "references": [
      "https://stealthbits.com/blog/extracting-password-hashes-from-the-ntds-dit-file/",
      "https://adsecurity.org/?p=2398"
    ],
    "author": "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/11",
    "modified": "2022/07/14",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_ntds": {
        "TargetFilename|endswith": "\\ntds.dit"
      },
      "selection_process_img": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\regsvr32.exe",
          "\\rundll32.exe",
          "\\wscript.exe",
          "\\wsl.exe",
          "\\wt.exe"
        ]
      },
      "selection_process_paths": {
        "Image|contains": [
          "\\AppData\\",
          "\\Temp\\",
          "\\Public\\",
          "\\PerfLogs\\"
        ]
      },
      "condition": "selection_ntds and 1 of selection_process_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NTDS Exfiltration Filename Patterns",
    "id": 1570,
    "status": "test",
    "description": "Detects creation of files with specific name patterns seen used in various tools that export the NTDS.DIT for exfiltration.",
    "references": [
      "https://github.com/rapid7/metasploit-framework/blob/eb6535009f5fdafa954525687f09294918b5398d/modules/post/windows/gather/ntds_grabber.rb",
      "https://github.com/rapid7/metasploit-framework/blob/eb6535009f5fdafa954525687f09294918b5398d/data/post/powershell/NTDSgrab.ps1",
      "https://github.com/SecureAuthCorp/impacket/blob/7d2991d78836b376452ca58b3d14daa61b67cb40/impacket/examples/secretsdump.py#L2405"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/11",
    "modified": "2023/05/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\All.cab",
          ".ntds.cleartext"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Microsoft Office Add-In",
    "id": 1571,
    "status": "test",
    "description": "Detects potential persistence activity via startup add-ins that load when Microsoft Office starts (.wll/.xll are simply .dll fit for Word or Excel).",
    "references": [
      "Internal Research",
      "https://labs.withsecure.com/publications/add-in-opportunities-for-office-persistence",
      "https://github.com/redcanaryco/atomic-red-team/blob/4ae9580a1a8772db87a1b6cdb0d03e5af231e966/atomics/T1137.006/T1137.006.md"
    ],
    "author": "NVISO",
    "date": "2020/05/11",
    "modified": "2023/02/08",
    "tags": [
      "attack.persistence",
      "attack.t1137.006"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_wlldropped": {
        "TargetFilename|contains": "\\Microsoft\\Word\\Startup\\",
        "TargetFilename|endswith": ".wll"
      },
      "selection_xlldropped": {
        "TargetFilename|contains": "\\Microsoft\\Excel\\Startup\\",
        "TargetFilename|endswith": ".xll"
      },
      "selection_xladropped": {
        "TargetFilename|contains": "Microsoft\\Excel\\XLSTART\\",
        "TargetFilename|endswith": ".xlam"
      },
      "selection_generic": {
        "TargetFilename|contains": "\\Microsoft\\Addins\\",
        "TargetFilename|endswith": [
          ".xlam",
          ".xla",
          ".ppam"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate add-ins"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Office Macro File Creation",
    "id": 1572,
    "related": [
      {
        "id": "0e29e3a7-1ad8-40aa-b691-9f82ecd33d66",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a new office macro files on the systems",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1566.001/T1566.001.md",
      "https://docs.microsoft.com/en-us/deployoffice/compat/office-file-format-reference"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/23",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          ".docm",
          ".dotm",
          ".xlsm",
          ".xltm",
          ".potm",
          ".pptm"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Very common in environments that rely heavily on macro documents"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Office Macro File Download",
    "id": 1573,
    "related": [
      {
        "id": "91174a41-dc8f-401b-be89-7bfc140612a0",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of a new office macro files on the systems via an application (browser, mail client).",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1566.001/T1566.001.md",
      "https://docs.microsoft.com/en-us/deployoffice/compat/office-file-format-reference"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/23",
    "modified": "2023/04/18",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_processes": {
        "Image|endswith": [
          "\\RuntimeBroker.exe",
          "\\outlook.exe",
          "\\thunderbird.exe",
          "\\brave.exe",
          "\\chrome.exe",
          "\\firefox.exe",
          "\\iexplore.exe",
          "\\maxthon.exe",
          "\\MicrosoftEdge.exe",
          "\\msedge.exe",
          "\\msedgewebview2.exe",
          "\\opera.exe",
          "\\safari.exe",
          "\\seamonkey.exe",
          "\\vivaldi.exe",
          "\\whale.exe"
        ]
      },
      "selection_ext": [
        {
          "TargetFilename|endswith": [
            ".docm",
            ".dotm",
            ".xlsm",
            ".xltm",
            ".potm",
            ".pptm"
          ]
        },
        {
          "TargetFilename|contains": [
            ".docm:Zone",
            ".dotm:Zone",
            ".xlsm:Zone",
            ".xltm:Zone",
            ".potm:Zone",
            ".pptm:Zone"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate macro files downloaded from the internet",
      "Legitimate macro files sent as attachments via emails"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Office Macro File Creation From Suspicious Process",
    "id": 1574,
    "status": "test",
    "description": "Detects the creation of a office macro file from a a suspicious process",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1566.001/T1566.001.md",
      "https://docs.microsoft.com/en-us/deployoffice/compat/office-file-format-reference"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/23",
    "modified": "2023/02/22",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows",
      "definition": "Requirements: The \"ParentImage\" field is not available by default on EID 11 of Sysmon logs. To be able to use this rule to the full extent you need to enriche the log with additional ParentImage data"
    },
    "detection": {
      "selection_cmd": [
        {
          "Image|endswith": [
            "\\cscript.exe",
            "\\mshta.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        },
        {
          "ParentImage|endswith": [
            "\\cscript.exe",
            "\\mshta.exe",
            "\\regsvr32.exe",
            "\\rundll32.exe",
            "\\wscript.exe"
          ]
        }
      ],
      "selection_ext": {
        "TargetFilename|endswith": [
          ".docm",
          ".dotm",
          ".xlsm",
          ".xltm",
          ".potm",
          ".pptm"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "OneNote Attachment File Dropped In Suspicious Location",
    "id": 1575,
    "status": "experimental",
    "description": "Detects creation of files with the \".one\"/\".onepkg\" extension in suspicious or uncommon locations. This could be a sign of attackers abusing OneNote attachments",
    "references": [
      "https://www.bleepingcomputer.com/news/security/hackers-now-use-microsoft-onenote-attachments-to-spread-malware/",
      "https://blog.osarmor.com/319/onenote-attachment-delivers-asyncrat-malware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/22",
    "modified": "2023/09/19",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\",
          ":\\Temp\\"
        ],
        "TargetFilename|endswith": [
          ".one",
          ".onepkg"
        ]
      },
      "filter_main_onenote": {
        "Image|contains": ":\\Program Files\\Microsoft Office\\",
        "Image|endswith": "\\ONENOTE.EXE"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate usage of \".one\" or \".onepkg\" files from those locations"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Created Via OneNote Application",
    "id": 1576,
    "status": "test",
    "description": "Detects suspicious files created via the OneNote application. This could indicate a potential malicious \".one\"/\".onepkg\" file was executed as seen being used in malware activity in the wild",
    "references": [
      "https://www.bleepingcomputer.com/news/security/hackers-now-use-microsoft-onenote-attachments-to-spread-malware/",
      "https://blog.osarmor.com/319/onenote-attachment-delivers-asyncrat-malware/",
      "https://twitter.com/MaD_c4t/status/1623414582382567424",
      "https://labs.withsecure.com/publications/detecting-onenote-abuse",
      "https://www.trustedsec.com/blog/new-attacks-old-tricks-how-onenote-malware-is-evolving/",
      "https://app.any.run/tasks/17f2d378-6d11-4d6f-8340-954b04f35e83/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/09",
    "modified": "2023/02/27",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\onenote.exe",
          "\\onenotem.exe",
          "\\onenoteim.exe"
        ],
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\OneNote\\",
        "TargetFilename|endswith": [
          ".bat",
          ".chm",
          ".cmd",
          ".dll",
          ".exe",
          ".hta",
          ".htm",
          ".html",
          ".js",
          ".lnk",
          ".ps1",
          ".vbe",
          ".vbs",
          ".wsf"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positives should be very low with the extensions list cited. Especially if you don't heavily utilize OneNote.",
      "Occasional FPs might occur if OneNote is used internally to share different embedded documents"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Outlook Macro Created",
    "id": 1577,
    "related": [
      {
        "id": "117d3d3a-755c-4a61-b23e-9171146d094c",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a macro file for Outlook.",
    "references": [
      "https://www.mdsec.co.uk/2020/11/a-fresh-outlook-on-mail-based-persistence/"
    ],
    "author": "@ScoubiMtl",
    "date": "2021/04/05",
    "modified": "2023/02/08",
    "tags": [
      "attack.persistence",
      "attack.command_and_control",
      "attack.t1137",
      "attack.t1008",
      "attack.t1546"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\outlook.exe",
        "TargetFilename|endswith": "\\Microsoft\\Outlook\\VbaProject.OTM"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "User genuinely creates a VB Macro for their email"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Outlook Form",
    "id": 1578,
    "status": "test",
    "description": "Detects the creation of a new Outlook form which can contain malicious code",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=76",
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=79",
      "https://learn.microsoft.com/en-us/office/vba/outlook/concepts/outlook-forms/create-an-outlook-form",
      "https://www.slipstick.com/developer/custom-form/clean-outlooks-forms-cache/"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2021/06/10",
    "modified": "2023/02/22",
    "tags": [
      "attack.persistence",
      "attack.t1137.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\outlook.exe",
        "TargetFilename|contains": [
          "\\AppData\\Local\\Microsoft\\FORMS\\IPM",
          "\\Local Settings\\Application Data\\Microsoft\\Forms"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of outlook forms"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Outlook Macro Created",
    "id": 1579,
    "related": [
      {
        "id": "8c31f563-f9a7-450c-bfa8-35f8f32f1f61",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the creation of a macro file for Outlook.",
    "references": [
      "https://www.mdsec.co.uk/2020/11/a-fresh-outlook-on-mail-based-persistence/",
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=53",
      "https://www.linkedin.com/pulse/outlook-backdoor-using-vba-samir-b-/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/08",
    "tags": [
      "attack.persistence",
      "attack.command_and_control",
      "attack.t1137",
      "attack.t1008",
      "attack.t1546"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\Microsoft\\Outlook\\VbaProject.OTM"
      },
      "filter": {
        "Image|endswith": "\\outlook.exe"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Publisher Attachment File Dropped In Suspicious Location",
    "id": 1580,
    "status": "test",
    "description": "Detects creation of files with the \".pub\" extension in suspicious or uncommon locations. This could be a sign of attackers abusing Publisher documents",
    "references": [
      "https://twitter.com/EmericNasi/status/1623224526220804098"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/08",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\",
          "C:\\Temp\\"
        ],
        "TargetFilename|endswith": ".pub"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of \".pub\" files from those locations"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Microsoft Office Startup Folder",
    "id": 1581,
    "status": "test",
    "description": "Detects creation of Microsoft Office files inside of one of the default startup folders in order to achieve persistence.",
    "references": [
      "https://insight-jp.nttsecurity.com/post/102hojk/operation-restylink-apt-campaign-targeting-japanese-companies",
      "https://learn.microsoft.com/en-us/office/troubleshoot/excel/use-startup-folders"
    ],
    "author": "Max Altgelt (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/02",
    "modified": "2023/06/22",
    "tags": [
      "attack.persistence",
      "attack.t1137"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_word_paths": [
        {
          "TargetFilename|contains": "\\Microsoft\\Word\\STARTUP"
        },
        {
          "TargetFilename|contains|all": [
            "\\Office",
            "\\Program Files",
            "\\STARTUP"
          ]
        }
      ],
      "selection_word_extension": {
        "TargetFilename|endswith": [
          ".doc",
          ".docm",
          ".docx",
          ".dot",
          ".dotm",
          ".rtf"
        ]
      },
      "selection_excel_paths": [
        {
          "TargetFilename|contains": "\\Microsoft\\Excel\\XLSTART"
        },
        {
          "TargetFilename|contains|all": [
            "\\Office",
            "\\Program Files",
            "\\XLSTART"
          ]
        }
      ],
      "selection_excel_extension": {
        "TargetFilename|endswith": [
          ".xls",
          ".xlsm",
          ".xlsx",
          ".xlt",
          ".xltm"
        ]
      },
      "filter_main_office": {
        "Image|endswith": [
          "\\WINWORD.exe",
          "\\EXCEL.exe"
        ]
      },
      "condition": "(all of selection_word_* or all of selection_excel_*) and not filter_main_office"
    },
    "falsepositives": [
      "Loading a user environment from a backup or a domain controller",
      "Synchronization of templates"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "File With Uncommon Extension Created By An Office Application",
    "id": 1582,
    "status": "experimental",
    "description": "Detects the creation of files with an executable or script extension by an Office application.",
    "references": [
      "https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/",
      "https://github.com/vadim-hunter/Detection-Ideas-Rules/blob/02bcbfc2bfb8b4da601bb30de0344ae453aa1afe/Threat%20Intelligence/The%20DFIR%20Report/20210329_Sodinokibi_(aka_REvil)_Ransomware.yaml"
    ],
    "author": "Vadim Khrykov (ThreatIntel), Cyb3rEng (Rule), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2023/06/22",
    "tags": [
      "attack.t1204.002",
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection1": {
        "Image|endswith": [
          "\\excel.exe",
          "\\msaccess.exe",
          "\\mspub.exe",
          "\\powerpnt.exe",
          "\\visio.exe",
          "\\winword.exe"
        ]
      },
      "selection2": {
        "TargetFilename|endswith": [
          ".bat",
          ".cmd",
          ".com",
          ".dll",
          ".exe",
          ".hta",
          ".ocx",
          ".proj",
          ".ps1",
          ".scf",
          ".scr",
          ".sys",
          ".vbe",
          ".vbs",
          ".wsf",
          ".wsh"
        ]
      },
      "filter_optional_webservicecache": {
        "TargetFilename|contains|all": [
          "C:\\Users\\",
          "\\AppData\\Local\\Microsoft\\Office\\",
          "\\WebServiceCache\\AllUsers"
        ],
        "TargetFilename|endswith": ".com"
      },
      "filter_optional_webex": {
        "Image|endswith": "\\winword.exe",
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\webexdelta\\",
        "TargetFilename|endswith": [
          ".dll",
          ".exe"
        ]
      },
      "filter_main_localassembly": {
        "TargetFilename|contains": "\\AppData\\Local\\assembly\\tmp\\",
        "TargetFilename|endswith": ".dll"
      },
      "condition": "all of selection* and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon File Created In Office Startup Folder",
    "id": 1583,
    "status": "experimental",
    "description": "Detects the creation of a file with an uncommon extension in an Office application startup folder",
    "references": [
      "https://app.any.run/tasks/d6fe6624-6ef8-485d-aa75-3d1bdda2a08c/",
      "http://addbalance.com/word/startup.htm",
      "https://answers.microsoft.com/en-us/msoffice/forum/all/document-in-word-startup-folder-doesnt-open-when/44ab0932-2917-4150-8cdc-2f2cf39e86f3",
      "https://en.wikipedia.org/wiki/List_of_Microsoft_Office_filename_extensions"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/05",
    "modified": "2023/12/13",
    "tags": [
      "attack.resource_development",
      "attack.t1587.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_word_paths": [
        {
          "TargetFilename|contains": "\\Microsoft\\Word\\STARTUP"
        },
        {
          "TargetFilename|contains|all": [
            "\\Office",
            "\\Program Files",
            "\\STARTUP"
          ]
        }
      ],
      "filter_exclude_word_ext": {
        "TargetFilename|endswith": [
          ".docb",
          ".docm",
          ".docx",
          ".dotm",
          ".mdb",
          ".mdw",
          ".pdf",
          ".wll",
          ".wwl"
        ]
      },
      "selection_excel_paths": [
        {
          "TargetFilename|contains": "\\Microsoft\\Excel\\XLSTART"
        },
        {
          "TargetFilename|contains|all": [
            "\\Office",
            "\\Program Files",
            "\\XLSTART"
          ]
        }
      ],
      "filter_exclude_excel_ext": {
        "TargetFilename|endswith": [
          ".xll",
          ".xls",
          ".xlsm",
          ".xlsx",
          ".xlt",
          ".xltm",
          ".xlw"
        ]
      },
      "filter_main_office_click_to_run": {
        "Image|contains": ":\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_main_office_apps": {
        "Image|contains": [
          ":\\Program Files\\Microsoft Office\\",
          ":\\Program Files (x86)\\Microsoft Office\\"
        ],
        "Image|endswith": [
          "\\winword.exe",
          "\\excel.exe"
        ]
      },
      "condition": "((selection_word_paths and not filter_exclude_word_ext) or (selection_excel_paths and not filter_exclude_excel_ext)) and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positive might stem from rare extensions used by other Office utilities."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PCRE.NET Package Temp Files",
    "id": 1584,
    "status": "test",
    "description": "Detects processes creating temp files related to PCRE.NET package",
    "references": [
      "https://twitter.com/rbmaslen/status/1321859647091970051",
      "https://twitter.com/tifkin_/status/1321916444557365248"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/29",
    "modified": "2022/10/09",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\ba9ea7344a4a5f591d6e5dc32a13494b\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious File Created In PerfLogs",
    "id": 1585,
    "status": "experimental",
    "description": "Detects suspicious file based on their extension being created in \"C:\\PerfLogs\\\". Note that this directory mostly contains \".etl\" files",
    "references": [
      "Internal Research",
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\PerfLogs\\",
        "TargetFilename|endswith": [
          ".7z",
          ".bat",
          ".bin",
          ".chm",
          ".dll",
          ".exe",
          ".hta",
          ".lnk",
          ".ps1",
          ".psm1",
          ".py",
          ".scr",
          ".sys",
          ".vbe",
          ".vbs",
          ".zip"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Binary Or Script Dropper Via PowerShell",
    "id": 1586,
    "status": "experimental",
    "description": "Detects PowerShell creating a binary executable or a script file.",
    "references": [
      "https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/03/17",
    "modified": "2023/05/09",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetFilename|endswith": [
          ".bat",
          ".chm",
          ".cmd",
          ".com",
          ".dll",
          ".exe",
          ".hta",
          ".jar",
          ".js",
          ".ocx",
          ".scr",
          ".sys",
          ".vbe",
          ".vbs",
          ".wsf"
        ]
      },
      "filter_main_user_temp": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\",
        "TargetFilename|endswith": [
          ".dll",
          ".exe"
        ]
      },
      "filter_main_admin_temp": {
        "TargetFilename|startswith": "C:\\Windows\\Temp\\",
        "TargetFilename|endswith": [
          ".dll",
          ".exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positives will differ depending on the environment and scripts used. Apply additional filters accordingly."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Script Dropped Via PowerShell.EXE",
    "id": 1587,
    "status": "experimental",
    "description": "Detects PowerShell creating a PowerShell file (.ps1). While often times this behavior is benign, sometimes it can be a sign of a dropper script trying to achieve persistence.",
    "references": [
      "https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution"
    ],
    "author": "frack113",
    "date": "2023/05/09",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetFilename|endswith": ".ps1"
      },
      "filter_main_psscriptpolicytest": {
        "TargetFilename|contains": "__PSScriptPolicyTest_"
      },
      "filter_main_appdata": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\"
      },
      "filter_main_windows_temp": {
        "TargetFilename|startswith": "C:\\Windows\\Temp\\"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "False positives will differ depending on the environment and scripts used. Apply additional filters accordingly."
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Malicious PowerShell Scripts - FileCreation",
    "id": 1588,
    "related": [
      {
        "id": "41025fd7-0466-4650-a813-574aaacbe7f4",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of known offensive powershell scripts used for exploitation",
    "references": [
      "https://github.com/PowerShellMafia/PowerSploit",
      "https://github.com/NetSPI/PowerUpSQL",
      "https://github.com/CsEnox/EventViewer-UACBypass",
      "https://github.com/AlsidOfficial/WSUSpendu/",
      "https://github.com/nettitude/Invoke-PowerThIEf",
      "https://github.com/S3cur3Th1sSh1t/WinPwn",
      "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
      "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
      "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
      "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
      "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
      "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
      "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
      "https://github.com/HarmJ0y/DAMP",
      "https://github.com/samratashok/nishang",
      "https://github.com/DarkCoderSc/PowerRunAsSystem/",
      "https://github.com/besimorhino/powercat",
      "https://github.com/Kevin-Robertson/Powermad",
      "https://github.com/adrecon/ADRecon",
      "https://github.com/adrecon/AzureADRecon"
    ],
    "author": "Markus Neis, Nasreddine Bencherchali (Nextron Systems), Mustafa Kaan Demir, Georg Lauenstein",
    "date": "2018/04/07",
    "modified": "2024/01/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_generic": {
        "TargetFilename|endswith": [
          "\\Add-ConstrainedDelegationBackdoor.ps1",
          "\\Add-Exfiltration.ps1",
          "\\Add-Persistence.ps1",
          "\\Add-RegBackdoor.ps1",
          "\\Add-RemoteRegBackdoor.ps1",
          "\\Add-ScrnSaveBackdoor.ps1",
          "\\ADRecon.ps1",
          "\\AzureADRecon.ps1",
          "\\Check-VM.ps1",
          "\\ConvertTo-ROT13.ps1",
          "\\Copy-VSS.ps1",
          "\\Create-MultipleSessions.ps1",
          "\\DNS_TXT_Pwnage.ps1",
          "\\dnscat2.ps1",
          "\\Do-Exfiltration.ps1",
          "\\DomainPasswordSpray.ps1",
          "\\Download_Execute.ps1",
          "\\Download-Execute-PS.ps1",
          "\\Enable-DuplicateToken.ps1",
          "\\Enabled-DuplicateToken.ps1",
          "\\Execute-Command-MSSQL.ps1",
          "\\Execute-DNSTXT-Code.ps1",
          "\\Execute-OnTime.ps1",
          "\\ExetoText.ps1",
          "\\Exploit-Jboss.ps1",
          "\\Find-AVSignature.ps1",
          "\\Find-Fruit.ps1",
          "\\Find-GPOLocation.ps1",
          "\\Find-TrustedDocuments.ps1",
          "\\FireBuster.ps1",
          "\\FireListener.ps1",
          "\\Get-ApplicationHost.ps1",
          "\\Get-ChromeDump.ps1",
          "\\Get-ClipboardContents.ps1",
          "\\Get-ComputerDetail.ps1",
          "\\Get-FoxDump.ps1",
          "\\Get-GPPAutologon.ps1",
          "\\Get-GPPPassword.ps1",
          "\\Get-IndexedItem.ps1",
          "\\Get-Keystrokes.ps1",
          "\\Get-LSASecret.ps1",
          "\\Get-MicrophoneAudio.ps1",
          "\\Get-PassHashes.ps1",
          "\\Get-PassHints.ps1",
          "\\Get-RegAlwaysInstallElevated.ps1",
          "\\Get-RegAutoLogon.ps1",
          "\\Get-RickAstley.ps1",
          "\\Get-Screenshot.ps1",
          "\\Get-SecurityPackages.ps1",
          "\\Get-ServiceFilePermission.ps1",
          "\\Get-ServicePermission.ps1",
          "\\Get-ServiceUnquoted.ps1",
          "\\Get-SiteListPassword.ps1",
          "\\Get-System.ps1",
          "\\Get-TimedScreenshot.ps1",
          "\\Get-UnattendedInstallFile.ps1",
          "\\Get-Unconstrained.ps1",
          "\\Get-USBKeystrokes.ps1",
          "\\Get-VaultCredential.ps1",
          "\\Get-VulnAutoRun.ps1",
          "\\Get-VulnSchTask.ps1",
          "\\Get-WebConfig.ps1",
          "\\Get-WebCredentials.ps1",
          "\\Get-WLAN-Keys.ps1",
          "\\Gupt-Backdoor.ps1",
          "\\HTTP-Backdoor.ps1",
          "\\HTTP-Login.ps1",
          "\\Install-ServiceBinary.ps1",
          "\\Install-SSP.ps1",
          "\\Invoke-ACLScanner.ps1",
          "\\Invoke-ADSBackdoor.ps1",
          "\\Invoke-AmsiBypass.ps1",
          "\\Invoke-ARPScan.ps1",
          "\\Invoke-BackdoorLNK.ps1",
          "\\Invoke-BadPotato.ps1",
          "\\Invoke-BetterSafetyKatz.ps1",
          "\\Invoke-BruteForce.ps1",
          "\\Invoke-BypassUAC.ps1",
          "\\Invoke-Carbuncle.ps1",
          "\\Invoke-Certify.ps1",
          "\\Invoke-ConPtyShell.ps1",
          "\\Invoke-CredentialInjection.ps1",
          "\\Invoke-CredentialsPhish.ps1",
          "\\Invoke-DAFT.ps1",
          "\\Invoke-DCSync.ps1",
          "\\Invoke-Decode.ps1",
          "\\Invoke-DinvokeKatz.ps1",
          "\\Invoke-DllInjection.ps1",
          "\\Invoke-DNSUpdate.ps1",
          "\\Invoke-DowngradeAccount.ps1",
          "\\Invoke-EgressCheck.ps1",
          "\\Invoke-Encode.ps1",
          "\\Invoke-EventViewer.ps1",
          "\\Invoke-Eyewitness.ps1",
          "\\Invoke-FakeLogonScreen.ps1",
          "\\Invoke-Farmer.ps1",
          "\\Invoke-Get-RBCD-Threaded.ps1",
          "\\Invoke-Gopher.ps1",
          "\\Invoke-Grouper2.ps1",
          "\\Invoke-Grouper3.ps1",
          "\\Invoke-HandleKatz.ps1",
          "\\Invoke-Interceptor.ps1",
          "\\Invoke-Internalmonologue.ps1",
          "\\Invoke-Inveigh.ps1",
          "\\Invoke-InveighRelay.ps1",
          "\\Invoke-JSRatRegsvr.ps1",
          "\\Invoke-JSRatRundll.ps1",
          "\\Invoke-KrbRelay.ps1",
          "\\Invoke-KrbRelayUp.ps1",
          "\\Invoke-LdapSignCheck.ps1",
          "\\Invoke-Lockless.ps1",
          "\\Invoke-MalSCCM.ps1",
          "\\Invoke-Mimikatz.ps1",
          "\\Invoke-MimikatzWDigestDowngrade.ps1",
          "\\Invoke-Mimikittenz.ps1",
          "\\Invoke-MITM6.ps1",
          "\\Invoke-NanoDump.ps1",
          "\\Invoke-NetRipper.ps1",
          "\\Invoke-NetworkRelay.ps1",
          "\\Invoke-NinjaCopy.ps1",
          "\\Invoke-OxidResolver.ps1",
          "\\Invoke-P0wnedshell.ps1",
          "\\Invoke-P0wnedshellx86.ps1",
          "\\Invoke-Paranoia.ps1",
          "\\Invoke-PortScan.ps1",
          "\\Invoke-PoshRatHttp.ps1",
          "\\Invoke-PoshRatHttps.ps1",
          "\\Invoke-PostExfil.ps1",
          "\\Invoke-PowerDump.ps1",
          "\\Invoke-PowerShellIcmp.ps1",
          "\\Invoke-PowerShellTCP.ps1",
          "\\Invoke-PowerShellTcpOneLine.ps1",
          "\\Invoke-PowerShellTcpOneLineBind.ps1",
          "\\Invoke-PowerShellUdp.ps1",
          "\\Invoke-PowerShellUdpOneLine.ps1",
          "\\Invoke-PowerShellWMI.ps1",
          "\\Invoke-PowerThIEf.ps1",
          "\\Invoke-PPLDump.ps1",
          "\\Invoke-Prasadhak.ps1",
          "\\Invoke-PsExec.ps1",
          "\\Invoke-PsGcat.ps1",
          "\\Invoke-PsGcatAgent.ps1",
          "\\Invoke-PSInject.ps1",
          "\\Invoke-PsUaCme.ps1",
          "\\Invoke-ReflectivePEInjection.ps1",
          "\\Invoke-ReverseDNSLookup.ps1",
          "\\Invoke-Rubeus.ps1",
          "\\Invoke-RunAs.ps1",
          "\\Invoke-SafetyKatz.ps1",
          "\\Invoke-SauronEye.ps1",
          "\\Invoke-SCShell.ps1",
          "\\Invoke-Seatbelt.ps1",
          "\\Invoke-ServiceAbuse.ps1",
          "\\Invoke-SessionGopher.ps1",
          "\\Invoke-ShellCode.ps1",
          "\\Invoke-SMBScanner.ps1",
          "\\Invoke-Snaffler.ps1",
          "\\Invoke-Spoolsample.ps1",
          "\\Invoke-SSHCommand.ps1",
          "\\Invoke-SSIDExfil.ps1",
          "\\Invoke-StandIn.ps1",
          "\\Invoke-StickyNotesExtract.ps1",
          "\\Invoke-Tater.ps1",
          "\\Invoke-Thunderfox.ps1",
          "\\Invoke-ThunderStruck.ps1",
          "\\Invoke-TokenManipulation.ps1",
          "\\Invoke-Tokenvator.ps1",
          "\\Invoke-TotalExec.ps1",
          "\\Invoke-UrbanBishop.ps1",
          "\\Invoke-UserHunter.ps1",
          "\\Invoke-VoiceTroll.ps1",
          "\\Invoke-Whisker.ps1",
          "\\Invoke-WinEnum.ps1",
          "\\Invoke-winPEAS.ps1",
          "\\Invoke-WireTap.ps1",
          "\\Invoke-WmiCommand.ps1",
          "\\Invoke-WScriptBypassUAC.ps1",
          "\\Invoke-Zerologon.ps1",
          "\\Keylogger.ps1",
          "\\MailRaider.ps1",
          "\\New-HoneyHash.ps1",
          "\\OfficeMemScraper.ps1",
          "\\Offline_Winpwn.ps1",
          "\\Out-CHM.ps1",
          "\\Out-DnsTxt.ps1",
          "\\Out-Excel.ps1",
          "\\Out-HTA.ps1",
          "\\Out-Java.ps1",
          "\\Out-JS.ps1",
          "\\Out-Minidump.ps1",
          "\\Out-RundllCommand.ps1",
          "\\Out-SCF.ps1",
          "\\Out-SCT.ps1",
          "\\Out-Shortcut.ps1",
          "\\Out-WebQuery.ps1",
          "\\Out-Word.ps1",
          "\\Parse_Keys.ps1",
          "\\Port-Scan.ps1",
          "\\PowerBreach.ps1",
          "\\powercat.ps1",
          "\\Powermad.ps1",
          "\\PowerRunAsSystem.psm1",
          "\\PowerSharpPack.ps1",
          "\\PowerUp.ps1",
          "\\PowerUpSQL.ps1",
          "\\PowerView.ps1",
          "\\PSAsyncShell.ps1",
          "\\RemoteHashRetrieval.ps1",
          "\\Remove-Persistence.ps1",
          "\\Remove-PoshRat.ps1",
          "\\Remove-Update.ps1",
          "\\Run-EXEonRemote.ps1",
          "\\Schtasks-Backdoor.ps1",
          "\\Set-DCShadowPermissions.ps1",
          "\\Set-MacAttribute.ps1",
          "\\Set-RemotePSRemoting.ps1",
          "\\Set-RemoteWMI.ps1",
          "\\Set-Wallpaper.ps1",
          "\\Show-TargetScreen.ps1",
          "\\Speak.ps1",
          "\\Start-CaptureServer.ps1",
          "\\Start-WebcamRecorder.ps1",
          "\\StringToBase64.ps1",
          "\\TexttoExe.ps1",
          "\\VolumeShadowCopyTools.ps1",
          "\\WinPwn.ps1",
          "\\WSUSpendu.ps1"
        ]
      },
      "selection_invoke_sharp": {
        "TargetFilename|contains": "Invoke-Sharp",
        "TargetFilename|endswith": ".ps1"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Module File Created",
    "id": 1589,
    "status": "experimental",
    "description": "Detects the creation of a new PowerShell module \".psm1\", \".psd1\", \".dll\", \".ps1\", etc.",
    "references": [
      "Internal Research",
      "https://learn.microsoft.com/en-us/powershell/scripting/developer/module/understanding-a-windows-powershell-module?view=powershell-7.3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/09",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetFilename|contains": [
          "\\WindowsPowerShell\\Modules\\",
          "\\PowerShell\\7\\Modules\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential Suspicious PowerShell Module File Created",
    "id": 1590,
    "status": "experimental",
    "description": "Detects the creation of a new PowerShell module in the first folder of the module directory structure \"\\WindowsPowerShell\\Modules\\malware\\malware.psm1\". This is somewhat an uncommon practice as legitimate modules often includes a version folder.",
    "references": [
      "Internal Research",
      "https://learn.microsoft.com/en-us/powershell/scripting/developer/module/understanding-a-windows-powershell-module?view=powershell-7.3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/09",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\\\WindowsPowerShell\\\\Modules\\\\*\\.ps",
          "\\\\WindowsPowerShell\\\\Modules\\\\*\\.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "False positive rate will vary depending on the environments. Additional filters might be required to make this logic usable in production."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Module File Created By Non-PowerShell Process",
    "id": 1591,
    "status": "experimental",
    "description": "Detects the creation of a new PowerShell module \".psm1\", \".psd1\", \".dll\", \".ps1\", etc. by a non-PowerShell process",
    "references": [
      "Internal Research",
      "https://learn.microsoft.com/en-us/powershell/scripting/developer/module/understanding-a-windows-powershell-module?view=powershell-7.3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/09",
    "modified": "2023/10/18",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          "\\WindowsPowerShell\\Modules\\",
          "\\PowerShell\\7\\Modules\\"
        ]
      },
      "filter_main_pwsh": {
        "Image|endswith": [
          ":\\Program Files\\PowerShell\\7-preview\\pwsh.exe",
          ":\\Program Files\\PowerShell\\7\\pwsh.exe",
          ":\\Windows\\System32\\poqexec.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
          ":\\Windows\\SysWOW64\\poqexec.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Startup Shortcut Persistence Via PowerShell.EXE",
    "id": 1592,
    "status": "test",
    "description": "Detects PowerShell writing startup shortcuts.\nThis procedure was highlighted in Red Canary Intel Insights Oct. 2021, \"We frequently observe adversaries using PowerShell to write malicious .lnk files into the startup directory to establish persistence.\nAccordingly, this detection opportunity is likely to identify persistence mechanisms in multiple threats.\nIn the context of Yellow Cockatoo, this persistence mechanism eventually launches the command-line script that leads to the installation of a malicious DLL\"\n",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-october-2021/",
      "https://github.com/redcanaryco/atomic-red-team/blob/36d49de4c8b00bf36054294b4a1fcbab3917d7c5/atomics/T1547.001/T1547.001.md#atomic-test-7---add-executable-shortcut-link-to-user-startup-folder"
    ],
    "author": "Christopher Peacock '@securepeacock', SCYTHE",
    "date": "2021/10/24",
    "modified": "2023/02/23",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\powershell.exe",
          "\\pwsh.exe"
        ],
        "TargetFilename|contains": "\\start menu\\programs\\startup\\",
        "TargetFilename|endswith": ".lnk"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Depending on your environment accepted applications may leverage this at times. It is recommended to search for anomalies inidicative of malware."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PSScriptPolicyTest Creation By Uncommon Process",
    "id": 1593,
    "status": "experimental",
    "description": "Detects the creation of the \"PSScriptPolicyTest\" PowerShell script by an uncommon process. This file is usually generated by Microsoft Powershell to test against Applocker.",
    "references": [
      "https://www.paloaltonetworks.com/blog/security-operations/stopping-powershell-without-powershell/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/01",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "__PSScriptPolicyTest_"
      },
      "filter_main_generic": {
        "Image|endswith": [
          ":\\Program Files\\PowerShell\\7-preview\\pwsh.exe",
          ":\\Program Files\\PowerShell\\7\\pwsh.exe",
          ":\\Windows\\System32\\dsac.exe",
          ":\\Windows\\System32\\sdiagnhost.exe",
          ":\\Windows\\System32\\ServerManager.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
          ":\\Windows\\System32\\wsmprovhost.exe",
          ":\\Windows\\SysWOW64\\sdiagnhost.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell_ise.exe",
          ":\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Rclone Config File Creation",
    "id": 1594,
    "status": "test",
    "description": "Detects Rclone config files being created",
    "references": [
      "https://research.nccgroup.com/2021/05/27/detecting-rclone-an-effective-tool-for-exfiltration/"
    ],
    "author": "Aaron Greetham (@beardofbinary) - NCC Group",
    "date": "2021/05/26",
    "modified": "2023/05/09",
    "tags": [
      "attack.exfiltration",
      "attack.t1567.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains|all": [
          ":\\Users\\",
          "\\.config\\rclone\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Rclone usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "RDP File Creation From Suspicious Application",
    "id": 1595,
    "status": "experimental",
    "description": "Detects Rclone config file being created",
    "references": [
      "https://www.blackhillsinfosec.com/rogue-rdp-revisiting-initial-access-methods/",
      "https://blog.thickmints.dev/mintsights/detecting-rogue-rdp/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/18",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\brave.exe",
          "\\CCleaner Browser\\Application\\CCleanerBrowser.exe",
          "\\chromium.exe",
          "\\firefox.exe",
          "\\Google\\Chrome\\Application\\chrome.exe",
          "\\iexplore.exe",
          "\\microsoftedge.exe",
          "\\msedge.exe",
          "\\Opera.exe",
          "\\Vivaldi.exe",
          "\\Whale.exe",
          "\\Outlook.exe",
          "\\RuntimeBroker.exe",
          "\\Thunderbird.exe",
          "\\Discord.exe",
          "\\Keybase.exe",
          "\\msteams.exe",
          "\\Slack.exe",
          "\\teams.exe"
        ],
        "TargetFilename|contains": ".rdp"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Winnti Dropper Activity",
    "id": 1596,
    "status": "test",
    "description": "Detects files dropped by Winnti as described in RedMimicry Winnti playbook",
    "references": [
      "https://redmimicry.com/posts/redmimicry-winnti/#dropper"
    ],
    "author": "Alexander Rausch",
    "date": "2020/06/24",
    "modified": "2023/01/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\gthread-3.6.dll",
          "\\sigcmm-2.4.dll",
          "\\Windows\\Temp\\tmp.bat"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RemCom Service File Creation",
    "id": 1597,
    "status": "test",
    "description": "Detects default RemCom service filename which indicates RemCom service installation and execution",
    "references": [
      "https://github.com/kavika13/RemCom/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/04",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\RemComSvc.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ScreenConnect Temporary Installation Artefact",
    "id": 1598,
    "status": "test",
    "description": "An adversary may use legitimate desktop support and remote access software, such as Team Viewer, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks.\nThese services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment.\nRemote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries. (Citation: Symantec Living off the Land)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1219/T1219.md#atomic-test-5---screenconnect-application-download-and-install-on-windows"
    ],
    "author": "frack113",
    "date": "2022/02/13",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Bin\\ScreenConnect."
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remote Access Tool - ScreenConnect Temporary File",
    "id": 1599,
    "related": [
      {
        "id": "b1f73849-6329-4069-bc8f-78a604bb8b23",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of files in a specific location by ScreenConnect RMM.\nScreenConnect has feature to remotely execute binaries on a target machine. These binaries will be dropped to \":\\Users\\<username>\\Documents\\ConnectWiseControl\\Temp\\\" before execution.\n",
    "references": [
      "https://github.com/SigmaHQ/sigma/pull/4467"
    ],
    "author": "Ali Alwashali",
    "date": "2023/10/10",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\ScreenConnect.WindowsClient.exe",
        "TargetFilename|contains": "\\Documents\\ConnectWiseControl\\Temp\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of ScreenConnect"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential RipZip Attack on Startup Folder",
    "id": 1600,
    "status": "test",
    "description": "Detects a phishing attack which expands a ZIP file containing a malicious shortcut.\nIf the victim expands the ZIP file via the explorer process, then the explorer process expands the malicious ZIP file and drops a malicious shortcut redirected to a backdoor into the Startup folder.\nAdditionally, the file name of the malicious shortcut in Startup folder contains {0AFACED1-E828-11D1-9187-B532F1E9575D} meaning the folder shortcut operation.\n",
    "references": [
      "https://twitter.com/jonasLyk/status/1549338335243534336?t=CrmPocBGLbDyE4p6zTX1cg&s=19"
    ],
    "author": "Greg (rule)",
    "date": "2022/07/21",
    "modified": "2023/01/05",
    "tags": [
      "attack.persistence",
      "attack.t1547"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains|all": [
          "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
          ".lnk.{0AFACED1-E828-11D1-9187-B532F1E9575D}"
        ],
        "Image|endswith": "\\explorer.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential SAM Database Dump",
    "id": 1601,
    "status": "test",
    "description": "Detects the creation of files that look like exports of the local SAM (Security Account Manager)",
    "references": [
      "https://github.com/search?q=CVE-2021-36934",
      "https://github.com/cube0x0/CVE-2021-36934",
      "https://www.google.com/search?q=%22reg.exe+save%22+sam",
      "https://github.com/HuskyHacks/ShadowSteal",
      "https://github.com/FireFart/hivenightmare"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/11",
    "modified": "2023/01/05",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": [
        {
          "TargetFilename|endswith": [
            "\\Temp\\sam",
            "\\sam.sav",
            "\\Intel\\sam",
            "\\sam.hive",
            "\\Perflogs\\sam",
            "\\ProgramData\\sam",
            "\\Users\\Public\\sam",
            "\\AppData\\Local\\sam",
            "\\AppData\\Roaming\\sam",
            "_ShadowSteal.zip",
            "\\Documents\\SAM.export",
            ":\\sam"
          ]
        },
        {
          "TargetFilename|contains": [
            "\\hive_sam_",
            "\\sam.save",
            "\\sam.export",
            "\\~reg_sam.save",
            "\\sam_backup",
            "\\sam.bck",
            "\\sam.backup"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Rare cases of administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Self Extraction Directive File Created In Potentially Suspicious Location",
    "id": 1602,
    "related": [
      {
        "id": "ab90dab8-c7da-4010-9193-563528cfa347",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of Self Extraction Directive files (.sed) in a potentially suspicious location.\nThese files are used by the \"iexpress.exe\" utility in order to create self extracting packages.\nAttackers were seen abusing this utility and creating PE files with embedded \".sed\" entries.\n",
    "references": [
      "https://strontic.github.io/xcyclopedia/library/iexpress.exe-D594B2A33EFAFD0EABF09E3FDC05FCEA.html",
      "https://en.wikipedia.org/wiki/IExpress",
      "https://www.virustotal.com/gui/file/602f4ae507fa8de57ada079adff25a6c2a899bd25cd092d0af7e62cdb619c93c/behavior"
    ],
    "author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
    "date": "2024/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": [
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Windows\\System32\\Tasks\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ],
        "TargetFilename|endswith": ".sed"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Shell/Scripting Application File Write to Suspicious Folder",
    "id": 1603,
    "status": "test",
    "description": "Detects Windows shells and scripting applications that write files to suspicious folders",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/11/20",
    "modified": "2023/03/29",
    "tags": [
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "Image|endswith": [
          "\\bash.exe",
          "\\cmd.exe",
          "\\cscript.exe",
          "\\msbuild.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\sh.exe",
          "\\wscript.exe"
        ],
        "TargetFilename|startswith": [
          "C:\\PerfLogs\\",
          "C:\\Users\\Public\\"
        ]
      },
      "selection_2": {
        "Image|endswith": [
          "\\certutil.exe",
          "\\forfiles.exe",
          "\\mshta.exe",
          "\\schtasks.exe",
          "\\scriptrunner.exe",
          "\\wmic.exe"
        ],
        "TargetFilename|contains": [
          "C:\\PerfLogs\\",
          "C:\\Users\\Public\\",
          "C:\\Windows\\Temp\\"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Binaries Write Suspicious Extensions",
    "id": 1604,
    "related": [
      {
        "id": "1277f594-a7d1-4f28-a2d3-73af5cbeab43",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Windows executables that writes files with suspicious extensions",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/12",
    "modified": "2023/03/14",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_generic": {
        "Image|endswith": [
          "\\smss.exe",
          "\\RuntimeBroker.exe",
          "\\sihost.exe",
          "\\lsass.exe",
          "\\csrss.exe",
          "\\winlogon.exe",
          "\\wininit.exe"
        ],
        "TargetFilename|endswith": [
          ".bat",
          ".vbe",
          ".txt",
          ".vbs",
          ".exe",
          ".ps1",
          ".hta",
          ".iso",
          ".dll"
        ]
      },
      "selection_special": {
        "Image|endswith": [
          "\\rundll32.exe",
          "\\svchost.exe",
          "\\dllhost.exe"
        ],
        "TargetFilename|endswith": [
          ".bat",
          ".vbe",
          ".vbs",
          ".ps1",
          ".hta",
          ".iso"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Startup Folder File Write",
    "id": 1605,
    "related": [
      {
        "id": "28208707-fe31-437f-9a7f-4b1108b94d2e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "A General detection for files being created in the Windows startup directory. This could be an indicator of persistence.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/12",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/5.B.1_611FCA99-97D0-4873-9E51-1C1BA2DBB40D.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2022/10/07",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp"
      },
      "filter_update": [
        {
          "Image": "C:\\Windows\\System32\\wuauclt.exe"
        },
        {
          "TargetFilename|startswith": "C:\\$WINDOWS.~BT\\NewOS\\"
        }
      ],
      "condition": "selection and not filter_update"
    },
    "falsepositives": [
      "FP could be caused by legitimate application writing shortcuts for example. This folder should always be inspected to make sure that all the files in there are legitimate"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Creation with Colorcpl",
    "id": 1606,
    "status": "test",
    "description": "Once executed, colorcpl.exe will copy the arbitrary file to c:\\windows\\system32\\spool\\drivers\\color\\",
    "references": [
      "https://twitter.com/eral4m/status/1480468728324231172?s=20"
    ],
    "author": "frack113",
    "date": "2022/01/21",
    "modified": "2023/01/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\colorcpl.exe"
      },
      "filter_ext": {
        "TargetFilename|endswith": [
          ".icm",
          ".gmmp",
          ".cdmp",
          ".camp"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Created Files by Microsoft Sync Center",
    "id": 1607,
    "status": "test",
    "description": "This rule detects suspicious files created by Microsoft Sync Center (mobsync)",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-november-2021/"
    ],
    "author": "elhoim",
    "date": "2022/04/28",
    "modified": "2022/06/02",
    "tags": [
      "attack.t1055",
      "attack.t1218",
      "attack.execution",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_mobsync": {
        "Image|endswith": "\\mobsync.exe"
      },
      "filter_created_file": {
        "TargetFilename|endswith": [
          ".dll",
          ".exe"
        ]
      },
      "condition": "selection_mobsync and filter_created_file"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Files in Default GPO Folder",
    "id": 1608,
    "status": "test",
    "description": "Detects the creation of copy of suspicious files (EXE/DLL) to the default GPO storage folder",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-november-2021/"
    ],
    "author": "elhoim",
    "date": "2022/04/28",
    "tags": [
      "attack.t1036.005",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\",
        "TargetFilename|endswith": [
          ".dll",
          ".exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Desktopimgdownldr Target File",
    "id": 1609,
    "status": "test",
    "description": "Detects a suspicious Microsoft desktopimgdownldr file creation that stores a file to a suspicious location or contains a file with a suspicious extension",
    "references": [
      "https://labs.sentinelone.com/living-off-windows-land-a-new-native-file-downldr/",
      "https://twitter.com/SBousseaden/status/1278977301745741825"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/07/03",
    "modified": "2022/06/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\svchost.exe",
        "TargetFilename|contains": "\\Personalization\\LockScreenImage\\"
      },
      "filter1": {
        "TargetFilename|contains": "C:\\Windows\\"
      },
      "filter2": {
        "TargetFilename|contains": [
          ".jpg",
          ".jpeg",
          ".png"
        ]
      },
      "condition": "selection and not filter1 and not filter2"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "False positives depend on scripts and administrative tools used in the monitored environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious desktop.ini Action",
    "id": 1610,
    "status": "test",
    "description": "Detects unusual processes accessing desktop.ini, which can be leveraged to alter how Explorer displays a folder's content (i.e. renaming files) without changing them on disk.",
    "references": [
      "https://isc.sans.edu/forums/diary/Desktopini+as+a+postexploitation+tool/25912/"
    ],
    "author": "Maxime Thiebaut (@0xThiebaut), Tim Shelton (HAWK.IO)",
    "date": "2020/03/19",
    "modified": "2022/10/07",
    "tags": [
      "attack.persistence",
      "attack.t1547.009"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\desktop.ini"
      },
      "filter_generic": {
        "Image|startswith": [
          "C:\\Windows\\",
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "filter_jetbrains": {
        "Image|endswith": "\\AppData\\Local\\JetBrains\\Toolbox\\bin\\7z.exe",
        "TargetFilename|contains": "\\JetBrains\\apps\\"
      },
      "filter_upgrade": {
        "TargetFilename|startswith": "C:\\$WINDOWS.~BT\\NewOS\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Operations performed through Windows SCCM or equivalent",
      "Read only access list authority"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Creation TXT File in User Desktop",
    "id": 1611,
    "status": "test",
    "description": "Ransomware create txt file in the user Desktop",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1486/T1486.md#atomic-test-5---purelocker-ransom-note"
    ],
    "author": "frack113",
    "date": "2021/12/26",
    "tags": [
      "attack.impact",
      "attack.t1486"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\cmd.exe",
        "TargetFilename|contains|all": [
          "\\Users\\",
          "\\Desktop\\"
        ],
        "TargetFilename|endswith": ".txt"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Creation of a Diagcab",
    "id": 1612,
    "status": "test",
    "description": "Detects the creation of diagcab file, which could be caused by some legitimate installer or is a sign of exploitation (review the filename and its location)",
    "references": [
      "https://threadreaderapp.com/thread/1533879688141086720.html"
    ],
    "author": "frack113",
    "date": "2022/06/08",
    "tags": [
      "attack.resource_development"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".diagcab"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate microsoft diagcab"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Double Extension Files",
    "id": 1613,
    "related": [
      {
        "id": "1cdd9a09-06c9-4769-99ff-626e2b3991b8",
        "type": "derived"
      },
      {
        "id": "3215aa19-f060-4332-86d5-5602511f3ca8",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects dropped files with double extensions, which is often used by malware as a method to abuse the fact that Windows hide default extensions by default.",
    "references": [
      "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/",
      "https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations",
      "https://www.cybereason.com/blog/research/a-bazar-of-tricks-following-team9s-development-cycles",
      "https://twitter.com/malwrhunterteam/status/1235135745611960321",
      "https://twitter.com/luc4m/status/1073181154126254080"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2022/06/19",
    "modified": "2022/11/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.007"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection_gen": {
        "TargetFilename|endswith": [
          ".exe",
          ".iso",
          ".rar",
          ".zip"
        ],
        "TargetFilename|contains": [
          ".doc.",
          ".docx.",
          ".jpg.",
          ".pdf.",
          ".ppt.",
          ".pptx.",
          ".xls.",
          ".xlsx."
        ]
      },
      "selection_exe": {
        "TargetFilename|endswith": [
          ".rar.exe",
          ".zip.exe"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious MSExchangeMailboxReplication ASPX Write",
    "id": 1614,
    "status": "test",
    "description": "Detects suspicious activity in which the MSExchangeMailboxReplication process writes .asp and .apsx files to disk, which could be a sign of ProxyShell exploitation",
    "references": [
      "https://redcanary.com/blog/blackbyte-ransomware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/02/25",
    "tags": [
      "attack.initial_access",
      "attack.t1190",
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\MSExchangeMailboxReplication.exe",
        "TargetFilename|endswith": [
          ".aspx",
          ".asp"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Executable File Creation",
    "id": 1615,
    "status": "test",
    "description": "Detect creation of suspicious executable file name. Some strings look for suspicious file extensions, others look for filenames that exploit unquoted service paths.",
    "references": [
      "https://medium.com/@SumitVerma101/windows-privilege-escalation-part-1-unquoted-service-path-c7a011a8d8ae",
      "https://app.any.run/tasks/76c69e2d-01e8-49d9-9aea-fb7cc0c4d3ad/"
    ],
    "author": "frack113",
    "date": "2022/09/05",
    "modified": "2023/12/11",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_double": {
        "TargetFilename|endswith": [
          ":\\$Recycle.Bin.exe",
          ":\\Documents and Settings.exe",
          ":\\MSOCache.exe",
          ":\\PerfLogs.exe",
          ":\\Recovery.exe",
          ".bat.exe",
          ".sys.exe"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Get-Variable.exe Creation",
    "id": 1616,
    "status": "test",
    "description": "Get-Variable is a valid PowerShell cmdlet\nWindowsApps is by default in the path where PowerShell is executed.\nSo when the Get-Variable command is issued on PowerShell execution, the system first looks for the Get-Variable executable in the path and executes the malicious binary instead of looking for the PowerShell cmdlet.\n",
    "references": [
      "https://blog.malwarebytes.com/threat-intelligence/2022/04/colibri-loader-combines-task-scheduler-and-powershell-in-clever-persistence-technique/",
      "https://www.joesandbox.com/analysis/465533/0/html"
    ],
    "author": "frack113",
    "date": "2022/04/23",
    "tags": [
      "attack.persistence",
      "attack.t1546",
      "attack.defense_evasion",
      "attack.t1027"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "Local\\Microsoft\\WindowsApps\\Get-Variable.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream",
    "id": 1617,
    "related": [
      {
        "id": "0900463c-b33b-49a8-be1d-552a3b553dae",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of hidden file/folder with the \"::$index_allocation\" stream. Which can be used as a technique to prevent access to folder and files from tooling such as \"explorer.exe\" and \"powershell.exe\"\n",
    "references": [
      "https://twitter.com/pfiatde/status/1681977680688738305",
      "https://soroush.me/blog/2010/12/a-dotty-salty-directory-a-secret-place-in-ntfs-for-secret-files/",
      "https://sec-consult.com/blog/detail/pentesters-windows-ntfs-tricks-collection/",
      "https://github.com/redcanaryco/atomic-red-team/blob/5c3b23002d2bbede3c07e7307165fc2a235a427d/atomics/T1564.004/T1564.004.md#atomic-test-5---create-hidden-directory-via-index_allocation",
      "https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/c54dec26-1551-4d3a-a0ea-4fa40f848eb3"
    ],
    "author": "Scoubi (@ScoubiMtl)",
    "date": "2023/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "::$index_allocation"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Legitimate Application Dropped Archive",
    "id": 1618,
    "status": "test",
    "description": "Detects programs on a Windows system that should not write an archive to disk",
    "references": [
      "https://github.com/Neo23x0/sysmon-config/blob/3f808d9c022c507aae21a9346afba4a59dd533b9/sysmonconfig-export-block.xml#L1326"
    ],
    "author": "frack113, Florian Roth",
    "date": "2022/08/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\winword.exe",
          "\\excel.exe",
          "\\powerpnt.exe",
          "\\msaccess.exe",
          "\\mspub.exe",
          "\\eqnedt32.exe",
          "\\visio.exe",
          "\\wordpad.exe",
          "\\wordview.exe",
          "\\certutil.exe",
          "\\certoc.exe",
          "\\CertReq.exe",
          "\\Desktopimgdownldr.exe",
          "\\esentutl.exe",
          "\\finger.exe",
          "\\notepad.exe",
          "\\AcroRd32.exe",
          "\\RdrCEF.exe",
          "\\mshta.exe",
          "\\hh.exe"
        ],
        "TargetFilename|endswith": [
          ".zip",
          ".rar",
          ".7z",
          ".diagcab",
          ".appx"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Legitimate Application Dropped Executable",
    "id": 1619,
    "status": "experimental",
    "description": "Detects programs on a Windows system that should not write executables to disk",
    "references": [
      "https://github.com/Neo23x0/sysmon-config/blob/3f808d9c022c507aae21a9346afba4a59dd533b9/sysmonconfig-export-block.xml#L1326"
    ],
    "author": "frack113, Florian Roth (Nextron Systems)",
    "date": "2022/08/21",
    "modified": "2023/06/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\eqnedt32.exe",
          "\\wordpad.exe",
          "\\wordview.exe",
          "\\certutil.exe",
          "\\certoc.exe",
          "\\CertReq.exe",
          "\\Desktopimgdownldr.exe",
          "\\esentutl.exe",
          "\\mshta.exe",
          "\\AcroRd32.exe",
          "\\RdrCEF.exe",
          "\\hh.exe",
          "\\finger.exe"
        ],
        "TargetFilename|endswith": [
          ".exe",
          ".dll",
          ".ocx"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Legitimate Application Dropped Script",
    "id": 1620,
    "status": "experimental",
    "description": "Detects programs on a Windows system that should not write scripts to disk",
    "references": [
      "https://github.com/Neo23x0/sysmon-config/blob/3f808d9c022c507aae21a9346afba4a59dd533b9/sysmonconfig-export-block.xml#L1326"
    ],
    "author": "frack113, Florian Roth (Nextron Systems)",
    "date": "2022/08/21",
    "modified": "2023/06/22",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\eqnedt32.exe",
          "\\wordpad.exe",
          "\\wordview.exe",
          "\\certutil.exe",
          "\\certoc.exe",
          "\\CertReq.exe",
          "\\Desktopimgdownldr.exe",
          "\\esentutl.exe",
          "\\mshta.exe",
          "\\AcroRd32.exe",
          "\\RdrCEF.exe",
          "\\hh.exe",
          "\\finger.exe"
        ],
        "TargetFilename|endswith": [
          ".ps1",
          ".bat",
          ".vbs",
          ".scf",
          ".wsf",
          ".wsh"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious LNK Double Extension File Created",
    "id": 1621,
    "related": [
      {
        "id": "b4926b47-a9d7-434c-b3a0-adc3fa0bd13e",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of files with an \"LNK\" as a second extension. This is sometimes used by malware as a method to abuse the fact that Windows hides the \"LNK\" extension by default.\n",
    "references": [
      "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/",
      "https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations",
      "https://www.cybereason.com/blog/research/a-bazar-of-tricks-following-team9s-development-cycles",
      "https://twitter.com/malwrhunterteam/status/1235135745611960321",
      "https://twitter.com/luc4m/status/1073181154126254080"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2022/11/07",
    "modified": "2023/10/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.007"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".lnk",
        "TargetFilename|contains": [
          ".doc.",
          ".docx.",
          ".jpg.",
          ".pdf.",
          ".ppt.",
          ".pptx.",
          ".xls.",
          ".xlsx."
        ]
      },
      "filter_main_recent": {
        "TargetFilename|contains": "\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\"
      },
      "filter_optional_office_recent": {
        "Image|endswith": [
          "\\excel.exe",
          "\\powerpnt.exe",
          "\\winword.exe"
        ],
        "TargetFilename|contains": "\\AppData\\Roaming\\Microsoft\\Office\\Recent\\"
      },
      "filter_optional_office_excel": {
        "Image|endswith": "\\excel.exe",
        "TargetFilename|contains": "\\AppData\\Roaming\\Microsoft\\Excel"
      },
      "filter_optional_office_powerpoint": {
        "Image|endswith": "\\powerpnt.exe",
        "TargetFilename|contains": "\\AppData\\Roaming\\Microsoft\\PowerPoint"
      },
      "filter_optional_office_word": {
        "Image|endswith": "\\winword.exe",
        "TargetFilename|contains": "\\AppData\\Roaming\\Microsoft\\Word"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Some tuning is required for other general purpose directories of third party apps"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PFX File Creation",
    "id": 1622,
    "status": "test",
    "description": "A general detection for processes creating PFX files. This could be an indicator of an adversary exporting a local certificate to a PFX file.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/14",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/6.B.1_6392C9F1-D975-4F75-8A70-433DEDD7F622.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2022/07/07",
    "tags": [
      "attack.credential_access",
      "attack.t1552.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".pfx"
      },
      "filter_main_windows_tmp_key": {
        "TargetFilename|contains|all": [
          "\\Templates\\Windows\\Windows_TemporaryKey.pfx",
          "\\CMake\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "System administrators managing certificates."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Profile Modification",
    "id": 1623,
    "status": "test",
    "description": "Detects the creation or modification of a powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence",
    "references": [
      "https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/",
      "https://persistence-info.github.io/Data/powershellprofile.html"
    ],
    "author": "HieuTT35, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2019/10/24",
    "modified": "2023/10/23",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.013"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\Microsoft.PowerShell_profile.ps1",
          "\\PowerShell\\profile.ps1",
          "\\Program Files\\PowerShell\\7-preview\\profile.ps1",
          "\\Program Files\\PowerShell\\7\\profile.ps1",
          "\\Windows\\System32\\WindowsPowerShell\\v1.0\\profile.ps1",
          "\\WindowsPowerShell\\profile.ps1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "System administrator creating Powershell profile manually"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PROCEXP152.sys File Created In TMP",
    "id": 1624,
    "status": "test",
    "description": "Detects the creation of the PROCEXP152.sys file in the application-data local temporary folder.\nThis driver is used by Sysinternals Process Explorer but also by KDU (https://github.com/hfiref0x/KDU) or Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU.\n",
    "references": [
      "https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/"
    ],
    "author": "xknow (@xknow_infosec), xorxes (@xor_xes)",
    "date": "2019/04/08",
    "modified": "2022/11/22",
    "tags": [
      "attack.t1562.001",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\",
        "TargetFilename|endswith": "PROCEXP152.sys"
      },
      "filter": {
        "Image|contains": [
          "\\procexp64.exe",
          "\\procexp.exe",
          "\\procmon64.exe",
          "\\procmon.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Other legimate tools using this driver and filename (like Sysinternals). Note - Clever attackers may easily bypass this detection by just renaming the driver filename. Therefore just Medium-level and don't rely on it."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious File Creation Activity From Fake Recycle.Bin Folder",
    "id": 1625,
    "related": [
      {
        "id": "5ce0f04e-3efc-42af-839d-5b3a543b76c0",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects file write event from/to a fake recycle bin folder that is often used as a staging directory for malware",
    "references": [
      "https://www.mandiant.com/resources/blog/infected-usb-steal-secrets",
      "https://unit42.paloaltonetworks.com/cloaked-ursa-phishing/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/07/12",
    "modified": "2023/12/11",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "Image|contains": [
            "RECYCLERS.BIN\\",
            "RECYCLER.BIN\\"
          ]
        },
        {
          "TargetFilename|contains": [
            "RECYCLERS.BIN\\",
            "RECYCLER.BIN\\"
          ]
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Drop Binaries Into Spool Drivers Color Folder",
    "id": 1626,
    "status": "test",
    "description": "Detects the creation of suspcious binary files inside the \"\\windows\\system32\\spool\\drivers\\color\\\" as seen in the blog referenced below",
    "references": [
      "https://www.microsoft.com/security/blog/2022/07/27/untangling-knotweed-european-private-sector-offensive-actor-using-0-day-exploits/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/28",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\System32\\spool\\drivers\\color\\",
        "TargetFilename|endswith": [
          ".dll",
          ".exe",
          ".sys"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Startup Folder Persistence",
    "id": 1627,
    "related": [
      {
        "id": "2aa0a6b4-a865-495b-ab51-c28249537b75",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a file with a suspicious extension is created in the startup folder",
    "references": [
      "https://github.com/last-byte/PersistenceSniper"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/10",
    "modified": "2023/01/06",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Windows\\Start Menu\\Programs\\Startup\\",
        "TargetFilename|endswith": [
          ".vbs",
          ".vbe",
          ".bat",
          ".ps1",
          ".hta",
          ".dll",
          ".jar",
          ".msi",
          ".scr",
          ".cmd"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare legitimate usage of some of the extensions mentioned in the rule"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Interactive PowerShell as SYSTEM",
    "id": 1628,
    "status": "test",
    "description": "Detects the creation of files that indicator an interactive use of PowerShell in the SYSTEM user context",
    "references": [
      "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/PowerSploit_Invoke-Mimikatz.htm"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/12/07",
    "modified": "2022/08/13",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename": [
          "C:\\Windows\\System32\\config\\systemprofile\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt",
          "C:\\Windows\\System32\\config\\systemprofile\\AppData\\Local\\Microsoft\\Windows\\PowerShell\\StartupProfileData-Interactive"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative activity",
      "PowerShell scripts running as SYSTEM user"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Scheduled Task Write to System32 Tasks",
    "id": 1629,
    "status": "test",
    "description": "Detects the creation of tasks from processes executed from suspicious locations",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/11/16",
    "modified": "2022/01/12",
    "tags": [
      "attack.persistence",
      "attack.execution",
      "attack.t1053"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\Windows\\System32\\Tasks",
        "Image|contains": [
          "\\AppData\\",
          "C:\\PerfLogs",
          "\\Windows\\System32\\config\\systemprofile"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "TeamViewer Remote Session",
    "id": 1630,
    "status": "test",
    "description": "Detects the creation of log files during a TeamViewer remote session",
    "references": [
      "https://www.teamviewer.com/en-us/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/01/30",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection1": {
        "TargetFilename|endswith": [
          "\\TeamViewer\\RemotePrinting\\tvprint.db",
          "\\TeamViewer\\TVNetwork.log"
        ]
      },
      "selection2": {
        "TargetFilename|contains|all": [
          "\\TeamViewer",
          "_Logfile.log"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Legitimate uses of TeamViewer in an organisation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "VsCode Powershell Profile Modification",
    "id": 1631,
    "related": [
      {
        "id": "b5b78988-486d-4a80-b991-930eff3ff8bf",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation or modification of a vscode related powershell profile which could indicate suspicious activity as the profile can be used as a mean of persistence",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.2"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2023/01/06",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.013"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\Microsoft.VSCode_profile.ps1"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the profile by developers or administrators"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Terminal Profile Settings Modification By Uncommon Process",
    "id": 1632,
    "status": "experimental",
    "description": "Detects the creation or modification of the Windows Terminal Profile settings file \"settings.json\" by an uncommon process.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1547.015/T1547.015.md#atomic-test-1---persistence-by-modifying-windows-terminal-profile",
      "https://twitter.com/nas_bench/status/1550836225652686848"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/22",
    "tags": [
      "attack.persistence",
      "attack.t1547.015"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\cmd.exe",
          "\\cscript.exe",
          "\\mshta.exe",
          "\\powershell.exe",
          "\\pwsh.exe",
          "\\wscript.exe"
        ],
        "TargetFilename|endswith": "\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Some false positives may occur with admin scripts that set WT settings."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WinSxS Executable File Creation By Non-System Process",
    "id": 1633,
    "related": [
      {
        "id": "64827580-e4c3-4c64-97eb-c72325d45399",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of binaries in the WinSxS folder by non-system processes",
    "references": [
      "https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/11",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\WinSxS\\",
        "TargetFilename|endswith": ".exe"
      },
      "filter_main_system_location": {
        "Image|startswith": [
          "C:\\Windows\\Systems32\\",
          "C:\\Windows\\SysWOW64\\",
          "C:\\Windows\\WinSxS\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LiveKD Kernel Memory Dump File Created",
    "id": 1634,
    "status": "experimental",
    "description": "Detects the creation of a file that has the same name as the default LiveKD kernel memory dump.",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename": "C:\\Windows\\livekd.dmp"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "In rare occasions administrators might leverage LiveKD to perform live kernel debugging. This should not be allowed on production systems. Investigate and apply additional filters where necessary."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LiveKD Driver Creation",
    "id": 1635,
    "status": "experimental",
    "description": "Detects the creation of the LiveKD driver, which is used for live kernel debugging",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename": "C:\\Windows\\System32\\drivers\\LiveKdD.SYS",
        "Image|endswith": [
          "\\livekd.exe",
          "\\livek64.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of LiveKD for debugging purposes will also trigger this"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "LiveKD Driver Creation By Uncommon Process",
    "id": 1636,
    "related": [
      {
        "id": "16fe46bb-4f64-46aa-817d-ff7bec4a2352",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of the LiveKD driver by a process image other than \"livekd.exe\".",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/16",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename": "C:\\Windows\\System32\\drivers\\LiveKdD.SYS"
      },
      "filter_main_legit_name": {
        "Image|endswith": [
          "\\livekd.exe",
          "\\livek64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrators might rename LiveKD before its usage which could trigger this. Add additional names you use to the filter"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Process Explorer Driver Creation By Non-Sysinternals Binary",
    "id": 1637,
    "status": "experimental",
    "description": "Detects creation of the Process Explorer drivers by processes other than Process Explorer (procexp) itself.\nHack tools or malware may use the Process Explorer driver to elevate privileges, drops it to disk for a few moments, runs a service using that driver and removes it afterwards.\n",
    "references": [
      "https://learn.microsoft.com/en-us/sysinternals/downloads/process-explorer",
      "https://github.com/Yaxser/Backstab",
      "https://www.elastic.co/security-labs/stopping-vulnerable-driver-attacks",
      "https://news.sophos.com/en-us/2023/04/19/aukill-edr-killer-malware-abuses-process-explorer-driver/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2023/05/05",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1068"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\PROCEXP",
        "TargetFilename|endswith": ".sys"
      },
      "filter_main_process_explorer": {
        "Image|endswith": [
          "\\procexp.exe",
          "\\procexp64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Some false positives may occur with legitimate renamed process explorer binaries"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Process Monitor Driver Creation By Non-Sysinternals Binary",
    "id": 1638,
    "status": "experimental",
    "description": "Detects creation of the Process Monitor driver by processes other than Process Monitor (procmon) itself.",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1068"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains": "\\procmon",
        "TargetFilename|endswith": ".sys"
      },
      "filter_main_process_explorer": {
        "Image|endswith": [
          "\\procmon.exe",
          "\\procmon64.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Some false positives may occur with legitimate renamed process monitor binaries"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PsExec Service File Creation",
    "id": 1639,
    "related": [
      {
        "id": "42c575ea-e41e-41f1-b248-8093c3e82a28",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects default PsExec service filename which indicates PsExec service installation and execution",
    "references": [
      "https://www.jpcert.or.jp/english/pub/sr/ir_research.html",
      "https://jpcertcc.github.io/ToolAnalysisResultSheet"
    ],
    "author": "Thomas Patzke",
    "date": "2017/06/12",
    "modified": "2022/10/26",
    "tags": [
      "attack.execution",
      "attack.t1569.002",
      "attack.s0029"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\PSEXESVC.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "PSEXEC Remote Execution File Artefact",
    "id": 1640,
    "status": "test",
    "description": "Detects creation of the PSEXEC key file. Which is created anytime a PsExec command is executed. It gets written to the file system and will be recorded in the USN Journal on the target system",
    "references": [
      "https://aboutdfir.com/the-key-to-identify-psexec/",
      "https://twitter.com/davisrichardg/status/1616518800584704028"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/21",
    "modified": "2023/02/23",
    "tags": [
      "attack.lateral_movement",
      "attack.privilege_escalation",
      "attack.execution",
      "attack.persistence",
      "attack.t1136.002",
      "attack.t1543.003",
      "attack.t1570",
      "attack.s0029"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\PSEXEC-",
        "TargetFilename|endswith": ".key"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Privilege Escalation Attempt Via .Exe.Local Technique",
    "id": 1641,
    "status": "test",
    "description": "Detects potential privilege escalation attempt via the creation of the \"*.Exe.Local\" folder inside the \"System32\" directory in order to sideload \"comctl32.dll\"",
    "references": [
      "https://github.com/binderlabs/DirCreate2System",
      "https://github.com/sailay1996/awesome_windows_logical_bugs/blob/60cbb23a801f4c3195deac1cc46df27c225c3d07/dir_create2system.txt"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Subhash P (@pbssubhash)",
    "date": "2022/12/16",
    "modified": "2022/12/19",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": [
          "C:\\Windows\\System32\\logonUI.exe.local",
          "C:\\Windows\\System32\\werFault.exe.local",
          "C:\\Windows\\System32\\consent.exe.local",
          "C:\\Windows\\System32\\narrator.exe.local",
          "C:\\Windows\\System32\\wermgr.exe.local"
        ],
        "TargetFilename|endswith": "\\comctl32.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "LSASS Process Memory Dump Creation Via Taskmgr.EXE",
    "id": 1642,
    "status": "experimental",
    "description": "Detects the creation of an \"lsass.dmp\" file by the taskmgr process. This indicates a manual dumping of the LSASS.exe process memory using Windows Task Manager.",
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/10/19",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/987e3ca988ae3cff4b9f6e388c139c05bf44bbb8/atomics/T1003.001/T1003.001.md#L1"
    ],
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          ":\\Windows\\system32\\taskmgr.exe",
          ":\\Windows\\SysWOW64\\taskmgr.exe"
        ],
        "TargetFilename|contains|all": [
          "\\AppData\\Local\\Temp\\",
          "\\lsass",
          ".DMP"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare case of troubleshooting by an administrator or support that has to be investigated regardless"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Hijack Legit RDP Session to Move Laterally",
    "id": 1643,
    "status": "test",
    "description": "Detects the usage of tsclient share to place a backdoor on the RDP source machine's startup folder",
    "author": "Samir Bousseaden",
    "references": [
      "Internal Research"
    ],
    "date": "2019/02/21",
    "modified": "2021/11/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1219"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\mstsc.exe",
        "TargetFilename|contains": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Consent and Comctl32 - File",
    "id": 1644,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Windows\\System32\\consent.exe.@",
        "TargetFilename|endswith": "\\comctl32.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using .NET Code Profiler on MMC",
    "id": 1645,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe DLL hijacking (UACMe 39)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|endswith": "\\AppData\\Local\\Temp\\pe386.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using EventVwr",
    "id": 1646,
    "status": "test",
    "description": "Detects the pattern of a UAC bypass using Windows Event Viewer",
    "references": [
      "https://twitter.com/orange_8361/status/1518970259868626944?s=20&t=RFXqZjtA7tWM3HxqEH78Aw",
      "https://twitter.com/splinter_code/status/1519075134296006662?s=12&t=DLUXH86WtcmG_AZ5gY3C6g",
      "https://lolbas-project.github.io/lolbas/Binaries/Eventvwr/#execute"
    ],
    "author": "Antonio Cocomazzi (idea), Florian Roth (Nextron Systems)",
    "date": "2022/04/27",
    "modified": "2022/11/22",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\Microsoft\\Event Viewer\\RecentViews",
          "\\Microsoft\\EventV~1\\RecentViews"
        ]
      },
      "filter": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using IDiagnostic Profile - File",
    "id": 1647,
    "status": "test",
    "description": "Detects the creation of a file by \"dllhost.exe\" in System32 directory part of \"IDiagnosticProfileUAC\" UAC bypass technique",
    "references": [
      "https://github.com/Wh04m1001/IDiagnosticProfileUAC"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/03",
    "tags": [
      "attack.execution",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\DllHost.exe",
        "TargetFilename|startswith": "C:\\Windows\\System32\\",
        "TargetFilename|endswith": ".dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using IEInstal - File",
    "id": 1648,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image": "C:\\Program Files\\Internet Explorer\\IEInstal.exe",
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|contains": "\\AppData\\Local\\Temp\\",
        "TargetFilename|endswith": "consent.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using MSConfig Token Modification - File",
    "id": 1649,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|endswith": "\\AppData\\Local\\Temp\\pkgmgr.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using NTFS Reparse Point - File",
    "id": 1650,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|endswith": "\\AppData\\Local\\Temp\\api-ms-win-core-kernel32-legacy-l1.DLL"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Abusing Winsat Path Parsing - File",
    "id": 1651,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|endswith": [
          "\\AppData\\Local\\Temp\\system32\\winsat.exe",
          "\\AppData\\Local\\Temp\\system32\\winmm.dll"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Windows Media Player - File",
    "id": 1652,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2022/10/09",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "TargetFilename|startswith": "C:\\Users\\",
        "TargetFilename|endswith": "\\AppData\\Local\\Temp\\OskSupport.dll"
      },
      "selection2": {
        "Image": "C:\\Windows\\system32\\DllHost.exe",
        "TargetFilename": "C:\\Program Files\\Windows Media Player\\osk.exe"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "VHD Image Download Via Browser",
    "id": 1653,
    "status": "test",
    "description": "Detects creation of \".vhd\"/\".vhdx\" files by browser processes.\nMalware can use mountable Virtual Hard Disk \".vhd\" files to encapsulate payloads and evade security controls.\n",
    "references": [
      "https://redcanary.com/blog/intelligence-insights-october-2021/",
      "https://www.kaspersky.com/blog/lazarus-vhd-ransomware/36559/",
      "https://securelist.com/lazarus-on-the-hunt-for-big-game/97757/"
    ],
    "author": "frack113, Christopher Peacock '@securepeacock', SCYTHE '@scythe_io'",
    "date": "2021/10/25",
    "modified": "2023/05/05",
    "tags": [
      "attack.resource_development",
      "attack.t1587.001"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|endswith": [
          "\\brave.exe",
          "\\chrome.exe",
          "\\firefox.exe",
          "\\iexplore.exe",
          "\\maxthon.exe",
          "\\MicrosoftEdge.exe",
          "\\msedge.exe",
          "\\msedgewebview2.exe",
          "\\opera.exe",
          "\\safari.exe",
          "\\seamonkey.exe",
          "\\vivaldi.exe",
          "\\whale.exe"
        ],
        "TargetFilename|contains": ".vhd"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate downloads of \".vhd\" files would also trigger this"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Visual Studio Code Tunnel Remote File Creation",
    "id": 1654,
    "status": "experimental",
    "description": "Detects the creation of file by the \"node.exe\" process in the \".vscode-server\" directory. Could be a sign of remote file creation via VsCode tunnel feature\n",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/25",
    "tags": [
      "attack.command_and_control"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": "\\servers\\Stable-",
        "Image|endswith": "\\server\\node.exe",
        "TargetFilename|contains": "\\.vscode-server\\data\\User\\History\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Renamed VsCode Code Tunnel Execution - File Indicator",
    "id": 1655,
    "status": "experimental",
    "description": "Detects the creation of a file with the name \"code_tunnel.json\" which indicate execution and usage of VsCode tunneling utility by an \"Image\" or \"Process\" other than VsCode.\n",
    "references": [
      "https://ipfyx.fr/post/visual-studio-code-tunnel/",
      "https://badoption.eu/blog/2023/01/31/code_c2.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/10/25",
    "tags": [
      "attack.command_and_control"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": "\\code_tunnel.json"
      },
      "filter_main_legit_name": {
        "Image|endswith": [
          "\\code-tunnel.exe",
          "\\code.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Webshell Creation On Static Website",
    "id": 1656,
    "status": "test",
    "description": "Detects the creation of files with certain extensions on a static web site. This can be indicative of potential uploads of a web shell.",
    "references": [
      "PT ESC rule and personal experience",
      "https://github.com/swisskyrepo/PayloadsAllTheThings/blob/c95a0a1a2855dc0cd7f7327614545fe30482a636/Upload%20Insecure%20Files/README.md"
    ],
    "author": "Beyu Denis, oscd.community, Tim Shelton, Thurein Oo",
    "date": "2019/10/22",
    "modified": "2023/10/15",
    "tags": [
      "attack.persistence",
      "attack.t1505.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection_wwwroot_path": {
        "TargetFilename|contains": "\\inetpub\\wwwroot\\"
      },
      "selection_wwwroot_ext": {
        "TargetFilename|contains": [
          ".ashx",
          ".asp",
          ".ph",
          ".soap"
        ]
      },
      "selection_htdocs_path": {
        "TargetFilename|contains": [
          "\\www\\",
          "\\htdocs\\",
          "\\html\\"
        ]
      },
      "selection_htdocs_ext": {
        "TargetFilename|contains": ".ph"
      },
      "filter_main_temp": {
        "TargetFilename|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Windows\\Temp\\"
        ]
      },
      "filter_main_system": {
        "Image": "System"
      },
      "filter_main_legitimate": {
        "TargetFilename|contains": "\\xampp"
      },
      "condition": "(all of selection_wwwroot_* or all of selection_htdocs_*) and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate administrator or developer creating legitimate executable files in a web application folder"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Creation of an WerFault.exe in Unusual Folder",
    "id": 1657,
    "status": "test",
    "description": "Detects WerFault copoed to a suspicious folder, which could be a sign of WerFault DLL hijacking",
    "references": [
      "https://www.bleepingcomputer.com/news/security/hackers-are-now-hiding-malware-in-windows-event-logs/"
    ],
    "author": "frack113",
    "date": "2022/05/09",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1574.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": [
          "\\WerFault.exe",
          "\\wer.dll"
        ]
      },
      "filter_whitelist": {
        "TargetFilename|contains": [
          "\\System32\\",
          "\\SysWOW64\\",
          "\\WinSxS\\"
        ]
      },
      "condition": "selection and not filter_whitelist"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl - File",
    "id": 1658,
    "related": [
      {
        "id": "074e0ded-6ced-4ebd-8b4d-53f55908119d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via winrm.vbs and copied cscript.exe (can be renamed)",
    "references": [
      "https://posts.specterops.io/application-whitelisting-bypass-and-arbitrary-unsigned-code-execution-technique-in-winrm-vbs-c8c24fb40404"
    ],
    "author": "Julia Fomina, oscd.community",
    "date": "2020/10/06",
    "modified": "2022/11/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1216"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "system_files": {
        "TargetFilename|endswith": [
          "WsmPty.xsl",
          "WsmTxt.xsl"
        ]
      },
      "in_system_folder": {
        "TargetFilename|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "system_files and not in_system_folder"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wmiexec Default Output File",
    "id": 1659,
    "status": "test",
    "description": "Detects the creation of the default output filename used by the wmiexec tool",
    "references": [
      "https://www.crowdstrike.com/blog/how-to-detect-and-prevent-impackets-wmiexec/",
      "https://github.com/fortra/impacket/blob/f4b848fa27654ca95bc0f4c73dbba8b9c2c9f30a/examples/wmiexec.py"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/02",
    "modified": "2023/03/08",
    "tags": [
      "attack.lateral_movement",
      "attack.t1047"
    ],
    "logsource": {
      "category": "file_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "TargetFilename|re": "\\\\Windows\\\\__1\\d{9}\\.\\d{1,7}$"
        },
        {
          "TargetFilename|re": "C:\\\\__1\\d{9}\\.\\d{1,7}$"
        },
        {
          "TargetFilename|re": "D:\\\\__1\\d{9}\\.\\d{1,7}$"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Wmiprvse Wbemcomn DLL Hijack - File",
    "id": 1660,
    "status": "test",
    "description": "Detects a threat actor creating a file named `wbemcomn.dll` in the `C:\\Windows\\System32\\wbem\\` directory over the network and loading it for a WMI DLL Hijack scenario.",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/201009-RemoteWMIWbemcomnDLLHijack/notebook.html"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/12",
    "modified": "2022/12/02",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image": "System",
        "TargetFilename|endswith": "\\wbem\\wbemcomn.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "WMI Persistence - Script Event Consumer File Write",
    "id": 1661,
    "status": "test",
    "description": "Detects file writes of WMI script event consumer",
    "references": [
      "https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"
    ],
    "author": "Thomas Patzke",
    "date": "2018/03/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.t1546.003",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "Image": "C:\\WINDOWS\\system32\\wbem\\scrcons.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Dell Power Manager (C:\\Program Files\\Dell\\PowerManager\\DpmPowerPlanSetup.exe)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UEFI Persistence Via Wpbbin - FileCreation",
    "id": 1662,
    "status": "test",
    "description": "Detects creation of a file named \"wpbbin\" in the \"%systemroot%\\system32\\\" directory. Which could be indicative of UEFI based persistence method",
    "references": [
      "https://grzegorztworek.medium.com/using-uefi-to-inject-executable-files-into-bitlocker-protected-drives-8ff4ca59c94c",
      "https://persistence-info.github.io/Data/wpbbin.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/18",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1542.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename": "C:\\Windows\\System32\\wpbbin.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the file by hardware manufacturer such as lenovo (Thanks @0gtweet for the tip)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Writing Local Admin Share",
    "id": 1663,
    "status": "test",
    "description": "Aversaries may use to interact with a remote network share using Server Message Block (SMB).\nThis technique is used by post-exploitation frameworks.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.002/T1021.002.md#atomic-test-4---execute-command-writing-output-to-local-admin-share"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "modified": "2022/08/13",
    "tags": [
      "attack.lateral_movement",
      "attack.t1546.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_event"
    },
    "detection": {
      "selection": {
        "TargetFilename|contains|all": [
          "\\\\\\\\127.0.0",
          "\\ADMIN$\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Self Extraction Directive File Created",
    "id": 1664,
    "related": [
      {
        "id": "760e75d8-c3b5-409b-a9bf-6130b4c4603f",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the creation of a binary file with the \".sed\" extension. The \".sed\" extension stand for Self Extraction Directive files.\nThese files are used by the \"iexpress.exe\" utility in order to create self extracting packages.\nAttackers were seen abusing this utility and creating PE files with embedded \".sed\" entries.\nUsually \".sed\" files are simple ini files and not PE binaries.\n",
    "references": [
      "https://strontic.github.io/xcyclopedia/library/iexpress.exe-D594B2A33EFAFD0EABF09E3FDC05FCEA.html",
      "https://en.wikipedia.org/wiki/IExpress",
      "https://www.virustotal.com/gui/file/602f4ae507fa8de57ada079adff25a6c2a899bd25cd092d0af7e62cdb619c93c/behavior"
    ],
    "author": "Joseliyo Sanchez, @Joseliyo_Jstnk",
    "date": "2024/02/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_executable_detected"
    },
    "detection": {
      "selection": {
        "TargetFilename|endswith": ".sed"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Appended Extension",
    "id": 1665,
    "status": "test",
    "description": "Detects file renames where the target filename uses an uncommon double extension. Could indicate potential ransomware activity renaming files and adding a custom extension to the encrypted files, such as \".jpg.crypted\", \".docx.locky\", etc.",
    "references": [
      "https://app.any.run/tasks/d66ead5a-faf4-4437-93aa-65785afaf9e5/",
      "https://blog.cyble.com/2022/08/10/onyx-ransomware-renames-its-leak-site-to-vsop/"
    ],
    "author": "frack113",
    "date": "2022/07/16",
    "modified": "2023/11/11",
    "tags": [
      "attack.impact",
      "attack.t1486"
    ],
    "logsource": {
      "product": "windows",
      "category": "file_rename",
      "definition": "Requirements: Microsoft-Windows-Kernel-File Provider with at least the KERNEL_FILE_KEYWORD_RENAME_SETLINK_PATH keyword"
    },
    "detection": {
      "selection": {
        "SourceFilename|endswith": [
          ".doc",
          ".docx",
          ".jpeg",
          ".jpg",
          ".lnk",
          ".pdf",
          ".png",
          ".pst",
          ".rtf",
          ".xls",
          ".xlsx"
        ],
        "TargetFilename|contains": [
          ".doc.",
          ".docx.",
          ".jpeg.",
          ".jpg.",
          ".lnk.",
          ".pdf.",
          ".png.",
          ".pst.",
          ".rtf.",
          ".xls.",
          ".xlsx."
        ]
      },
      "filter_main_generic": {
        "TargetFilename|endswith": [
          ".backup",
          ".bak",
          ".old",
          ".orig",
          ".temp",
          ".tmp"
        ]
      },
      "filter_optional_anaconda": {
        "TargetFilename|contains": ":\\ProgramData\\Anaconda3\\",
        "TargetFilename|endswith": ".c~"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Backup software"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Nslookup PowerShell Download Cradle",
    "id": 1666,
    "related": [
      {
        "id": "1b3b01c7-84e9-4072-86e5-fc285a41ff23",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects a powershell download cradle using nslookup. This cradle uses nslookup to extract payloads from DNS records.",
    "references": [
      "https://twitter.com/Alh4zr3d/status/1566489367232651264"
    ],
    "author": "Sai Prashanth Pulisetti @pulisettis, Aishwarya Singam",
    "date": "2022/12/10",
    "modified": "2023/10/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains|all": [
          "powershell",
          "nslookup",
          "[1]"
        ],
        "Data|contains": [
          "-q=txt http",
          "-querytype=txt http"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Delete Volume Shadow Copies Via WMI With PowerShell",
    "id": 1667,
    "status": "stable",
    "description": "Shadow Copies deletion using operating systems utilities via PowerShell",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md",
      "https://www.fortinet.com/blog/threat-research/stomping-shadow-copies-a-second-look-into-deletion-methods"
    ],
    "author": "frack113",
    "date": "2021/06/03",
    "modified": "2023/10/27",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains|all": [
          "Get-WmiObject",
          "Win32_Shadowcopy"
        ],
        "Data|contains": [
          "Delete()",
          "Remove-WmiObject"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Downgrade Attack - PowerShell",
    "id": 1668,
    "status": "test",
    "description": "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0",
    "references": [
      "http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/"
    ],
    "author": "Florian Roth (Nextron Systems), Lee Holmes (idea), Harish Segar (improvements)",
    "date": "2017/03/22",
    "modified": "2023/10/27",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains": "EngineVersion=2."
      },
      "filter_main": {
        "Data|contains": "HostVersion=2."
      },
      "condition": "selection and not filter_main"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Called from an Executable Version Mismatch",
    "id": 1669,
    "status": "test",
    "description": "Detects PowerShell called from an executable by the version mismatch method",
    "references": [
      "https://adsecurity.org/?p=2921"
    ],
    "author": "Sean Metcalf (source), Florian Roth (Nextron Systems)",
    "date": "2017/03/05",
    "modified": "2023/10/27",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection_engine": {
        "Data|contains": [
          "EngineVersion=2.",
          "EngineVersion=4.",
          "EngineVersion=5."
        ]
      },
      "selection_host": {
        "Data|contains": "HostVersion=3."
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Netcat The Powershell Version",
    "id": 1670,
    "related": [
      {
        "id": "bf7286e7-c0be-460b-a7e8-5b2e07ecc2f2",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network",
    "references": [
      "https://nmap.org/ncat/",
      "https://github.com/besimorhino/powercat",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1095/T1095.md"
    ],
    "author": "frack113",
    "date": "2021/07/21",
    "modified": "2023/10/27",
    "tags": [
      "attack.command_and_control",
      "attack.t1095"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains": [
          "powercat ",
          "powercat.ps1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential RemoteFXvGPUDisablement.EXE Abuse",
    "id": 1671,
    "related": [
      {
        "id": "a6fc3c46-23b8-4996-9ea2-573f4c4d88c5",
        "type": "similar"
      },
      {
        "id": "38a7625e-b2cb-485d-b83d-aff137d859f4",
        "type": "similar"
      },
      {
        "id": "cacef8fc-9d3d-41f7-956d-455c6e881bc5",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell module creation where the module Contents are set to \"function Get-VMRemoteFXPhysicalVideoAdapter\". This could be a sign of potential abuse of  the \"RemoteFXvGPUDisablement.exe\" binary which is known to be vulnerable to module load-order hijacking.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/AtomicTestHarnesses/blob/7e1e4da116801e3d6fcc6bedb207064577e40572/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/07/13",
    "modified": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "service": "powershell-classic",
      "definition": "fields have to be extract from event"
    },
    "detection": {
      "selection": {
        "Data|contains": "ModuleContents=function Get-VMRemoteFXPhysicalVideoAdapter {"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote PowerShell Session (PS Classic)",
    "id": 1672,
    "related": [
      {
        "id": "96b9f619-aa91-478f-bacb-c3e50f8df575",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects remote PowerShell sessions",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/10",
    "modified": "2024/01/03",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.lateral_movement",
      "attack.t1021.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains|all": [
          "HostName=ServerRemoteHost",
          "wsmprovhost.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use remote PowerShell sessions"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Renamed Powershell Under Powershell Channel",
    "id": 1673,
    "status": "test",
    "description": "Detects renamed powershell",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
    ],
    "author": "Harish Segar, frack113",
    "date": "2020/06/29",
    "modified": "2023/10/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains": "HostName=ConsoleHost"
      },
      "filter_main_ps": {
        "Data|contains": [
          "HostApplication=powershell",
          "HostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell",
          "HostApplication=C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell",
          "HostApplication=C:/Windows/System32/WindowsPowerShell/v1.0/powershell",
          "HostApplication=C:/Windows/SysWOW64/WindowsPowerShell/v1.0/powershell"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Download",
    "id": 1674,
    "related": [
      {
        "id": "65531a81-a694-4e31-ae04-f8ba5bc33759",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell download command",
    "references": [
      "https://www.trendmicro.com/en_us/research/22/j/lv-ransomware-exploits-proxyshell-in-attack.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/05",
    "modified": "2023/10/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection_webclient": {
        "Data|contains": "Net.WebClient"
      },
      "selection_download": {
        "Data|contains": [
          ".DownloadFile(",
          ".DownloadString("
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "PowerShell scripts that download content from the Internet"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use Get-NetTCPConnection",
    "id": 1675,
    "status": "test",
    "description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-2---system-network-connections-discovery-with-powershell"
    ],
    "author": "frack113",
    "date": "2021/12/10",
    "modified": "2023/10/27",
    "tags": [
      "attack.discovery",
      "attack.t1049"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains": "Get-NetTCPConnection"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Zip A Folder With PowerShell For Staging In Temp - PowerShell",
    "id": 1676,
    "related": [
      {
        "id": "daf7eb81-35fd-410d-9d7a-657837e602bb",
        "type": "similar"
      },
      {
        "id": "b7a3c9a3-09ea-4934-8864-6a32cacd98d9",
        "type": "similar"
      },
      {
        "id": "85a8e5ba-bd03-4bfb-bbfa-a4409a8f8b98",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell scripts that make use of the \"Compress-Archive\" Cmdlet in order to compress folders and files where the output is stored in a potentially suspicious location that is used often by malware for exfiltration.\nAn adversary might compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1074.001/T1074.001.md",
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2021/07/20",
    "modified": "2023/12/18",
    "tags": [
      "attack.collection",
      "attack.t1074.001"
    ],
    "logsource": {
      "product": "windows",
      "service": "powershell-classic"
    },
    "detection": {
      "selection": {
        "Data|contains": [
          "Compress-Archive -Path*-DestinationPath $env:TEMP",
          "Compress-Archive -Path*-DestinationPath*\\AppData\\Local\\Temp\\",
          "Compress-Archive -Path*-DestinationPath*:\\Windows\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Tamper Windows Defender - PSClassic",
    "id": 1677,
    "related": [
      {
        "id": "14c71865-6cd3-44ae-adaa-1db923fae5f2",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Attempting to disable scheduled scanning and other parts of Windows Defender ATP or set default actions to allow.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/06/07",
    "modified": "2024/01/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_provider_start"
    },
    "detection": {
      "selection_set_mppreference": {
        "Data|contains": "Set-MpPreference"
      },
      "selection_options_bool_allow": {
        "Data|contains": [
          "-dbaf $true",
          "-dbaf 1",
          "-dbm $true",
          "-dbm 1",
          "-dips $true",
          "-dips 1",
          "-DisableArchiveScanning $true",
          "-DisableArchiveScanning 1",
          "-DisableBehaviorMonitoring $true",
          "-DisableBehaviorMonitoring 1",
          "-DisableBlockAtFirstSeen $true",
          "-DisableBlockAtFirstSeen 1",
          "-DisableCatchupFullScan $true",
          "-DisableCatchupFullScan 1",
          "-DisableCatchupQuickScan $true",
          "-DisableCatchupQuickScan 1",
          "-DisableIntrusionPreventionSystem $true",
          "-DisableIntrusionPreventionSystem 1",
          "-DisableIOAVProtection $true",
          "-DisableIOAVProtection 1",
          "-DisableRealtimeMonitoring $true",
          "-DisableRealtimeMonitoring 1",
          "-DisableRemovableDriveScanning $true",
          "-DisableRemovableDriveScanning 1",
          "-DisableScanningMappedNetworkDrivesForFullScan $true",
          "-DisableScanningMappedNetworkDrivesForFullScan 1",
          "-DisableScanningNetworkFiles $true",
          "-DisableScanningNetworkFiles 1",
          "-DisableScriptScanning $true",
          "-DisableScriptScanning 1",
          "-MAPSReporting $false",
          "-MAPSReporting 0",
          "-drdsc $true",
          "-drdsc 1",
          "-drtm $true",
          "-drtm 1",
          "-dscrptsc $true",
          "-dscrptsc 1",
          "-dsmndf $true",
          "-dsmndf 1",
          "-dsnf $true",
          "-dsnf 1",
          "-dss $true",
          "-dss 1"
        ]
      },
      "selection_options_actions_func": {
        "Data|contains": [
          "HighThreatDefaultAction Allow",
          "htdefac Allow",
          "LowThreatDefaultAction Allow",
          "ltdefac Allow",
          "ModerateThreatDefaultAction Allow",
          "mtdefac Allow",
          "SevereThreatDefaultAction Allow",
          "stdefac Allow"
        ]
      },
      "condition": "selection_set_mppreference and 1 of selection_options_*"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts that disable Windows Defender for troubleshooting purposes. Must be investigated."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Non PowerShell WSMAN COM Provider",
    "id": 1678,
    "status": "test",
    "description": "Detects suspicious use of the WSMAN provider without PowerShell.exe as the host application.",
    "references": [
      "https://twitter.com/chadtilbury/status/1275851297770610688",
      "https://bohops.com/2020/05/12/ws-management-com-another-approach-for-winrm-lateral-movement/",
      "https://github.com/bohops/WSMan-WinRM"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/06/24",
    "modified": "2023/10/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.lateral_movement",
      "attack.t1021.003"
    ],
    "logsource": {
      "product": "windows",
      "service": "powershell-classic"
    },
    "detection": {
      "selection": {
        "Data|contains": "ProviderName=WSMan"
      },
      "filter_main_ps": {
        "Data|contains": [
          "HostApplication=powershell",
          "HostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell",
          "HostApplication=C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell",
          "HostApplication=C:/Windows/System32/WindowsPowerShell/v1.0/powershell",
          "HostApplication=C:/Windows/SysWOW64/WindowsPowerShell/v1.0/powershell"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious XOR Encoded PowerShell Command Line - PowerShell",
    "id": 1679,
    "status": "test",
    "description": "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=46"
    ],
    "author": "Teymur Kheirkhabarov, Harish Segar (rule)",
    "date": "2020/06/29",
    "modified": "2023/10/27",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_classic_start"
    },
    "detection": {
      "selection": {
        "Data|contains": "HostName=ConsoleHost"
      },
      "filter": {
        "Data|contains": [
          "bxor",
          "char",
          "join"
        ]
      },
      "condition": "selection and filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Active Directory Enumeration Using AD Module - PsModule",
    "id": 1680,
    "related": [
      {
        "id": "70bc5215-526f-4477-963c-a47a5c9ebd12",
        "type": "similar"
      },
      {
        "id": "9e620995-f2d8-4630-8430-4afd89f77604",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Import-Module\" cmdlet to load the \"Microsoft.ActiveDirectory.Management.dl\" DLL. Which is often used by attackers to perform AD enumeration.",
    "references": [
      "https://github.com/samratashok/ADModule",
      "https://twitter.com/cyb3rops/status/1617108657166061568?s=20",
      "https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/active-directory-enumeration-with-ad-module-without-rsat-or-admin-privileges"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2023/01/22",
    "tags": [
      "attack.reconnaissance",
      "attack.discovery",
      "attack.impact"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_cmdlet": {
        "Payload|contains": [
          "Import-Module ",
          "ipmo "
        ]
      },
      "selection_dll": {
        "Payload|contains": "Microsoft.ActiveDirectory.Management.dll"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the library for administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Alternate PowerShell Hosts - PowerShell Module",
    "id": 1681,
    "status": "test",
    "description": "Detects alternate PowerShell hosts potentially bypassing detections looking for powershell.exe",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190610-PwshAlternateHosts/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g",
    "date": "2019/08/11",
    "modified": "2022/12/13",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "ContextInfo|contains": "*"
      },
      "filter_powershell": {
        "ContextInfo|contains": [
          "= powershell",
          "= C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell",
          "= C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell",
          "= C:/Windows/System32/WindowsPowerShell/v1.0/powershell",
          "= C:/Windows/SysWOW64/WindowsPowerShell/v1.0/powershell"
        ]
      },
      "filter_sdiagnhost": {
        "ContextInfo|contains": "= C:\\WINDOWS\\System32\\sdiagnhost.exe -Embedding"
      },
      "filter_citrix": {
        "ContextInfo|contains": "ConfigSyncRun.exe"
      },
      "filter_adace": {
        "ContextInfo|contains": "C:\\Windows\\system32\\dsac.exe"
      },
      "filter_winrm": {
        "ContextInfo|contains": "C:\\Windows\\system32\\wsmprovhost.exe -Embedding"
      },
      "filter_help_update": {
        "Payload|contains": [
          "Update-Help",
          "Failed to update Help for the module"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Programs using PowerShell directly without invocation of a dedicated interpreter",
      "MSP Detection Searcher",
      "Citrix ConfigSync.ps1"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Bad Opsec Powershell Code Artifacts",
    "id": 1682,
    "related": [
      {
        "id": "73e733cc-1ace-3212-a107-ff2523cc9fc3",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "focuses on trivial artifacts observed in variants of prevalent offensive ps1 payloads, including\nCobalt Strike Beacon, PoshC2, Powerview, Letmein, Empire, Powersploit, and other attack payloads\nthat often undergo minimal changes by attackers due to bad opsec.\n",
    "references": [
      "https://newtonpaul.com/analysing-fileless-malware-cobalt-strike-beacon/",
      "https://labs.sentinelone.com/top-tier-russian-organized-cybercrime-group-unveils-fileless-stealthy-powertrick-backdoor-for-high-value-targets/",
      "https://www.mdeditor.tw/pl/pgRt"
    ],
    "author": "ok @securonix invrep_de, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|contains": [
          "$DoIt",
          "harmj0y",
          "mattifestation",
          "_RastaMouse",
          "tifkin_",
          "0xdeadbeef"
        ]
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Moderate-to-low; Despite the shorter length/lower entropy for some of these, because of high specificity, fp appears to be fairly limited in many environments."
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Clear PowerShell History - PowerShell Module",
    "id": 1683,
    "related": [
      {
        "id": "dfba4ce1-e0ea-495f-986e-97140f31af2d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects keywords that could indicate clearing PowerShell history",
    "references": [
      "https://gist.github.com/hook-s3c/7363a856c3cdbadeb71085147f042c1a"
    ],
    "author": "Ilyas Ochkov, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community",
    "date": "2019/10/25",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_1a_payload": {
        "Payload|contains": [
          "del",
          "Remove-Item",
          "rm"
        ]
      },
      "selection_1b_payload": {
        "Payload|contains": "(Get-PSReadlineOption).HistorySavePath"
      },
      "selection_payload_2": {
        "Payload|contains|all": [
          "Set-PSReadlineOption",
          "\u00e2\u20ac\u201cHistorySaveStyle",
          "SaveNothing"
        ]
      },
      "selection_payload_3": {
        "Payload|contains|all": [
          "Set-PSReadlineOption",
          "-HistorySaveStyle",
          "SaveNothing"
        ]
      },
      "condition": "1 of selection_payload_* or all of selection_1*"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Decompress Commands",
    "id": 1684,
    "related": [
      {
        "id": "81fbdce6-ee49-485a-908d-1a728c5dcb09",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "A General detection for specific decompress commands in PowerShell logs. This could be an adversary decompressing files.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/8",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/4.A.3_09F29912-8E93-461E-9E89-3F06F6763383.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1140"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|contains": "Expand-Archive"
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Malicious PowerShell Scripts - PoshModule",
    "id": 1685,
    "related": [
      {
        "id": "f331aa1f-8c53-4fc3-b083-cc159bc971cb",
        "type": "similar"
      },
      {
        "id": "bf7286e7-c0be-460b-a7e8-5b2e07ecc2f2",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the execution of known offensive powershell scripts used for exploitation or reconnaissance",
    "references": [
      "https://github.com/PowerShellMafia/PowerSploit",
      "https://github.com/NetSPI/PowerUpSQL",
      "https://github.com/CsEnox/EventViewer-UACBypass",
      "https://github.com/AlsidOfficial/WSUSpendu/",
      "https://github.com/nettitude/Invoke-PowerThIEf",
      "https://github.com/S3cur3Th1sSh1t/WinPwn",
      "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
      "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
      "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
      "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
      "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
      "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
      "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
      "https://github.com/HarmJ0y/DAMP",
      "https://github.com/samratashok/nishang",
      "https://github.com/DarkCoderSc/PowerRunAsSystem/",
      "https://github.com/besimorhino/powercat"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/23",
    "modified": "2024/01/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_generic": {
        "ContextInfo|contains": [
          "Add-ConstrainedDelegationBackdoor.ps1",
          "Add-Exfiltration.ps1",
          "Add-Persistence.ps1",
          "Add-RegBackdoor.ps1",
          "Add-RemoteRegBackdoor.ps1",
          "Add-ScrnSaveBackdoor.ps1",
          "Check-VM.ps1",
          "ConvertTo-ROT13.ps1",
          "Copy-VSS.ps1",
          "Create-MultipleSessions.ps1",
          "DNS_TXT_Pwnage.ps1",
          "dnscat2.ps1",
          "Do-Exfiltration.ps1",
          "DomainPasswordSpray.ps1",
          "Download_Execute.ps1",
          "Download-Execute-PS.ps1",
          "Enabled-DuplicateToken.ps1",
          "Enable-DuplicateToken.ps1",
          "Execute-Command-MSSQL.ps1",
          "Execute-DNSTXT-Code.ps1",
          "Execute-OnTime.ps1",
          "ExetoText.ps1",
          "Exploit-Jboss.ps1",
          "Find-AVSignature.ps1",
          "Find-Fruit.ps1",
          "Find-GPOLocation.ps1",
          "Find-TrustedDocuments.ps1",
          "FireBuster.ps1",
          "FireListener.ps1",
          "Get-ApplicationHost.ps1",
          "Get-ChromeDump.ps1",
          "Get-ClipboardContents.ps1",
          "Get-ComputerDetail.ps1",
          "Get-FoxDump.ps1",
          "Get-GPPAutologon.ps1",
          "Get-GPPPassword.ps1",
          "Get-IndexedItem.ps1",
          "Get-Keystrokes.ps1",
          "Get-LSASecret.ps1",
          "Get-MicrophoneAudio.ps1",
          "Get-PassHashes.ps1",
          "Get-PassHints.ps1",
          "Get-RegAlwaysInstallElevated.ps1",
          "Get-RegAutoLogon.ps1",
          "Get-RickAstley.ps1",
          "Get-Screenshot.ps1",
          "Get-SecurityPackages.ps1",
          "Get-ServiceFilePermission.ps1",
          "Get-ServicePermission.ps1",
          "Get-ServiceUnquoted.ps1",
          "Get-SiteListPassword.ps1",
          "Get-System.ps1",
          "Get-TimedScreenshot.ps1",
          "Get-UnattendedInstallFile.ps1",
          "Get-Unconstrained.ps1",
          "Get-USBKeystrokes.ps1",
          "Get-VaultCredential.ps1",
          "Get-VulnAutoRun.ps1",
          "Get-VulnSchTask.ps1",
          "Get-WebConfig.ps1",
          "Get-WebCredentials.ps1",
          "Get-WLAN-Keys.ps1",
          "Gupt-Backdoor.ps1",
          "HTTP-Backdoor.ps1",
          "HTTP-Login.ps1",
          "Install-ServiceBinary.ps1",
          "Install-SSP.ps1",
          "Invoke-ACLScanner.ps1",
          "Invoke-ADSBackdoor.ps1",
          "Invoke-AmsiBypass.ps1",
          "Invoke-ARPScan.ps1",
          "Invoke-BackdoorLNK.ps1",
          "Invoke-BadPotato.ps1",
          "Invoke-BetterSafetyKatz.ps1",
          "Invoke-BruteForce.ps1",
          "Invoke-BypassUAC.ps1",
          "Invoke-Carbuncle.ps1",
          "Invoke-Certify.ps1",
          "Invoke-ConPtyShell.ps1",
          "Invoke-CredentialInjection.ps1",
          "Invoke-CredentialsPhish.ps1",
          "Invoke-DAFT.ps1",
          "Invoke-DCSync.ps1",
          "Invoke-Decode.ps1",
          "Invoke-DinvokeKatz.ps1",
          "Invoke-DllInjection.ps1",
          "Invoke-DowngradeAccount.ps1",
          "Invoke-EgressCheck.ps1",
          "Invoke-Encode.ps1",
          "Invoke-EventViewer.ps1",
          "Invoke-Eyewitness.ps1",
          "Invoke-FakeLogonScreen.ps1",
          "Invoke-Farmer.ps1",
          "Invoke-Get-RBCD-Threaded.ps1",
          "Invoke-Gopher.ps1",
          "Invoke-Grouper2.ps1",
          "Invoke-Grouper3.ps1",
          "Invoke-HandleKatz.ps1",
          "Invoke-Interceptor.ps1",
          "Invoke-Internalmonologue.ps1",
          "Invoke-Inveigh.ps1",
          "Invoke-InveighRelay.ps1",
          "Invoke-JSRatRegsvr.ps1",
          "Invoke-JSRatRundll.ps1",
          "Invoke-KrbRelay.ps1",
          "Invoke-KrbRelayUp.ps1",
          "Invoke-LdapSignCheck.ps1",
          "Invoke-Lockless.ps1",
          "Invoke-MalSCCM.ps1",
          "Invoke-Mimikatz.ps1",
          "Invoke-MimikatzWDigestDowngrade.ps1",
          "Invoke-Mimikittenz.ps1",
          "Invoke-MITM6.ps1",
          "Invoke-NanoDump.ps1",
          "Invoke-NetRipper.ps1",
          "Invoke-NetworkRelay.ps1",
          "Invoke-NinjaCopy.ps1",
          "Invoke-OxidResolver.ps1",
          "Invoke-P0wnedshell.ps1",
          "Invoke-P0wnedshellx86.ps1",
          "Invoke-Paranoia.ps1",
          "Invoke-PortScan.ps1",
          "Invoke-PoshRatHttp.ps1",
          "Invoke-PoshRatHttps.ps1",
          "Invoke-PostExfil.ps1",
          "Invoke-PowerDump.ps1",
          "Invoke-PowerShellIcmp.ps1",
          "Invoke-PowerShellTCP.ps1",
          "Invoke-PowerShellTcpOneLine.ps1",
          "Invoke-PowerShellTcpOneLineBind.ps1",
          "Invoke-PowerShellUdp.ps1",
          "Invoke-PowerShellUdpOneLine.ps1",
          "Invoke-PowerShellWMI.ps1",
          "Invoke-PowerThIEf.ps1",
          "Invoke-PPLDump.ps1",
          "Invoke-Prasadhak.ps1",
          "Invoke-PsExec.ps1",
          "Invoke-PsGcat.ps1",
          "Invoke-PsGcatAgent.ps1",
          "Invoke-PSInject.ps1",
          "Invoke-PsUaCme.ps1",
          "Invoke-ReflectivePEInjection.ps1",
          "Invoke-ReverseDNSLookup.ps1",
          "Invoke-Rubeus.ps1",
          "Invoke-RunAs.ps1",
          "Invoke-SafetyKatz.ps1",
          "Invoke-SauronEye.ps1",
          "Invoke-SCShell.ps1",
          "Invoke-Seatbelt.ps1",
          "Invoke-ServiceAbuse.ps1",
          "Invoke-SessionGopher.ps1",
          "Invoke-ShellCode.ps1",
          "Invoke-SMBScanner.ps1",
          "Invoke-Snaffler.ps1",
          "Invoke-Spoolsample.ps1",
          "Invoke-SSHCommand.ps1",
          "Invoke-SSIDExfil.ps1",
          "Invoke-StandIn.ps1",
          "Invoke-StickyNotesExtract.ps1",
          "Invoke-Tater.ps1",
          "Invoke-Thunderfox.ps1",
          "Invoke-ThunderStruck.ps1",
          "Invoke-TokenManipulation.ps1",
          "Invoke-Tokenvator.ps1",
          "Invoke-TotalExec.ps1",
          "Invoke-UrbanBishop.ps1",
          "Invoke-UserHunter.ps1",
          "Invoke-VoiceTroll.ps1",
          "Invoke-Whisker.ps1",
          "Invoke-WinEnum.ps1",
          "Invoke-winPEAS.ps1",
          "Invoke-WireTap.ps1",
          "Invoke-WmiCommand.ps1",
          "Invoke-WScriptBypassUAC.ps1",
          "Invoke-Zerologon.ps1",
          "Keylogger.ps1",
          "MailRaider.ps1",
          "New-HoneyHash.ps1",
          "OfficeMemScraper.ps1",
          "Offline_Winpwn.ps1",
          "Out-CHM.ps1",
          "Out-DnsTxt.ps1",
          "Out-Excel.ps1",
          "Out-HTA.ps1",
          "Out-Java.ps1",
          "Out-JS.ps1",
          "Out-Minidump.ps1",
          "Out-RundllCommand.ps1",
          "Out-SCF.ps1",
          "Out-SCT.ps1",
          "Out-Shortcut.ps1",
          "Out-WebQuery.ps1",
          "Out-Word.ps1",
          "Parse_Keys.ps1",
          "Port-Scan.ps1",
          "PowerBreach.ps1",
          "powercat.ps1",
          "PowerRunAsSystem.psm1",
          "PowerSharpPack.ps1",
          "PowerUp.ps1",
          "PowerUpSQL.ps1",
          "PowerView.ps1",
          "PSAsyncShell.ps1",
          "RemoteHashRetrieval.ps1",
          "Remove-Persistence.ps1",
          "Remove-PoshRat.ps1",
          "Remove-Update.ps1",
          "Run-EXEonRemote.ps1",
          "Schtasks-Backdoor.ps1",
          "Set-DCShadowPermissions.ps1",
          "Set-MacAttribute.ps1",
          "Set-RemotePSRemoting.ps1",
          "Set-RemoteWMI.ps1",
          "Set-Wallpaper.ps1",
          "Show-TargetScreen.ps1",
          "Speak.ps1",
          "Start-CaptureServer.ps1",
          "Start-WebcamRecorder.ps1",
          "StringToBase64.ps1",
          "TexttoExe.ps1",
          "VolumeShadowCopyTools.ps1",
          "WinPwn.ps1",
          "WSUSpendu.ps1"
        ]
      },
      "selection_invoke_sharp": {
        "ContextInfo|contains|all": [
          "Invoke-Sharp",
          ".ps1"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Get-ADDBAccount Usage",
    "id": 1686,
    "status": "test",
    "description": "Detects suspicious invocation of the Get-ADDBAccount script that reads from a ntds.dit file and may be used to get access to credentials without using any credential dumpers",
    "references": [
      "https://www.n00py.io/2022/03/manipulating-user-passwords-without-mimikatz/",
      "https://github.com/MichaelGrafnetter/DSInternals/blob/7ba59c12ee9a1cb430d7dc186a3366842dd612c8/Documentation/PowerShell/Get-ADDBAccount.md"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/03/16",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "Payload|contains|all": [
          "Get-ADDBAccount",
          "BootKey ",
          "DatabasePath "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Get Clipboard",
    "id": 1687,
    "status": "test",
    "description": "A General detection for the Get-Clipboard commands in PowerShell logs. This could be an adversary capturing clipboard contents.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/16",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/7.A.2_F4609F7E-C4DB-4327-91D4-59A58C962A02.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2023/01/04",
    "tags": [
      "attack.collection",
      "attack.t1115"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "Payload|contains": "Get-Clipboard"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation CLIP+ Launcher - PowerShell Module",
    "id": 1688,
    "related": [
      {
        "id": "73e67340-0d25-11eb-adc1-0242ac120002",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated use of Clip.exe to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|re": ".*cmd.{0,5}(?:/c|/r).+clip(?:\\.exe)?.{0,4}&&.+clipboard]::\\(\\s\\\\\"\\{\\d\\}.+-f.+\""
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Obfuscated IEX Invocation - PowerShell Module",
    "id": 1689,
    "related": [
      {
        "id": "1b9dc62e-6e9e-42a3-8990-94d7a10007f7",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the code block cited in the reference section below",
    "references": [
      "https://github.com/danielbohannon/Invoke-Obfuscation/blob/f20e7f843edd0a3a7716736e9eddfa423395dd26/Out-ObfuscatedStringCommand.ps1#L873-L888"
    ],
    "author": "Daniel Bohannon (@Mandiant/@FireEye), oscd.community",
    "date": "2019/11/08",
    "modified": "2022/12/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_payload": [
        {
          "Payload|re": "\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\["
        },
        {
          "Payload|re": "\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\["
        },
        {
          "Payload|re": "\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\["
        },
        {
          "Payload|re": "\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}"
        },
        {
          "Payload|re": "\\*mdr\\*\\W\\s*\\)\\.Name"
        },
        {
          "Payload|re": "\\$VerbosePreference\\.ToString\\("
        },
        {
          "Payload|re": "\\[String\\]\\s*\\$VerbosePreference"
        }
      ],
      "condition": "selection_payload"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation STDIN+ Launcher - PowerShell Module",
    "id": 1690,
    "related": [
      {
        "id": "779c8c12-0eb1-11eb-adc1-0242ac120002",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated use of stdin to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|re": ".*cmd.{0,5}(?:/c|/r).+powershell.+(?:\\$\\{?input\\}?|noexit).+\""
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR+ Launcher - PowerShell Module",
    "id": 1691,
    "related": [
      {
        "id": "0adfbc14-0ed1-11eb-adc1-0242ac120002",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated use of Environment Variables to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|re": ".*cmd.{0,5}(?:/c|/r)(?:\\s|)\"set\\s[a-zA-Z]{3,6}.*(?:\\{\\d\\}){1,}\\\\\"\\s+?-f(?:.*\\)){1,}.*\""
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation COMPRESS OBFUSCATION - PowerShell Module",
    "id": 1692,
    "related": [
      {
        "id": "20e5497e-331c-4cd5-8d36-935f6e2a9a07",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via COMPRESS OBFUSCATION",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|contains|all": [
          "new-object",
          "text.encoding]::ascii"
        ],
        "Payload|contains": [
          "system.io.compression.deflatestream",
          "system.io.streamreader"
        ],
        "Payload|endswith": "readtoend"
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation RUNDLL LAUNCHER - PowerShell Module",
    "id": 1693,
    "related": [
      {
        "id": "e6cb92b4-b470-4eb8-8a9d-d63e8583aae0",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via RUNDLL LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|contains|all": [
          "rundll32.exe",
          "shell32.dll",
          "shellexec_rundll",
          "powershell"
        ]
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Stdin - PowerShell Module",
    "id": 1694,
    "related": [
      {
        "id": "86b896ba-ffa1-4fea-83e3-ee28a4c915c7",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via Stdin in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/12",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|re": "(?i).*(set).*&&\\s?set.*(environment|invoke|\\$?\\{?input).*&&.*\""
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Clip - PowerShell Module",
    "id": 1695,
    "related": [
      {
        "id": "db92dd33-a3ad-49cf-8c2c-608c3e30ace0",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Clip.exe in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|re": "(?i).*?echo.*clip.*&&.*(Clipboard|i`?n`?v`?o`?k`?e`?).*"
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use MSHTA - PowerShell Module",
    "id": 1696,
    "related": [
      {
        "id": "e55a5195-4724-480e-a77e-3ebe64bd3759",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via use MSHTA in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/08",
    "modified": "2023/01/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "Payload|contains|all": [
          "set",
          "&&",
          "mshta",
          "vbscript:createobject",
          ".run",
          "(window.close)"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Rundll32 - PowerShell Module",
    "id": 1697,
    "related": [
      {
        "id": "a5a30a6e-75ca-4233-8b8c-42e0f2037d3b",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Rundll32 in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2019/10/08",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|contains|all": [
          "&&",
          "rundll32",
          "shell32.dll",
          "shellexec_rundll"
        ],
        "Payload|contains": [
          "value",
          "invoke",
          "comspec",
          "iex"
        ]
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION - PowerShell Module",
    "id": 1698,
    "related": [
      {
        "id": "e54f5149-6ba3-49cf-b153-070d24679126",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Obfuscated Powershell via VAR++ LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_4103": {
        "Payload|re": "(?i).*&&set.*(\\{\\d\\}){2,}\\\\\"\\s+?-f.*&&.*cmd.*/c"
      },
      "condition": "selection_4103"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Malicious PowerShell Commandlets - PoshModule",
    "id": 1699,
    "related": [
      {
        "id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6",
        "type": "similar"
      },
      {
        "id": "02030f2f-6199-49ec-b258-ea71b07e03dc",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
    "references": [
      "https://adsecurity.org/?p=2921",
      "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
      "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
      "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
      "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
      "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
      "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
      "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
      "https://github.com/calebstewart/CVE-2021-1675",
      "https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1",
      "https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html",
      "https://github.com/HarmJ0y/DAMP",
      "https://github.com/samratashok/nishang",
      "https://github.com/DarkCoderSc/PowerRunAsSystem/",
      "https://github.com/besimorhino/powercat",
      "https://github.com/Kevin-Robertson/Powermad",
      "https://github.com/adrecon/ADRecon",
      "https://github.com/adrecon/AzureADRecon"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/20",
    "modified": "2024/01/25",
    "tags": [
      "attack.execution",
      "attack.discovery",
      "attack.t1482",
      "attack.t1087",
      "attack.t1087.001",
      "attack.t1087.002",
      "attack.t1069.001",
      "attack.t1069.002",
      "attack.t1069",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "Payload|contains": [
          "Add-Exfiltration",
          "Add-Persistence",
          "Add-RegBackdoor",
          "Add-RemoteRegBackdoor",
          "Add-ScrnSaveBackdoor",
          "Check-VM",
          "ConvertTo-Rc4ByteStream",
          "Decrypt-Hash",
          "Disable-ADIDNSNode",
          "Disable-MachineAccount",
          "Do-Exfiltration",
          "Enable-ADIDNSNode",
          "Enable-MachineAccount",
          "Enabled-DuplicateToken",
          "Exploit-Jboss",
          "Export-ADR",
          "Export-ADRCSV",
          "Export-ADRExcel",
          "Export-ADRHTML",
          "Export-ADRJSON",
          "Export-ADRXML",
          "Find-Fruit",
          "Find-GPOLocation",
          "Find-TrustedDocuments",
          "Get-ADIDNS",
          "Get-ApplicationHost",
          "Get-ChromeDump",
          "Get-ClipboardContents",
          "Get-FoxDump",
          "Get-GPPPassword",
          "Get-IndexedItem",
          "Get-KerberosAESKey",
          "Get-Keystrokes",
          "Get-LSASecret",
          "Get-MachineAccountAttribute",
          "Get-MachineAccountCreator",
          "Get-PassHashes",
          "Get-RegAlwaysInstallElevated",
          "Get-RegAutoLogon",
          "Get-RemoteBootKey",
          "Get-RemoteCachedCredential",
          "Get-RemoteLocalAccountHash",
          "Get-RemoteLSAKey",
          "Get-RemoteMachineAccountHash",
          "Get-RemoteNLKMKey",
          "Get-RickAstley",
          "Get-Screenshot",
          "Get-SecurityPackages",
          "Get-ServiceFilePermission",
          "Get-ServicePermission",
          "Get-ServiceUnquoted",
          "Get-SiteListPassword",
          "Get-System",
          "Get-TimedScreenshot",
          "Get-UnattendedInstallFile",
          "Get-Unconstrained",
          "Get-USBKeystrokes",
          "Get-VaultCredential",
          "Get-VulnAutoRun",
          "Get-VulnSchTask",
          "Grant-ADIDNSPermission",
          "Gupt-Backdoor",
          "HTTP-Login",
          "Install-ServiceBinary",
          "Install-SSP",
          "Invoke-ACLScanner",
          "Invoke-ADRecon",
          "Invoke-ADSBackdoor",
          "Invoke-AgentSmith",
          "Invoke-AllChecks",
          "Invoke-ARPScan",
          "Invoke-AzureHound",
          "Invoke-BackdoorLNK",
          "Invoke-BadPotato",
          "Invoke-BetterSafetyKatz",
          "Invoke-BypassUAC",
          "Invoke-Carbuncle",
          "Invoke-Certify",
          "Invoke-ConPtyShell",
          "Invoke-CredentialInjection",
          "Invoke-DAFT",
          "Invoke-DCSync",
          "Invoke-DinvokeKatz",
          "Invoke-DllInjection",
          "Invoke-DNSUpdate",
          "Invoke-DomainPasswordSpray",
          "Invoke-DowngradeAccount",
          "Invoke-EgressCheck",
          "Invoke-Eyewitness",
          "Invoke-FakeLogonScreen",
          "Invoke-Farmer",
          "Invoke-Get-RBCD-Threaded",
          "Invoke-Gopher",
          "Invoke-Grouper",
          "Invoke-HandleKatz",
          "Invoke-ImpersonatedProcess",
          "Invoke-ImpersonateSystem",
          "Invoke-InteractiveSystemPowerShell",
          "Invoke-Internalmonologue",
          "Invoke-Inveigh",
          "Invoke-InveighRelay",
          "Invoke-KrbRelay",
          "Invoke-LdapSignCheck",
          "Invoke-Lockless",
          "Invoke-MalSCCM",
          "Invoke-Mimikatz",
          "Invoke-Mimikittenz",
          "Invoke-MITM6",
          "Invoke-NanoDump",
          "Invoke-NetRipper",
          "Invoke-Nightmare",
          "Invoke-NinjaCopy",
          "Invoke-OfficeScrape",
          "Invoke-OxidResolver",
          "Invoke-P0wnedshell",
          "Invoke-Paranoia",
          "Invoke-PortScan",
          "Invoke-PoshRatHttp",
          "Invoke-PostExfil",
          "Invoke-PowerDump",
          "Invoke-PowerShellTCP",
          "Invoke-PowerShellWMI",
          "Invoke-PPLDump",
          "Invoke-PsExec",
          "Invoke-PSInject",
          "Invoke-PsUaCme",
          "Invoke-ReflectivePEInjection",
          "Invoke-ReverseDNSLookup",
          "Invoke-Rubeus",
          "Invoke-RunAs",
          "Invoke-SafetyKatz",
          "Invoke-SauronEye",
          "Invoke-SCShell",
          "Invoke-Seatbelt",
          "Invoke-ServiceAbuse",
          "Invoke-ShadowSpray",
          "Invoke-Sharp",
          "Invoke-Shellcode",
          "Invoke-SMBScanner",
          "Invoke-Snaffler",
          "Invoke-Spoolsample",
          "Invoke-SpraySinglePassword",
          "Invoke-SSHCommand",
          "Invoke-StandIn",
          "Invoke-StickyNotesExtract",
          "Invoke-SystemCommand",
          "Invoke-Tasksbackdoor",
          "Invoke-Tater",
          "Invoke-Thunderfox",
          "Invoke-ThunderStruck",
          "Invoke-TokenManipulation",
          "Invoke-Tokenvator",
          "Invoke-TotalExec",
          "Invoke-UrbanBishop",
          "Invoke-UserHunter",
          "Invoke-VoiceTroll",
          "Invoke-Whisker",
          "Invoke-WinEnum",
          "Invoke-winPEAS",
          "Invoke-WireTap",
          "Invoke-WmiCommand",
          "Invoke-WMIExec",
          "Invoke-WScriptBypassUAC",
          "Invoke-Zerologon",
          "MailRaider",
          "New-ADIDNSNode",
          "New-DNSRecordArray",
          "New-HoneyHash",
          "New-InMemoryModule",
          "New-MachineAccount",
          "New-SOASerialNumberArray",
          "Out-Minidump",
          "Port-Scan",
          "PowerBreach",
          "powercat ",
          "PowerUp",
          "PowerView",
          "Remove-ADIDNSNode",
          "Remove-MachineAccount",
          "Remove-Update",
          "Rename-ADIDNSNode",
          "Revoke-ADIDNSPermission",
          "Set-ADIDNSNode",
          "Set-MacAttribute",
          "Set-MachineAccountAttribute",
          "Set-Wallpaper",
          "Show-TargetScreen",
          "Start-CaptureServer",
          "Start-Dnscat2",
          "Start-WebcamRecorder",
          "VolumeShadowCopyTools"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential RemoteFXvGPUDisablement.EXE Abuse - PowerShell Module",
    "id": 1700,
    "related": [
      {
        "id": "a6fc3c46-23b8-4996-9ea2-573f4c4d88c5",
        "type": "similar"
      },
      {
        "id": "f65e22f9-819e-4f96-9c7b-498364ae7a25",
        "type": "similar"
      },
      {
        "id": "cacef8fc-9d3d-41f7-956d-455c6e881bc5",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects PowerShell module creation where the module Contents are set to \"function Get-VMRemoteFXPhysicalVideoAdapter\". This could be a sign of potential abuse of the \"RemoteFXvGPUDisablement.exe\" binary which is known to be vulnerable to module load-order hijacking.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/AtomicTestHarnesses/blob/7e1e4da116801e3d6fcc6bedb207064577e40572/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2021/07/13",
    "modified": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "Payload|contains": "ModuleContents=function Get-VMRemoteFXPhysicalVideoAdapter {"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Remote PowerShell Session (PS Module)",
    "id": 1701,
    "status": "test",
    "description": "Detects remote PowerShell sessions",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190511-RemotePwshExecution/notebook.html"
    ],
    "author": "Roberto Rodriguez @Cyb3rWard0g, Tim Shelton",
    "date": "2019/08/10",
    "modified": "2023/01/20",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.lateral_movement",
      "attack.t1021.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "ContextInfo|contains|all": [
          " = ServerRemoteHost ",
          "wsmprovhost.exe"
        ]
      },
      "filter_pwsh_archive": {
        "ContextInfo|contains": "\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\Microsoft.PowerShell.Archive\\Microsoft.PowerShell.Archive.psm1"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate use remote PowerShell sessions"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AD Groups Or Users Enumeration Using PowerShell - PoshModule",
    "id": 1702,
    "status": "test",
    "description": "Adversaries may attempt to find domain-level groups and permission settings.\nThe knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.\nAdversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.002/T1069.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/15",
    "modified": "2023/01/20",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_ad_principal": [
        {
          "Payload|contains": "get-ADPrincipalGroupMembership"
        },
        {
          "ContextInfo|contains": "get-ADPrincipalGroupMembership"
        }
      ],
      "selection_get_aduser": [
        {
          "Payload|contains|all": [
            "get-aduser",
            "-f ",
            "-pr ",
            "DoesNotRequirePreAuth"
          ]
        },
        {
          "ContextInfo|contains|all": [
            "get-aduser",
            "-f ",
            "-pr ",
            "DoesNotRequirePreAuth"
          ]
        }
      ],
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Administrator script"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Download - PoshModule",
    "id": 1703,
    "related": [
      {
        "id": "65531a81-a694-4e31-ae04-f8ba5bc33759",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell download command",
    "references": [
      "https://learn.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfile?view=net-8.0",
      "https://learn.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstring?view=net-8.0"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/05",
    "modified": "2023/01/20",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_webclient_": {
        "ContextInfo|contains": "System.Net.WebClient"
      },
      "selection_function": {
        "ContextInfo|contains": [
          ".DownloadFile(",
          ".DownloadString("
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "PowerShell scripts that download content from the Internet"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Use Get-NetTCPConnection - PowerShell Module",
    "id": 1704,
    "status": "test",
    "description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-2---system-network-connections-discovery-with-powershell"
    ],
    "author": "frack113",
    "date": "2021/12/10",
    "modified": "2022/12/02",
    "tags": [
      "attack.discovery",
      "attack.t1049"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "ContextInfo|contains": "Get-NetTCPConnection"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Invocations - Generic - PowerShell Module",
    "id": 1705,
    "related": [
      {
        "id": "3d304fda-78aa-43ed-975c-d740798a49c1",
        "type": "derived"
      },
      {
        "id": "ed965133-513f-41d9-a441-e38076a0798f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell invocation command parameters",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/12",
    "modified": "2023/01/03",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_encoded": {
        "ContextInfo|contains": [
          " -enc ",
          " -EncodedCommand ",
          " -ec "
        ]
      },
      "selection_hidden": {
        "ContextInfo|contains": [
          " -w hidden ",
          " -window hidden ",
          " -windowstyle hidden ",
          " -w 1 "
        ]
      },
      "selection_noninteractive": {
        "ContextInfo|contains": [
          " -noni ",
          " -noninteractive "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Very special / sneaky PowerShell scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Invocations - Specific - PowerShell Module",
    "id": 1706,
    "related": [
      {
        "id": "fce5f582-cc00-41e1-941a-c6fabf0fdb8c",
        "type": "obsoletes"
      },
      {
        "id": "ae7fbf8e-f3cb-49fd-8db4-5f3bed522c71",
        "type": "similar"
      },
      {
        "id": "536e2947-3729-478c-9903-745aaffe60d2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell invocation command parameters",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro",
    "date": "2017/03/05",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection_convert_b64": {
        "ContextInfo|contains|all": [
          "-nop",
          " -w ",
          "hidden",
          " -c ",
          "[Convert]::FromBase64String"
        ]
      },
      "selection_iex": {
        "ContextInfo|contains|all": [
          " -w ",
          "hidden",
          "-noni",
          "-nop",
          " -c ",
          "iex",
          "New-Object"
        ]
      },
      "selection_enc": {
        "ContextInfo|contains|all": [
          " -w ",
          "hidden",
          "-ep",
          "bypass",
          "-Enc"
        ]
      },
      "selection_reg": {
        "ContextInfo|contains|all": [
          "powershell",
          "reg",
          "add",
          "HKCU\\software\\microsoft\\windows\\currentversion\\run"
        ]
      },
      "selection_webclient": {
        "ContextInfo|contains|all": [
          "bypass",
          "-noprofile",
          "-windowstyle",
          "hidden",
          "new-object",
          "system.net.webclient",
          ".download"
        ]
      },
      "selection_iex_webclient": {
        "ContextInfo|contains|all": [
          "iex",
          "New-Object",
          "Net.WebClient",
          ".Download"
        ]
      },
      "filter_chocolatey": {
        "ContextInfo|contains": [
          "(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1",
          "Write-ChocolateyWarning"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Get Local Groups Information",
    "id": 1707,
    "status": "test",
    "description": "Adversaries may attempt to find local system groups and permission settings.\nThe knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.\nAdversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.001/T1069.001.md"
    ],
    "author": "frack113",
    "date": "2021/12/12",
    "modified": "2022/12/25",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "test_3": [
        {
          "Payload|contains": [
            "get-localgroup",
            "Get-LocalGroupMember"
          ]
        },
        {
          "ContextInfo|contains": [
            "get-localgroup",
            "Get-LocalGroupMember"
          ]
        }
      ],
      "test_6": [
        {
          "Payload|contains|all": [
            "Get-WMIObject",
            "Win32_Group"
          ]
        },
        {
          "ContextInfo|contains|all": [
            "Get-WMIObject",
            "Win32_Group"
          ]
        }
      ],
      "condition": "1 of test_*"
    },
    "falsepositives": [
      "Administrator script"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Computer Machine Password by PowerShell",
    "id": 1708,
    "status": "test",
    "description": "The Reset-ComputerMachinePassword cmdlet changes the computer account password that the computers use to authenticate to the domain controllers in the domain.\nYou can use it to reset the password of the local computer.\n",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/reset-computermachinepassword?view=powershell-5.1",
      "https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/"
    ],
    "author": "frack113",
    "date": "2022/02/21",
    "tags": [
      "attack.initial_access",
      "attack.t1078"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "ContextInfo|contains": "Reset-ComputerMachinePassword"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Get Information for SMB Share - PowerShell Module",
    "id": 1709,
    "status": "test",
    "description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and\nto identify potential systems of interest for Lateral Movement.\nNetworks often contain shared network drives and folders that enable users to access file directories on various systems across a network.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.002/T1069.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/15",
    "modified": "2022/12/02",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": [
        {
          "Payload|contains": "get-smbshare"
        },
        {
          "ContextInfo|contains": "get-smbshare"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator script"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Zip A Folder With PowerShell For Staging In Temp  - PowerShell Module",
    "id": 1710,
    "related": [
      {
        "id": "71ff406e-b633-4989-96ec-bc49d825a412",
        "type": "similar"
      },
      {
        "id": "b7a3c9a3-09ea-4934-8864-6a32cacd98d9",
        "type": "similar"
      },
      {
        "id": "85a8e5ba-bd03-4bfb-bbfa-a4409a8f8b98",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell scripts that make use of the \"Compress-Archive\" Cmdlet in order to compress folders and files where the output is stored in a potentially suspicious location that is used often by malware for exfiltration.\nAn adversary might compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1074.001/T1074.001.md",
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2021/07/20",
    "modified": "2023/12/18",
    "tags": [
      "attack.collection",
      "attack.t1074.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "ContextInfo|contains|all": [
          "Compress-Archive -Path*-DestinationPath $env:TEMP",
          "Compress-Archive -Path*-DestinationPath*\\AppData\\Local\\Temp\\",
          "Compress-Archive -Path*-DestinationPath*:\\Windows\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SyncAppvPublishingServer Bypass Powershell Restriction - PS Module",
    "id": 1711,
    "related": [
      {
        "id": "fde7929d-8beb-4a4c-b922-be9974671667",
        "type": "derived"
      },
      {
        "id": "9f7aa113-9da6-4a8d-907c-5f1a4b908299",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Syncappvpublishingserver/"
    ],
    "author": "Ensar \u00c5\u017eamil, @sblmsrsn, OSCD Community",
    "date": "2020/10/05",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_module",
      "definition": "0ad03ef1-f21b-4a79-8ce8-e6900c54b65b"
    },
    "detection": {
      "selection": {
        "ContextInfo|contains": "SyncAppvPublishingServer.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "App-V clients"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "AADInternals PowerShell Cmdlets Execution - PsScript",
    "id": 1712,
    "related": [
      {
        "id": "c86500e9-a645-4680-98d7-f882c70c1ea3",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects ADDInternals Cmdlet execution. A tool for administering Azure AD and Office 365. Which can be abused by threat actors to attack Azure AD or Office 365.",
    "references": [
      "https://o365blog.com/aadinternals/",
      "https://github.com/Gerenios/AADInternals"
    ],
    "author": "Austin Songer (@austinsonger), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/23",
    "tags": [
      "attack.execution",
      "attack.reconnaissance",
      "attack.discovery",
      "attack.credential_access",
      "attack.impact"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Script Block Logging must be enable"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Add-AADInt",
          "ConvertTo-AADInt",
          "Disable-AADInt",
          "Enable-AADInt",
          "Export-AADInt",
          "Get-AADInt",
          "Grant-AADInt",
          "Install-AADInt",
          "Invoke-AADInt",
          "Join-AADInt",
          "New-AADInt",
          "Open-AADInt",
          "Read-AADInt",
          "Register-AADInt",
          "Remove-AADInt",
          "Restore-AADInt",
          "Search-AADInt",
          "Send-AADInt",
          "Set-AADInt",
          "Start-AADInt",
          "Update-AADInt"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the library for administrative activity"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Access to Browser Login Data",
    "id": 1713,
    "related": [
      {
        "id": "98f4c75c-3089-44f3-b733-b327b9cd9c9d",
        "type": "obsoletes"
      },
      {
        "id": "47147b5b-9e17-4d76-b8d2-7bac24c5ce1b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.\nWeb browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.\nWeb browsers typically store the credentials in an encrypted format within a credential store.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1555.003/T1555.003.md"
    ],
    "author": "frack113",
    "date": "2022/01/30",
    "tags": [
      "attack.credential_access",
      "attack.t1555.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmd": {
        "ScriptBlockText|contains|all": [
          "Copy-Item",
          "-Destination"
        ]
      },
      "selection_path": {
        "ScriptBlockText|contains": [
          "\\Opera Software\\Opera Stable\\Login Data",
          "\\Mozilla\\Firefox\\Profiles",
          "\\Microsoft\\Edge\\User Data\\Default",
          "\\Google\\Chrome\\User Data\\Default\\Login Data",
          "\\Google\\Chrome\\User Data\\Default\\Login Data For Account"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Active Directory Enumeration Using AD Module - PsScript",
    "id": 1714,
    "related": [
      {
        "id": "70bc5215-526f-4477-963c-a47a5c9ebd12",
        "type": "similar"
      },
      {
        "id": "74176142-4684-4d8a-8b0a-713257e7df8e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Import-Module\" cmdlet to load the \"Microsoft.ActiveDirectory.Management.dl\" DLL. Which is often used by attackers to perform AD enumeration.",
    "references": [
      "https://github.com/samratashok/ADModule",
      "https://twitter.com/cyb3rops/status/1617108657166061568?s=20",
      "https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/active-directory-enumeration-with-ad-module-without-rsat-or-admin-privileges"
    ],
    "author": "frack113, Nasreddine Bencherchali",
    "date": "2023/01/22",
    "tags": [
      "attack.reconnaissance",
      "attack.discovery",
      "attack.impact"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enable"
    },
    "detection": {
      "selection_generic": {
        "ScriptBlockText|contains|all": [
          "Import-Module ",
          "Microsoft.ActiveDirectory.Management.dll"
        ]
      },
      "selection_specific": {
        "ScriptBlockText|contains": "ipmo Microsoft.ActiveDirectory.Management.dll"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the library for administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Add Name Resolution Policy Table Rule",
    "id": 1715,
    "status": "test",
    "description": "Detects powershell scripts that adds a Name Resolution Policy Table (NRPT) rule for the specified namespace.\nThis will bypass the default DNS server and uses a specified server for answering the query.\n",
    "references": [
      "https://twitter.com/NathanMcNulty/status/1569497348841287681",
      "https://docs.microsoft.com/en-us/powershell/module/dnsclient/add-dnsclientnrptrule?view=windowsserver2022-ps"
    ],
    "author": "Borna Talebi",
    "date": "2021/09/14",
    "modified": "2022/10/09",
    "tags": [
      "attack.impact",
      "attack.t1565"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Add-DnsClientNrptRule",
          "-Namesp",
          "-NameSe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add Windows Capability Via PowerShell Script",
    "id": 1716,
    "related": [
      {
        "id": "b36d01a3-ddaf-4804-be18-18a6247adfcd",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of the \"Add-WindowsCapability\" cmdlet to add Windows capabilities. Notable capabilities could be \"OpenSSH\" and others.",
    "references": [
      "https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse?tabs=powershell",
      "https://www.virustotal.com/gui/file/af1c82237b6e5a3a7cdbad82cc498d298c67845d92971bada450023d1335e267/content"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/22",
    "modified": "2023/05/09",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": "Add-WindowsCapability "
      },
      "selection_capa": {
        "ScriptBlockText|contains": "-Name OpenSSH."
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of the capabilities by administrators or users. Add additional filters accordingly."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell ADRecon Execution",
    "id": 1717,
    "status": "test",
    "description": "Detects execution of ADRecon.ps1 for AD reconnaissance which has been reported to be actively used by FIN7",
    "references": [
      "https://github.com/sense-of-security/ADRecon/blob/11881a24e9c8b207f31b56846809ce1fb189bcc9/ADRecon.ps1",
      "https://bi-zone.medium.com/from-pentest-to-apt-attack-cybercriminal-group-fin7-disguises-its-malware-as-an-ethical-hackers-c23c9a75e319"
    ],
    "author": "Bhabesh Raj",
    "date": "2021/07/16",
    "modified": "2022/09/06",
    "tags": [
      "attack.discovery",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Function Get-ADRExcelComOb",
          "Get-ADRGPO",
          "Get-ADRDomainController",
          "ADRecon-Report.xlsx"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AMSI Bypass Pattern Assembly GetType",
    "id": 1718,
    "status": "test",
    "description": "Detects code fragments found in small and obfuscated AMSI bypass PowerShell scripts",
    "references": [
      "https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/",
      "https://twitter.com/cyb3rops/status/1588574518057979905?s=20&t=A7hh93ONM7ni1Rj1jO5OaA"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/11/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001",
      "attack.execution"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "[Ref].Assembly.GetType",
          "SetValue($null,$true)",
          "NonPublic,Static"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential AMSI Bypass Script Using NULL Bits",
    "id": 1719,
    "related": [
      {
        "id": "92a974db-ab84-457f-9ec0-55db83d7a825",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of special strings/null bits in order to potentially bypass AMSI functionalities",
    "references": [
      "https://github.com/r00t-3xp10it/hacking-material-books/blob/43cb1e1932c16ff1f58b755bc9ab6b096046853f/obfuscation/simple_obfuscation.md#amsi-bypass-using-null-bits-satoshi"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/04",
    "modified": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "if(0){{{0}}}' -f $(0 -as [char]) +",
          "#<NULL>"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Silence.EDA Detection",
    "id": 1720,
    "status": "test",
    "description": "Detects Silence EmpireDNSAgent as described in the Group-IP report",
    "references": [
      "https://www.group-ib.com/resources/threat-research/silence_2.0.going_global.pdf"
    ],
    "author": "Alina Stepchenkova, Group-IB, oscd.community",
    "date": "2019/11/01",
    "modified": "2023/04/03",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.command_and_control",
      "attack.t1071.004",
      "attack.t1572",
      "attack.impact",
      "attack.t1529",
      "attack.g0091",
      "attack.s0363"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "empire": {
        "ScriptBlockText|contains|all": [
          "System.Diagnostics.Process",
          "Stop-Computer",
          "Restart-Computer",
          "Exception in execution",
          "$cmdargs",
          "Close-Dnscat2Tunnel"
        ]
      },
      "dnscat": {
        "ScriptBlockText|contains|all": [
          "set type=$LookupType`nserver",
          "$Command | nslookup 2>&1 | Out-String",
          "New-RandomDNSField",
          "[Convert]::ToString($SYNOptions, 16)",
          "$Session.Dead = $True",
          "$Session[\"Driver\"] -eq"
        ]
      },
      "condition": "empire and dnscat"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Get-ADUser Enumeration Using UserAccountControl Flags",
    "id": 1721,
    "status": "test",
    "description": "Detects AS-REP roasting is an attack that is often-overlooked. It is not very common as you have to explicitly set accounts that do not require pre-authentication.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.002/T1069.002.md#atomic-test-11---get-aduser-enumeration-using-useraccountcontrol-flags-as-rep-roasting",
      "https://shellgeek.com/useraccountcontrol-flags-to-manipulate-properties/"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-ADUser",
          "-Filter",
          "useraccountcontrol",
          "-band",
          "4194304"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Data Exfiltration Via Audio File",
    "id": 1722,
    "status": "test",
    "description": "Detects potential exfiltration attempt via audio file using PowerShell",
    "references": [
      "https://github.com/gtworek/PSBits/blob/e97cbbb173b31cbc4d37244d3412de0a114dacfb/NoDLP/bin2wav.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/16",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_main": {
        "ScriptBlockText|contains|all": [
          "[System.Math]::",
          "[IO.FileMode]::",
          "BinaryWriter"
        ]
      },
      "selection_header_wav": {
        "ScriptBlockText|contains|all": [
          "0x52",
          "0x49",
          "0x46",
          "0x57",
          "0x41",
          "0x56",
          "0x45",
          "0xAC"
        ]
      },
      "condition": "selection_main and 1 of selection_header_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Automated Collection Command PowerShell",
    "id": 1723,
    "status": "test",
    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1119/T1119.md"
    ],
    "author": "frack113",
    "date": "2021/07/28",
    "modified": "2022/12/25",
    "tags": [
      "attack.collection",
      "attack.t1119"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_ext": {
        "ScriptBlockText|contains": [
          ".doc",
          ".docx",
          ".xls",
          ".xlsx",
          ".ppt",
          ".pptx",
          ".rtf",
          ".pdf",
          ".txt"
        ]
      },
      "selection_cmd": {
        "ScriptBlockText|contains|all": [
          "Get-ChildItem",
          " -Recurse ",
          " -Include "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Screen Capture with CopyFromScreen",
    "id": 1724,
    "status": "test",
    "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation.\nScreen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1113/T1113.md#atomic-test-6---windows-screen-capture-copyfromscreen"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "modified": "2022/07/07",
    "tags": [
      "attack.collection",
      "attack.t1113"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": ".CopyFromScreen"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Clearing Windows Console History",
    "id": 1725,
    "status": "test",
    "description": "Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion.",
    "references": [
      "https://stefanos.cloud/blog/kb/how-to-clear-the-powershell-command-history/",
      "https://www.shellhacks.com/clear-history-powershell/",
      "https://community.sophos.com/sophos-labs/b/blog/posts/powershell-command-history-forensics"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/11/25",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070",
      "attack.t1070.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection1": {
        "ScriptBlockText|contains": "Clear-History"
      },
      "selection2a": {
        "ScriptBlockText|contains": [
          "Remove-Item",
          "rm"
        ]
      },
      "selection2b": {
        "ScriptBlockText|contains": [
          "ConsoleHost_history.txt",
          "(Get-PSReadlineOption).HistorySavePath"
        ]
      },
      "condition": "selection1 or selection2a and selection2b"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Clear PowerShell History - PowerShell",
    "id": 1726,
    "related": [
      {
        "id": "dfba4ce1-e0ea-495f-986e-97140f31af2d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects keywords that could indicate clearing PowerShell history",
    "references": [
      "https://gist.github.com/hook-s3c/7363a856c3cdbadeb71085147f042c1a"
    ],
    "author": "Ilyas Ochkov, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community",
    "date": "2022/01/25",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection1a": {
        "ScriptBlockText|contains": [
          "del",
          "Remove-Item",
          "rm"
        ]
      },
      "selection1b": {
        "ScriptBlockText|contains": "(Get-PSReadlineOption).HistorySavePath"
      },
      "selection_2": {
        "ScriptBlockText|contains|all": [
          "Set-PSReadlineOption",
          "\u00e2\u20ac\u201cHistorySaveStyle",
          "SaveNothing"
        ]
      },
      "selection_3": {
        "ScriptBlockText|contains|all": [
          "Set-PSReadlineOption",
          "-HistorySaveStyle",
          "SaveNothing"
        ]
      },
      "condition": "1 of selection_* or all of selection1*"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Create Scheduled Task",
    "id": 1727,
    "status": "test",
    "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1053.005/T1053.005.md#atomic-test-4---powershell-cmdlet-scheduled-task",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1053.005/T1053.005.md#atomic-test-6---wmi-invoke-cimmethod-scheduled-task"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "tags": [
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": [
          "New-ScheduledTaskAction",
          "New-ScheduledTaskTrigger",
          "New-ScheduledTaskPrincipal",
          "New-ScheduledTaskSettingsSet",
          "New-ScheduledTask",
          "Register-ScheduledTask"
        ]
      },
      "selection_cimmethod": {
        "ScriptBlockText|contains|all": [
          "Invoke-CimMethod",
          "-ClassName",
          "PS_ScheduledTask",
          "-NameSpace",
          "Root\\Microsoft\\Windows\\TaskScheduler"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Computer Discovery And Export Via Get-ADComputer Cmdlet - PowerShell",
    "id": 1728,
    "related": [
      {
        "id": "435e10e4-992a-4281-96f3-38b11106adde",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the Get-ADComputer cmdlet to collect computer information and output it to a file",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html",
      "https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/",
      "https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/17",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-ADComputer ",
          " -Filter \\*"
        ],
        "ScriptBlockText|contains": [
          " | Select ",
          "Out-File",
          "Set-Content",
          "Add-Content"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate admin scripts may use the same technique, it's better to exclude specific computers or users who execute these commands or scripts often"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Install a DLL in System Directory",
    "id": 1729,
    "status": "test",
    "description": "Uses PowerShell to install/copy a file into a system directory such as \"System32\" or \"SysWOW64\"",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1556.002/T1556.002.md#atomic-test-1---install-and-register-password-filter-dll"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/27",
    "modified": "2024/01/22",
    "tags": [
      "attack.credential_access",
      "attack.t1556.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|re": "(Copy-Item|cpi) .{2,128} -Destination .{1,32}\\\\Windows\\\\(System32|SysWOW64)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Registry-Free Process Scope COR_PROFILER",
    "id": 1730,
    "status": "test",
    "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.\nThe COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR).\nThese profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.\n(Citation: Microsoft Profiling Mar 2017)\n(Citation: Microsoft COR_PROFILER Feb 2013)\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.012/T1574.012.md#atomic-test-3---registry-free-process-scope-cor_profiler"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "tags": [
      "attack.persistence",
      "attack.t1574.012"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "$env:COR_ENABLE_PROFILING",
          "$env:COR_PROFILER",
          "$env:COR_PROFILER_PATH"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Create Local User",
    "id": 1731,
    "status": "test",
    "description": "Detects creation of a local user via PowerShell",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1136.001/T1136.001.md"
    ],
    "author": "@ROxPinTeddy",
    "date": "2020/04/11",
    "modified": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.persistence",
      "attack.t1136.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "New-LocalUser"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate user creation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Create Volume Shadow Copy with Powershell",
    "id": 1732,
    "status": "test",
    "description": "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information",
    "references": [
      "https://attack.mitre.org/datasources/DS0005/",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-wmiobject?view=powershell-5.1&viewFallbackFrom=powershell-7"
    ],
    "author": "frack113",
    "date": "2022/01/12",
    "tags": [
      "attack.credential_access",
      "attack.t1003.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "win32_shadowcopy",
          ").Create(",
          "ClientAccessible"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell Detect Virtualization Environment",
    "id": 1733,
    "status": "test",
    "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments.\nThis may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1497.001/T1497.001.md",
      "https://techgenix.com/malicious-powershell-scripts-evade-detection/"
    ],
    "author": "frack113, Duc.Le-GTSC",
    "date": "2021/08/03",
    "modified": "2022/03/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1497.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_action": {
        "ScriptBlockText|contains": [
          "Get-WmiObject",
          "gwmi"
        ]
      },
      "selection_module": {
        "ScriptBlockText|contains": [
          "MSAcpi_ThermalZoneTemperature",
          "Win32_ComputerSystem"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DirectorySearcher Powershell Exploitation",
    "id": 1734,
    "status": "test",
    "description": "Enumerates Active Directory to determine computers that are joined to the domain",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md#atomic-test-15---enumerate-domain-computers-within-active-directory-using-directorysearcher"
    ],
    "author": "frack113",
    "date": "2022/02/12",
    "tags": [
      "attack.discovery",
      "attack.t1018"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-Object ",
          "System.DirectoryServices.DirectorySearcher",
          ".PropertiesToLoad.Add",
          ".findall()",
          "Properties.name"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Manipulation of User Computer or Group Security Principals Across AD",
    "id": 1735,
    "status": "test",
    "description": "Adversaries may create a domain account to maintain access to victim systems.\nDomain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain..\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1136.002/T1136.002.md#atomic-test-3---create-a-new-domain-account-using-powershell",
      "https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.accountmanagement?view=dotnet-plat-ext-6.0"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "tags": [
      "attack.persistence",
      "attack.t1136.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "System.DirectoryServices.AccountManagement"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Powershell Command History",
    "id": 1736,
    "status": "test",
    "description": "Detects scripts or commands that disabled the Powershell command history by removing psreadline module",
    "references": [
      "https://twitter.com/DissectMalware/status/1062879286749773824"
    ],
    "author": "Ali Alwashali",
    "date": "2022/08/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Remove-Module",
          "psreadline"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate script that disables the command history"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable-WindowsOptionalFeature Command PowerShell",
    "id": 1737,
    "status": "test",
    "description": "Detect built in PowerShell cmdlet Disable-WindowsOptionalFeature, Deployment Image Servicing and Management tool.\nSimilar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/5b67c9b141fa3918017f8fa44f2f88f0b1ecb9e1/atomics/T1562.001/T1562.001.md",
      "https://docs.microsoft.com/en-us/powershell/module/dism/disable-windowsoptionalfeature?view=windowsserver2022-ps"
    ],
    "author": "frack113",
    "date": "2022/09/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmd": {
        "ScriptBlockText|contains|all": [
          "Disable-WindowsOptionalFeature",
          "-Online",
          "-FeatureName"
        ]
      },
      "selection_feature": {
        "ScriptBlockText|contains": [
          "Windows-Defender-Gui",
          "Windows-Defender-Features",
          "Windows-Defender",
          "Windows-Defender-ApplicationGuard"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential In-Memory Execution Using Reflection.Assembly",
    "id": 1738,
    "status": "test",
    "description": "Detects usage of \"Reflection.Assembly\" load functions to dynamically load assemblies in memory",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=50"
    ],
    "author": "frack113",
    "date": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1620"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Script Block Logging must be enable"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "[Reflection.Assembly]::load"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the library"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential COM Objects Download Cradles Usage - PS Script",
    "id": 1739,
    "related": [
      {
        "id": "02b64f1b-3f33-4e67-aede-ef3b0a5a8fcf",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of COM objects that can be abused to download files in PowerShell by CLSID",
    "references": [
      "https://learn.microsoft.com/en-us/dotnet/api/system.type.gettypefromclsid?view=net-7.0",
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=57"
    ],
    "author": "frack113",
    "date": "2022/12/25",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Script Block Logging must be enable"
    },
    "detection": {
      "selection_1": {
        "ScriptBlockText|contains": "[Type]::GetTypeFromCLSID("
      },
      "selection_2": {
        "ScriptBlockText|contains": [
          "0002DF01-0000-0000-C000-000000000046",
          "F6D90F16-9C73-11D3-B32E-00C04F990BB4",
          "F5078F35-C551-11D3-89B9-0000F81FE221",
          "88d96a0a-f192-11d4-a65f-0040963251e5",
          "AFBA6B42-5692-48EA-8141-DC517DCF0EF1",
          "AFB40FFD-B609-40A3-9828-F88BBE11E4E3",
          "88d96a0b-f192-11d4-a65f-0040963251e5",
          "2087c2f4-2cef-4953-a8ab-66779b670495",
          "000209FF-0000-0000-C000-000000000046",
          "00024500-0000-0000-C000-000000000046"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use of the library"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Dump Credentials from Windows Credential Manager With PowerShell",
    "id": 1740,
    "status": "test",
    "description": "Adversaries may search for common password storage locations to obtain user credentials.\nPasswords are stored in several places on a system, depending on the operating system or application holding the credentials.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1555/T1555.md"
    ],
    "author": "frack113",
    "date": "2021/12/20",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1555"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_kiddie": {
        "ScriptBlockText|contains": [
          "Get-PasswordVaultCredentials",
          "Get-CredManCreds"
        ]
      },
      "selection_rename_Password": {
        "ScriptBlockText|contains|all": [
          "New-Object",
          "Windows.Security.Credentials.PasswordVault"
        ]
      },
      "selection_rename_credman": {
        "ScriptBlockText|contains|all": [
          "New-Object",
          "Microsoft.CSharp.CSharpCodeProvider",
          "[System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())",
          "Collections.ArrayList",
          "System.CodeDom.Compiler.CompilerParameters"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Enable Windows Remote Management",
    "id": 1741,
    "status": "test",
    "description": "Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.006/T1021.006.md#atomic-test-1---enable-windows-remote-management",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": "Enable-PSRemoting "
      },
      "condition": "selection_cmdlet"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Suspicious Windows Feature Enabled",
    "id": 1742,
    "related": [
      {
        "id": "c740d4cf-a1e9-41de-bb16-8a46a4f57918",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the built-in PowerShell cmdlet \"Enable-WindowsOptionalFeature\" used as a Deployment Image Servicing and Management tool.\nSimilar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images\n",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/dism/enable-windowsoptionalfeature?view=windowsserver2022-ps",
      "https://learn.microsoft.com/en-us/windows/win32/projfs/enabling-windows-projected-file-system",
      "https://learn.microsoft.com/en-us/windows/wsl/install-on-server"
    ],
    "author": "frack113",
    "date": "2022/09/10",
    "modified": "2022/12/29",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmd": {
        "ScriptBlockText|contains|all": [
          "Enable-WindowsOptionalFeature",
          "-Online",
          "-FeatureName"
        ]
      },
      "selection_feature": {
        "ScriptBlockText|contains": [
          "TelnetServer",
          "Internet-Explorer-Optional-amd64",
          "TFTP",
          "SMB1Protocol",
          "Client-ProjFS",
          "Microsoft-Windows-Subsystem-Linux"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate usage of the features listed in the rule."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Enumerate Credentials from Windows Credential Manager With PowerShell",
    "id": 1743,
    "status": "test",
    "description": "Adversaries may search for common password storage locations to obtain user credentials.\nPasswords are stored in several places on a system, depending on the operating system or application holding the credentials.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1555/T1555.md"
    ],
    "author": "frack113",
    "date": "2021/12/20",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1555"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmd": {
        "ScriptBlockText|contains|all": [
          "vaultcmd",
          "/listcreds:"
        ]
      },
      "selection_option": {
        "ScriptBlockText|contains": [
          "Windows Credentials",
          "Web Credentials"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Mailbox SMTP Forward Rule",
    "id": 1744,
    "status": "test",
    "description": "Detects usage of the powerShell Set-Mailbox Cmdlet to set-up an SMTP forwarding rule.",
    "references": [
      "https://m365internals.com/2022/10/07/hunting-in-on-premises-exchange-server-logs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/26",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Set-Mailbox ",
          " -DeliverToMailboxAndForward ",
          " -ForwardingSmtpAddress "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of the cmdlet to forward emails"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Certificate Exported Via PowerShell - ScriptBlock",
    "id": 1745,
    "related": [
      {
        "id": "9e716b33-63b2-46da-86a4-bd3c3b9b5dfb",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects calls to cmdlets inside of PowerShell scripts that are used to export certificates from the local certificate store. Threat actors were seen abusing this to steal private keys from compromised machines.",
    "references": [
      "https://us-cert.cisa.gov/ncas/analysis-reports/ar21-112a",
      "https://docs.microsoft.com/en-us/powershell/module/pki/export-pfxcertificate",
      "https://www.splunk.com/en_us/blog/security/breaking-the-chain-defending-against-certificate-services-abuse.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/04/23",
    "modified": "2023/05/18",
    "tags": [
      "attack.credential_access",
      "attack.t1552.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Export-PfxCertificate",
          "Export-Certificate"
        ]
      },
      "filter_optional_module_export": {
        "ScriptBlockText|contains": "CmdletsToExport = @("
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Legitimate certificate exports by administrators. Additional filters might be required."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious FromBase64String Usage On Gzip Archive - Ps Script",
    "id": 1746,
    "related": [
      {
        "id": "d75d6b6b-adb9-48f7-824b-ac2e786efe1f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects attempts of decoding a base64 Gzip archive in a PowerShell script. This technique is often used as a method to load malicious content into memory afterward.",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=43"
    ],
    "author": "frack113",
    "date": "2022/12/23",
    "tags": [
      "attack.command_and_control",
      "attack.t1132.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "FromBase64String",
          "MemoryStream",
          "H4sI"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Service Registry Permissions Weakness Check",
    "id": 1747,
    "status": "test",
    "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.\nAdversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.\nWindows stores local service configuration information in the Registry under HKLM\\SYSTEM\\CurrentControlSet\\Services\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.011/T1574.011.md#atomic-test-1---service-registry-permissions-weakness",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/get-acl?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "tags": [
      "attack.persistence",
      "attack.t1574.011",
      "stp.2a"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "get-acl",
          "REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Active Directory Computers Enumeration With Get-AdComputer",
    "id": 1748,
    "status": "experimental",
    "description": "Detects usage of the \"Get-AdComputer\" to enumerate Computers or properties within Active Directory.",
    "references": [
      "https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adcomputer",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/02cb591f75064ffe1e0df9ac3ed5972a2e491c97/atomics/T1087.002/T1087.002.md"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "modified": "2023/07/08",
    "tags": [
      "attack.discovery",
      "attack.t1018",
      "attack.t1087.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": "Get-AdComputer "
      },
      "selection_option": {
        "ScriptBlockText|contains": [
          "-Filter ",
          "-LDAPFilter ",
          "-Properties "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Active Directory Group Enumeration With Get-AdGroup",
    "id": 1749,
    "status": "test",
    "description": "Detects usage of the \"Get-AdGroup\" cmdlet to enumerate Groups within Active Directory",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "modified": "2022/11/17",
    "tags": [
      "attack.discovery",
      "attack.t1069.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-AdGroup ",
          "-Filter"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Get-ADReplAccount",
    "id": 1750,
    "status": "test",
    "description": "The DSInternals PowerShell Module exposes several internal features of Active Directory and Azure Active Directory.\nThese include FIDO2 and NGC key auditing, offline ntds.dit file manipulation, password auditing, DC recovery from IFM backups and password hash calculation.\n",
    "references": [
      "https://www.powershellgallery.com/packages/DSInternals",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.006/T1003.006.md#atomic-test-2---run-dsinternals-get-adreplaccount"
    ],
    "author": "frack113",
    "date": "2022/02/06",
    "tags": [
      "attack.credential_access",
      "attack.t1003.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-ADReplAccount",
          "-All ",
          "-Server "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Automated Collection Bookmarks Using Get-ChildItem PowerShell",
    "id": 1751,
    "status": "test",
    "description": "Adversaries may enumerate browser bookmarks to learn more about compromised hosts.\nBrowser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about\ninternal network resources such as servers, tools/dashboards, or other related infrastructure.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1217/T1217.md"
    ],
    "author": "frack113",
    "date": "2021/12/13",
    "modified": "2022/12/25",
    "tags": [
      "attack.discovery",
      "attack.t1217"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-ChildItem",
          " -Recurse ",
          " -Path ",
          " -Filter Bookmarks",
          " -ErrorAction SilentlyContinue",
          " -Force"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Security Software Discovery Via Powershell Script",
    "id": 1752,
    "status": "experimental",
    "description": "Detects calls to \"get-process\" where the output is piped to a \"where-object\" filter to search for security solution processes.\nAdversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1518.001/T1518.001.md#atomic-test-2---security-software-discovery---powershell"
    ],
    "author": "frack113, Anish Bogati, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/12/16",
    "modified": "2023/10/24",
    "tags": [
      "attack.discovery",
      "attack.t1518.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": [
          "get-process | \\?",
          "get-process | where",
          "gps | \\?",
          "gps | where"
        ]
      },
      "selection_field": {
        "ScriptBlockText|contains": [
          "Company -like",
          "Description -like",
          "Name -like",
          "Path -like",
          "Product -like"
        ]
      },
      "selection_keywords": {
        "ScriptBlockText|contains": [
          "\\*avira\\*",
          "\\*carbonblack\\*",
          "\\*cylance\\*",
          "\\*defender\\*",
          "\\*kaspersky\\*",
          "\\*malware\\*",
          "\\*sentinel\\*",
          "\\*symantec\\*",
          "\\*virus\\*"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "False positives might occur due to the nature of the ScriptBlock being ingested as a big blob. Initial tuning is required.",
      "As the \"selection_cmdlet\" is common in scripts the matching engine might slow down the search. Change into regex or a more accurate string to avoid heavy resource consumption if experienced"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "HackTool - Rubeus Execution - ScriptBlock",
    "id": 1753,
    "related": [
      {
        "id": "7ec2c172-dceb-4c10-92c9-87c1881b7e18",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects the execution of the hacktool Rubeus using specific command line flags",
    "references": [
      "https://blog.harmj0y.net/redteaming/from-kekeo-to-rubeus",
      "https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html",
      "https://github.com/GhostPack/Rubeus"
    ],
    "author": "Christian Burkard (Nextron Systems), Florian Roth (Nextron Systems)",
    "date": "2023/04/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003",
      "attack.t1558.003",
      "attack.lateral_movement",
      "attack.t1550.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "asreproast ",
          "dump /service:krbtgt ",
          "dump /luid:0x",
          "kerberoast ",
          "createnetonly /program:",
          "ptt /ticket:",
          "/impersonateuser:",
          "renew /ticket:",
          "asktgt /user:",
          "harvest /interval:",
          "s4u /user:",
          "s4u /ticket:",
          "hash /password:",
          "golden /aes256:",
          "silver /user:"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "HackTool - WinPwn Execution - ScriptBlock",
    "id": 1754,
    "related": [
      {
        "id": "d557dc06-62e8-4468-a8e8-7984124908ce",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects scriptblock text keywords indicative of potential usge of the tool WinPwn. A tool for Windows and Active Directory reconnaissance and exploitation.\n",
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/12/04",
    "references": [
      "https://github.com/S3cur3Th1sSh1t/WinPwn",
      "https://www.publicnow.com/view/EB87DB49C654D9B63995FAD4C9DE3D3CC4F6C3ED?1671634841",
      "https://reconshell.com/winpwn-tool-for-internal-windows-pentesting-and-ad-security/",
      "https://github.com/redcanaryco/atomic-red-team/blob/4d6c4e8e23d465af7a2388620cfe3f8c76e16cf0/atomics/T1082/T1082.md",
      "https://grep.app/search?q=winpwn&filter[repo][0]=redcanaryco/atomic-red-team"
    ],
    "tags": [
      "attack.credential_access",
      "attack.defense_evasion",
      "attack.discovery",
      "attack.execution",
      "attack.privilege_escalation",
      "attack.t1046",
      "attack.t1082",
      "attack.t1106",
      "attack.t1518",
      "attack.t1548.002",
      "attack.t1552.001",
      "attack.t1555",
      "attack.t1555.003"
    ],
    "logsource": {
      "category": "ps_script",
      "product": "windows",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Offline_Winpwn",
          "WinPwn ",
          "WinPwn.exe",
          "WinPwn.ps1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "As the script block is a blob of text. False positive may occur with scripts that contain the keyword as a reference or simply use it for detection."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Hotfix Enumeration",
    "id": 1755,
    "status": "test",
    "description": "Detects call to \"Win32_QuickFixEngineering\" in order to enumerate installed hotfixes often used in \"enum\" scripts by attackers",
    "references": [
      "https://github.com/411Hall/JAWS/blob/233f142fcb1488172aa74228a666f6b3c5c48f1d/jaws-enum.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/21",
    "tags": [
      "attack.discovery"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Win32_QuickFixEngineering",
          "HotFixID"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administration scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell ICMP Exfiltration",
    "id": 1756,
    "status": "test",
    "description": "Detects Exfiltration Over Alternative Protocol - ICMP. Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1048.003/T1048.003.md#atomic-test-2---exfiltration-over-alternative-protocol---icmp"
    ],
    "author": "Bartlomiej Czyz @bczyz1, oscd.community",
    "date": "2020/10/10",
    "modified": "2022/12/25",
    "tags": [
      "attack.exfiltration",
      "attack.t1048.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-Object",
          "System.Net.NetworkInformation.Ping",
          ".Send("
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of System.Net.NetworkInformation.Ping class"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Import PowerShell Modules From Suspicious Directories",
    "id": 1757,
    "related": [
      {
        "id": "c31364f7-8be6-4b77-8483-dd2b5a7b69a3",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects powershell scripts that import modules from suspicious directories",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/07",
    "modified": "2023/01/10",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Import-Module \"$Env:Temp\\",
          "Import-Module '$Env:Temp\\",
          "Import-Module $Env:Temp\\",
          "Import-Module \"$Env:Appdata\\",
          "Import-Module '$Env:Appdata\\",
          "Import-Module $Env:Appdata\\",
          "Import-Module C:\\Users\\Public\\",
          "ipmo \"$Env:Temp\\",
          "ipmo '$Env:Temp\\",
          "ipmo $Env:Temp\\",
          "ipmo \"$Env:Appdata\\",
          "ipmo '$Env:Appdata\\",
          "ipmo $Env:Appdata\\",
          "ipmo C:\\Users\\Public\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Unsigned AppX Installation Attempt Using Add-AppxPackage - PsScript",
    "id": 1758,
    "related": [
      {
        "id": "37651c2a-42cd-4a69-ae0d-22a4349aa04a",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Add-AppxPackage\" or it's alias \"Add-AppPackage\" to install unsigned AppX packages",
    "references": [
      "https://learn.microsoft.com/en-us/windows/msix/package/unsigned-package",
      "https://twitter.com/WindowsDocs/status/1620078135080325122"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/31",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Script Block Logging must be enable"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": [
          "Add-AppPackage ",
          "Add-AppxPackage "
        ]
      },
      "selection_flag": {
        "ScriptBlockText|contains": " -AllowUnsigned"
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Installation of unsigned packages for testing purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Execute Invoke-command on Remote Host",
    "id": 1759,
    "status": "test",
    "description": "Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.006/T1021.006.md#atomic-test-2---invoke-command",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/invoke-command?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains|all": [
          "invoke-command ",
          " -ComputerName "
        ]
      },
      "condition": "selection_cmdlet"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell DNSExfiltration",
    "id": 1760,
    "status": "test",
    "description": "DNSExfiltrator allows for transferring (exfiltrate) a file over a DNS request covert channel",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1048/T1048.md#atomic-test-3---dnsexfiltration-doh",
      "https://github.com/Arno0x/DNSExfiltrator"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "tags": [
      "attack.exfiltration",
      "attack.t1048"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": [
        {
          "ScriptBlockText|contains": "Invoke-DNSExfiltrator"
        },
        {
          "ScriptBlockText|contains|all": [
            " -i ",
            " -d ",
            " -p ",
            " -doh ",
            " -t "
          ]
        }
      ],
      "condition": "selection_cmdlet"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation CLIP+ Launcher - PowerShell",
    "id": 1761,
    "status": "test",
    "description": "Detects Obfuscated use of Clip.exe to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|re": ".*cmd.{0,5}(?:/c|/r).+clip(?:\\.exe)?.{0,4}&&.+clipboard]::\\(\\s\\\\\"\\{\\d\\}.+-f.+\""
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Obfuscated IEX Invocation - PowerShell",
    "id": 1762,
    "status": "test",
    "description": "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block \\u2014",
    "references": [
      "https://github.com/danielbohannon/Invoke-Obfuscation/blob/f20e7f843edd0a3a7716736e9eddfa423395dd26/Out-ObfuscatedStringCommand.ps1#L873-L888"
    ],
    "author": "Daniel Bohannon (@Mandiant/@FireEye), oscd.community",
    "date": "2019/11/08",
    "modified": "2022/12/31",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_iex": [
        {
          "ScriptBlockText|re": "\\$PSHome\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$PSHome\\["
        },
        {
          "ScriptBlockText|re": "\\$ShellId\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$ShellId\\["
        },
        {
          "ScriptBlockText|re": "\\$env:Public\\[\\s*\\d{1,3}\\s*\\]\\s*\\+\\s*\\$env:Public\\["
        },
        {
          "ScriptBlockText|re": "\\$env:ComSpec\\[(\\s*\\d{1,3}\\s*,){2}"
        },
        {
          "ScriptBlockText|re": "\\*mdr\\*\\W\\s*\\)\\.Name"
        },
        {
          "ScriptBlockText|re": "\\$VerbosePreference\\.ToString\\("
        }
      ],
      "condition": "selection_iex"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation STDIN+ Launcher - Powershell",
    "id": 1763,
    "status": "test",
    "description": "Detects Obfuscated use of stdin to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/12/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|re": ".*cmd.{0,5}(?:/c|/r).+powershell.+(?:\\$?\\{?input\\}?|noexit).+\""
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR+ Launcher - PowerShell",
    "id": 1764,
    "status": "test",
    "description": "Detects Obfuscated use of Environment Variables to execute PowerShell",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Jonathan Cheong, oscd.community",
    "date": "2020/10/15",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|re": ".*cmd.{0,5}(?:/c|/r)(?:\\s|)\"set\\s[a-zA-Z]{3,6}.*(?:\\{\\d\\}){1,}\\\\\"\\s+?-f(?:.*\\)){1,}.*\""
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation COMPRESS OBFUSCATION - PowerShell",
    "id": 1765,
    "status": "test",
    "description": "Detects Obfuscated Powershell via COMPRESS OBFUSCATION",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|contains|all": [
          "new-object",
          "text.encoding]::ascii"
        ],
        "ScriptBlockText|contains": [
          "system.io.compression.deflatestream",
          "system.io.streamreader"
        ],
        "ScriptBlockText|endswith": "readtoend"
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation RUNDLL LAUNCHER - PowerShell",
    "id": 1766,
    "status": "test",
    "description": "Detects Obfuscated Powershell via RUNDLL LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/18",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|contains|all": [
          "rundll32.exe",
          "shell32.dll",
          "shellexec_rundll",
          "powershell"
        ]
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Stdin - Powershell",
    "id": 1767,
    "status": "test",
    "description": "Detects Obfuscated Powershell via Stdin in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/12",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|re": "(?i).*(set).*&&\\s?set.*(environment|invoke|\\$\\{?input).*&&.*\""
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Clip - Powershell",
    "id": 1768,
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Clip.exe in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/09",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|re": "(?i).*?echo.*clip.*&&.*(Clipboard|i`?n`?v`?o`?k`?e`?).*"
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use MSHTA - PowerShell",
    "id": 1769,
    "status": "test",
    "description": "Detects Obfuscated Powershell via use MSHTA in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/08",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|contains|all": [
          "set",
          "&&",
          "mshta",
          "vbscript:createobject",
          ".run",
          "(window.close)"
        ]
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation Via Use Rundll32 - PowerShell",
    "id": 1770,
    "status": "test",
    "description": "Detects Obfuscated Powershell via use Rundll32 in Scripts",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2019/10/08",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|contains|all": [
          "&&",
          "rundll32",
          "shell32.dll",
          "shellexec_rundll"
        ],
        "ScriptBlockText|contains": [
          "value",
          "invoke",
          "comspec",
          "iex"
        ]
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION - PowerShell",
    "id": 1771,
    "status": "test",
    "description": "Detects Obfuscated Powershell via VAR++ LAUNCHER",
    "references": [
      "https://github.com/SigmaHQ/sigma/issues/1009"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2020/10/13",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_4104": {
        "ScriptBlockText|re": "(?i).*&&set.*(\\{\\d\\}){2,}\\\\\"\\s+?-f.*&&.*cmd.*/c"
      },
      "condition": "selection_4104"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell Keylogging",
    "id": 1772,
    "status": "test",
    "description": "Adversaries may log user keystrokes to intercept credentials as the user types them.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.001/src/Get-Keystrokes.ps1"
    ],
    "author": "frack113",
    "date": "2021/07/30",
    "modified": "2022/07/11",
    "tags": [
      "attack.collection",
      "attack.t1056.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_basic": {
        "ScriptBlockText|contains": "Get-Keystrokes"
      },
      "selection_high": {
        "ScriptBlockText|contains|all": [
          "Get-ProcAddress user32.dll GetAsyncKeyState",
          "Get-ProcAddress user32.dll GetForegroundWindow"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell LocalAccount Manipulation",
    "id": 1773,
    "status": "test",
    "description": "Adversaries may manipulate accounts to maintain access to victim systems.\nAccount manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1098/T1098.md#atomic-test-1---admin-account-manipulate",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.localaccounts/?view=powershell-5.1"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Disable-LocalUser",
          "Enable-LocalUser",
          "Get-LocalUser",
          "Set-LocalUser",
          "New-LocalUser",
          "Rename-LocalUser",
          "Remove-LocalUser"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Mailbox Export to Share - PS",
    "id": 1774,
    "related": [
      {
        "id": "889719ef-dd62-43df-86c3-768fb08dc7c0",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects usage of the powerShell New-MailboxExportRequest Cmdlet to exports a mailbox to a remote or local share, as used in ProxyShell exploitations",
    "references": [
      "https://youtu.be/5mqid-7zp8k?t=2481",
      "https://blog.orange.tw/2021/08/proxylogon-a-new-attack-surface-on-ms-exchange-part-1.html",
      "https://peterjson.medium.com/reproducing-the-proxyshell-pwn2own-exploit-49743a4ea9a1",
      "https://m365internals.com/2022/10/07/hunting-in-on-premises-exchange-server-logs/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/26",
    "tags": [
      "attack.exfiltration"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-MailboxExportRequest",
          " -Mailbox ",
          " -FilePath \\\\\\\\"
        ]
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Malicious PowerShell Commandlets - ScriptBlock",
    "id": 1775,
    "related": [
      {
        "id": "7d0d0329-0ef1-4e84-a9f5-49500f9d7c6c",
        "type": "similar"
      },
      {
        "id": "02030f2f-6199-49ec-b258-ea71b07e03dc",
        "type": "similar"
      },
      {
        "id": "6d3f1399-a81c-4409-aff3-1ecfe9330baf",
        "type": "obsoletes"
      },
      {
        "id": "83083ac6-1816-4e76-97d7-59af9a9ae46e",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks",
    "references": [
      "https://adsecurity.org/?p=2921",
      "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries",
      "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1",
      "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1",
      "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1",
      "https://github.com/dafthack/DomainPasswordSpray/blob/b13d64a5834694aa73fd2aea9911a83027c465a7/DomainPasswordSpray.ps1",
      "https://unit42.paloaltonetworks.com/threat-assessment-black-basta-ransomware/",
      "https://research.nccgroup.com/2022/06/06/shining-the-light-on-black-basta/",
      "https://github.com/calebstewart/CVE-2021-1675",
      "https://github.com/BloodHoundAD/BloodHound/blob/0927441f67161cc6dc08a53c63ceb8e333f55874/Collectors/AzureHound.ps1",
      "https://bloodhound.readthedocs.io/en/latest/data-collection/azurehound.html",
      "https://github.com/HarmJ0y/DAMP",
      "https://github.com/samratashok/nishang",
      "https://github.com/DarkCoderSc/PowerRunAsSystem/",
      "https://github.com/besimorhino/powercat",
      "https://github.com/Kevin-Robertson/Powermad",
      "https://github.com/adrecon/ADRecon",
      "https://github.com/adrecon/AzureADRecon"
    ],
    "author": "Sean Metcalf, Florian Roth, Bartlomiej Czyz @bczyz1, oscd.community, Nasreddine Bencherchali, Tim Shelton, Mustafa Kaan Demir, Georg Lauenstein, Max Altgelt, Tobias Michalski, Austin Songer",
    "date": "2017/03/05",
    "modified": "2024/01/25",
    "tags": [
      "attack.execution",
      "attack.discovery",
      "attack.t1482",
      "attack.t1087",
      "attack.t1087.001",
      "attack.t1087.002",
      "attack.t1069.001",
      "attack.t1069.002",
      "attack.t1069",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Add-Exfiltration",
          "Add-Persistence",
          "Add-RegBackdoor",
          "Add-RemoteRegBackdoor",
          "Add-ScrnSaveBackdoor",
          "ConvertTo-Rc4ByteStream",
          "Decrypt-Hash",
          "Disable-ADIDNSNode",
          "Do-Exfiltration",
          "Enable-ADIDNSNode",
          "Enabled-DuplicateToken",
          "Exploit-Jboss",
          "Export-ADRCSV",
          "Export-ADRExcel",
          "Export-ADRHTML",
          "Export-ADRJSON",
          "Export-ADRXML",
          "Find-Fruit",
          "Find-GPOLocation",
          "Find-TrustedDocuments",
          "Get-ADIDNSNodeAttribute",
          "Get-ADIDNSNodeOwner",
          "Get-ADIDNSNodeTombstoned",
          "Get-ADIDNSPermission",
          "Get-ADIDNSZone",
          "Get-ChromeDump",
          "Get-ClipboardContents",
          "Get-FoxDump",
          "Get-GPPPassword",
          "Get-IndexedItem",
          "Get-KerberosAESKey",
          "Get-Keystrokes",
          "Get-LSASecret",
          "Get-PassHashes",
          "Get-RegAlwaysInstallElevated",
          "Get-RegAutoLogon",
          "Get-RemoteBootKey",
          "Get-RemoteCachedCredential",
          "Get-RemoteLocalAccountHash",
          "Get-RemoteLSAKey",
          "Get-RemoteMachineAccountHash",
          "Get-RemoteNLKMKey",
          "Get-RickAstley",
          "Get-SecurityPackages",
          "Get-ServiceFilePermission",
          "Get-ServicePermission",
          "Get-ServiceUnquoted",
          "Get-SiteListPassword",
          "Get-System",
          "Get-TimedScreenshot",
          "Get-UnattendedInstallFile",
          "Get-Unconstrained",
          "Get-USBKeystrokes",
          "Get-VaultCredential",
          "Get-VulnAutoRun",
          "Get-VulnSchTask",
          "Grant-ADIDNSPermission",
          "Gupt-Backdoor",
          "Invoke-ACLScanner",
          "Invoke-ADRecon",
          "Invoke-ADSBackdoor",
          "Invoke-AgentSmith",
          "Invoke-AllChecks",
          "Invoke-ARPScan",
          "Invoke-AzureHound",
          "Invoke-BackdoorLNK",
          "Invoke-BadPotato",
          "Invoke-BetterSafetyKatz",
          "Invoke-BypassUAC",
          "Invoke-Carbuncle",
          "Invoke-Certify",
          "Invoke-ConPtyShell",
          "Invoke-CredentialInjection",
          "Invoke-DAFT",
          "Invoke-DCSync",
          "Invoke-DinvokeKatz",
          "Invoke-DllInjection",
          "Invoke-DNSUpdate",
          "Invoke-DomainPasswordSpray",
          "Invoke-DowngradeAccount",
          "Invoke-EgressCheck",
          "Invoke-Eyewitness",
          "Invoke-FakeLogonScreen",
          "Invoke-Farmer",
          "Invoke-Get-RBCD-Threaded",
          "Invoke-Gopher",
          "Invoke-Grouper",
          "Invoke-HandleKatz",
          "Invoke-ImpersonatedProcess",
          "Invoke-ImpersonateSystem",
          "Invoke-InteractiveSystemPowerShell",
          "Invoke-Internalmonologue",
          "Invoke-Inveigh",
          "Invoke-InveighRelay",
          "Invoke-KrbRelay",
          "Invoke-LdapSignCheck",
          "Invoke-Lockless",
          "Invoke-MalSCCM",
          "Invoke-Mimikatz",
          "Invoke-Mimikittenz",
          "Invoke-MITM6",
          "Invoke-NanoDump",
          "Invoke-NetRipper",
          "Invoke-Nightmare",
          "Invoke-NinjaCopy",
          "Invoke-OfficeScrape",
          "Invoke-OxidResolver",
          "Invoke-P0wnedshell",
          "Invoke-Paranoia",
          "Invoke-PortScan",
          "Invoke-PoshRatHttp",
          "Invoke-PostExfil",
          "Invoke-PowerDump",
          "Invoke-PowerShellTCP",
          "Invoke-PowerShellWMI",
          "Invoke-PPLDump",
          "Invoke-PsExec",
          "Invoke-PSInject",
          "Invoke-PsUaCme",
          "Invoke-ReflectivePEInjection",
          "Invoke-ReverseDNSLookup",
          "Invoke-Rubeus",
          "Invoke-RunAs",
          "Invoke-SafetyKatz",
          "Invoke-SauronEye",
          "Invoke-SCShell",
          "Invoke-Seatbelt",
          "Invoke-ServiceAbuse",
          "Invoke-ShadowSpray",
          "Invoke-Sharp",
          "Invoke-Shellcode",
          "Invoke-SMBScanner",
          "Invoke-Snaffler",
          "Invoke-Spoolsample",
          "Invoke-SpraySinglePassword",
          "Invoke-SSHCommand",
          "Invoke-StandIn",
          "Invoke-StickyNotesExtract",
          "Invoke-SystemCommand",
          "Invoke-Tasksbackdoor",
          "Invoke-Tater",
          "Invoke-Thunderfox",
          "Invoke-ThunderStruck",
          "Invoke-TokenManipulation",
          "Invoke-Tokenvator",
          "Invoke-TotalExec",
          "Invoke-UrbanBishop",
          "Invoke-UserHunter",
          "Invoke-VoiceTroll",
          "Invoke-Whisker",
          "Invoke-WinEnum",
          "Invoke-winPEAS",
          "Invoke-WireTap",
          "Invoke-WmiCommand",
          "Invoke-WMIExec",
          "Invoke-WScriptBypassUAC",
          "Invoke-Zerologon",
          "MailRaider",
          "New-ADIDNSNode",
          "New-HoneyHash",
          "New-InMemoryModule",
          "New-SOASerialNumberArray",
          "Out-Minidump",
          "PowerBreach",
          "powercat ",
          "PowerUp",
          "PowerView",
          "Remove-ADIDNSNode",
          "Remove-Update",
          "Rename-ADIDNSNode",
          "Revoke-ADIDNSPermission",
          "Set-ADIDNSNode",
          "Show-TargetScreen",
          "Start-CaptureServer",
          "Start-Dnscat2",
          "Start-WebcamRecorder",
          "VolumeShadowCopyTools"
        ]
      },
      "filter_optional_amazon_ec2": {
        "ScriptBlockText|contains": [
          "Get-SystemDriveInfo",
          "C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Module\\"
        ]
      },
      "condition": "selection and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Malicious PowerShell Keywords",
    "id": 1776,
    "status": "test",
    "description": "Detects keywords from well-known PowerShell exploitation frameworks",
    "references": [
      "https://adsecurity.org/?p=2921"
    ],
    "author": "Sean Metcalf (source), Florian Roth (Nextron Systems)",
    "date": "2017/03/05",
    "modified": "2023/06/20",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "AdjustTokenPrivileges",
          "IMAGE_NT_OPTIONAL_HDR64_MAGIC",
          "Metasploit",
          "Microsoft.Win32.UnsafeNativeMethods",
          "Mimikatz",
          "MiniDumpWriteDump",
          "PAGE_EXECUTE_READ",
          "ReadProcessMemory.Invoke",
          "SE_PRIVILEGE_ENABLED",
          "SECURITY_DELEGATION",
          "TOKEN_ADJUST_PRIVILEGES",
          "TOKEN_ALL_ACCESS",
          "TOKEN_ASSIGN_PRIMARY",
          "TOKEN_DUPLICATE",
          "TOKEN_ELEVATION",
          "TOKEN_IMPERSONATE",
          "TOKEN_INFORMATION_CLASS",
          "TOKEN_PRIVILEGES",
          "TOKEN_QUERY"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Depending on the scripts, this rule might require some initial tuning to fit the environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Live Memory Dump Using Powershell",
    "id": 1777,
    "status": "test",
    "description": "Detects usage of a PowerShell command to dump the live memory of a Windows machine",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/storage/get-storagediagnosticinfo"
    ],
    "author": "Max Altgelt (Nextron Systems)",
    "date": "2021/09/21",
    "modified": "2022/12/25",
    "tags": [
      "attack.t1003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-StorageDiagnosticInfo",
          "-IncludeLiveDump"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Diagnostics"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Modify Group Policy Settings - ScriptBlockLogging",
    "id": 1778,
    "related": [
      {
        "id": "ada4b0c4-758b-46ac-9033-9004613a150d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect malicious GPO modifications can be used to implement many other malicious behaviors.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1484.001/T1484.001.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1484.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_path": {
        "ScriptBlockText|contains": "\\SOFTWARE\\Policies\\Microsoft\\Windows\\System"
      },
      "selection_key": {
        "ScriptBlockText|contains": [
          "GroupPolicyRefreshTimeDC",
          "GroupPolicyRefreshTimeOffsetDC",
          "GroupPolicyRefreshTime",
          "GroupPolicyRefreshTimeOffset",
          "EnableSmartScreen",
          "ShellSmartScreenLevel"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell MsXml COM Object",
    "id": 1779,
    "status": "test",
    "description": "Adversaries may abuse PowerShell commands and scripts for execution.\nPowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell)\nAdversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-7---powershell-msxml-com-object---with-prompt",
      "https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ms766431(v=vs.85)",
      "https://www.trendmicro.com/en_id/research/22/e/uncovering-a-kingminer-botnet-attack-using-trend-micro-managed-x.html"
    ],
    "author": "frack113, MatilJ",
    "date": "2022/01/19",
    "modified": "2022/05/19",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-Object",
          "-ComObject",
          "MsXml2.",
          "XmlHttp"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Malicious Nishang PowerShell Commandlets",
    "id": 1780,
    "status": "test",
    "description": "Detects Commandlet names and arguments from the Nishang exploitation framework",
    "references": [
      "https://github.com/samratashok/nishang"
    ],
    "author": "Alec Costello",
    "date": "2019/05/16",
    "modified": "2023/01/16",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Add-ConstrainedDelegationBackdoor",
          "Copy-VSS",
          "Create-MultipleSessions",
          "DataToEncode",
          "DNS_TXT_Pwnage",
          "Do-Exfiltration-Dns",
          "Download_Execute",
          "Download-Execute-PS",
          "DownloadAndExtractFromRemoteRegistry",
          "DumpCerts",
          "DumpCreds",
          "DumpHashes",
          "Enable-DuplicateToken",
          "Enable-Duplication",
          "Execute-Command-MSSQL",
          "Execute-DNSTXT-Code",
          "Execute-OnTime",
          "ExetoText",
          "exfill",
          "ExfilOption",
          "FakeDC",
          "FireBuster",
          "FireListener",
          "Get-Information ",
          "Get-PassHints",
          "Get-Web-Credentials",
          "Get-WebCredentials",
          "Get-WLAN-Keys",
          "HTTP-Backdoor",
          "Invoke-AmsiBypass",
          "Invoke-BruteForce",
          "Invoke-CredentialsPhish",
          "Invoke-Decode",
          "Invoke-Encode",
          "Invoke-Interceptor",
          "Invoke-JSRatRegsvr",
          "Invoke-JSRatRundll",
          "Invoke-MimikatzWDigestDowngrade",
          "Invoke-NetworkRelay",
          "Invoke-PowerShellIcmp",
          "Invoke-PowerShellUdp",
          "Invoke-Prasadhak",
          "Invoke-PSGcat",
          "Invoke-PsGcatAgent",
          "Invoke-SessionGopher",
          "Invoke-SSIDExfil",
          "LoggedKeys",
          "Nishang",
          "NotAllNameSpaces",
          "Out-CHM",
          "OUT-DNSTXT",
          "Out-HTA",
          "Out-RundllCommand",
          "Out-SCF",
          "Out-SCT",
          "Out-Shortcut",
          "Out-WebQuery",
          "Out-Word",
          "Parse_Keys",
          "Password-List",
          "Powerpreter",
          "Remove-Persistence",
          "Remove-PoshRat",
          "Remove-Update",
          "Run-EXEonRemote",
          "Set-DCShadowPermissions",
          "Set-RemotePSRemoting",
          "Set-RemoteWMI",
          "Shellcode32",
          "Shellcode64",
          "StringtoBase64",
          "TexttoExe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NTFS Alternate Data Stream",
    "id": 1781,
    "status": "test",
    "description": "Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.",
    "references": [
      "http://www.powertheshell.com/ntfsstreams/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.004/T1564.004.md"
    ],
    "author": "Sami Ruohonen",
    "date": "2018/07/24",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_content": {
        "ScriptBlockText|contains": [
          "set-content",
          "add-content"
        ]
      },
      "selection_stream": {
        "ScriptBlockText|contains": "-stream"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Code Executed Via Office Add-in XLL File",
    "id": 1782,
    "status": "test",
    "description": "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.\nOffice add-ins can be used to add functionality to Office programs\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1137.006/T1137.006.md"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "tags": [
      "attack.persistence",
      "attack.t1137.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "new-object ",
          "-ComObject ",
          ".application",
          ".RegisterXLL"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Invoke-Mimikatz PowerShell Script",
    "id": 1783,
    "status": "test",
    "description": "Detects Invoke-Mimikatz PowerShell script and alike. Mimikatz is a credential dumper capable of obtaining plaintext Windows account logins and passwords.",
    "references": [
      "https://www.elastic.co/guide/en/security/current/potential-invoke-mimikatz-powershell-script.html#potential-invoke-mimikatz-powershell-script"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/28",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "ps_script",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "ScriptBlockText|contains|all": [
          "DumpCreds",
          "DumpCerts"
        ]
      },
      "selection_2": {
        "ScriptBlockText|contains": "sekurlsa::logonpasswords"
      },
      "selection_3": {
        "ScriptBlockText|contains|all": [
          "crypto::certificates",
          "CERT_SYSTEM_STORE_LOCAL_MACHINE"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Mimikatz can be useful for testing the security of networks"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerView PowerShell Cmdlets - ScriptBlock",
    "id": 1784,
    "related": [
      {
        "id": "b2317cfa-4a47-4ead-b3ff-297438c0bc2d",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects Cmdlet names from PowerView of the PowerSploit exploitation framework.",
    "references": [
      "https://powersploit.readthedocs.io/en/stable/Recon/README",
      "https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon",
      "https://thedfirreport.com/2020/10/08/ryuks-return",
      "https://adsecurity.org/?p=2277"
    ],
    "author": "Bhabesh Raj",
    "date": "2021/05/18",
    "modified": "2023/11/22",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Export-PowerViewCSV",
          "Find-DomainLocalGroupMember",
          "Find-DomainObjectPropertyOutlier",
          "Find-DomainProcess",
          "Find-DomainShare",
          "Find-DomainUserEvent",
          "Find-DomainUserLocation",
          "Find-ForeignGroup",
          "Find-ForeignUser",
          "Find-GPOComputerAdmin",
          "Find-GPOLocation",
          "Find-InterestingDomain",
          "Find-InterestingFile",
          "Find-LocalAdminAccess",
          "Find-ManagedSecurityGroups",
          "Get-CachedRDPConnection",
          "Get-DFSshare",
          "Get-DomainDFSShare",
          "Get-DomainDNSRecord",
          "Get-DomainDNSZone",
          "Get-DomainFileServer",
          "Get-DomainGPOComputerLocalGroupMapping",
          "Get-DomainGPOLocalGroup",
          "Get-DomainGPOUserLocalGroupMapping",
          "Get-LastLoggedOn",
          "Get-LoggedOnLocal",
          "Get-NetFileServer",
          "Get-NetForest",
          "Get-NetGPOGroup",
          "Get-NetProcess",
          "Get-NetRDPSession",
          "Get-RegistryMountedDrive",
          "Get-RegLoggedOn",
          "Get-WMIRegCachedRDPConnection",
          "Get-WMIRegLastLoggedOn",
          "Get-WMIRegMountedDrive",
          "Get-WMIRegProxy",
          "Invoke-ACLScanner",
          "Invoke-CheckLocalAdminAccess",
          "Invoke-EnumerateLocalAdmin",
          "Invoke-EventHunter",
          "Invoke-FileFinder",
          "Invoke-Kerberoast",
          "Invoke-MapDomainTrust",
          "Invoke-ProcessHunter",
          "Invoke-RevertToSelf",
          "Invoke-ShareFinder",
          "Invoke-UserHunter",
          "Invoke-UserImpersonation",
          "Remove-RemoteConnection",
          "Request-SPNTicket",
          "Resolve-IPAddress"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Credential Prompt",
    "id": 1785,
    "status": "test",
    "description": "Detects PowerShell calling a credential prompt",
    "references": [
      "https://twitter.com/JohnLaTwC/status/850381440629981184",
      "https://t.co/ezOTGy1a1G"
    ],
    "author": "John Lambert (idea), Florian Roth (Nextron Systems)",
    "date": "2017/04/09",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "PromptForCredential"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PSAsyncShell - Asynchronous TCP Reverse Shell",
    "id": 1786,
    "status": "test",
    "description": "Detects the use of PSAsyncShell an Asynchronous TCP Reverse Shell written in powershell",
    "references": [
      "https://github.com/JoelGMSec/PSAsyncShell"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/04",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "PSAsyncShell"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell PSAttack",
    "id": 1787,
    "status": "test",
    "description": "Detects the use of PSAttack PowerShell hack tool",
    "references": [
      "https://adsecurity.org/?p=2921"
    ],
    "author": "Sean Metcalf (source), Florian Roth (Nextron Systems)",
    "date": "2017/03/05",
    "modified": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "PS ATTACK!!!"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential RemoteFXvGPUDisablement.EXE Abuse - PowerShell ScriptBlock",
    "id": 1788,
    "related": [
      {
        "id": "a6fc3c46-23b8-4996-9ea2-573f4c4d88c5",
        "type": "similar"
      },
      {
        "id": "f65e22f9-819e-4f96-9c7b-498364ae7a25",
        "type": "similar"
      },
      {
        "id": "38a7625e-b2cb-485d-b83d-aff137d859f4",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects PowerShell module creation where the module Contents are set to \"function Get-VMRemoteFXPhysicalVideoAdapter\". This could be a sign of potential abuse of the \"RemoteFXvGPUDisablement.exe\" binary which is known to be vulnerable to module load-order hijacking.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md",
      "https://github.com/redcanaryco/AtomicTestHarnesses/blob/7e1e4da116801e3d6fcc6bedb207064577e40572/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|startswith": "function Get-VMRemoteFXPhysicalVideoAdapter {"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Remote Session Creation",
    "id": 1789,
    "status": "test",
    "description": "Adversaries may abuse PowerShell commands and scripts for execution.\nPowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-10---powershell-invoke-downloadcradle",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/new-pssession?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2022/01/06",
    "modified": "2023/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-PSSession",
          "-ComputerName "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Request A Single Ticket via PowerShell",
    "id": 1790,
    "status": "test",
    "description": "utilize native PowerShell Identity modules to query the domain to extract the Service Principal Names for a single computer.\nThis behavior is typically used during a kerberos or silver ticket attack.\nA successful execution will output the SPNs for the endpoint in question.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1558.003/T1558.003.md#atomic-test-4---request-a-single-ticket-via-powershell"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "tags": [
      "attack.credential_access",
      "attack.t1558.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "System.IdentityModel.Tokens.KerberosRequestorSecurityToken"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Script With File Hostname Resolving Capabilities",
    "id": 1791,
    "status": "experimental",
    "description": "Detects PowerShell scripts that have capabilities to read files, loop through them and resolve DNS host entries.",
    "references": [
      "https://www.fortypoundhead.com/showcontent.asp?artid=24022",
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/05",
    "tags": [
      "attack.exfiltration",
      "attack.t1020"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-content ",
          "foreach",
          "[System.Net.Dns]::GetHostEntry",
          "Out-File"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "The same functionality can be implemented by admin scripts, correlate with name and creator"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Root Certificate Installed - PowerShell",
    "id": 1792,
    "status": "test",
    "description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.004/T1553.004.md"
    ],
    "author": "oscd.community, @redcanary, Zach Stanford @svch0st",
    "date": "2020/10/10",
    "modified": "2022/12/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection1": {
        "ScriptBlockText|contains|all": [
          "Move-Item",
          "Cert:\\LocalMachine\\Root"
        ]
      },
      "selection2": {
        "ScriptBlockText|contains|all": [
          "Import-Certificate",
          "Cert:\\LocalMachine\\Root"
        ]
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Help Desk or IT may need to manually add a corporate Root CA on occasion. Need to test if GPO push doesn't trigger FP"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Invoke-Item From Mount-DiskImage",
    "id": 1793,
    "status": "test",
    "description": "Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-2---mount-an-iso-image-and-run-executable-from-the-iso",
      "https://docs.microsoft.com/en-us/powershell/module/storage/mount-diskimage?view=windowsserver2022-ps"
    ],
    "author": "frack113",
    "date": "2022/02/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Mount-DiskImage ",
          "-ImagePath ",
          "Get-Volume",
          ".DriveLetter",
          "invoke-item ",
          "):\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Script With File Upload Capabilities",
    "id": 1794,
    "status": "experimental",
    "description": "Detects PowerShell scripts leveraging the \"Invoke-WebRequest\" cmdlet to send data via either \"PUT\" or \"POST\" method.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1020/T1020.md",
      "https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2022/01/07",
    "modified": "2023/05/04",
    "tags": [
      "attack.exfiltration",
      "attack.t1020"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": [
          "Invoke-WebRequest",
          "iwr "
        ]
      },
      "selection_flag": {
        "ScriptBlockText|contains": [
          "-Method Put",
          "-Method Post"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Powershell Exfiltration Over SMTP",
    "id": 1795,
    "status": "test",
    "description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.\nThe data may also be sent to an alternate network location from the main command and control server.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1048.003/T1048.003.md#atomic-test-5---exfiltration-over-alternative-protocol---smtp",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/send-mailmessage?view=powershell-7.2",
      "https://www.ietf.org/rfc/rfc2821.txt"
    ],
    "author": "frack113",
    "date": "2022/09/26",
    "tags": [
      "attack.exfiltration",
      "attack.t1048.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "Send-MailMessage"
      },
      "filter": {
        "ScriptBlockText|contains": "CmdletsToExport"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Sensitive File Discovery",
    "id": 1796,
    "related": [
      {
        "id": "d23f2ba5-9da0-4463-8908-8ee47f614bb9",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detect adversaries enumerate sensitive files",
    "references": [
      "https://twitter.com/malmoeb/status/1570814999370801158"
    ],
    "author": "frack113",
    "date": "2022/09/16",
    "tags": [
      "attack.discovery",
      "attack.t1083"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_action": {
        "ScriptBlockText|contains": [
          "ls",
          "get-childitem",
          "gci"
        ]
      },
      "selection_recurse": {
        "ScriptBlockText|contains": "-recurse"
      },
      "selection_file": {
        "ScriptBlockText|contains": [
          ".pass",
          ".kdbx",
          ".kdb"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Script Change Permission Via Set-Acl - PsScript",
    "id": 1797,
    "related": [
      {
        "id": "0944e002-e3f6-4eb5-bf69-3a3067b53d73",
        "type": "derived"
      },
      {
        "id": "bdeb2cff-af74-4094-8426-724dc937f20a",
        "type": "derived"
      },
      {
        "id": "3bf1d859-3a7e-44cb-8809-a99e066d3478",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects PowerShell scripts set ACL to of a file or a folder",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1222"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Set-Acl ",
          "-AclObject ",
          "-Path "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "PowerShell Set-Acl On Windows Folder - PsScript",
    "id": 1798,
    "related": [
      {
        "id": "cae80281-ef23-44c5-873b-fd48d2666f49",
        "type": "derived"
      },
      {
        "id": "0944e002-e3f6-4eb5-bf69-3a3067b53d73",
        "type": "derived"
      },
      {
        "id": "bdeb2cff-af74-4094-8426-724dc937f20a",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects PowerShell scripts to set the ACL to a file in the Windows folder",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1222"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains|all": [
          "Set-Acl ",
          "-AclObject "
        ]
      },
      "selection_paths": {
        "ScriptBlockText|contains": [
          "-Path \"C:\\Windows",
          "-Path \"C:/Windows",
          "-Path 'C:\\Windows",
          "-Path 'C:/Windows",
          "-Path C:\\\\Windows",
          "-Path C:/Windows",
          "-Path $env:windir",
          "-Path \"$env:windir",
          "-Path '$env:windir"
        ]
      },
      "selection_permissions": {
        "ScriptBlockText|contains": [
          "FullControl",
          "Allow"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change PowerShell Policies to an Insecure Level - PowerShell",
    "id": 1799,
    "related": [
      {
        "id": "cf2e938e-9a3e-4fe8-a347-411642b28a9f",
        "type": "similar"
      },
      {
        "id": "87e3c4e8-a6a8-4ad9-bb4f-46e7ff99a180",
        "type": "similar"
      },
      {
        "id": "fad91067-08c5-4d1a-8d8c-d96a21b37814",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changing the PowerShell script execution policy to a potentially insecure level using the \"Set-ExecutionPolicy\" cmdlet.",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.1",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.1",
      "https://adsecurity.org/?p=2604"
    ],
    "author": "frack113",
    "date": "2021/10/20",
    "modified": "2023/12/14",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_cmdlet": {
        "ScriptBlockText|contains": "Set-ExecutionPolicy"
      },
      "selection_option": {
        "ScriptBlockText|contains": [
          "Unrestricted",
          "bypass"
        ]
      },
      "filter_optional_chocolatey": {
        "ScriptBlockText|contains": [
          "(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')",
          "(New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')"
        ]
      },
      "condition": "all of selection_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Administrator script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell ShellCode",
    "id": 1800,
    "status": "test",
    "description": "Detects Base64 encoded Shellcode",
    "references": [
      "https://twitter.com/cyb3rops/status/1063072865992523776"
    ],
    "author": "David Ledbetter (shellcode), Florian Roth (Nextron Systems)",
    "date": "2018/11/17",
    "modified": "2024/01/25",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1055",
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "OiCAAAAYInlM",
          "OiJAAAAYInlM"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Malicious ShellIntel PowerShell Commandlets",
    "id": 1801,
    "status": "test",
    "description": "Detects Commandlet names from ShellIntel exploitation scripts.",
    "references": [
      "https://github.com/Shellntel/scripts/"
    ],
    "author": "Max Altgelt (Nextron Systems), Tobias Michalski (Nextron Systems)",
    "date": "2021/08/09",
    "modified": "2023/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Invoke-SMBAutoBrute",
          "Invoke-GPOLinks",
          "Invoke-Potato"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Detected Windows Software Discovery - PowerShell",
    "id": 1802,
    "status": "test",
    "description": "Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1518/T1518.md",
      "https://github.com/harleyQu1nn/AggressorScripts"
    ],
    "author": "Nikita Nazarov, oscd.community",
    "date": "2020/10/16",
    "modified": "2022/12/02",
    "tags": [
      "attack.discovery",
      "attack.t1518"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "get-itemProperty",
          "\\software\\",
          "select-object",
          "format-table"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administration activities"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Store File In Alternate Data Stream",
    "id": 1803,
    "status": "test",
    "description": "Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.004/T1564.004.md"
    ],
    "author": "frack113",
    "date": "2021/09/02",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_compspec": {
        "ScriptBlockText|contains|all": [
          "Start-Process",
          "-FilePath \"$env:comspec\" ",
          "-ArgumentList ",
          ">"
        ]
      },
      "condition": "selection_compspec"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Security Descriptors - ScriptBlock",
    "id": 1804,
    "status": "test",
    "description": "Detects usage of certain functions and keywords that are used to manipulate security descriptors in order to potentially set a backdoor. As seen used in the DAMP project.",
    "references": [
      "https://github.com/HarmJ0y/DAMP"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/05",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "win32_Trustee",
          "win32_Ace",
          ".AccessMask",
          ".AceType",
          ".SetSecurityDescriptor"
        ],
        "ScriptBlockText|contains": [
          "\\Lsa\\JD",
          "\\Lsa\\Skew1",
          "\\Lsa\\Data",
          "\\Lsa\\GBG"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "AD Groups Or Users Enumeration Using PowerShell - ScriptBlock",
    "id": 1805,
    "status": "test",
    "description": "Adversaries may attempt to find domain-level groups and permission settings.\nThe knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.\nAdversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.002/T1069.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/15",
    "modified": "2022/12/25",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "test_2": {
        "ScriptBlockText|contains": "get-ADPrincipalGroupMembership"
      },
      "test_7": {
        "ScriptBlockText|contains|all": [
          "get-aduser",
          "-f ",
          "-pr ",
          "DoesNotRequirePreAuth"
        ]
      },
      "condition": "1 of test_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential PowerShell Obfuscation Using Character Join",
    "id": 1806,
    "related": [
      {
        "id": "96cd126d-f970-49c4-848a-da3a09f55c55",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects specific techniques often seen used inside of PowerShell scripts to obfscuate Alias creation",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/09",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1027",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "-Alias",
          " -Value (-join("
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Eventlog Clear",
    "id": 1807,
    "related": [
      {
        "id": "cc36992a-4671-4f21-a91d-6c2b72a2edf5",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects usage of known powershell cmdlets such as \"Clear-EventLog\" to clear the Windows event logs",
    "references": [
      "https://twitter.com/oroneequalsone/status/1568432028361830402",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.001/T1070.001.md",
      "https://eqllib.readthedocs.io/en/latest/analytics/5b223758-07d6-4100-9e11-238cfdd0fe97.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Clear-EventLog ",
          "Remove-EventLog ",
          "Limit-EventLog ",
          "Clear-WinEvent "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare need to clear logs before doing something. Sometimes used by installers or cleaner scripts. The script should be investigated to determine if it's legitimate"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Directory Enumeration",
    "id": 1808,
    "status": "test",
    "description": "Detects technique used by MAZE ransomware to enumerate directories using Powershell",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1083/T1083.md",
      "https://www.mandiant.com/resources/tactics-techniques-procedures-associated-with-maze-ransomware-incidents"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "tags": [
      "attack.discovery",
      "attack.t1083"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "foreach",
          "Get-ChildItem",
          "-Path ",
          "-ErrorAction ",
          "SilentlyContinue",
          "Out-File ",
          "-append"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Download - Powershell Script",
    "id": 1809,
    "related": [
      {
        "id": "65531a81-a694-4e31-ae04-f8ba5bc33759",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell download command",
    "references": [
      "https://learn.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstring?view=net-8.0",
      "https://learn.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfile?view=net-8.0"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/05",
    "modified": "2022/12/02",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "webclient": {
        "ScriptBlockText|contains": "System.Net.WebClient"
      },
      "download": {
        "ScriptBlockText|contains": [
          ".DownloadFile(",
          ".DownloadFileAsync(",
          ".DownloadString(",
          ".DownloadStringAsync("
        ]
      },
      "condition": "webclient and download"
    },
    "falsepositives": [
      "PowerShell scripts that download content from the Internet"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Execute Batch Script",
    "id": 1810,
    "status": "test",
    "description": "Adversaries may abuse the Windows command shell for execution.\nThe Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems.\nThe Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops.\nCommon uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple system\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.003/T1059.003.md#atomic-test-1---create-and-execute-batch-script"
    ],
    "author": "frack113",
    "date": "2022/01/02",
    "tags": [
      "attack.execution",
      "attack.t1059.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_start": {
        "ScriptBlockText|contains": "Start-Process"
      },
      "selection_batch": {
        "ScriptBlockText|contains": [
          ".cmd",
          ".bat"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Extracting Information with PowerShell",
    "id": 1811,
    "status": "test",
    "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials.\nThese can be files created by users to store their own credentials, shared credential stores for a group of individuals,\nconfiguration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1552.001/T1552.001.md"
    ],
    "author": "frack113",
    "date": "2021/12/19",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1552.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "ls",
          " -R",
          "select-string ",
          "-Pattern "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Troubleshooting Pack Cmdlet Execution",
    "id": 1812,
    "status": "test",
    "description": "Detects execution of \"TroubleshootingPack\" cmdlets to leverage CVE-2022-30190 or action similar to \"msdt\" lolbin (as described in LOLBAS)",
    "references": [
      "https://twitter.com/nas_bench/status/1537919885031772161",
      "https://lolbas-project.github.io/lolbas/Binaries/Msdt/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Invoke-TroubleshootingPack",
          "C:\\Windows\\Diagnostics\\System\\PCW",
          "-AnswerFile",
          "-Unattended"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate usage of \"TroubleshootingPack\" cmdlet for troubleshooting purposes"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Get-Process LSASS in ScriptBlock",
    "id": 1813,
    "status": "test",
    "description": "Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity",
    "references": [
      "https://twitter.com/PythonResponder/status/1385064506049630211"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/04/23",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "Get-Process lsass"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate certificate exports invoked by administrators or users (depends on processes in the environment - filter if unusable)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious GetTypeFromCLSID ShellExecute",
    "id": 1814,
    "status": "test",
    "description": "Detects suspicious Powershell code that execute COM Objects",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.015/T1546.015.md#atomic-test-2---powershell-execute-com-object"
    ],
    "author": "frack113",
    "date": "2022/04/02",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "::GetTypeFromCLSID(",
          ".ShellExecute("
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Password Policy Discovery With Get-AdDefaultDomainPasswordPolicy",
    "id": 1815,
    "status": "test",
    "description": "Detetcts PowerShell activity in which Get-Addefaultdomainpasswordpolicy is used to get the default password policy for an Active Directory domain.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1201/T1201.md#atomic-test-9---enumerate-active-directory-password-policy-with-get-addefaultdomainpasswordpolicy",
      "https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "tags": [
      "attack.discovery",
      "attack.t1201"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "Get-AdDefaultDomainPasswordPolicy"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Get Current User",
    "id": 1816,
    "status": "test",
    "description": "Detects the use of PowerShell to identify the current logged user.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1033/T1033.md#atomic-test-4---user-discovery-with-env-vars-powershell-script",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1033/T1033.md#atomic-test-5---getcurrent-user-with-powershell-script"
    ],
    "author": "frack113",
    "date": "2022/04/04",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "[System.Environment]::UserName",
          "$env:UserName",
          "[System.Security.Principal.WindowsIdentity]::GetCurrent()"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious GPO Discovery With Get-GPO",
    "id": 1817,
    "status": "test",
    "description": "Detect use of Get-GPO to get one GPO or all the GPOs in a domain.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1615/T1615.md",
      "https://docs.microsoft.com/en-us/powershell/module/grouppolicy/get-gpo?view=windowsserver2022-ps"
    ],
    "author": "frack113",
    "date": "2022/06/04",
    "tags": [
      "attack.discovery",
      "attack.t1615"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "Get-GPO"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Process Discovery With Get-Process",
    "id": 1818,
    "status": "test",
    "description": "Get the processes that are running on the local computer.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1057/T1057.md#atomic-test-3---process-discovery---get-process",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-process?view=powershell-7"
    ],
    "author": "frack113",
    "date": "2022/03/17",
    "tags": [
      "attack.discovery",
      "attack.t1057"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "Get-Process"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Hyper-V Cmdlets",
    "id": 1819,
    "status": "test",
    "description": "Adversaries may carry out malicious operations using a virtual instance to avoid detection",
    "references": [
      "https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.006/T1564.006.md#atomic-test-3---create-and-start-hyper-v-virtual-machine"
    ],
    "author": "frack113",
    "date": "2022/04/09",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "New-VM",
          "Set-VMFirmware",
          "Start-VM"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Invocations - Generic",
    "id": 1820,
    "related": [
      {
        "id": "3d304fda-78aa-43ed-975c-d740798a49c1",
        "type": "derived"
      },
      {
        "id": "bbb80e91-5746-4fbe-8898-122e2cafdbf4",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell invocation command parameters",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/12",
    "modified": "2023/01/03",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_encoded": {
        "ScriptBlockText|contains": [
          " -enc ",
          " -EncodedCommand ",
          " -ec "
        ]
      },
      "selection_hidden": {
        "ScriptBlockText|contains": [
          " -w hidden ",
          " -window hidden ",
          " -windowstyle hidden ",
          " -w 1 "
        ]
      },
      "selection_noninteractive": {
        "ScriptBlockText|contains": [
          " -noni ",
          " -noninteractive "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Very special / sneaky PowerShell scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell Invocations - Specific",
    "id": 1821,
    "related": [
      {
        "id": "fce5f582-cc00-41e1-941a-c6fabf0fdb8c",
        "type": "obsoletes"
      },
      {
        "id": "8ff28fdd-e2fa-4dfa-aeda-ef3d61c62090",
        "type": "similar"
      },
      {
        "id": "536e2947-3729-478c-9903-745aaffe60d2",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects suspicious PowerShell invocation command parameters",
    "references": [
      "Internal Research"
    ],
    "author": "Florian Roth (Nextron Systems), Jonhnathan Ribeiro",
    "date": "2017/03/05",
    "modified": "2023/01/05",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_convert_b64": {
        "ScriptBlockText|contains|all": [
          "-nop",
          " -w ",
          "hidden",
          " -c ",
          "[Convert]::FromBase64String"
        ]
      },
      "selection_iex_selection": {
        "ScriptBlockText|contains|all": [
          " -w ",
          "hidden",
          "-noni",
          "-nop",
          " -c ",
          "iex",
          "New-Object"
        ]
      },
      "selection_enc_selection": {
        "ScriptBlockText|contains|all": [
          " -w ",
          "hidden",
          "-ep",
          "bypass",
          "-Enc"
        ]
      },
      "selection_reg_selection": {
        "ScriptBlockText|contains|all": [
          "powershell",
          "reg",
          "add",
          "HKCU\\software\\microsoft\\windows\\currentversion\\run"
        ]
      },
      "selection_webclient_selection": {
        "ScriptBlockText|contains|all": [
          "bypass",
          "-noprofile",
          "-windowstyle",
          "hidden",
          "new-object",
          "system.net.webclient",
          ".download"
        ]
      },
      "selection_iex_webclient": {
        "ScriptBlockText|contains|all": [
          "iex",
          "New-Object",
          "Net.WebClient",
          ".Download"
        ]
      },
      "filter_chocolatey": {
        "ScriptBlockText|contains": [
          "(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1",
          "(New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')",
          "Write-ChocolateyWarning"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change User Agents with WebRequest",
    "id": 1822,
    "status": "test",
    "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic.\nCommands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1071.001/T1071.001.md#t1071001---web-protocols"
    ],
    "author": "frack113",
    "date": "2022/01/23",
    "modified": "2023/01/02",
    "tags": [
      "attack.command_and_control",
      "attack.t1071.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Invoke-WebRequest",
          "-UserAgent "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious IO.FileStream",
    "id": 1823,
    "status": "test",
    "description": "Open a handle on the drive volume via the \\\\.\\ DOS device path specifier and perform direct access read of the first few bytes of the volume.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1006/T1006.md"
    ],
    "author": "frack113",
    "date": "2022/01/09",
    "modified": "2022/03/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-Object",
          "IO.FileStream",
          "\\\\\\\\.\\\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Keylogger Activity",
    "id": 1824,
    "status": "test",
    "description": "Detects PowerShell scripts that contains reference to keystroke capturing functions",
    "references": [
      "https://twitter.com/ScumBots/status/1610626724257046529",
      "https://www.virustotal.com/gui/file/d4486b63512755316625230e0c9c81655093be93876e0d80732e7eeaf7d83476/content",
      "https://www.virustotal.com/gui/file/720a7ee9f2178c70501d7e3f4bcc28a4f456e200486dbd401b25af6da3b4da62/content",
      "https://learn.microsoft.com/en-us/dotnet/api/system.windows.input.keyboard.iskeydown?view=windowsdesktop-7.0"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/04",
    "tags": [
      "attack.collection",
      "attack.credential_access",
      "attack.t1056.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "[Windows.Input.Keyboard]::IsKeyDown([System.Windows.Input.Key]::"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Suspicious PowerShell Keywords",
    "id": 1825,
    "status": "test",
    "description": "Detects potentially suspicious keywords that could indicate the use of a PowerShell exploitation framework",
    "references": [
      "https://posts.specterops.io/entering-a-covenant-net-command-and-control-e11038bcf462",
      "https://github.com/PowerShellMafia/PowerSploit/blob/d943001a7defb5e0d1657085a77a0e78609be58f/CodeExecution/Invoke-ReflectivePEInjection.ps1",
      "https://github.com/hlldz/Phant0m/blob/30c2935d8cf4aafda17ee2fab7cd0c4aa9a607c2/old/Invoke-Phant0m.ps1",
      "https://gist.github.com/MHaggis/0dbe00ad401daa7137c81c99c268cfb7"
    ],
    "author": "Florian Roth (Nextron Systems), Perez Diego (@darkquassar), Tuan Le (NCSGroup)",
    "date": "2019/02/11",
    "modified": "2023/04/21",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "System.Reflection.Assembly.Load($",
          "[System.Reflection.Assembly]::Load($",
          "[Reflection.Assembly]::Load($",
          "System.Reflection.AssemblyName",
          "Reflection.Emit.AssemblyBuilderAccess",
          "Reflection.Emit.CustomAttributeBuilder",
          "Runtime.InteropServices.UnmanagedType",
          "Runtime.InteropServices.DllImportAttribute",
          "SuspendThread",
          "rundll32"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Get Local Groups Information - PowerShell",
    "id": 1826,
    "status": "test",
    "description": "Adversaries may attempt to find local system groups and permission settings.\nThe knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.\nAdversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.001/T1069.001.md"
    ],
    "author": "frack113",
    "date": "2021/12/12",
    "modified": "2022/11/25",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "test_3": {
        "ScriptBlockText|contains": [
          "get-localgroup",
          "Get-LocalGroupMember"
        ]
      },
      "test_6": {
        "ScriptBlockText|contains|all": [
          "Get-WMIObject",
          "Win32_Group"
        ]
      },
      "condition": "1 of test_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Powershell Local Email Collection",
    "id": 1827,
    "status": "test",
    "description": "Adversaries may target user email on local systems to collect sensitive information.\nFiles containing email data can be acquired from a users local system, such as Outlook storage or cache files.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1114.001/T1114.001.md"
    ],
    "author": "frack113",
    "date": "2021/07/21",
    "modified": "2022/12/25",
    "tags": [
      "attack.collection",
      "attack.t1114.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Get-Inbox.ps1",
          "Microsoft.Office.Interop.Outlook",
          "Microsoft.Office.Interop.Outlook.olDefaultFolders",
          "-comobject outlook.application"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Deleted Mounted Share",
    "id": 1828,
    "status": "test",
    "description": "Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.005/T1070.005.md"
    ],
    "author": "oscd.community, @redcanary, Zach Stanford @svch0st",
    "date": "2020/10/08",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Remove-SmbShare",
          "Remove-FileShare"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrators or Power users may remove their shares via cmd line"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Mount-DiskImage",
    "id": 1829,
    "status": "test",
    "description": "Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-1---mount-iso-image",
      "https://docs.microsoft.com/en-us/powershell/module/storage/mount-diskimage?view=windowsserver2022-ps"
    ],
    "author": "frack113",
    "date": "2022/02/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Mount-DiskImage ",
          "-ImagePath "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Connection to Remote Account",
    "id": 1830,
    "status": "test",
    "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.\nWithout knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1110.001/T1110.001.md#atomic-test-2---brute-force-credentials-of-single-active-directory-domain-user-via-ldap-against-domain-controller-ntlm-or-kerberos"
    ],
    "author": "frack113",
    "date": "2021/12/27",
    "tags": [
      "attack.credential_access",
      "attack.t1110.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "System.DirectoryServices.Protocols.LdapDirectoryIdentifier",
          "System.Net.NetworkCredential",
          "System.DirectoryServices.Protocols.LdapConnection"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious New-PSDrive to Admin Share",
    "id": 1831,
    "status": "test",
    "description": "Adversaries may use to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.002/T1021.002.md#atomic-test-2---map-admin-share-powershell",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/new-psdrive?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2022/08/13",
    "tags": [
      "attack.lateral_movement",
      "attack.t1021.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "New-PSDrive",
          "-psprovider ",
          "filesystem",
          "-root ",
          "\\\\\\\\",
          "$"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious TCP Tunnel Via PowerShell Script",
    "id": 1832,
    "status": "test",
    "description": "Detects powershell scripts that creates sockets/listeners which could be indicative of tunneling activity",
    "references": [
      "https://github.com/Arno0x/PowerShellScripts/blob/a6b7d5490fbf0b20f91195838f3a11156724b4f7/proxyTunnel.ps1"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/08",
    "tags": [
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "[System.Net.HttpWebRequest]",
          "System.Net.Sockets.TcpListener",
          "AcceptTcpClient"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Recon Information for Export with PowerShell",
    "id": 1833,
    "status": "test",
    "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1119/T1119.md"
    ],
    "author": "frack113",
    "date": "2021/07/30",
    "modified": "2022/12/25",
    "tags": [
      "attack.collection",
      "attack.t1119"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_action": {
        "ScriptBlockText|contains": [
          "Get-Service ",
          "Get-ChildItem ",
          "Get-Process "
        ]
      },
      "selection_redirect": {
        "ScriptBlockText|contains": "> $env:TEMP\\"
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Remove Account From Domain Admin Group",
    "id": 1834,
    "status": "test",
    "description": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users.\nAccounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1531/T1531.md#atomic-test-3---remove-account-from-domain-admin-group"
    ],
    "author": "frack113",
    "date": "2021/12/26",
    "tags": [
      "attack.impact",
      "attack.t1531"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Remove-ADGroupMember",
          "-Identity ",
          "-Members "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Service DACL Modification Via Set-Service Cmdlet - PS",
    "id": 1835,
    "related": [
      {
        "id": "a95b9b42-1308-4735-a1af-abb1c5e6f5ac",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)",
    "references": [
      "https://twitter.com/Alh4zr3d/status/1580925761996828672",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/24",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_sddl_flag": {
        "ScriptBlockText|contains": [
          "-SecurityDescriptorSddl ",
          "-sd "
        ]
      },
      "selection_set_service": {
        "ScriptBlockText|contains|all": [
          "Set-Service ",
          "D;;"
        ],
        "ScriptBlockText|contains": [
          ";;;IU",
          ";;;SU",
          ";;;BA",
          ";;;SY",
          ";;;WD"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Rare intended use of hidden services",
      "Rare FP could occur due to the non linearity of the ScriptBlockText log"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PowerShell Obfuscation Using Alias Cmdlets",
    "id": 1836,
    "related": [
      {
        "id": "e8314f79-564d-4f79-bc13-fbc0bf2660d8",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects Set-Alias or New-Alias cmdlet usage. Which can be use as a mean to obfuscate PowerShell scripts",
    "references": [
      "https://github.com/1337Rin/Swag-PSO"
    ],
    "author": "frack113",
    "date": "2023/01/08",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1027",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Set-Alias ",
          "New-Alias "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Get Information for SMB Share",
    "id": 1837,
    "status": "test",
    "description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as\na precursor for Collection and to identify potential systems of interest for Lateral Movement.\nNetworks often contain shared network drives and folders that enable users to access file directories on various systems across a network.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.002/T1069.002.md"
    ],
    "author": "frack113",
    "date": "2021/12/15",
    "modified": "2022/12/25",
    "tags": [
      "attack.discovery",
      "attack.t1069.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "get-smbshare"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious SSL Connection",
    "id": 1838,
    "status": "test",
    "description": "Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1573/T1573.md#atomic-test-1---openssl-c2",
      "https://medium.com/walmartglobaltech/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926"
    ],
    "author": "frack113",
    "date": "2022/01/23",
    "tags": [
      "attack.command_and_control",
      "attack.t1573"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "System.Net.Security.SslStream",
          "Net.Security.RemoteCertificateValidationCallback",
          ".AuthenticateAsClient"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Start-Process PassThru",
    "id": 1839,
    "status": "test",
    "description": "Powershell use PassThru option to start in background",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1036.003/T1036.003.md",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/Start-Process?view=powershell-5.1&viewFallbackFrom=powershell-7"
    ],
    "author": "frack113",
    "date": "2022/01/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Start-Process",
          "-PassThru ",
          "-FilePath "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Unblock-File",
    "id": 1840,
    "status": "test",
    "description": "Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-3---remove-the-zoneidentifier-alternate-data-stream",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/unblock-file?view=powershell-7.2"
    ],
    "author": "frack113",
    "date": "2022/02/01",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.005"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Unblock-File ",
          "-Path "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Replace Desktop Wallpaper by Powershell",
    "id": 1841,
    "status": "test",
    "description": "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users.\nThis may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1491.001/T1491.001.md"
    ],
    "author": "frack113",
    "date": "2021/12/26",
    "tags": [
      "attack.impact",
      "attack.t1491.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_1": {
        "ScriptBlockText|contains|all": [
          "Get-ItemProperty",
          "Registry::",
          "HKEY_CURRENT_USER\\Control Panel\\Desktop\\",
          "WallPaper"
        ]
      },
      "selection_2": {
        "ScriptBlockText|contains": "SystemParametersInfo(20,0,*,3)"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Powershell Suspicious Win32_PnPEntity",
    "id": 1842,
    "status": "test",
    "description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1120/T1120.md"
    ],
    "author": "frack113",
    "date": "2021/08/23",
    "modified": "2022/12/25",
    "tags": [
      "attack.discovery",
      "attack.t1120"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "Win32_PnPEntity"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Admin script"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Delete Volume Shadow Copies via WMI with PowerShell - PS Script",
    "id": 1843,
    "status": "test",
    "description": "Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell"
    ],
    "author": "frack113",
    "date": "2021/12/26",
    "modified": "2022/12/02",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-WmiObject",
          "Win32_Shadowcopy",
          ".Delete()"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Deletion of Volume Shadow Copies via WMI with PowerShell - PS Script",
    "id": 1844,
    "related": [
      {
        "id": "e17121b4-ef2a-4418-8a59-12fb1631fa9e",
        "type": "derived"
      },
      {
        "id": "21ff4ca9-f13a-41ad-b828-0077b2af2e40",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects deletion of Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell",
      "https://www.elastic.co/guide/en/security/current/volume-shadow-copy-deletion-via-powershell.html"
    ],
    "author": "Tim Rauch",
    "date": "2022/09/20",
    "modified": "2022/12/02",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "ps_script",
      "product": "windows"
    },
    "detection": {
      "selection_get": {
        "ScriptBlockText|contains": [
          "Get-WmiObject",
          "gwmi",
          "Get-CimInstance",
          "gcim"
        ]
      },
      "selection_shadowcopy": {
        "ScriptBlockText|contains": "Win32_Shadowcopy"
      },
      "selection_delete": {
        "ScriptBlockText|contains": [
          ".Delete()",
          "Remove-WmiObject",
          "rwmi",
          "Remove-CimInstance",
          "rcim"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious PowerShell WindowStyle Option",
    "id": 1845,
    "status": "test",
    "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users.\nIn some cases, windows that would typically be displayed when an application carries out an operation can be hidden\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.003/T1564.003.md"
    ],
    "author": "frack113, Tim Shelton (fp AWS)",
    "date": "2021/10/20",
    "modified": "2023/01/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "powershell",
          "WindowStyle",
          "Hidden"
        ]
      },
      "filter": {
        "ScriptBlockText|contains|all": [
          ":\\Program Files\\Amazon\\WorkSpacesConfig\\Scripts\\",
          "$PSScriptRoot\\Module\\WorkspaceScriptModule\\WorkspaceScriptModule"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Write-EventLog Usage",
    "id": 1846,
    "status": "test",
    "description": "Detects usage of the \"Write-EventLog\" cmdlet with 'RawData' flag. The cmdlet can be levreage to write malicious payloads to the EventLog and then retrieve them later for later use",
    "references": [
      "https://www.blackhillsinfosec.com/windows-event-logs-for-red-teams/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/16",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Write-EventLog",
          "-RawData "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate applications writing events via this cmdlet. Investigate alerts to determine if the action is benign"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Zip A Folder With PowerShell For Staging In Temp - PowerShell Script",
    "id": 1847,
    "related": [
      {
        "id": "71ff406e-b633-4989-96ec-bc49d825a412",
        "type": "similar"
      },
      {
        "id": "daf7eb81-35fd-410d-9d7a-657837e602bb",
        "type": "similar"
      },
      {
        "id": "85a8e5ba-bd03-4bfb-bbfa-a4409a8f8b98",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects PowerShell scripts that make use of the \"Compress-Archive\" Cmdlet in order to compress folders and files where the output is stored in a potentially suspicious location that is used often by malware for exfiltration.\nAn adversary might compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1074.001/T1074.001.md",
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2021/07/20",
    "modified": "2023/12/18",
    "tags": [
      "attack.collection",
      "attack.t1074.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Compress-Archive -Path*-DestinationPath $env:TEMP",
          "Compress-Archive -Path*-DestinationPath*\\AppData\\Local\\Temp\\",
          "Compress-Archive -Path*-DestinationPath*:\\Windows\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "SyncAppvPublishingServer Execution to Bypass Powershell Restriction",
    "id": 1848,
    "related": [
      {
        "id": "fde7929d-8beb-4a4c-b922-be9974671667",
        "type": "derived"
      },
      {
        "id": "9f7aa113-9da6-4a8d-907c-5f1a4b908299",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects SyncAppvPublishingServer process execution which usually utilized by adversaries to bypass PowerShell execution restrictions.",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Syncappvpublishingserver/"
    ],
    "author": "Ensar \u00c5\u017eamil, @sblmsrsn, OSCD Community",
    "date": "2020/10/05",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "SyncAppvPublishingServer.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "App-V clients"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Tamper Windows Defender Remove-MpPreference - ScriptBlockLogging",
    "id": 1849,
    "related": [
      {
        "id": "07e3cb2c-0608-410d-be4b-1511cb1a0448",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects attempts to remove Windows Defender configuration using the 'MpPreference' cmdlet",
    "references": [
      "https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/windows-10-controlled-folder-access-event-search/ba-p/2326088"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_remove": {
        "ScriptBlockText|contains": "Remove-MpPreference"
      },
      "selection_tamper": {
        "ScriptBlockText|contains": [
          "-ControlledFolderAccessProtectedFolders ",
          "-AttackSurfaceReductionRules_Ids ",
          "-AttackSurfaceReductionRules_Actions ",
          "-CheckForSignaturesBeforeRunningScan "
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Tamper Windows Defender - ScriptBlockLogging",
    "id": 1850,
    "related": [
      {
        "id": "ec19ebab-72dc-40e1-9728-4c0b805d722c",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects PowerShell scripts attempting to disable scheduled scanning and other parts of Windows Defender ATP or set default actions to allow.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://docs.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=windowsserver2022-ps",
      "https://bidouillesecurity.com/disable-windows-defender-in-powershell/"
    ],
    "author": "frack113, elhoim, Tim Shelton (fps, alias support), Swachchhanda Shrawan Poudel, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/01/16",
    "modified": "2024/01/02",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_options_disabling_preference": {
        "ScriptBlockText|contains": "Set-MpPreference"
      },
      "selection_options_disabling_function": {
        "ScriptBlockText|contains": [
          "-dbaf $true",
          "-dbaf 1",
          "-dbm $true",
          "-dbm 1",
          "-dips $true",
          "-dips 1",
          "-DisableArchiveScanning $true",
          "-DisableArchiveScanning 1",
          "-DisableBehaviorMonitoring $true",
          "-DisableBehaviorMonitoring 1",
          "-DisableBlockAtFirstSeen $true",
          "-DisableBlockAtFirstSeen 1",
          "-DisableCatchupFullScan $true",
          "-DisableCatchupFullScan 1",
          "-DisableCatchupQuickScan $true",
          "-DisableCatchupQuickScan 1",
          "-DisableIntrusionPreventionSystem $true",
          "-DisableIntrusionPreventionSystem 1",
          "-DisableIOAVProtection $true",
          "-DisableIOAVProtection 1",
          "-DisableRealtimeMonitoring $true",
          "-DisableRealtimeMonitoring 1",
          "-DisableRemovableDriveScanning $true",
          "-DisableRemovableDriveScanning 1",
          "-DisableScanningMappedNetworkDrivesForFullScan $true",
          "-DisableScanningMappedNetworkDrivesForFullScan 1",
          "-DisableScanningNetworkFiles $true",
          "-DisableScanningNetworkFiles 1",
          "-DisableScriptScanning $true",
          "-DisableScriptScanning 1",
          "-MAPSReporting $false",
          "-MAPSReporting 0",
          "-drdsc $true",
          "-drdsc 1",
          "-drtm $true",
          "-drtm 1",
          "-dscrptsc $true",
          "-dscrptsc 1",
          "-dsmndf $true",
          "-dsmndf 1",
          "-dsnf $true",
          "-dsnf 1",
          "-dss $true",
          "-dss 1"
        ]
      },
      "selection_other_default_actions_allow": {
        "ScriptBlockText|contains": "Set-MpPreference"
      },
      "selection_other_default_actions_func": {
        "ScriptBlockText|contains": [
          "HighThreatDefaultAction Allow",
          "htdefac Allow",
          "LowThreatDefaultAction Allow",
          "ltdefac Allow",
          "ModerateThreatDefaultAction Allow",
          "mtdefac Allow",
          "SevereThreatDefaultAction Allow",
          "stdefac Allow"
        ]
      },
      "condition": "all of selection_options_disabling_* or all of selection_other_default_actions_*"
    },
    "falsepositives": [
      "Legitimate PowerShell scripts that disable Windows Defender for troubleshooting purposes. Must be investigated."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Testing Usage of Uncommonly Used Port",
    "id": 1851,
    "status": "test",
    "description": "Adversaries may communicate using a protocol and port paring that are typically not associated.\nFor example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1571/T1571.md#atomic-test-1---testing-usage-of-uncommonly-used-port-with-powershell",
      "https://docs.microsoft.com/en-us/powershell/module/nettcpip/test-netconnection?view=windowsserver2022-ps"
    ],
    "author": "frack113",
    "date": "2022/01/23",
    "tags": [
      "attack.command_and_control",
      "attack.t1571"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Test-NetConnection",
          "-ComputerName ",
          "-port "
        ]
      },
      "filter": {
        "ScriptBlockText|contains": [
          " 443 ",
          " 80 "
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Timestomp",
    "id": 1852,
    "status": "test",
    "description": "Adversaries may modify file time attributes to hide new or changes to existing files.\nTimestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.006/T1070.006.md",
      "https://www.offensive-security.com/metasploit-unleashed/timestomp/"
    ],
    "author": "frack113",
    "date": "2021/08/03",
    "modified": "2022/12/25",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_ioc": {
        "ScriptBlockText|contains": [
          ".CreationTime =",
          ".LastWriteTime =",
          ".LastAccessTime =",
          "[IO.File]::SetCreationTime",
          "[IO.File]::SetLastAccessTime",
          "[IO.File]::SetLastWriteTime"
        ]
      },
      "condition": "selection_ioc"
    },
    "falsepositives": [
      "Legitimate admin script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell Token Obfuscation - Powershell",
    "id": 1853,
    "related": [
      {
        "id": "deb9b646-a508-44ee-b7c9-d8965921c6b6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects TOKEN OBFUSCATION technique from Invoke-Obfuscation",
    "references": [
      "https://github.com/danielbohannon/Invoke-Obfuscation"
    ],
    "author": "frack113",
    "date": "2022/12/27",
    "modified": "2023/03/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1027.009"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": [
        {
          "ScriptBlockText|re": "\\w+`(\\w+|-|.)`[\\w+|\\s]"
        },
        {
          "ScriptBlockText|re": "\"(\\{\\d\\}){2,}\"\\s*-f"
        },
        {
          "ScriptBlockText|re": "\\$\\{((e|n|v)*`(e|n|v)*)+:path\\}|\\$\\{((e|n|v)*`(e|n|v)*)+:((p|a|t|h)*`(p|a|t|h)*)+\\}|\\$\\{env:((p|a|t|h)*`(p|a|t|h)*)+\\}"
        }
      ],
      "filter_chocolatey": {
        "ScriptBlockText|contains": [
          "it will return true or false instead",
          "The function also prevents `Get-ItemProperty` from failing"
        ]
      },
      "filter_exchange": {
        "Path|startswith": "C:\\Program Files\\Microsoft\\Exchange Server\\",
        "Path|endswith": "\\bin\\servicecontrol.ps1",
        "ScriptBlockText|contains": "`r`n"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "User Discovery And Export Via Get-ADUser Cmdlet - PowerShell",
    "id": 1854,
    "related": [
      {
        "id": "1114e048-b69c-4f41-bc20-657245ae6e3f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the Get-ADUser cmdlet to collect user information and output it to a file",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html",
      "https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/11/17",
    "tags": [
      "attack.discovery",
      "attack.t1033"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Get-ADUser ",
          " -Filter \\*"
        ],
        "ScriptBlockText|contains": [
          " > ",
          " | Select ",
          "Out-File",
          "Set-Content",
          "Add-Content"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate admin scripts may use the same technique, it's better to exclude specific computers or users who execute these commands or scripts often"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via PowerShell User Profile Using Add-Content",
    "id": 1855,
    "status": "test",
    "description": "Detects calls to \"Add-Content\" cmdlet in order to modify the content of the user profile and potentially adding suspicious commands for persistence",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.013/T1546.013.md"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/08/18",
    "modified": "2023/05/04",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.013"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_add": {
        "ScriptBlockText|contains": "Add-Content $profile"
      },
      "selection_options": {
        "ScriptBlockText|contains": [
          "-Value \"IEX ",
          "-Value \"Invoke-Expression",
          "-Value \"Invoke-WebRequest",
          "-Value \"Start-Process",
          "-Value 'IEX ",
          "-Value 'Invoke-Expression",
          "-Value 'Invoke-WebRequest",
          "-Value 'Start-Process"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration and tuning scripts that aim to add functionality to a user PowerShell session"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Abuse of Service Permissions to Hide Services Via Set-Service - PS",
    "id": 1856,
    "related": [
      {
        "id": "514e4c3a-c77d-4cde-a00f-046425e2301e",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects usage of the \"Set-Service\" powershell cmdlet to configure a new SecurityDescriptor that allows a service to be hidden from other utilities such as \"sc.exe\", \"Get-Service\"...etc. (Works only in powershell 7)",
    "references": [
      "https://twitter.com/Alh4zr3d/status/1580925761996828672",
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/10/17",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1574.011"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Set-Service ",
          "DCLCWPDTSD"
        ],
        "ScriptBlockText|contains": [
          "-SecurityDescriptorSddl ",
          "-sd "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Rare intended use of hidden services",
      "Rare FP could occur due to the non linearity of the ScriptBlockText log"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Veeam Backup Servers Credential Dumping Script Execution",
    "id": 1857,
    "status": "experimental",
    "description": "Detects execution of a PowerShell script that contains calls to the \"Veeam.Backup\" class, in order to dump stored credentials.",
    "references": [
      "https://www.pwndefend.com/2021/02/15/retrieving-passwords-from-veeam-backup-servers/",
      "https://labs.withsecure.com/publications/fin7-target-veeam-servers"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/04",
    "tags": [
      "attack.credential_access"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "[Credentials]",
          "[Veeam.Backup.Common.ProtectedStorage]::GetLocalString",
          "Invoke-Sqlcmd",
          "Veeam Backup and Replication"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrators backup scripts (must be investigated)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Usage Of Web Request Commands And Cmdlets - ScriptBlock",
    "id": 1858,
    "related": [
      {
        "id": "9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the use of various web request commands with commandline tools and Windows PowerShell cmdlets (including aliases) via PowerShell scriptblock logs",
    "references": [
      "https://4sysops.com/archives/use-powershell-to-download-a-file-with-http-https-and-ftp/",
      "https://blog.jourdant.me/post/3-ways-to-download-files-with-powershell"
    ],
    "author": "James Pemberton / @4A616D6573",
    "date": "2019/10/24",
    "modified": "2023/01/10",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "[System.Net.WebRequest]::create",
          "curl ",
          "Invoke-RestMethod",
          "Invoke-WebRequest",
          "iwr ",
          "Net.WebClient",
          "Resume-BitsTransfer",
          "Start-BitsTransfer",
          "wget ",
          "WinHttp.WinHttpRequest"
        ]
      },
      "filter": {
        "Path|startswith": "C:\\Packages\\Plugins\\Microsoft.GuestConfiguration.ConfigurationforWindows\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Use of Get-Command and Get-Help modules to reference Invoke-WebRequest and Start-BitsTransfer."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Call To Win32_NTEventlogFile Class - PSScript",
    "id": 1859,
    "status": "experimental",
    "description": "Detects usage of the WMI class \"Win32_NTEventlogFile\" in a potentially suspicious way (delete, backup, change permissions, etc.) from a PowerShell script",
    "references": [
      "https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/aa394225(v=vs.85)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/07/13",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "ps_script",
      "product": "windows",
      "definition": "bade5735-5ab0-4aa7-a642-a11be0e40872"
    },
    "detection": {
      "selection_class": {
        "ScriptBlockText|contains": "Win32_NTEventlogFile"
      },
      "selection_function": {
        "ScriptBlockText|contains": [
          ".BackupEventlog(",
          ".ChangeSecurityPermissions(",
          ".ChangeSecurityPermissionsEx(",
          ".ClearEventLog(",
          ".Delete(",
          ".DeleteEx(",
          ".Rename(",
          ".TakeOwnerShip(",
          ".TakeOwnerShipEx("
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administration and backup scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell WMI Win32_Product Install MSI",
    "id": 1860,
    "status": "test",
    "description": "Detects the execution of an MSI file using PowerShell and the WMI Win32_Product class",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md"
    ],
    "author": "frack113",
    "date": "2022/04/24",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.007"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains|all": [
          "Invoke-CimMethod ",
          "-ClassName ",
          "Win32_Product ",
          "-MethodName ",
          ".msi"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Firewall Profile Disabled",
    "id": 1861,
    "related": [
      {
        "id": "12f6b752-042d-483e-bf9c-915a6d06ad75",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when a user disables the Windows Firewall via a Profile to help evade defense.",
    "references": [
      "https://docs.microsoft.com/en-us/powershell/module/netsecurity/set-netfirewallprofile?view=windowsserver2019-ps",
      "https://www.tutorialspoint.com/how-to-get-windows-firewall-profile-settings-using-powershell",
      "http://powershellhelp.space/commands/set-netfirewallrule-psv5.php",
      "http://woshub.com/manage-windows-firewall-powershell/",
      "https://www.elastic.co/guide/en/security/current/windows-firewall-disabled-via-powershell.html"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/10/12",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_args": {
        "ScriptBlockText|contains|all": [
          "Set-NetFirewallProfile ",
          " -Enabled ",
          " False"
        ]
      },
      "selection_opt": {
        "ScriptBlockText|contains": [
          " -All ",
          "Public",
          "Domain",
          "Private"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Winlogon Helper DLL",
    "id": 1862,
    "status": "test",
    "description": "Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.\nRegistry entries in HKLM\\Software[Wow6432Node]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are\nused to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to\nload and execute malicious DLLs and/or executables.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.004/T1547.004.md"
    ],
    "author": "Timur Zinniatullin, oscd.community",
    "date": "2019/10/21",
    "modified": "2022/07/07",
    "tags": [
      "attack.persistence",
      "attack.t1547.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": "CurrentVersion\\Winlogon"
      },
      "selection2": {
        "ScriptBlockText|contains": [
          "Set-ItemProperty",
          "New-Item"
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential WinAPI Calls Via PowerShell Scripts",
    "id": 1863,
    "related": [
      {
        "id": "ba3f5c1b-6272-4119-9dbd-0bc8d21c2702",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects use of WinAPI functions in PowerShell scripts",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Nikita Nazarov, oscd.community",
    "date": "2020/10/06",
    "modified": "2023/06/20",
    "tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.t1106"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_injection": {
        "ScriptBlockText|contains|all": [
          "VirtualAlloc",
          "OpenProcess",
          "WriteProcessMemory",
          "CreateRemoteThread"
        ]
      },
      "selection_token_steal": {
        "ScriptBlockText|contains|all": [
          "OpenProcessToken",
          "LookupPrivilegeValue",
          "AdjustTokenPrivileges"
        ]
      },
      "selection_duplicate_token": {
        "ScriptBlockText|contains|all": [
          "OpenProcessToken",
          "DuplicateTokenEx",
          "CloseHandle"
        ]
      },
      "selection_process_write_read": {
        "ScriptBlockText|contains|all": [
          "WriteProcessMemory",
          "VirtualAlloc",
          "ReadProcessMemory",
          "VirtualFree"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Defender Exclusions Added - PowerShell",
    "id": 1864,
    "related": [
      {
        "id": "17769c90-230e-488b-a463-e05c08e9d48f",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects modifications to the Windows Defender configuration settings using PowerShell to add exclusions",
    "references": [
      "https://www.elastic.co/guide/en/security/current/windows-defender-exclusions-added-via-powershell.html"
    ],
    "author": "Tim Rauch, Elastic (idea)",
    "date": "2022/09/16",
    "modified": "2022/11/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562",
      "attack.execution",
      "attack.t1059"
    ],
    "logsource": {
      "category": "ps_script",
      "product": "windows",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_args_exc": {
        "ScriptBlockText|contains": [
          " -ExclusionPath ",
          " -ExclusionExtension ",
          " -ExclusionProcess ",
          " -ExclusionIpAddress "
        ]
      },
      "selection_args_pref": {
        "ScriptBlockText|contains": [
          "Add-MpPreference ",
          "Set-MpPreference "
        ]
      },
      "condition": "all of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WMImplant Hack Tool",
    "id": 1865,
    "status": "test",
    "description": "Detects parameters used by WMImplant",
    "references": [
      "https://github.com/FortyNorthSecurity/WMImplant"
    ],
    "author": "NVISO",
    "date": "2020/03/26",
    "modified": "2022/12/25",
    "tags": [
      "attack.execution",
      "attack.t1047",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "WMImplant",
          " change_user ",
          " gen_cli ",
          " command_exec ",
          " disable_wdigest ",
          " disable_winrm ",
          " enable_wdigest ",
          " enable_winrm ",
          " registry_mod ",
          " remote_posh ",
          " sched_job ",
          " service_mod ",
          " process_kill ",
          " active_users ",
          " basic_info ",
          " power_off ",
          " vacant_system ",
          " logon_events "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative scripts that use the same keywords."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Powershell WMI Persistence",
    "id": 1866,
    "status": "test",
    "description": "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.003/T1546.003.md",
      "https://github.com/EmpireProject/Empire/blob/08cbd274bef78243d7a8ed6443b8364acd1fc48b/data/module_source/persistence/Persistence.psm1#L545"
    ],
    "author": "frack113",
    "date": "2021/08/19",
    "modified": "2022/12/25",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1546.003"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_ioc": [
        {
          "ScriptBlockText|contains|all": [
            "New-CimInstance ",
            "-Namespace root/subscription ",
            "-ClassName __EventFilter ",
            "-Property "
          ]
        },
        {
          "ScriptBlockText|contains|all": [
            "New-CimInstance ",
            "-Namespace root/subscription ",
            "-ClassName CommandLineEventConsumer ",
            "-Property "
          ]
        }
      ],
      "condition": "selection_ioc"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WMIC Unquoted Services Path Lookup - PowerShell",
    "id": 1867,
    "related": [
      {
        "id": "68bcd73b-37ef-49cb-95fc-edc809730be6",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects known WMI recon method to look for unquoted service paths, often used by pentest inside of powershell scripts attackers enum scripts",
    "references": [
      "https://github.com/nccgroup/redsnarf/blob/35949b30106ae543dc6f2bc3f1be10c6d9a8d40e/redsnarf.py",
      "https://github.com/S3cur3Th1sSh1t/Creds/blob/eac23d67f7f90c7fc8e3130587d86158c22aa398/PowershellScripts/jaws-enum.ps1",
      "https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/06/20",
    "modified": "2022/11/25",
    "tags": [
      "attack.execution",
      "attack.t1047"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "Get-WmiObject ",
          "gwmi "
        ],
        "ScriptBlockText|contains|all": [
          " Win32_Service ",
          "Name",
          "DisplayName",
          "PathName",
          "StartMode"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious X509Enrollment - Ps Script",
    "id": 1868,
    "related": [
      {
        "id": "114de787-4eb2-48cc-abdb-c0b449f93ea4",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detect use of X509Enrollment",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=42",
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=41",
      "https://learn.microsoft.com/en-us/dotnet/api/microsoft.hpc.scheduler.store.cx509enrollmentwebclassfactoryclass?view=hpc-sdk-5.1.6115"
    ],
    "author": "frack113",
    "date": "2022/12/23",
    "tags": [
      "attack.defense_evasion",
      "attack.t1553.004"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection": {
        "ScriptBlockText|contains": [
          "X509Enrollment.CBinaryConverter",
          "884e2002-217d-11da-b2a4-000e7bbb2b09"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Powershell XML Execute Command",
    "id": 1869,
    "status": "test",
    "description": "Adversaries may abuse PowerShell commands and scripts for execution.\nPowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell)\nAdversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-8---powershell-xml-requests"
    ],
    "author": "frack113",
    "date": "2022/01/19",
    "modified": "2023/01/19",
    "tags": [
      "attack.execution",
      "attack.t1059.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "ps_script",
      "definition": "Requirements: Script Block Logging must be enabled"
    },
    "detection": {
      "selection_xml": {
        "ScriptBlockText|contains|all": [
          "New-Object",
          "System.Xml.XmlDocument",
          ".Load"
        ]
      },
      "selection_exec": {
        "ScriptBlockText|contains": [
          "IEX ",
          "Invoke-Expression ",
          "Invoke-Command ",
          "ICM -"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Legitimate administrative script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential NetWire RAT Activity - Registry",
    "id": 1870,
    "status": "test",
    "description": "Detects registry keys related to NetWire RAT",
    "references": [
      "https://www.fortinet.com/blog/threat-research/new-netwire-rat-variant-spread-by-phishing",
      "https://resources.infosecinstitute.com/topic/netwire-malware-what-it-is-how-it-works-and-how-to-prevent-it-malware-spotlight/",
      "https://unit42.paloaltonetworks.com/guloader-installing-netwire-rat/",
      "https://blogs.blackberry.com/en/2021/09/threat-thursday-netwire-rat-is-coming-down-the-line",
      "https://app.any.run/tasks/41ecdbde-4997-4301-a350-0270448b4c8f/"
    ],
    "author": "Christopher Peacock",
    "date": "2021/10/07",
    "modified": "2023/02/07",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_add"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": "\\software\\NetWire"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Ursnif Malware Activity - Registry",
    "id": 1871,
    "status": "test",
    "description": "Detects registry keys related to Ursnif malware.",
    "references": [
      "https://blog.yoroi.company/research/ursnif-long-live-the-steganography/",
      "https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-campaign-uses-hijacked-emails-to-deliver-ursnif-by-replying-to-ongoing-threads/"
    ],
    "author": "megan201296",
    "date": "2019/02/13",
    "modified": "2023/02/07",
    "tags": [
      "attack.execution",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_add"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": "\\Software\\AppDataLow\\Software\\Microsoft\\"
      },
      "filter": {
        "TargetObject|contains": [
          "\\SOFTWARE\\AppDataLow\\Software\\Microsoft\\Internet Explorer\\",
          "\\SOFTWARE\\AppDataLow\\Software\\Microsoft\\RepService\\",
          "\\SOFTWARE\\AppDataLow\\Software\\Microsoft\\IME\\",
          "\\SOFTWARE\\AppDataLow\\Software\\Microsoft\\Edge\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via New AMSI Providers - Registry",
    "id": 1872,
    "status": "test",
    "description": "Detects when an attacker registers a new AMSI provider in order to achieve persistence",
    "references": [
      "https://persistence-info.github.io/Data/amsi.html",
      "https://github.com/gtworek/PSBits/blob/8d767892f3b17eefa4d0668f5d2df78e844f01d8/FakeAMSI/FakeAMSI.c"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/02/07",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_add",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\AMSI\\Providers\\",
          "\\SOFTWARE\\WOW6432Node\\Microsoft\\AMSI\\Providers\\"
        ]
      },
      "filter": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Program Files\\",
          "C:\\Program Files (x86)\\"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate security products adding their own AMSI providers. Filter these according to your environment"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential COM Object Hijacking Via TreatAs Subkey - Registry",
    "id": 1873,
    "status": "test",
    "description": "Detects COM object hijacking via TreatAs subkey",
    "references": [
      "https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/"
    ],
    "author": "Kutepov Anton, oscd.community",
    "date": "2019/10/23",
    "modified": "2023/02/07",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_add",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains|all": [
          "HKU\\",
          "Classes\\CLSID\\",
          "\\TreatAs"
        ]
      },
      "filter_svchost": {
        "Image": "C:\\WINDOWS\\system32\\svchost.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Maybe some system utilities in rare cases use linking keys for backward compatibility"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Disk Cleanup Handler - Registry",
    "id": 1874,
    "status": "test",
    "description": "Detects when an attacker modifies values of the Disk Cleanup Handler in the registry to achieve persistence.\nThe disk cleanup manager is part of the operating system. It displays the dialog box [\u00e2\u20ac\u00a6]\nThe user has the option of enabling or disabling individual handlers by selecting or clearing their check box in the disk cleanup manager's UI.\nAlthough Windows comes with a number of disk cleanup handlers, they aren't designed to handle files produced by other applications.\nInstead, the disk cleanup manager is designed to be flexible and extensible by enabling any developer to implement and register their own disk cleanup handler.\nAny developer can extend the available disk cleanup services by implementing and registering a disk cleanup handler.\n",
    "references": [
      "https://persistence-info.github.io/Data/diskcleanuphandler.html",
      "https://www.hexacorn.com/blog/2018/09/02/beyond-good-ol-run-key-part-86/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/02/07",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_add"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VolumeCaches\\"
      },
      "filter": {
        "TargetObject|endswith": [
          "\\Active Setup Temp Folders",
          "\\BranchCache",
          "\\Content Indexer Cleaner",
          "\\D3D Shader Cache",
          "\\Delivery Optimization Files",
          "\\Device Driver Packages",
          "\\Diagnostic Data Viewer database files",
          "\\Downloaded Program Files",
          "\\DownloadsFolder",
          "\\Feedback Hub Archive log files",
          "\\Internet Cache Files",
          "\\Language Pack",
          "\\Microsoft Office Temp Files",
          "\\Offline Pages Files",
          "\\Old ChkDsk Files",
          "\\Previous Installations",
          "\\Recycle Bin",
          "\\RetailDemo Offline Content",
          "\\Setup Log Files",
          "\\System error memory dump files",
          "\\System error minidump files",
          "\\Temporary Files",
          "\\Temporary Setup Files",
          "\\Temporary Sync Files",
          "\\Thumbnail Cache",
          "\\Update Cleanup",
          "\\Upgrade Discarded Files",
          "\\User file versions",
          "\\Windows Defender",
          "\\Windows Error Reporting Files",
          "\\Windows ESD installation files",
          "\\Windows Upgrade Log Files"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate new entry added by windows"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Logon Scripts - Registry",
    "id": 1875,
    "status": "test",
    "description": "Detects creation of \"UserInitMprLogonScript\" registry value which can be used as a persistence method by malicious actors",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1037.001/T1037.001.md"
    ],
    "author": "Tom Ueltschi (@c_APT_ure)",
    "date": "2019/01/12",
    "modified": "2023/06/09",
    "tags": [
      "attack.t1037.001",
      "attack.persistence",
      "attack.lateral_movement"
    ],
    "logsource": {
      "category": "registry_add",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": "UserInitMprLogonScript"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Investigate the contents of the \"UserInitMprLogonScript\" value to determine of the added script is legitimate"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PUA - Sysinternal Tool Execution - Registry",
    "id": 1876,
    "status": "test",
    "description": "Detects the execution of a Sysinternals Tool via the creation of the \"accepteula\" registry key",
    "references": [
      "https://twitter.com/Moti_B/status/1008587936735035392"
    ],
    "author": "Markus Neis",
    "date": "2017/08/28",
    "modified": "2023/02/07",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_add"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|endswith": "\\EulaAccepted"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of SysInternals tools",
      "Programs that use the same Registry Key"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Suspicious Execution Of Renamed Sysinternals Tools - Registry",
    "id": 1877,
    "related": [
      {
        "id": "25ffa65d-76d8-4da5-a832-3f2b0136e133",
        "type": "derived"
      },
      {
        "id": "8023f872-3f1d-4301-a384-801889917ab4",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects the creation of the \"accepteula\" key related to the Sysinternals tools being created from executables with the wrong name (e.g. a renamed Sysinternals tool)",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2023/02/07",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_add"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": [
          "\\Active Directory Explorer",
          "\\Handle",
          "\\LiveKd",
          "\\ProcDump",
          "\\Process Explorer",
          "\\PsExec",
          "\\PsLoggedon",
          "\\PsLoglist",
          "\\PsPasswd",
          "\\PsPing",
          "\\PsService",
          "\\SDelete"
        ],
        "TargetObject|endswith": "\\EulaAccepted"
      },
      "filter": {
        "Image|endswith": [
          "\\ADExplorer.exe",
          "\\ADExplorer64.exe",
          "\\handle.exe",
          "\\handle64.exe",
          "\\livekd.exe",
          "\\livekd64.exe",
          "\\procdump.exe",
          "\\procdump64.exe",
          "\\procexp.exe",
          "\\procexp64.exe",
          "\\PsExec.exe",
          "\\PsExec64.exe",
          "\\PsLoggedon.exe",
          "\\PsLoggedon64.exe",
          "\\psloglist.exe",
          "\\psloglist64.exe",
          "\\pspasswd.exe",
          "\\pspasswd64.exe",
          "\\PsPing.exe",
          "\\PsPing64.exe",
          "\\PsService.exe",
          "\\PsService64.exe",
          "\\sdelete.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PUA - Sysinternals Tools Execution - Registry",
    "id": 1878,
    "related": [
      {
        "id": "25ffa65d-76d8-4da5-a832-3f2b0136e133",
        "type": "derived"
      },
      {
        "id": "9841b233-8df8-4ad7-9133-b0b4402a9014",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects the execution of some potentially unwanted tools such as PsExec, Procdump, etc. (part of the Sysinternals suite) via the creation of the \"accepteula\" registry key.",
    "references": [
      "https://twitter.com/Moti_B/status/1008587936735035392"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2023/02/07",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_add"
    },
    "detection": {
      "selection": {
        "EventType": "CreateKey",
        "TargetObject|contains": [
          "\\Active Directory Explorer",
          "\\Handle",
          "\\LiveKd",
          "\\Process Explorer",
          "\\ProcDump",
          "\\PsExec",
          "\\PsLoglist",
          "\\PsPasswd",
          "\\SDelete",
          "\\Sysinternals"
        ],
        "TargetObject|endswith": "\\EulaAccepted"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of SysInternals tools. Filter the legitimate paths used in your environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Folder Removed From Exploit Guard ProtectedFolders List - Registry",
    "id": 1879,
    "status": "test",
    "description": "Detects the removal of folders from the \"ProtectedFolders\" list of of exploit guard. This could indicate an attacker trying to launch an encryption process or trying to manipulate data inside of the protected folder",
    "references": [
      "https://www.microsoft.com/security/blog/2017/10/23/windows-defender-exploit-guard-reduce-the-attack-surface-against-next-generation-malware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_delete",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "DeleteValue",
        "TargetObject|contains": "SOFTWARE\\Microsoft\\Windows Defender\\Windows Defender Exploit Guard\\Controlled Folder Access\\ProtectedFolders"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate administrators removing applications (should always be investigated)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Terminal Server Client Connection History Cleared - Registry",
    "id": 1880,
    "status": "test",
    "description": "Detects the deletion of registry keys containing the MSTSC connection history",
    "references": [
      "https://docs.microsoft.com/en-us/troubleshoot/windows-server/remote/remove-entries-from-remote-desktop-connection-computer",
      "http://woshub.com/how-to-clear-rdp-connections-history/",
      "https://www.trendmicro.com/en_us/research/23/a/vice-society-ransomware-group-targets-manufacturing-companies.html"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/10/19",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_delete",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "EventType": "DeleteValue",
        "TargetObject|contains": "\\Microsoft\\Terminal Server Client\\Default\\MRU"
      },
      "selection2": {
        "EventType": "DeleteKey",
        "TargetObject|contains": "\\Microsoft\\Terminal Server Client\\Servers\\"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Removal Of AMSI Provider Registry Keys",
    "id": 1881,
    "status": "test",
    "description": "Detects the deletion of AMSI provider registry key entries in HKLM\\Software\\Microsoft\\AMSI. This technique could be used by an attacker in order to disable AMSI inspection.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://seclists.org/fulldisclosure/2020/Mar/45"
    ],
    "author": "frack113",
    "date": "2021/06/07",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_delete"
    },
    "detection": {
      "selection": {
        "EventType": "DeleteKey",
        "TargetObject|endswith": [
          "{2781761E-28E0-4109-99FE-B9D127C57AFE}",
          "{A7C452EF-8E9F-42EB-9F2B-245613CA0DC9}"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Removal of Potential COM Hijacking Registry Keys",
    "id": 1882,
    "status": "test",
    "description": "Detects any deletion of entries in \".*\\shell\\open\\command\" registry keys.\nThese registry keys might have been used for COM hijacking activities by a threat actor or an attacker and the deletion could indicate steps to remove its tracks.\n",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/7",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/3.C.1_22A46621-7A92-48C1-81BF-B3937EB4FDC3.md",
      "https://docs.microsoft.com/en-us/windows/win32/shell/launch",
      "https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-iexecutecommand",
      "https://docs.microsoft.com/en-us/windows/win32/shell/shell-and-managed-code"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2023/01/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_delete"
    },
    "detection": {
      "selection": {
        "EventType": "DeleteKey",
        "TargetObject|endswith": "\\shell\\open\\command"
      },
      "filter_svchost": {
        "Image": "C:\\Windows\\system32\\svchost.exe"
      },
      "filter_office": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_integrator": {
        "Image": "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"
      },
      "filter_dropbox": {
        "Image|endswith": "\\Dropbox.exe",
        "TargetObject|contains": "\\Dropbox."
      },
      "filter_wireshark": {
        "Image|endswith": "\\AppData\\Local\\Temp\\Wireshark_uninstaller.exe",
        "TargetObject|contains": "\\wireshark-capture-file\\"
      },
      "filter_opera": {
        "Image|startswith": [
          "C:\\Program Files\\Opera\\",
          "C:\\Program Files (x86)\\Opera\\"
        ],
        "Image|endswith": "\\installer.exe"
      },
      "filter_peazip": {
        "Image|contains": "peazip",
        "TargetObject|contains": "\\PeaZip."
      },
      "filter_everything": {
        "Image|endswith": "\\Everything.exe",
        "TargetObject|contains": "\\Everything."
      },
      "filter_uninstallers": {
        "Image|startswith": "C:\\Windows\\Installer\\MSI"
      },
      "filter_java": {
        "Image|startswith": "C:\\Program Files (x86)\\Java\\",
        "Image|endswith": "\\installer.exe",
        "TargetObject|contains": "\\Classes\\WOW6432Node\\CLSID\\{4299124F-F2C3-41b4-9C73-9236B2AD0E8F}"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate software (un)installations are known to cause some false positives. Please add them as a filter when encountered"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Removal Of Index Value to Hide Schedule Task - Registry",
    "id": 1883,
    "related": [
      {
        "id": "acd74772-5f88-45c7-956b-6a7b36c294d2",
        "type": "similar"
      },
      {
        "id": "5b16df71-8615-4f7f-ac9b-6c43c0509e61",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects when the \"index\" value of a scheduled task is removed or deleted from the registry. Which effectively hides it from any tooling such as \"schtasks /query\"",
    "references": [
      "https://blog.qualys.com/vulnerabilities-threat-research/2022/06/20/defending-against-scheduled-task-attacks-in-windows-environments"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/26",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_delete"
    },
    "detection": {
      "selection": {
        "EventType": "DeleteKey",
        "TargetObject|contains|all": [
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\",
          "Index"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Removal Of SD Value to Hide Schedule Task - Registry",
    "id": 1884,
    "related": [
      {
        "id": "526cc8bc-1cdc-48ad-8b26-f19bff969cec",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Remove SD (Security Descriptor) value in \\Schedule\\TaskCache\\Tree registry hive to hide schedule task. This technique is used by Tarrask malware",
    "references": [
      "https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/"
    ],
    "author": "Sittikorn S",
    "date": "2022/04/15",
    "modified": "2023/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_delete"
    },
    "detection": {
      "selection": {
        "EventType": "DeleteKey",
        "TargetObject|contains|all": [
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\",
          "SD"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Creation of a Local Hidden User Account by Registry",
    "id": 1885,
    "status": "test",
    "description": "Sysmon registry detection of a local hidden user account.",
    "references": [
      "https://twitter.com/SBousseaden/status/1387530414185664538"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/05/03",
    "modified": "2022/08/05",
    "tags": [
      "attack.persistence",
      "attack.t1136.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SAM\\SAM\\Domains\\Account\\Users\\Names\\",
        "TargetObject|endswith": "$",
        "Image|endswith": "\\lsass.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Leviathan Registry Key Activity",
    "id": 1886,
    "status": "test",
    "description": "Detects registry key used by Leviathan APT in Malaysian focused campaign",
    "references": [
      "https://www.elastic.co/blog/advanced-techniques-used-in-malaysian-focused-apt-campaign"
    ],
    "author": "Aidan Bracher",
    "date": "2020/07/07",
    "modified": "2023/09/19",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ntkd"
      },
      "condition": "selection"
    },
    "level": "critical",
    "enable": true
  },
  {
    "title": "OceanLotus Registry Activity",
    "id": 1887,
    "status": "test",
    "description": "Detects registry keys created in OceanLotus (also known as APT32) attacks",
    "references": [
      "https://www.welivesecurity.com/2019/03/20/fake-or-fake-keeping-up-with-oceanlotus-decoys/",
      "https://github.com/eset/malware-ioc/tree/master/oceanlotus"
    ],
    "author": "megan201296, Jonhnathan Ribeiro",
    "date": "2019/04/14",
    "modified": "2023/09/28",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection_clsid": {
        "TargetObject|contains": "\\SOFTWARE\\Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model"
      },
      "selection_hkcu": {
        "TargetObject|contains": [
          "Classes\\AppXc52346ec40fb4061ad96be0e6cb7d16a\\",
          "Classes\\AppX3bbba44c6cae4d9695755183472171e2\\",
          "Classes\\CLSID\\{E3517E26-8E93-458D-A6DF-8030BC80528B}\\",
          "Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model"
        ]
      },
      "selection_appx_1": {
        "TargetObject|contains": "\\SOFTWARE\\App\\"
      },
      "selection_appx_2": {
        "TargetObject|contains": [
          "AppXbf13d4ea2945444d8b13e2121cb6b663\\",
          "AppX70162486c7554f7f80f481985d67586d\\",
          "AppX37cc7fdccd644b4f85f4b22d5a3f105a\\"
        ],
        "TargetObject|endswith": [
          "Application",
          "DefaultIcon"
        ]
      },
      "condition": "selection_clsid or selection_hkcu or all of selection_appx_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "OilRig APT Registry Persistence",
    "id": 1888,
    "related": [
      {
        "id": "53ba33fd-3a50-4468-a5ef-c583635cfa92",
        "type": "similar"
      },
      {
        "id": "c0580559-a6bd-4ef6-b9b7-83703d98b561",
        "type": "similar"
      },
      {
        "id": "ce6e34ca-966d-41c9-8d93-5b06c8b97a06",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects OilRig registry persistence as reported by Nyotron in their March 2018 report",
    "references": [
      "https://web.archive.org/web/20180402134442/https://nyotron.com/wp-content/uploads/2018/03/Nyotron-OilRig-Malware-Report-March-2018C.pdf"
    ],
    "author": "Florian Roth (Nextron Systems), Markus Neis, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community",
    "date": "2018/03/23",
    "modified": "2023/03/08",
    "tags": [
      "attack.persistence",
      "attack.g0049",
      "attack.t1053.005",
      "attack.s0111",
      "attack.t1543.003",
      "attack.defense_evasion",
      "attack.t1112",
      "attack.command_and_control",
      "attack.t1071.004"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": [
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UMe",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UT"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Pandemic Registry Key",
    "id": 1889,
    "status": "test",
    "description": "Detects Pandemic Windows Implant",
    "references": [
      "https://wikileaks.org/vault7/#Pandemic",
      "https://twitter.com/MalwareJake/status/870349480356454401"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/06/01",
    "modified": "2022/10/09",
    "tags": [
      "attack.lateral_movement",
      "attack.t1105"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SYSTEM\\CurrentControlSet\\services\\null\\Instance"
      },
      "condition": "selection"
    },
    "fields": [
      "EventID",
      "CommandLine",
      "ParentCommandLine",
      "Image",
      "User",
      "TargetObject"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "UAC Bypass Via Wsreset",
    "id": 1890,
    "status": "test",
    "description": "Unfixed method for UAC bypass from Windows 10. WSReset.exe file associated with the Windows Store. It will run a binary file contained in a low-privilege registry.",
    "references": [
      "https://www.bleepingcomputer.com/news/security/trickbot-uses-a-new-windows-10-uac-bypass-to-launch-quietly",
      "https://lolbas-project.github.io/lolbas/Binaries/Wsreset"
    ],
    "author": "oscd.community, Dmitry Uchakin",
    "date": "2020/10/07",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "Image",
      "EventType",
      "TargetObject"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CMSTP Execution Registry Event",
    "id": 1891,
    "status": "stable",
    "description": "Detects various indicators of Microsoft Connection Manager Profile Installer execution",
    "references": [
      "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"
    ],
    "author": "Nik Seetharaman",
    "date": "2018/07/16",
    "modified": "2020/12/23",
    "tags": [
      "attack.defense_evasion",
      "attack.execution",
      "attack.t1218.003",
      "attack.g0069",
      "car.2019-04-001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\cmmgr32.exe"
      },
      "condition": "selection"
    },
    "fields": [
      "CommandLine",
      "ParentCommandLine",
      "Details"
    ],
    "falsepositives": [
      "Legitimate CMSTP use (unlikely in modern enterprise environments)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Security Events Logging Adding Reg Key MiniNt",
    "id": 1892,
    "status": "test",
    "description": "Detects the addition of a key 'MiniNt' to the registry. Upon a reboot, Windows Event Log service will stopped write events.",
    "references": [
      "https://twitter.com/0gtweet/status/1182516740955226112"
    ],
    "author": "Ilyas Ochkov, oscd.community",
    "date": "2019/10/25",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "TargetObject": "HKLM\\SYSTEM\\CurrentControlSet\\Control\\MiniNt",
          "EventType": "CreateKey"
        },
        {
          "NewName": "HKLM\\SYSTEM\\CurrentControlSet\\Control\\MiniNt"
        }
      ],
      "condition": "selection"
    },
    "fields": [
      "EventID",
      "Image",
      "TargetObject",
      "NewName"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wdigest CredGuard Registry Modification",
    "id": 1893,
    "status": "test",
    "description": "Detects potential malicious modification of the property value of IsCredGuardEnabled from\nHKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest to disable Cred Guard on a system.\nThis is usually used with UseLogonCredential to manipulate the caching credentials.\n",
    "references": [
      "https://teamhydra.blog/2020/08/25/bypassing-credential-guard/"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2019/08/25",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\IsCredGuardEnabled"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Esentutl Volume Shadow Copy Service Keys",
    "id": 1894,
    "status": "test",
    "description": "Detects the volume shadow copy service initialization and processing via esentutl. Registry keys such as HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\VSS\\\\Diag\\\\VolSnap\\\\Volume are captured.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md#atomic-test-3---esentutlexe-sam-copy"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/10/20",
    "modified": "2022/12/25",
    "tags": [
      "attack.credential_access",
      "attack.t1003.002"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "System\\CurrentControlSet\\Services\\VSS",
        "Image|endswith": "esentutl.exe"
      },
      "filter": {
        "TargetObject|contains": "System\\CurrentControlSet\\Services\\VSS\\Start"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Windows Credential Editor Registry",
    "id": 1895,
    "status": "test",
    "description": "Detects the use of Windows Credential Editor (WCE)",
    "references": [
      "https://www.ampliasecurity.com/research/windows-credentials-editor/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/12/31",
    "modified": "2021/11/27",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001",
      "attack.s0005"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "Services\\WCESERVICE\\Start"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "HybridConnectionManager Service Installation - Registry",
    "id": 1896,
    "status": "test",
    "description": "Detects the installation of the Azure Hybrid Connection Manager service to allow remote code execution from Azure function.",
    "references": [
      "https://twitter.com/Cyb3rWard0g/status/1381642789369286662"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2021/04/12",
    "modified": "2022/11/27",
    "tags": [
      "attack.resource_development",
      "attack.t1608"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "TargetObject|contains": "\\Services\\HybridConnectionManager"
      },
      "selection2": {
        "EventType": "SetValue",
        "Details|contains": "Microsoft.HybridConnectionManager.Listener.exe"
      },
      "condition": "selection1 or selection2"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Qakbot Registry Activity",
    "id": 1897,
    "status": "test",
    "description": "Detects a registry key used by IceID in a campaign that distributes malicious OneNote files",
    "references": [
      "https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution"
    ],
    "author": "Hieu Tran",
    "date": "2023/03/13",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Software\\firm\\soft\\Name"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Registry Entries For Azorult Malware",
    "id": 1898,
    "status": "test",
    "description": "Detects the presence of a registry key created during Azorult execution",
    "references": [
      "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/trojan.win32.azoruit.a"
    ],
    "author": "Trent Liffick",
    "date": "2020/05/08",
    "modified": "2021/11/27",
    "tags": [
      "attack.execution",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": {
        "EventID": [
          12,
          13
        ],
        "TargetObject|contains": "SYSTEM\\",
        "TargetObject|endswith": "\\services\\localNETService"
      },
      "condition": "selection"
    },
    "fields": [
      "Image",
      "TargetObject",
      "TargetDetails"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "FlowCloud Malware",
    "id": 1899,
    "status": "test",
    "description": "Detects FlowCloud malware from threat group TA410.",
    "references": [
      "https://www.proofpoint.com/us/blog/threat-insight/ta410-group-behind-lookback-attacks-against-us-utilities-sector-returns-new"
    ],
    "author": "NVISO",
    "date": "2020/06/09",
    "modified": "2022/10/09",
    "tags": [
      "attack.persistence",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": [
        {
          "TargetObject": [
            "HKLM\\HARDWARE\\{804423C2-F490-4ac3-BFA5-13DEDE63A71A}",
            "HKLM\\HARDWARE\\{A5124AF5-DF23-49bf-B0ED-A18ED3DEA027}",
            "HKLM\\HARDWARE\\{2DB80286-1784-48b5-A751-B6ED1F490303}"
          ]
        },
        {
          "TargetObject|startswith": "HKLM\\SYSTEM\\Setup\\PrintResponsor\\"
        }
      ],
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "PrinterNightmare Mimikatz Driver Name",
    "id": 1900,
    "status": "test",
    "description": "Detects static QMS 810 and mimikatz driver name used by Mimikatz as exploited in CVE-2021-1675 and CVE-2021-34527",
    "references": [
      "https://github.com/gentilkiwi/mimikatz/commit/c21276072b3f2a47a21e215a46962a17d54b3760",
      "https://www.lexjansen.com/sesug/1993/SESUG93035.pdf",
      "https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-rprn/4464eaf0-f34f-40d5-b970-736437a21913",
      "https://nvd.nist.gov/vuln/detail/cve-2021-1675",
      "https://nvd.nist.gov/vuln/detail/cve-2021-34527"
    ],
    "author": "Markus Neis, @markus_neis, Florian Roth",
    "date": "2021/07/04",
    "modified": "2023/06/12",
    "tags": [
      "attack.execution",
      "attack.t1204",
      "cve.2021.1675",
      "cve.2021.34527"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Control\\Print\\Environments\\Windows x64\\Drivers\\Version-3\\QMS 810\\",
          "\\Control\\Print\\Environments\\Windows x64\\Drivers\\Version-3\\mimikatz"
        ]
      },
      "selection_alt": {
        "TargetObject|contains|all": [
          "legitprinter",
          "\\Control\\Print\\Environments\\Windows"
        ]
      },
      "selection_print": {
        "TargetObject|contains": [
          "\\Control\\Print\\Environments",
          "\\CurrentVersion\\Print\\Printers"
        ]
      },
      "selection_kiwi": {
        "TargetObject|contains": [
          "Gentil Kiwi",
          "mimikatz printer",
          "Kiwi Legit Printer"
        ]
      },
      "condition": "selection or selection_alt or (selection_print and selection_kiwi)"
    },
    "falsepositives": [
      "Legitimate installation of printer driver QMS 810, Texas Instruments microLaser printer (unlikely)"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Path To Screensaver Binary Modified",
    "id": 1901,
    "status": "test",
    "description": "Detects value modification of registry key containing path to binary used as screensaver.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.002/T1546.002.md",
      "https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf"
    ],
    "author": "Bartlomiej Czyz @bczyz1, oscd.community",
    "date": "2020/10/11",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1546.002"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Control Panel\\Desktop\\SCRNSAVE.EXE"
      },
      "filter": {
        "Image|endswith": [
          "\\rundll32.exe",
          "\\explorer.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate modification of screensaver"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Narrator's Feedback-Hub Persistence",
    "id": 1902,
    "status": "test",
    "description": "Detects abusing Windows 10 Narrator's Feedback-Hub",
    "references": [
      "https://giuliocomi.blogspot.com/2019/10/abusing-windows-10-narrators-feedback.html"
    ],
    "author": "Dmitriy Lifanov, oscd.community",
    "date": "2019/10/25",
    "modified": "2022/03/26",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "EventType": "DeleteValue",
        "TargetObject|endswith": "\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\DelegateExecute"
      },
      "selection2": {
        "TargetObject|endswith": "\\AppXypsaf9f1qserqevf0sws76dx4k9a5206\\Shell\\open\\command\\(Default)"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NetNTLM Downgrade Attack - Registry",
    "id": 1903,
    "status": "test",
    "description": "Detects NetNTLM downgrade attack",
    "references": [
      "https://web.archive.org/web/20171113231705/https://www.optiv.com/blog/post-exploitation-using-netntlm-downgrade-attacks"
    ],
    "author": "Florian Roth (Nextron Systems), wagga",
    "date": "2018/03/20",
    "modified": "2022/11/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "SYSTEM\\",
          "ControlSet",
          "\\Control\\Lsa"
        ],
        "TargetObject|endswith": [
          "\\lmcompatibilitylevel",
          "\\NtlmMinClientSec",
          "\\RestrictSendingNTLMTraffic"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New DLL Added to AppCertDlls Registry Key",
    "id": 1904,
    "status": "test",
    "description": "Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs value in the Registry key can be abused to obtain persistence and privilege escalation\nby causing a malicious DLL to be loaded and run in the context of separate processes on the computer.\n",
    "references": [
      "http://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/",
      "https://eqllib.readthedocs.io/en/latest/analytics/14f90406-10a0-4d36-a672-31cabe149f2f.html"
    ],
    "author": "Ilyas Ochkov, oscd.community",
    "date": "2019/10/25",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.t1546.009"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "TargetObject": "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls"
        },
        {
          "NewName": "HKLM\\SYSTEM\\CurentControlSet\\Control\\Session Manager\\AppCertDlls"
        }
      ],
      "condition": "selection"
    },
    "fields": [
      "EventID",
      "Image",
      "TargetObject",
      "NewName"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New DLL Added to AppInit_DLLs Registry Key",
    "id": 1905,
    "status": "test",
    "description": "DLLs that are specified in the AppInit_DLLs value in the Registry key HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll",
    "references": [
      "https://eqllib.readthedocs.io/en/latest/analytics/822dc4c5-b355-4df8-bd37-29c458997b8f.html"
    ],
    "author": "Ilyas Ochkov, oscd.community, Tim Shelton",
    "date": "2019/10/25",
    "modified": "2022/12/25",
    "tags": [
      "attack.persistence",
      "attack.t1546.010"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": [
        {
          "TargetObject|endswith": [
            "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls",
            "\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls"
          ]
        },
        {
          "NewName|endswith": [
            "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls",
            "\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_Dlls"
          ]
        }
      ],
      "filter": {
        "Details": "(Empty)"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Office Application Startup - Office Test",
    "id": 1906,
    "status": "test",
    "description": "Detects the addition of office test registry that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started",
    "references": [
      "https://unit42.paloaltonetworks.com/unit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks/"
    ],
    "author": "omkar72",
    "date": "2020/10/25",
    "modified": "2023/11/08",
    "tags": [
      "attack.persistence",
      "attack.t1137.002"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Software\\Microsoft\\Office test\\Special\\Perf"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Registry Trust Record Modification",
    "id": 1907,
    "related": [
      {
        "id": "a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Alerts on trust record modification within the registry, indicating usage of macros",
    "references": [
      "https://outflank.nl/blog/2018/01/16/hunting-for-evil-detect-macros-being-executed/",
      "http://az4n6.blogspot.com/2016/02/more-on-trust-records-macros-and.html",
      "https://twitter.com/inversecos/status/1494174785621819397"
    ],
    "author": "Antonlovesdnb, Trent Liffick (@tliffick)",
    "date": "2020/02/19",
    "modified": "2023/06/21",
    "tags": [
      "attack.initial_access",
      "attack.t1566.001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Security\\Trusted Documents\\TrustRecords"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "This will alert on legitimate macro usage as well, additional tuning is required"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Registry Persistence Mechanisms in Recycle Bin",
    "id": 1908,
    "status": "test",
    "description": "Detects persistence registry keys for Recycle Bin",
    "references": [
      "https://github.com/vxunderground/VXUG-Papers/blob/751edb8d50f95bd7baa730adf2c6c3bb1b034276/The%20Persistence%20Series/Persistence%20via%20Recycle%20Bin/Persistence_via_Recycle_Bin.pdf",
      "https://persistence-info.github.io/Data/recyclebin.html",
      "https://www.hexacorn.com/blog/2018/05/28/beyond-good-ol-run-key-part-78-2/"
    ],
    "author": "frack113",
    "date": "2021/11/18",
    "modified": "2022/12/06",
    "tags": [
      "attack.persistence",
      "attack.t1547"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection_create": {
        "EventType": "RenameKey",
        "NewName|contains": "\\CLSID\\{645FF040-5081-101B-9F08-00AA002F954E}\\shell\\open"
      },
      "selection_set": {
        "EventType": "SetValue",
        "TargetObject|contains": "\\CLSID\\{645FF040-5081-101B-9F08-00AA002F954E}\\shell\\open\\command\\(Default)"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PortProxy Registry Key",
    "id": 1909,
    "status": "test",
    "description": "Detects the modification of PortProxy registry key which is used for port forwarding. For command execution see rule win_netsh_port_fwd.yml.",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html",
      "https://adepts.of0x.cc/netsh-portproxy-code/",
      "https://www.dfirnotes.net/portproxy_detection/"
    ],
    "author": "Andreas Hunkeler (@Karneades)",
    "date": "2021/06/22",
    "modified": "2022/10/09",
    "tags": [
      "attack.lateral_movement",
      "attack.defense_evasion",
      "attack.command_and_control",
      "attack.t1090"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection_registry": {
        "TargetObject": "HKLM\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\\tcp"
      },
      "condition": "selection_registry"
    },
    "falsepositives": [
      "WSL2 network bridge PowerShell script used for WSL/Kubernetes/Docker (e.g. https://github.com/microsoft/WSL/issues/4150#issuecomment-504209723)",
      "Synergy Software KVM (https://symless.com/synergy)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "RedMimicry Winnti Playbook Registry Manipulation",
    "id": 1910,
    "status": "test",
    "description": "Detects actions caused by the RedMimicry Winnti playbook",
    "references": [
      "https://redmimicry.com"
    ],
    "author": "Alexander Rausch",
    "date": "2020/06/24",
    "modified": "2021/11/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "HKLM\\SOFTWARE\\Microsoft\\HTMLHelp\\data"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "WINEKEY Registry Modification",
    "id": 1911,
    "status": "test",
    "description": "Detects potential malicious modification of run keys by winekey or team9 backdoor",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"
    ],
    "author": "omkar72",
    "date": "2020/10/30",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.t1547"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Backup Mgr"
      },
      "condition": "selection"
    },
    "fields": [
      "ComputerName",
      "Image",
      "EventType",
      "TargetObject"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Run Once Task Configuration in Registry",
    "id": 1912,
    "status": "test",
    "description": "Rule to detect the configuration of Run Once registry key. Configured payload can be run by runonce.exe /AlternateShellStartup",
    "references": [
      "https://twitter.com/pabraeken/status/990717080805789697",
      "https://lolbas-project.github.io/lolbas/Binaries/Runonce/"
    ],
    "author": "Avneet Singh @v3t0_, oscd.community",
    "date": "2020/11/15",
    "modified": "2022/04/04",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_event"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components",
        "TargetObject|endswith": "\\StubPath"
      },
      "filter_chrome": {
        "Details|startswith": "\"C:\\Program Files\\Google\\Chrome\\Application\\",
        "Details|contains": "\\Installer\\chrmstp.exe\" --configure-user-settings --verbose-logging --system-level"
      },
      "filter_edge": {
        "Details|startswith": [
          "\"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\",
          "\"C:\\Program Files\\Microsoft\\Edge\\Application\\"
        ],
        "Details|endswith": "\\Installer\\setup.exe\" --configure-user-settings --verbose-logging --system-level --msedge --channel=stable"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate modification of the registry key by legitimate program"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Shell Open Registry Keys Manipulation",
    "id": 1913,
    "status": "test",
    "description": "Detects the shell open key manipulation (exefile and ms-settings) used for persistence and the pattern of UAC Bypass using fodhelper.exe, computerdefaults.exe, slui.exe via registry keys (e.g. UACMe 33 or 62)",
    "references": [
      "https://github.com/hfiref0x/UACME",
      "https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/",
      "https://github.com/RhinoSecurityLabs/Aggressor-Scripts/tree/master/UACBypass",
      "https://tria.ge/211119-gs7rtshcfr/behavioral2 [Lokibot sample from Nov 2021]"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2022/01/13",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "attack.t1546.001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "EventType": "SetValue",
        "TargetObject|endswith": "Classes\\ms-settings\\shell\\open\\command\\SymbolicLinkValue",
        "Details|contains": "\\Software\\Classes\\{"
      },
      "selection2": {
        "TargetObject|endswith": "Classes\\ms-settings\\shell\\open\\command\\DelegateExecute"
      },
      "selection3": {
        "EventType": "SetValue",
        "TargetObject|endswith": [
          "Classes\\ms-settings\\shell\\open\\command\\(Default)",
          "Classes\\exefile\\shell\\open\\command\\(Default)"
        ]
      },
      "filter_sel3": {
        "Details": "(Empty)"
      },
      "condition": "selection1 or selection2 or (selection3 and not filter_sel3)"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Via LSASS SilentProcessExit Technique",
    "id": 1914,
    "related": [
      {
        "id": "36803969-5421-41ec-b92f-8500f79c23b0",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changes to the Registry in which a monitor program gets registered to dump the memory of the lsass.exe process",
    "references": [
      "https://www.deepinstinct.com/2021/02/16/lsass-memory-dumps-are-stealthier-than-ever-before-part-2/",
      "https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/02/26",
    "modified": "2022/12/19",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\lsass.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Security Support Provider (SSP) Added to LSA Configuration",
    "id": 1915,
    "status": "test",
    "description": "Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.",
    "references": [
      "https://powersploit.readthedocs.io/en/latest/Persistence/Install-SSP/"
    ],
    "author": "iwillkeepwatch",
    "date": "2019/01/18",
    "modified": "2022/08/09",
    "tags": [
      "attack.persistence",
      "attack.t1547.005"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection_registry": {
        "TargetObject": [
          "HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages",
          "HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages"
        ]
      },
      "exclusion_images": {
        "Image": [
          "C:\\Windows\\system32\\msiexec.exe",
          "C:\\Windows\\syswow64\\MsiExec.exe"
        ]
      },
      "condition": "selection_registry and not exclusion_images"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Sticky Key Like Backdoor Usage - Registry",
    "id": 1916,
    "status": "test",
    "description": "Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen",
    "references": [
      "https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/",
      "https://bazaar.abuse.ch/sample/6f3aa9362d72e806490a8abce245331030d1ab5ac77e400dd475748236a6cc81/"
    ],
    "author": "Florian Roth (Nextron Systems), @twjackomo, Jonhnathan Ribeiro, oscd.community",
    "date": "2018/03/15",
    "modified": "2022/11/26",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.t1546.008",
      "car.2014-11-003",
      "car.2014-11-008"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection_registry": {
        "TargetObject|endswith": [
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\Magnify.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\Narrator.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\atbroker.exe\\Debugger",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\HelpPane.exe\\Debugger"
        ]
      },
      "condition": "selection_registry"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "Atbroker Registry Change",
    "id": 1917,
    "status": "test",
    "description": "Detects creation/modification of Assistive Technology applications and persistence with usage of 'at'",
    "references": [
      "http://www.hexacorn.com/blog/2016/07/22/beyond-good-ol-run-key-part-42/",
      "https://lolbas-project.github.io/lolbas/Binaries/Atbroker/"
    ],
    "author": "Mateusz Wydra, oscd.community",
    "date": "2020/10/13",
    "modified": "2023/01/19",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218",
      "attack.persistence",
      "attack.t1547"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\ATs",
          "Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\Configuration"
        ]
      },
      "filter_atbroker": {
        "Image": "C:\\Windows\\system32\\atbroker.exe",
        "TargetObject|contains": "\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\Configuration",
        "Details": "(Empty)"
      },
      "filter_uninstallers": {
        "Image|startswith": "C:\\Windows\\Installer\\MSI",
        "TargetObject|contains": "Software\\Microsoft\\Windows NT\\CurrentVersion\\Accessibility\\ATs"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Creation of non-default, legitimate at usage"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Run Key from Download",
    "id": 1918,
    "status": "test",
    "description": "Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories",
    "references": [
      "https://app.any.run/tasks/c5bef5b7-f484-4c43-9cf3-d5c5c7839def/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/10/01",
    "modified": "2021/11/27",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "Image|contains": [
          "\\Downloads\\",
          "\\Temporary Internet Files\\Content.Outlook\\",
          "\\Local Settings\\Temporary Internet Files\\"
        ],
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Software installers downloaded and used by users"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DLL Load via LSASS",
    "id": 1919,
    "status": "test",
    "description": "Detects a method to load DLL via LSASS process using an undocumented Registry key",
    "references": [
      "https://blog.xpnsec.com/exploring-mimikatz-part-1/",
      "https://twitter.com/SBousseaden/status/1183745981189427200"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/10/16",
    "modified": "2022/04/21",
    "tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1547.008"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt",
          "\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt"
        ]
      },
      "filter_domain_controller": {
        "Image": "C:\\Windows\\system32\\lsass.exe",
        "Details": [
          "%%systemroot%%\\system32\\ntdsa.dll",
          "%%systemroot%%\\system32\\lsadb.dll"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Camera and Microphone Access",
    "id": 1920,
    "status": "test",
    "description": "Detects Processes accessing the camera and microphone from suspicious folder",
    "references": [
      "https://medium.com/@7a616368/can-you-track-processes-accessing-the-camera-and-microphone-7e6885b37072"
    ],
    "author": "Den Iuzvyk",
    "date": "2020/06/07",
    "modified": "2022/10/09",
    "tags": [
      "attack.collection",
      "attack.t1125",
      "attack.t1123"
    ],
    "logsource": {
      "category": "registry_event",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "TargetObject|contains|all": [
          "\\Software\\Microsoft\\Windows\\CurrentVersion\\CapabilityAccessManager\\ConsentStore\\",
          "\\NonPackaged"
        ]
      },
      "selection_2": {
        "TargetObject|contains": [
          "microphone",
          "webcam"
        ]
      },
      "selection_3": {
        "TargetObject|contains": [
          ":#Windows#Temp#",
          ":#$Recycle.bin#",
          ":#Temp#",
          ":#Users#Public#",
          ":#Users#Default#",
          ":#Users#Desktop#"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely, there could be conferencing software running from a Temp folder accessing the devices"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Enable Remote Connection Between Anonymous Computer - AllowAnonymousCallback",
    "id": 1921,
    "status": "experimental",
    "description": "Detects enabling of the \"AllowAnonymousCallback\" registry value, which allows a remote connection between computers that do not have a trust relationship.",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/wmisdk/connecting-to-wmi-remotely-starting-with-vista"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/11/03",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Microsoft\\WBEM\\CIMOM\\AllowAnonymousCallback",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Registry Persistence via Service in Safe Mode",
    "id": 1922,
    "status": "experimental",
    "description": "Detects the modification of the registry to allow a driver or service to persist in Safe Mode.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-33---windows-add-registry-value-to-load-service-in-safe-mode-without-network",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-34---windows-add-registry-value-to-load-service-in-safe-mode-with-network"
    ],
    "author": "frack113",
    "date": "2022/04/04",
    "modified": "2023/10/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": [
          "HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\",
          "HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Network\\"
        ],
        "TargetObject|endswith": "\\(Default)",
        "Details": "Service"
      },
      "filter_sophos": {
        "Image": "C:\\WINDOWS\\system32\\msiexec.exe",
        "TargetObject": [
          "HKLM\\System\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\SAVService\\(Default)",
          "HKLM\\System\\CurrentControlSet\\Control\\SafeBoot\\Network\\SAVService\\(Default)"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add Port Monitor Persistence in Registry",
    "id": 1923,
    "status": "experimental",
    "description": "Adversaries may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.\nA port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.010/T1547.010.md"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.010"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Control\\Print\\Monitors\\",
        "Details|endswith": ".dll"
      },
      "filter_cutepdf": {
        "Image": "C:\\Windows\\System32\\spoolsv.exe",
        "TargetObject|contains": "\\System\\CurrentControlSet\\Control\\Print\\Monitors\\CutePDF Writer Monitor v4.0\\Driver",
        "Details": "cpwmon64_v40.dll",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "filter_leg1": {
        "TargetObject|contains": "Control\\Print\\Monitors\\MONVNC\\Driver"
      },
      "filter_leg2": {
        "TargetObject|contains|all": [
          "Control\\Print\\Environments\\",
          "\\Drivers\\",
          "\\VNC Printer"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add Debugger Entry To AeDebug For Persistence",
    "id": 1924,
    "status": "experimental",
    "description": "Detects when an attacker adds a new \"Debugger\" value to the \"AeDebug\" key in order to achieve persistence which will get invoked when an application crashes",
    "references": [
      "https://persistence-info.github.io/Data/aedebug.html",
      "https://docs.microsoft.com/en-us/windows/win32/debug/configuring-automatic-debugging"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AeDebug\\Debugger",
        "Details|endswith": ".dll"
      },
      "filter": {
        "Details": "\"C:\\WINDOWS\\system32\\vsjitdebugger.exe\" -p %ld -e %ld -j 0x%p"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate use of the key to setup a debugger. Which is often the case on developers machines"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Allow RDP Remote Assistance Feature",
    "id": 1925,
    "status": "experimental",
    "description": "Detect enable rdp feature to allow specific user to rdp connect on the targeted machine",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1112/T1112.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "System\\CurrentControlSet\\Control\\Terminal Server\\fAllowToGetHelp",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the feature (alerts should be investigated either way)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential AMSI COM Server Hijacking",
    "id": 1926,
    "status": "experimental",
    "description": "Detects changes to the AMSI come server registry key in order disable AMSI scanning functionalities. When AMSI attempts to starts its COM component, it will query its registered CLSID and return a non-existent COM server. This causes a load failure and prevents any scanning methods from being accessed, ultimately rendering AMSI useless",
    "references": [
      "https://enigma0x3.net/2017/07/19/bypassing-amsi-via-com-server-hijacking/",
      "https://github.com/r00t-3xp10it/hacking-material-books/blob/43cb1e1932c16ff1f58b755bc9ab6b096046853f/obfuscation/simple_obfuscation.md#amsi-comreg-bypass"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\CLSID\\{fdb00e52-a214-4aa1-8fba-4357bb0072ec}\\InProcServer32\\(Default)"
      },
      "filter": {
        "Details": "%windir%\\system32\\amsi.dll"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Classes Autorun Keys Modification",
    "id": 1927,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_classes_base": {
        "TargetObject|contains": "\\Software\\Classes"
      },
      "selection_classes_target": {
        "TargetObject|contains": [
          "\\Folder\\ShellEx\\ExtShellFolderViews",
          "\\Folder\\ShellEx\\DragDropHandlers",
          "\\Folder\\Shellex\\ColumnHandlers",
          "\\Filter",
          "\\Exefile\\Shell\\Open\\Command\\(Default)",
          "\\Directory\\Shellex\\DragDropHandlers",
          "\\Directory\\Shellex\\CopyHookHandlers",
          "\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance",
          "\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance",
          "\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance",
          "\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance",
          "\\Classes\\AllFileSystemObjects\\ShellEx\\DragDropHandlers",
          "\\.exe",
          "\\.cmd",
          "\\ShellEx\\PropertySheetHandlers",
          "\\ShellEx\\ContextMenuHandlers"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_msoffice": {
        "Details": "{807583E5-5146-11D5-A672-00B0D022E945}"
      },
      "filter_drivers": {
        "Image": "C:\\Windows\\System32\\drvinst.exe"
      },
      "filter_svchost": {
        "Image": "C:\\Windows\\System32\\svchost.exe",
        "TargetObject|contains": "\\lnkfile\\shellex\\ContextMenuHandlers\\"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Common Autorun Keys Modification",
    "id": 1928,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d",
      "https://persistence-info.github.io/Data/userinitmprlogonscript.html"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split), wagga (name)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "main_selection": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows CE Services\\AutoStart",
          "\\Software\\Wow6432Node\\Microsoft\\Command Processor\\Autorun",
          "\\SOFTWARE\\Wow6432Node\\Microsoft\\Active Setup\\Installed Components",
          "\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnDisconnect",
          "\\SOFTWARE\\Microsoft\\Windows CE Services\\AutoStartOnConnect",
          "\\SYSTEM\\Setup\\CmdLine",
          "\\Software\\Microsoft\\Ctf\\LangBarAddin",
          "\\Software\\Microsoft\\Command Processor\\Autorun",
          "\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components",
          "\\SOFTWARE\\Classes\\Protocols\\Handler",
          "\\SOFTWARE\\Classes\\Protocols\\Filter",
          "\\SOFTWARE\\Classes\\Htmlfile\\Shell\\Open\\Command\\(Default)",
          "\\Environment\\UserInitMprLogonScript",
          "\\SOFTWARE\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\Scrnsave.exe",
          "\\Software\\Microsoft\\Internet Explorer\\UrlSearchHooks",
          "\\SOFTWARE\\Microsoft\\Internet Explorer\\Desktop\\Components",
          "\\Software\\Classes\\Clsid\\{AB8902B4-09CA-4bb6-B78D-A8F59079A8D5}\\Inprocserver32",
          "\\Control Panel\\Desktop\\Scrnsave.exe"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_msoffice": [
        {
          "TargetObject|contains": [
            "\\Office\\ClickToRun\\REGISTRY\\MACHINE\\Software\\Classes\\PROTOCOLS\\Handler\\",
            "\\ClickToRunStore\\HKMU\\SOFTWARE\\Classes\\PROTOCOLS\\Handler\\"
          ]
        },
        {
          "Details": [
            "{314111c7-a502-11d2-bbca-00c04f8ec294}",
            "{3459B272-CC19-4448-86C9-DDC3B4B2FAD3}",
            "{42089D2D-912D-4018-9087-2B87803E93FB}",
            "{5504BE45-A83B-4808-900A-3A5C36E7F77A}",
            "{807583E5-5146-11D5-A672-00B0D022E945}"
          ]
        }
      ],
      "filter_chrome": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{8A69D345-D564-463c-AFF1-A69D9E530F96}"
      },
      "filter_edge": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{9459C573-B17A-45AE-9F64-1857B5D58CEE}"
      },
      "filter_IE": {
        "TargetObject|contains": "\\Software\\Microsoft\\Active Setup\\Installed Components\\{89820200-ECBD-11cf-8B85-00AA005B4383}"
      },
      "filter_image": {
        "Image": [
          "C:\\Windows\\System32\\poqexec.exe",
          "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"
        ]
      },
      "filter_office": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "condition": "main_selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CurrentControlSet Autorun Keys Modification",
    "id": 1929,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "system_control_base": {
        "TargetObject|contains": "\\SYSTEM\\CurrentControlSet\\Control"
      },
      "system_control_keys": {
        "TargetObject|contains": [
          "\\Terminal Server\\WinStations\\RDP-Tcp\\InitialProgram",
          "\\Terminal Server\\Wds\\rdpwd\\StartupPrograms",
          "\\SecurityProviders\\SecurityProviders",
          "\\SafeBoot\\AlternateShell",
          "\\Print\\Providers",
          "\\Print\\Monitors",
          "\\NetworkProvider\\Order",
          "\\Lsa\\Notification Packages",
          "\\Lsa\\Authentication Packages",
          "\\BootVerificationProgram\\ImagePath"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_cutepdf": {
        "Image": "C:\\Windows\\System32\\spoolsv.exe",
        "TargetObject|contains": "\\Print\\Monitors\\CutePDF Writer Monitor",
        "Details": [
          "cpwmon64_v40.dll",
          "CutePDF Writer"
        ]
      },
      "filter_onenote": {
        "Image": "C:\\Windows\\System32\\spoolsv.exe",
        "TargetObject|contains": "Print\\Monitors\\Appmon\\Ports\\Microsoft.Office.OneNote_",
        "User|contains": [
          "AUTHORI",
          "AUTORI"
        ]
      },
      "filter_poqexec": {
        "Image": "C:\\Windows\\System32\\poqexec.exe",
        "TargetObject|endswith": "\\NetworkProvider\\Order\\ProviderOrder"
      },
      "filter_realvnc": {
        "Image": "C:\\Windows\\System32\\spoolsv.exe",
        "TargetObject|endswith": "\\Print\\Monitors\\MONVNC\\Driver",
        "Details": "VNCpm.dll"
      },
      "condition": "all of system_control_* and not 1 of filter_*"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CurrentVersion Autorun Keys Modification",
    "id": 1930,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d",
      "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "current_version_base": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion"
      },
      "current_version_keys": {
        "TargetObject|contains": [
          "\\ShellServiceObjectDelayLoad",
          "\\Run\\",
          "\\RunOnce\\",
          "\\RunOnceEx\\",
          "\\RunServices\\",
          "\\RunServicesOnce\\",
          "\\Policies\\System\\Shell",
          "\\Policies\\Explorer\\Run",
          "\\Group Policy\\Scripts\\Startup",
          "\\Group Policy\\Scripts\\Shutdown",
          "\\Group Policy\\Scripts\\Logon",
          "\\Group Policy\\Scripts\\Logoff",
          "\\Explorer\\ShellServiceObjects",
          "\\Explorer\\ShellIconOverlayIdentifiers",
          "\\Explorer\\ShellExecuteHooks",
          "\\Explorer\\SharedTaskScheduler",
          "\\Explorer\\Browser Helper Objects",
          "\\Authentication\\PLAP Providers",
          "\\Authentication\\Credential Providers",
          "\\Authentication\\Credential Provider Filters"
        ]
      },
      "filter_all": [
        {
          "Details": "(Empty)"
        },
        {
          "TargetObject|endswith": "\\NgcFirst\\ConsecutiveSwitchCount"
        },
        {
          "Image|endswith": [
            "\\AppData\\Local\\Microsoft\\OneDrive\\Update\\OneDriveSetup.exe",
            "\\AppData\\Roaming\\Spotify\\Spotify.exe",
            "\\AppData\\Local\\WebEx\\WebexHost.exe"
          ]
        },
        {
          "Image": [
            "C:\\WINDOWS\\system32\\devicecensus.exe",
            "C:\\Windows\\system32\\winsat.exe",
            "C:\\Program Files\\Microsoft OneDrive\\StandaloneUpdater\\OneDriveSetup.exe",
            "C:\\Program Files\\Microsoft OneDrive\\Update\\OneDriveSetup.exe",
            "C:\\Program Files (x86)\\Microsoft OneDrive\\Update\\OneDriveSetup.exe",
            "C:\\Program Files\\KeePass Password Safe 2\\ShInstUtil.exe",
            "C:\\Program Files\\Everything\\Everything.exe",
            "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"
          ]
        }
      ],
      "filter_logonui": {
        "Image": "C:\\Windows\\system32\\LogonUI.exe",
        "TargetObject|contains": [
          "\\Authentication\\Credential Providers\\{D6886603-9D2F-4EB2-B667-1971041FA96B}\\",
          "\\Authentication\\Credential Providers\\{BEC09223-B018-416D-A0AC-523971B639F5}\\",
          "\\Authentication\\Credential Providers\\{8AF662BF-65A0-4D0A-A540-A338A999D36F}\\",
          "\\Authentication\\Credential Providers\\{27FBDB57-B613-4AF2-9D7E-4FA7A66C21AD}\\"
        ]
      },
      "filter_edge": {
        "Image|startswith": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\Install\\",
          "C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\",
          "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"
        ]
      },
      "filter_dropbox": {
        "Image": "C:\\Windows\\system32\\regsvr32.exe",
        "TargetObject|contains": "DropboxExt",
        "Details|endswith": "A251-47B7-93E1-CDD82E34AF8B}"
      },
      "filter_opera": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Opera Browser Assistant",
        "Details": "C:\\Program Files\\Opera\\assistant\\browser_assistant.exe"
      },
      "filter_itunes": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\iTunesHelper",
        "Details": "\"C:\\Program Files\\iTunes\\iTunesHelper.exe\""
      },
      "filter_zoom": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\zoommsirepair",
        "Details": "\"C:\\Program Files\\Zoom\\bin\\installer.exe\" /repair"
      },
      "filter_greenshot": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Greenshot",
        "Details": "C:\\Program Files\\Greenshot\\Greenshot.exe"
      },
      "filter_googledrive1": {
        "TargetObject|endswith": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\GoogleDriveFS",
        "Details|startswith": "C:\\Program Files\\Google\\Drive File Stream\\",
        "Details|contains": "\\GoogleDriveFS.exe"
      },
      "filter_googledrive2": {
        "TargetObject|contains": "GoogleDrive",
        "Details": [
          "{CFE8B367-77A7-41D7-9C90-75D16D7DC6B6}",
          "{A8E52322-8734-481D-A7E2-27B309EF8D56}",
          "{C973DA94-CBDF-4E77-81D1-E5B794FBD146}",
          "{51EF1569-67EE-4AD6-9646-E726C3FFC8A2}"
        ]
      },
      "filter_onedrive": {
        "Details|startswith": [
          "C:\\Windows\\system32\\cmd.exe /q /c rmdir /s /q \"C:\\Users\\",
          "C:\\Windows\\system32\\cmd.exe /q /c del /q \"C:\\Users\\"
        ],
        "Details|contains": "\\AppData\\Local\\Microsoft\\OneDrive\\"
      },
      "filter_python": {
        "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\{",
        "Details|contains|all": [
          "\\AppData\\Local\\Package Cache\\{",
          "}\\python-"
        ],
        "Details|endswith": ".exe\" /burn.runonce"
      },
      "filter_officeclicktorun": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_defender": {
        "Image": "C:\\Program Files\\Windows Defender\\MsMpEng.exe"
      },
      "filter_teams": {
        "Image|endswith": "\\Microsoft\\Teams\\current\\Teams.exe",
        "Details|contains": "\\Microsoft\\Teams\\Update.exe --processStart "
      },
      "filter_ctfmon": {
        "Image": "C:\\Windows\\system32\\userinit.exe",
        "Details": "ctfmon.exe /n"
      },
      "filter_AVG": {
        "Image|startswith": "C:\\Program Files\\AVG\\Antivirus\\Setup\\",
        "Details": [
          "\"C:\\Program Files\\AVG\\Antivirus\\AvLaunch.exe\" /gui",
          "\"C:\\Program Files (x86)\\AVG\\Antivirus\\AvLaunch.exe\" /gui",
          "{472083B0-C522-11CF-8763-00608CC02F24}"
        ]
      },
      "filter_aurora_dashboard": {
        "Image|endswith": [
          "\\aurora-agent-64.exe",
          "\\aurora-agent.exe"
        ],
        "TargetObject|endswith": "\\Microsoft\\Windows\\CurrentVersion\\Run\\aurora-dashboard",
        "Details": "C:\\Program Files\\Aurora-Agent\\tools\\aurora-dashboard.exe"
      },
      "filter_everything": {
        "TargetObject|endswith": "\\Microsoft\\Windows\\CurrentVersion\\Run\\Everything",
        "Details|endswith": "\\Everything\\Everything.exe\" -startup"
      },
      "condition": "all of current_version_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CurrentVersion NT Autorun Keys Modification",
    "id": 1931,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "nt_current_version_base": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"
      },
      "nt_current_version": {
        "TargetObject|contains": [
          "\\Winlogon\\VmApplet",
          "\\Winlogon\\Userinit",
          "\\Winlogon\\Taskman",
          "\\Winlogon\\Shell",
          "\\Winlogon\\GpExtensions",
          "\\Winlogon\\AppSetup",
          "\\Winlogon\\AlternateShells\\AvailableShells",
          "\\Windows\\IconServiceLib",
          "\\Windows\\Appinit_Dlls",
          "\\Image File Execution Options",
          "\\Font Drivers",
          "\\Drivers32",
          "\\Windows\\Run",
          "\\Windows\\Load"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_legitimate_subkey": {
        "TargetObject|contains": "\\Image File Execution Options\\",
        "TargetObject|endswith": [
          "\\DisableExceptionChainValidation",
          "\\MitigationOptions"
        ]
      },
      "filter_edge": {
        "Image|startswith": "C:\\Program Files (x86)\\Microsoft\\Temp\\",
        "Image|endswith": "\\MicrosoftEdgeUpdate.exe"
      },
      "filter_msoffice": [
        {
          "TargetObject|contains": [
            "\\ClickToRunStore\\HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\",
            "\\ClickToRun\\REGISTRY\\MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\"
          ]
        },
        {
          "Image": [
            "C:\\Program Files\\Microsoft Office\\root\\integration\\integrator.exe",
            "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"
          ]
        }
      ],
      "filter_officeclicktorun": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_security_extension_dc": {
        "Image": "C:\\Windows\\system32\\svchost.exe",
        "TargetObject|contains": [
          "\\Winlogon\\GPExtensions\\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}\\PreviousPolicyAreas",
          "\\Winlogon\\GPExtensions\\{827D319E-6EAC-11D2-A4EA-00C04F79F83A}\\MaxNoGPOListChangesInterval"
        ],
        "Details": [
          "DWORD (0x00000009)",
          "DWORD (0x000003c0)"
        ]
      },
      "filter_ngen": {
        "Image|startswith": "C:\\Windows\\Microsoft.NET\\Framework",
        "Image|endswith": "\\ngen.exe"
      },
      "filter_onedrive": {
        "Image|endswith": "\\AppData\\Local\\Microsoft\\OneDrive\\StandaloneUpdater\\OneDriveSetup.exe",
        "TargetObject|endswith": "\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\Delete Cached Update Binary",
        "Details|startswith": "C:\\Windows\\system32\\cmd.exe /q /c del /q \"C:\\Users\\",
        "Details|endswith": "\\AppData\\Local\\Microsoft\\OneDrive\\Update\\OneDriveSetup.exe\""
      },
      "condition": "nt_current_version_base and nt_current_version and not 1 of filter_*"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Internet Explorer Autorun Keys Modification",
    "id": 1932,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "ie": {
        "TargetObject|contains": [
          "\\Software\\Wow6432Node\\Microsoft\\Internet Explorer",
          "\\Software\\Microsoft\\Internet Explorer"
        ]
      },
      "ie_details": {
        "TargetObject|contains": [
          "\\Toolbar",
          "\\Extensions",
          "\\Explorer Bars"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_extensions": {
        "TargetObject|contains": [
          "\\Extensions\\{2670000A-7350-4f3c-8081-5663EE0C6C49}",
          "\\Extensions\\{31D09BA0-12F5-4CCE-BE8A-2923E76605DA}",
          "\\Extensions\\{789FE86F-6FC4-46A1-9849-EDE0DB0C95CA}",
          "\\Extensions\\{A95fe080-8f5d-11d2-a20b-00aa003c157a}"
        ]
      },
      "filter_toolbar": {
        "TargetObject|endswith": [
          "\\Toolbar\\ShellBrowser\\ITBar7Layout",
          "\\Toolbar\\ShowDiscussionButton",
          "\\Toolbar\\Locked"
        ]
      },
      "condition": "ie and ie_details and not 1 of filter_*"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Office Autorun Keys Modification",
    "id": 1933,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "office": {
        "TargetObject|contains": [
          "\\Software\\Wow6432Node\\Microsoft\\Office",
          "\\Software\\Microsoft\\Office"
        ]
      },
      "office_details": {
        "TargetObject|contains": [
          "\\Word\\Addins",
          "\\PowerPoint\\Addins",
          "\\Outlook\\Addins",
          "\\Onenote\\Addins",
          "\\Excel\\Addins",
          "\\Access\\Addins",
          "test\\Special\\Perf"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_known_addins": {
        "Image|startswith": [
          "C:\\Program Files\\Microsoft Office\\",
          "C:\\Program Files (x86)\\Microsoft Office\\",
          "C:\\Windows\\System32\\msiexec.exe",
          "C:\\Windows\\System32\\regsvr32.exe"
        ],
        "TargetObject|contains": [
          "\\Excel\\Addins\\AdHocReportingExcelClientLib.AdHocReportingExcelClientAddIn.1\\",
          "\\Excel\\Addins\\ExcelPlugInShell.PowerMapConnect\\",
          "\\Excel\\Addins\\NativeShim\\",
          "\\Excel\\Addins\\NativeShim.InquireConnector.1\\",
          "\\Excel\\Addins\\PowerPivotExcelClientAddIn.NativeEntry.1\\",
          "\\Outlook\\AddIns\\AccessAddin.DC\\",
          "\\Outlook\\AddIns\\ColleagueImport.ColleagueImportAddin\\",
          "\\Outlook\\AddIns\\EvernoteCC.EvernoteContactConnector\\",
          "\\Outlook\\AddIns\\EvernoteOLRD.Connect\\",
          "\\Outlook\\Addins\\Microsoft.VbaAddinForOutlook.1\\",
          "\\Outlook\\Addins\\OcOffice.OcForms\\",
          "\\Outlook\\Addins\\\\OneNote.OutlookAddin",
          "\\Outlook\\Addins\\OscAddin.Connect\\",
          "\\Outlook\\Addins\\OutlookChangeNotifier.Connect\\",
          "\\Outlook\\Addins\\UCAddin.LyncAddin.1",
          "\\Outlook\\Addins\\UCAddin.UCAddin.1",
          "\\Outlook\\Addins\\UmOutlookAddin.FormRegionAddin\\"
        ]
      },
      "filter_officeclicktorun": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_avg": {
        "Image": "C:\\Program Files\\AVG\\Antivirus\\RegSvr.exe",
        "TargetObject|contains": "\\Microsoft\\Office\\Outlook\\Addins\\Antivirus.AsOutExt\\"
      },
      "condition": "office and office_details and not 1 of filter_*"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Session Manager Autorun Keys Modification",
    "id": 1934,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001",
      "attack.t1546.009"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "session_manager_base": {
        "TargetObject|contains": "\\System\\CurrentControlSet\\Control\\Session Manager"
      },
      "session_manager": {
        "TargetObject|contains": [
          "\\SetupExecute",
          "\\S0InitialCommand",
          "\\KnownDlls",
          "\\Execute",
          "\\BootExecute",
          "\\AppCertDlls"
        ]
      },
      "filter": {
        "Details": "(Empty)"
      },
      "condition": "session_manager_base and session_manager and not filter"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "System Scripts Autorun Keys Modification",
    "id": 1935,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "scripts_base": {
        "TargetObject|contains": "\\Software\\Policies\\Microsoft\\Windows\\System\\Scripts"
      },
      "scripts": {
        "TargetObject|contains": [
          "\\Startup",
          "\\Shutdown",
          "\\Logon",
          "\\Logoff"
        ]
      },
      "filter": {
        "Details": "(Empty)"
      },
      "condition": "scripts_base and scripts and not filter"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "WinSock2 Autorun Keys Modification",
    "id": 1936,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "winsock_parameters_base": {
        "TargetObject|contains": "\\System\\CurrentControlSet\\Services\\WinSock2\\Parameters"
      },
      "winsock_parameters": {
        "TargetObject|contains": [
          "\\Protocol_Catalog9\\Catalog_Entries",
          "\\NameSpace_Catalog5\\Catalog_Entries"
        ]
      },
      "filter": [
        {
          "Details": "(Empty)"
        },
        {
          "Image": "C:\\Windows\\System32\\MsiExec.exe"
        },
        {
          "Image": "C:\\Windows\\syswow64\\MsiExec.exe"
        }
      ],
      "condition": "winsock_parameters_base and winsock_parameters and not filter"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wow6432Node CurrentVersion Autorun Keys Modification",
    "id": 1937,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d",
      "https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_wow_current_version_base": {
        "TargetObject|contains": "\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion"
      },
      "selection_wow_current_version_keys": {
        "TargetObject|contains": [
          "\\ShellServiceObjectDelayLoad",
          "\\Run\\",
          "\\RunOnce\\",
          "\\RunOnceEx\\",
          "\\RunServices\\",
          "\\RunServicesOnce\\",
          "\\Explorer\\ShellServiceObjects",
          "\\Explorer\\ShellIconOverlayIdentifiers",
          "\\Explorer\\ShellExecuteHooks",
          "\\Explorer\\SharedTaskScheduler",
          "\\Explorer\\Browser Helper Objects"
        ]
      },
      "filter_empty": {
        "Details": "(Empty)"
      },
      "filter_edge": {
        "Image|contains|all": [
          "C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\Install\\{",
          "\\setup.exe"
        ]
      },
      "filter_msoffice1": {
        "Image": "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\OfficeClickToRun.exe",
        "TargetObject|contains": "\\Office\\ClickToRun\\REGISTRY\\MACHINE\\Software\\Wow6432Node\\"
      },
      "filter_msoffice2": {
        "Image": [
          "C:\\Program Files\\Microsoft Office\\root\\integration\\integrator.exe",
          "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"
        ],
        "TargetObject|contains": "\\Explorer\\Browser Helper Objects\\{31D09BA0-12F5-4CCE-BE8A-2923E76605DA}\\"
      },
      "filter_dropbox": [
        {
          "Details|endswith": "-A251-47B7-93E1-CDD82E34AF8B}"
        },
        {
          "Details": "grpconv -o"
        },
        {
          "Details|contains|all": [
            "C:\\Program Files",
            "\\Dropbox\\Client\\Dropbox.exe",
            " /systemstartup"
          ]
        }
      ],
      "filter_evernote": {
        "TargetObject|endswith": "\\Explorer\\Browser Helper Objects\\{92EF2EAD-A7CE-4424-B0DB-499CF856608E}\\NoExplorer"
      },
      "filter_dotnet": {
        "Image|contains": "\\windowsdesktop-runtime-",
        "TargetObject|endswith": [
          "\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\{e2d1ae32-dd1d-4ad7-a298-10e42e7840fc}",
          "\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\{7037b699-7382-448c-89a7-4765961d2537}"
        ],
        "Details|startswith": "\"C:\\ProgramData\\Package Cache\\",
        "Details|endswith": ".exe\" /burn.runonce"
      },
      "filter_office": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_ms_win_desktop_runtime": {
        "Details|startswith": "\"C:\\ProgramData\\Package Cache\\{d21a4f20-968a-4b0c-bf04-a38da5f06e41}\\windowsdesktop-runtime-"
      },
      "filter_vcredist": {
        "Image|endswith": "\\VC_redist.x64.exe",
        "Details|endswith": "}\\VC_redist.x64.exe\" /burn.runonce"
      },
      "filter_upgrades": {
        "Image|startswith": [
          "C:\\ProgramData\\Package Cache",
          "C:\\Windows\\Temp\\"
        ],
        "Image|contains": [
          "\\winsdksetup.exe",
          "\\windowsdesktop-runtime-",
          "\\AspNetCoreSharedFrameworkBundle-"
        ],
        "Details|endswith": " /burn.runonce"
      },
      "filter_uninstallers": {
        "Image|startswith": "C:\\Windows\\Installer\\MSI",
        "TargetObject|contains": "\\Explorer\\Browser Helper Objects"
      },
      "filter_msiexec": {
        "Image": "C:\\WINDOWS\\system32\\msiexec.exe",
        "TargetObject|contains": "\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\"
      },
      "condition": "all of selection_wow_current_version_* and not 1 of filter_*"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wow6432Node Classes Autorun Keys Modification",
    "id": 1938,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "wow_classes_base": {
        "TargetObject|contains": "\\Software\\Wow6432Node\\Classes"
      },
      "wow_classes": {
        "TargetObject|contains": [
          "\\Folder\\ShellEx\\ExtShellFolderViews",
          "\\Folder\\ShellEx\\DragDropHandlers",
          "\\Folder\\ShellEx\\ColumnHandlers",
          "\\Directory\\Shellex\\DragDropHandlers",
          "\\Directory\\Shellex\\CopyHookHandlers",
          "\\CLSID\\{AC757296-3522-4E11-9862-C17BE5A1767E}\\Instance",
          "\\CLSID\\{ABE3B9A4-257D-4B97-BD1A-294AF496222E}\\Instance",
          "\\CLSID\\{7ED96837-96F0-4812-B211-F13C24117ED3}\\Instance",
          "\\CLSID\\{083863F1-70DE-11d0-BD40-00A0C911CE86}\\Instance",
          "\\AllFileSystemObjects\\ShellEx\\DragDropHandlers",
          "\\ShellEx\\PropertySheetHandlers",
          "\\ShellEx\\ContextMenuHandlers"
        ]
      },
      "filter": {
        "Details": "(Empty)"
      },
      "condition": "wow_classes_base and wow_classes and not filter"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Wow6432Node Windows NT CurrentVersion Autorun Keys Modification",
    "id": 1939,
    "related": [
      {
        "id": "17f878b8-9968-4578-b814-c4217fc5768c",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detects modification of autostart extensibility point (ASEP) in registry.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md",
      "https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns",
      "https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d"
    ],
    "author": "Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin, oscd.community, Tim Shelton, frack113 (split)",
    "date": "2019/10/25",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "wow_nt_current_version_base": {
        "TargetObject|contains": "\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion"
      },
      "wow_nt_current_version": {
        "TargetObject|contains": [
          "\\Windows\\Appinit_Dlls",
          "\\Image File Execution Options",
          "\\Drivers32"
        ]
      },
      "filter": {
        "Details": [
          "(Empty)",
          "\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options"
        ]
      },
      "condition": "wow_nt_current_version_base and wow_nt_current_version and not filter"
    },
    "fields": [
      "SecurityID",
      "ObjectName",
      "OldValueType",
      "NewValueType"
    ],
    "falsepositives": [
      "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason",
      "Legitimate administrator sets up autorun keys for legitimate reason"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New BgInfo.EXE Custom DB Path Registry Configuration",
    "id": 1940,
    "status": "experimental",
    "description": "Detects setting of a new registry database value related to BgInfo configuration. Attackers can for example set this value to save the results of the commands executed by BgInfo in order to exfiltrate information.",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "SetValue",
        "TargetObject|endswith": "\\Software\\Winternals\\BGInfo\\Database"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of external DB to save the results"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New BgInfo.EXE Custom VBScript Registry Configuration",
    "id": 1941,
    "related": [
      {
        "id": "cd277474-5c52-4423-a52b-ac2d7969902f",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects setting of a new registry value related to BgInfo configuration, which can be abused to execute custom VBScript via \"BgInfo.exe\"",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "SetValue",
        "TargetObject|contains": "\\Software\\Winternals\\BGInfo\\UserFields\\",
        "Details|startswith": "4"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate VBScript"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New BgInfo.EXE Custom WMI Query Registry Configuration",
    "id": 1942,
    "related": [
      {
        "id": "992dd79f-dde8-4bb0-9085-6350ba97cfb3",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects setting of a new registry value related to BgInfo configuration, which can be abused to execute custom WMI query via \"BgInfo.exe\"",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/16",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "SetValue",
        "TargetObject|contains": "\\Software\\Winternals\\BGInfo\\UserFields\\",
        "Details|startswith": "6"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate WMI query"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Blackbyte Ransomware Registry",
    "id": 1943,
    "status": "test",
    "description": "BlackByte set three different registry values to escalate privileges and begin setting the stage for lateral movement and encryption",
    "references": [
      "https://redcanary.com/blog/blackbyte-ransomware/?utm_source=twitter&utm_medium=social",
      "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/blackbyte-ransomware-pt-1-in-depth-analysis/"
    ],
    "author": "frack113",
    "date": "2022/01/24",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject": [
          "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy",
          "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLinkedConnections",
          "HKLM\\SYSTEM\\CurrentControlSet\\Control\\FileSystem\\LongPathsEnabled"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Bypass UAC Using DelegateExecute",
    "id": 1944,
    "status": "test",
    "description": "Bypasses User Account Control using a fileless method",
    "references": [
      "https://docs.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-iexecutecommand",
      "https://devblogs.microsoft.com/oldnewthing/20100312-01/?p=14623",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.002/T1548.002.md#atomic-test-7---bypass-uac-using-sdclt-delegateexecute"
    ],
    "author": "frack113",
    "date": "2022/01/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\open\\command\\DelegateExecute",
        "Details": "(Empty)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Bypass UAC Using Event Viewer",
    "id": 1945,
    "status": "experimental",
    "description": "Bypasses User Account Control using Event Viewer and a relevant Windows Registry modification",
    "references": [
      "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.002/T1548.002.md#atomic-test-1---bypass-uac-using-event-viewer-cmd"
    ],
    "author": "frack113",
    "date": "2022/01/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.010"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "_Classes\\mscfile\\shell\\open\\command\\(Default)"
      },
      "filter": {
        "Details|startswith": "%SystemRoot%\\system32\\mmc.exe \"%1\" %"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Bypass UAC Using SilentCleanup Task",
    "id": 1946,
    "status": "test",
    "description": "Detects the setting of the environement variable \"windir\" to a non default value.\nAttackers often abuse this variable in order to trigger a UAC bypass via the \"SilentCleanup\" task.\nThe SilentCleanup task located in %windir%\\system32\\cleanmgr.exe is an auto-elevated task that can be abused to elevate any file with administrator privileges without prompting UAC.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.002/T1548.002.md#atomic-test-9---bypass-uac-using-silentcleanup-task",
      "https://www.reddit.com/r/hacking/comments/ajtrws/bypassing_highest_uac_level_windows_810/",
      "https://www.fortinet.com/blog/threat-research/enter-the-darkgate-new-cryptocurrency-mining-and-ransomware-campaign"
    ],
    "author": "frack113, Nextron Systems",
    "date": "2022/01/06",
    "modified": "2024/01/30",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Environment\\windir"
      },
      "filter_main_default": {
        "Details": "%SystemRoot%"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Changing RDP Port to Non Standard Number",
    "id": 1947,
    "status": "test",
    "description": "Remote desktop is a common feature in operating systems.\nIt allows a user to log into an interactive session with a system desktop graphical user interface on a remote system.\nMicrosoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1021.001/T1021.001.md#atomic-test-1---rdp-to-domaincontroller"
    ],
    "author": "frack113",
    "date": "2022/01/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.010"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject": "HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\PortNumber"
      },
      "filter": {
        "Details": "DWORD (0x00000d3d)"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "IE Change Domain Zone",
    "id": 1948,
    "related": [
      {
        "id": "d88d0ab2-e696-4d40-a2ed-9790064e66b3",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Hides the file extension through modification of the registry",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-4---add-domain-to-trusted-sites-zone",
      "https://docs.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries"
    ],
    "author": "frack113",
    "date": "2022/01/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1137"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_domains": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\"
      },
      "filter": {
        "Details": [
          "DWORD (0x00000000)",
          "DWORD (0x00000001)",
          "(Empty)"
        ]
      },
      "condition": "selection_domains and not filter"
    },
    "falsepositives": [
      "Administrative scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Sysmon Event Logging Via Registry",
    "id": 1949,
    "status": "experimental",
    "description": "Detects changes in Sysmon driver altitude. If the Sysmon driver is configured to load at an altitude of another registered service, it will fail to load at boot.",
    "references": [
      "https://posts.specterops.io/shhmon-silencing-sysmon-via-driver-unload-682b5be57650",
      "https://youtu.be/zSihR3lTf7g"
    ],
    "author": "B.Talebi",
    "date": "2022/07/28",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\SYSTEM\\CurrentControlSet\\",
        "TargetObject|endswith": "\\Instances\\Sysmon Instance\\Altitude"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate driver altitude change to hide sysmon"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change Winevt Event Access Permission Via Registry",
    "id": 1950,
    "status": "experimental",
    "description": "Detects tampering with the \"ChannelAccess\" registry key in order to change access to Windows event channel",
    "references": [
      "https://app.any.run/tasks/77b2e328-8f36-46b2-b2e2-8a80398217ab/",
      "https://learn.microsoft.com/en-us/windows/win32/api/winevt/",
      "https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/"
    ],
    "author": "frack113",
    "date": "2022/09/17",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\",
        "TargetObject|endswith": "\\ChannelAccess",
        "Details|contains": [
          "(A;;0x1;;;SY)",
          "(A;;0x5;;;BA)",
          "(A;;0x1;;;LA)"
        ]
      },
      "filter_trustedinstaller": {
        "Image": "C:\\Windows\\servicing\\TrustedInstaller.exe"
      },
      "filter_ti_worker": {
        "Image|endswith": "\\TiWorker.exe"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Running Chrome VPN Extensions via the Registry 2 VPN Extension",
    "id": 1951,
    "status": "test",
    "description": "Running Chrome VPN Extensions via the Registry install 2 vpn extension",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1133/T1133.md#atomic-test-1---running-chrome-vpn-extensions-via-the-registry-2-vpn-extension"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1133"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "chrome_ext": {
        "TargetObject|contains": "Software\\Wow6432Node\\Google\\Chrome\\Extensions",
        "TargetObject|endswith": "update_url"
      },
      "chrome_vpn": {
        "TargetObject|contains": [
          "fdcgdnkidjaadafnichfpabhfomcebme",
          "fcfhplploccackoneaefokcmbjfbkenj",
          "bihmplhobchoageeokmgbdihknkjbknd",
          "gkojfkhlekighikafcpjkiklfbnlmeio",
          "jajilbjjinjmgcibalaakngmkilboobh",
          "gjknjjomckknofjidppipffbpoekiipm",
          "nabbmpekekjknlbkgpodfndbodhijjem",
          "kpiecbcckbofpmkkkdibbllpinceiihk",
          "nlbejmccbhkncgokjcmghpfloaajcffj",
          "omghfjlpggmjjaagoclmmobgdodcjboh",
          "bibjcjfmgapbfoljiojpipaooddpkpai",
          "mpcaainmfjjigeicjnlkdfajbioopjko",
          "jljopmgdobloagejpohpldgkiellmfnc",
          "lochiccbgeohimldjooaakjllnafhaid",
          "nhnfcgpcbfclhfafjlooihdfghaeinfc",
          "ookhnhpkphagefgdiemllfajmkdkcaim",
          "namfblliamklmeodpcelkokjbffgmeoo",
          "nbcojefnccbanplpoffopkoepjmhgdgh",
          "majdfhpaihoncoakbjgbdhglocklcgno",
          "lnfdmdhmfbimhhpaeocncdlhiodoblbd",
          "eppiocemhmnlbhjplcgkofciiegomcon",
          "cocfojppfigjeefejbpfmedgjbpchcng",
          "foiopecknacmiihiocgdjgbjokkpkohc",
          "hhdobjgopfphlmjbmnpglhfcgppchgje",
          "jgbaghohigdbgbolncodkdlpenhcmcge",
          "inligpkjkhbpifecbdjhmdpcfhnlelja",
          "higioemojdadgdbhbbbkfbebbdlfjbip",
          "hipncndjamdcmphkgngojegjblibadbe",
          "iolonopooapdagdemdoaihahlfkncfgg",
          "nhfjkakglbnnpkpldhjmpmmfefifedcj",
          "jpgljfpmoofbmlieejglhonfofmahini",
          "fgddmllnllkalaagkghckoinaemmogpe",
          "ejkaocphofnobjdedneohbbiilggdlbi",
          "keodbianoliadkoelloecbhllnpiocoi",
          "hoapmlpnmpaehilehggglehfdlnoegck",
          "poeojclicodamonabcabmapamjkkmnnk",
          "dfkdflfgjdajbhocmfjolpjbebdkcjog",
          "kcdahmgmaagjhocpipbodaokikjkampi",
          "klnkiajpmpkkkgpgbogmcgfjhdoljacg",
          "lneaocagcijjdpkcabeanfpdbmapcjjg",
          "pgfpignfckbloagkfnamnolkeaecfgfh",
          "jplnlifepflhkbkgonidnobkakhmpnmh",
          "jliodmnojccaloajphkingdnpljdhdok",
          "hnmpcagpplmpfojmgmnngilcnanddlhb",
          "ffbkglfijbcbgblgflchnbphjdllaogb",
          "kcndmbbelllkmioekdagahekgimemejo",
          "jdgilggpfmjpbodmhndmhojklgfdlhob",
          "bihhflimonbpcfagfadcnbbdngpopnjb",
          "ppajinakbfocjfnijggfndbdmjggcmde",
          "oofgbpoabipfcfjapgnbbjjaenockbdp",
          "bhnhkdgoefpmekcgnccpnhjfdgicfebm",
          "knmmpciebaoojcpjjoeonlcjacjopcpf",
          "dhadilbmmjiooceioladdphemaliiobo",
          "jedieiamjmoflcknjdjhpieklepfglin",
          "mhngpdlhojliikfknhfaglpnddniijfh",
          "omdakjcmkglenbhjadbccaookpfjihpa",
          "npgimkapccfidfkfoklhpkgmhgfejhbj",
          "akeehkgglkmpapdnanoochpfmeghfdln",
          "gbmdmipapolaohpinhblmcnpmmlgfgje",
          "aigmfoeogfnljhnofglledbhhfegannp",
          "cgojmfochfikphincbhokimmmjenhhgk",
          "ficajfeojakddincjafebjmfiefcmanc",
          "ifnaibldjfdmaipaddffmgcmekjhiloa",
          "jbnmpdkcfkochpanomnkhnafobppmccn",
          "apcfdffemoinopelidncddjbhkiblecc",
          "mjolnodfokkkaichkcjipfgblbfgojpa",
          "oifjbnnafapeiknapihcmpeodaeblbkn",
          "plpmggfglncceinmilojdkiijhmajkjh",
          "mjnbclmflcpookeapghfhapeffmpodij",
          "bblcccknbdbplgmdjnnikffefhdlobhp",
          "aojlhgbkmkahabcmcpifbolnoichfeep",
          "lcmammnjlbmlbcaniggmlejfjpjagiia",
          "knajdeaocbpmfghhmijicidfcmdgbdpm",
          "bdlcnpceagnkjnjlbbbcepohejbheilk",
          "edknjdjielmpdlnllkdmaghlbpnmjmgb",
          "eidnihaadmmancegllknfbliaijfmkgo",
          "ckiahbcmlmkpfiijecbpflfahoimklke",
          "macdlemfnignjhclfcfichcdhiomgjjb",
          "chioafkonnhbpajpengbalkececleldf",
          "amnoibeflfphhplmckdbiajkjaoomgnj",
          "llbhddikeonkpbhpncnhialfbpnilcnc",
          "pcienlhnoficegnepejpfiklggkioccm",
          "iocnglnmfkgfedpcemdflhkchokkfeii",
          "igahhbkcppaollcjeaaoapkijbnphfhb",
          "njpmifchgidinihmijhcfpbdmglecdlb",
          "ggackgngljinccllcmbgnpgpllcjepgc",
          "kchocjcihdgkoplngjemhpplmmloanja",
          "bnijmipndnicefcdbhgcjoognndbgkep",
          "lklekjodgannjcccdlbicoamibgbdnmi",
          "dbdbnchagbkhknegmhgikkleoogjcfge",
          "egblhcjfjmbjajhjhpmnlekffgaemgfh",
          "ehbhfpfdkmhcpaehaooegfdflljcnfec",
          "bkkgdjpomdnfemhhkalfkogckjdkcjkg",
          "almalgbpmcfpdaopimbdchdliminoign",
          "akkbkhnikoeojlhiiomohpdnkhbkhieh",
          "gbfgfbopcfokdpkdigfmoeaajfmpkbnh",
          "bniikohfmajhdcffljgfeiklcbgffppl",
          "lejgfmmlngaigdmmikblappdafcmkndb",
          "ffhhkmlgedgcliajaedapkdfigdobcif",
          "gcknhkkoolaabfmlnjonogaaifnjlfnp",
          "pooljnboifbodgifngpppfklhifechoe",
          "fjoaledfpmneenckfbpdfhkmimnjocfa",
          "aakchaleigkohafkfjfjbblobjifikek",
          "dpplabbmogkhghncfbfdeeokoefdjegm",
          "padekgcemlokbadohgkifijomclgjgif",
          "bfidboloedlamgdmenmlbipfnccokknp"
        ]
      },
      "condition": "all of chrome_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ClickOnce Trust Prompt Tampering",
    "id": 1952,
    "status": "experimental",
    "description": "Detects changes to the ClickOnce trust prompt registry key in order to enable an installation from different locations such as the Internet.",
    "references": [
      "https://posts.specterops.io/less-smartscreen-more-caffeine-ab-using-clickonce-for-trusted-code-execution-1446ea8051c5",
      "https://learn.microsoft.com/en-us/visualstudio/deployment/how-to-configure-the-clickonce-trust-prompt-behavior"
    ],
    "author": "@SerkinValery, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/12",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\MICROSOFT\\.NETFramework\\Security\\TrustManager\\PromptingLevel\\",
        "TargetObject|endswith": [
          "\\Internet",
          "\\LocalIntranet",
          "\\MyComputer",
          "\\TrustedSites",
          "\\UntrustedSites"
        ],
        "Details": "Enabled"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate internal requirements."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "CobaltStrike Service Installations in Registry",
    "id": 1953,
    "status": "test",
    "description": "Detects known malicious service installs that appear in cases in which a Cobalt Strike beacon elevates privileges or lateral movement.\nWe can also catch this by system log 7045 (https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_cobaltstrike_service_installs.yml)\nIn some SIEM you can catch those events also in HKLM\\System\\ControlSet001\\Services or HKLM\\System\\ControlSet002\\Services, however, this rule is based on a regular sysmon's events.\n",
    "references": [
      "https://www.sans.org/webcasts/tech-tuesday-workshop-cobalt-strike-detection-log-analysis-119395"
    ],
    "author": "Wojciech Lesicki",
    "date": "2021/06/29",
    "modified": "2023/08/17",
    "tags": [
      "attack.execution",
      "attack.privilege_escalation",
      "attack.lateral_movement",
      "attack.t1021.002",
      "attack.t1543.003",
      "attack.t1569.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "main": {
        "TargetObject|contains": "HKLM\\System\\CurrentControlSet\\Services"
      },
      "selection_1": {
        "Details|contains|all": [
          "ADMIN$",
          ".exe"
        ]
      },
      "selection_2": {
        "Details|contains|all": [
          "%COMSPEC%",
          "start",
          "powershell"
        ]
      },
      "condition": "main and 1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "critical",
    "enable": true
  },
  {
    "title": "COM Hijack via Sdclt",
    "id": 1954,
    "status": "test",
    "description": "Detects changes to 'HKCU\\Software\\Classes\\Folder\\shell\\open\\command\\DelegateExecute'",
    "references": [
      "http://blog.sevagas.com/?Yet-another-sdclt-UAC-bypass",
      "https://www.exploit-db.com/exploits/47696"
    ],
    "author": "Omkar Gudhate",
    "date": "2020/09/27",
    "modified": "2023/09/28",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1546",
      "attack.t1548"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Software\\Classes\\Folder\\shell\\open\\command\\DelegateExecute"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "CrashControl CrashDump Disabled",
    "id": 1955,
    "status": "experimental",
    "description": "Detects disabling the CrashDump per registry (as used by HermeticWiper)",
    "references": [
      "https://www.sentinelone.com/labs/hermetic-wiper-ukraine-under-attack/"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2022/02/24",
    "modified": "2023/08/17",
    "tags": [
      "attack.t1564",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "SYSTEM\\CurrentControlSet\\Control\\CrashControl",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate disabling of crashdumps"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Service Binary in Suspicious Folder",
    "id": 1956,
    "related": [
      {
        "id": "c0abc838-36b0-47c9-b3b3-a90c39455382",
        "type": "obsoletes"
      }
    ],
    "status": "experimental",
    "description": "Detect the creation of a service with a service binary located in a suspicious directory",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md"
    ],
    "author": "Florian Roth (Nextron Systems), frack113",
    "date": "2022/05/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\",
        "TargetObject|endswith": "\\Start",
        "Image|contains": [
          "\\Users\\Public\\",
          "\\Perflogs\\",
          "\\ADMIN$\\",
          "\\Temp\\"
        ],
        "Details": [
          "DWORD (0x00000000)",
          "DWORD (0x00000001)",
          "DWORD (0x00000002)"
        ]
      },
      "selection_2": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\",
        "TargetObject|endswith": "\\ImagePath",
        "Details|contains": [
          "\\Users\\Public\\",
          "\\Perflogs\\",
          "\\ADMIN$\\",
          "\\Temp\\"
        ]
      },
      "filter_1": {
        "Image|contains|all": [
          "\\Common Files\\",
          "\\Temp\\"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Service Binary in Uncommon Folder",
    "id": 1957,
    "status": "experimental",
    "description": "Detect the creation of a service with a service binary located in a uncommon directory",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/05/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\",
        "TargetObject|endswith": "\\Start",
        "Image|contains": [
          "\\AppData\\Local\\",
          "\\AppData\\Roaming\\"
        ],
        "Details": [
          "DWORD (0x00000000)",
          "DWORD (0x00000001)",
          "DWORD (0x00000002)"
        ]
      },
      "selection_2": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\",
        "TargetObject|endswith": "\\ImagePath",
        "Details|contains": [
          "\\AppData\\Local\\",
          "\\AppData\\Roaming\\"
        ]
      },
      "filter": [
        {
          "Image|contains": [
            "\\AppData\\Roaming\\Zoom",
            "\\AppData\\Local\\Zoom"
          ]
        },
        {
          "Details|contains": [
            "\\AppData\\Roaming\\Zoom",
            "\\AppData\\Local\\Zoom"
          ]
        }
      ],
      "condition": "1 of selection_* and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Custom File Open Handler Executes PowerShell",
    "id": 1958,
    "status": "experimental",
    "description": "Detects the abuse of custom file open handler, executing powershell",
    "references": [
      "https://news.sophos.com/en-us/2022/02/01/solarmarker-campaign-used-novel-registry-changes-to-establish-persistence/?cmp=30728"
    ],
    "author": "CD_R0M_",
    "date": "2022/06/11",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1202"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "shell\\open\\command\\",
        "Details|contains|all": [
          "powershell",
          "-command"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious New Printer Ports in Registry (CVE-2020-1048)",
    "id": 1959,
    "status": "test",
    "description": "Detects a new and suspicious printer port creation in Registry that could be an attempt to exploit CVE-2020-1048",
    "references": [
      "https://windows-internals.com/printdemon-cve-2020-1048/"
    ],
    "author": "EagleEye Team, Florian Roth (Nextron Systems), NVISO",
    "date": "2020/05/13",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.execution",
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Ports",
        "Details|contains": [
          ".dll",
          ".exe",
          ".bat",
          ".com",
          "C:"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "New printer port install on host"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Set Value of MSDT in Registry (CVE-2022-30190)",
    "id": 1960,
    "status": "test",
    "description": "Detects set value ms-msdt MSProtocol URI scheme in Registry that could be an attempt to exploit CVE-2022-30190.",
    "references": [
      "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-30190",
      "https://msrc-blog.microsoft.com/2022/05/30/guidance-for-cve-2022-30190-microsoft-support-diagnostic-tool-vulnerability/"
    ],
    "author": "Sittikorn S",
    "date": "2020/05/31",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1221"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKCR\\ms-msdt\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Registry Persistence Attempt Via DbgManagedDebugger",
    "id": 1961,
    "status": "experimental",
    "description": "Detects the addition of the \"Debugger\" value to the \"DbgManagedDebugger\" key in order to achieve persistence. Which will get invoked when an application crashes",
    "references": [
      "https://www.hexacorn.com/blog/2013/09/19/beyond-good-ol-run-key-part-4/",
      "https://github.com/last-byte/PersistenceSniper"
    ],
    "author": "frack113",
    "date": "2022/08/07",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1574"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Microsoft\\.NETFramework\\DbgManagedDebugger"
      },
      "filter": {
        "Details": "\"C:\\Windows\\system32\\vsjitdebugger.exe\" PID %d APPDOM %d EXTEXT \"%s\" EVTHDL %d"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Legitimate use of the key to setup a debugger. Which is often the case on developers machines"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Windows Defender Exclusions Added - Registry",
    "id": 1962,
    "related": [
      {
        "id": "1321dc4e-a1fe-481d-a016-52c45f0c8b4f",
        "type": "derived"
      }
    ],
    "status": "test",
    "description": "Detects the Setting of Windows Defender Exclusions",
    "references": [
      "https://twitter.com/_nullbind/status/1204923340810543109"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/07/06",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection2": {
        "TargetObject|contains": "\\Microsoft\\Windows Defender\\Exclusions"
      },
      "condition": "selection2"
    },
    "falsepositives": [
      "Administrator actions"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potentially Suspicious Desktop Background Change Via Registry",
    "id": 1963,
    "related": [
      {
        "id": "8cbc9475-8d05-4e27-9c32-df960716c701",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects regsitry value settings that would replace the user's desktop background.\nThis is a common technique used by malware to change the desktop background to a ransom note or other image.\n",
    "references": [
      "https://www.attackiq.com/2023/09/20/emulating-rhysida/",
      "https://research.checkpoint.com/2023/the-rhysida-ransomware-activity-analysis-and-ties-to-vice-society/",
      "https://www.trendmicro.com/en_us/research/23/h/an-overview-of-the-new-rhysida-ransomware.html",
      "https://www.virustotal.com/gui/file/a864282fea5a536510ae86c77ce46f7827687783628e4f2ceb5bf2c41b8cd3c6/behavior",
      "https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.WindowsDesktop::Wallpaper",
      "https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.ControlPanelDisplay::CPL_Personalization_NoDesktopBackgroundUI"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Stephen Lincoln @slincoln-aiq (AttackIQ)",
    "date": "2023/12/21",
    "tags": [
      "attack.defense_evasion",
      "attack.impact",
      "attack.t1112",
      "attack.t1491.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_keys": {
        "TargetObject|contains": [
          "Control Panel\\Desktop",
          "CurrentVersion\\Policies\\ActiveDesktop",
          "CurrentVersion\\Policies\\System"
        ]
      },
      "selection_values_1": {
        "TargetObject|endswith": "NoChangingWallpaper",
        "Details": "DWORD (0x00000001)"
      },
      "selection_values_2": {
        "TargetObject|endswith": "\\Wallpaper"
      },
      "selection_values_3": {
        "TargetObject|endswith": "\\WallpaperStyle",
        "Details": "2"
      },
      "filter_main_svchost": {
        "Image|endswith": "\\svchost.exe"
      },
      "condition": "selection_keys and 1 of selection_values_* and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Administrative scripts that change the desktop background to a company logo or other image."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Hypervisor Enforced Code Integrity Disabled",
    "id": 1964,
    "status": "experimental",
    "description": "Detects changes to the HypervisorEnforcedCodeIntegrity registry key and the \"Enabled\" value being set to 0 in order to disable the Hypervisor Enforced Code Integrity feature. This allows an attacker to load unsigned and untrusted code to be run in the kernel",
    "references": [
      "https://www.welivesecurity.com/2023/03/01/blacklotus-uefi-bootkit-myth-confirmed/",
      "https://github.com/redcanaryco/atomic-red-team/blob/04e487c1828d76df3e834621f4f893ea756d5232/atomics/T1562.001/T1562.001.md#atomic-test-43---disable-hypervisor-enforced-code-integrity-hvci"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Anish Bogati",
    "date": "2023/03/14",
    "modified": "2024/01/10",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "SetValue",
        "TargetObject|endswith": [
          "\\Microsoft\\Windows\\DeviceGuard\\HypervisorEnforcedCodeIntegrity",
          "\\Control\\DeviceGuard\\HypervisorEnforcedCodeIntegrity",
          "\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\\Enabled"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "DHCP Callout DLL Installation",
    "id": 1965,
    "status": "test",
    "description": "Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)",
    "references": [
      "https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html",
      "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx",
      "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"
    ],
    "author": "Dimitrios Slamaris",
    "date": "2017/05/15",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": [
          "\\Services\\DHCPServer\\Parameters\\CalloutDlls",
          "\\Services\\DHCPServer\\Parameters\\CalloutEnabled"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Exploit Guard Network Protection on Windows Defender",
    "id": 1966,
    "status": "experimental",
    "description": "Detects disabling Windows Defender Exploit Guard Network Protection",
    "references": [
      "https://www.tenforums.com/tutorials/105533-enable-disable-windows-defender-exploit-protection-settings.html"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/08/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "SOFTWARE\\Policies\\Microsoft\\Windows Defender Security Center\\App and Browser protection\\DisallowExploitProtectionOverride",
        "Details": "DWORD (00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disabled Windows Defender Eventlog",
    "id": 1967,
    "status": "experimental",
    "description": "Detects the disabling of the Windows Defender eventlog as seen in relation to Lockbit 3.0 infections",
    "references": [
      "https://twitter.com/WhichbufferArda/status/1543900539280293889/photo/2"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2022/07/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Windows Defender/Operational\\Enabled",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Other Antivirus software installations could cause Windows to disable that eventlog (unknown)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable PUA Protection on Windows Defender",
    "id": 1968,
    "status": "experimental",
    "description": "Detects disabling Windows Defender PUA protection",
    "references": [
      "https://www.tenforums.com/tutorials/32236-enable-disable-microsoft-defender-pua-protection-windows-10-a.html"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/08/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Policies\\Microsoft\\Windows Defender\\PUAProtection",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Tamper Protection on Windows Defender",
    "id": 1969,
    "status": "experimental",
    "description": "Detects disabling Windows Defender Tamper Protection",
    "references": [
      "https://www.tenforums.com/tutorials/123792-turn-off-tamper-protection-microsoft-defender-antivirus.html"
    ],
    "author": "Austin Songer @austinsonger",
    "date": "2021/08/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Microsoft\\Windows Defender\\Features\\TamperProtection",
        "Details": "DWORD (0x00000000)"
      },
      "filter_msmpeng_client": {
        "Image|startswith": "C:\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
        "Image|endswith": "\\MsMpEng.exe"
      },
      "filter_msmpeng_domain_controller": {
        "Image": "C:\\Program Files\\Windows Defender\\MsMpEng.exe"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Administrative Share Creation at Startup",
    "id": 1970,
    "status": "test",
    "description": "Administrative shares are hidden network shares created by Microsoft Windows NT operating systems that grant system administrators remote access to every disk volume on a network-connected system",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.005/T1070.005.md#atomic-test-4---disable-administrative-share-creation-at-startup"
    ],
    "author": "frack113",
    "date": "2022/01/16",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1070.005"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\LanmanServer\\Parameters\\",
        "TargetObject|endswith": [
          "AutoShareWks",
          "AutoShareServer"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential AutoLogger Sessions Tampering",
    "id": 1971,
    "status": "experimental",
    "description": "Detects tampering with autologger trace sessions which is a technique used by attackers to disable logging",
    "references": [
      "https://twitter.com/MichalKoczwara/status/1553634816016498688",
      "https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/",
      "https://i.blackhat.com/EU-21/Wednesday/EU-21-Teodorescu-Veni-No-Vidi-No-Vici-Attacks-On-ETW-Blind-EDRs.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_main": {
        "TargetObject|contains": "\\System\\CurrentControlSet\\Control\\WMI\\Autologger\\"
      },
      "selection_values": {
        "TargetObject|contains": [
          "\\EventLog-",
          "\\Defender"
        ],
        "TargetObject|endswith": [
          "\\Enable",
          "\\Start"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "filter_wevtutil": {
        "Image": "C:\\Windows\\system32\\wevtutil.exe"
      },
      "condition": "all of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Microsoft Defender Firewall via Registry",
    "id": 1972,
    "status": "test",
    "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.004/T1562.004.md#atomic-test-2---disable-microsoft-defender-firewall-via-registry"
    ],
    "author": "frack113",
    "date": "2022/01/09",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\",
        "TargetObject|endswith": "\\EnableFirewall",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Internal Tools or Feature in Registry",
    "id": 1973,
    "status": "experimental",
    "description": "Detects registry modifications that change features of internal Windows tools (malware like Agent Tesla uses this technique)",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md",
      "https://www.mandiant.com/resources/unc2165-shifts-to-evade-sanctions",
      "https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html",
      "https://www.malwarebytes.com/blog/detections/pum-optional-nodispbackgroundpage",
      "https://www.malwarebytes.com/blog/detections/pum-optional-nodispcpl"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems), CrimpSec",
    "date": "2022/03/18",
    "modified": "2023/11/20",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_set_1": {
        "TargetObject|endswith": [
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\StartMenuLogOff",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableChangePassword",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableLockWorkstation",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableRegistryTools",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableTaskmgr",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\NoDispBackgroundPage",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\NoDispCPL",
          "SOFTWARE\\Policies\\Microsoft\\Windows\\Explorer\\DisableNotificationCenter",
          "SOFTWARE\\Policies\\Microsoft\\Windows\\System\\DisableCMD"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "selection_set_0": {
        "TargetObject|endswith": [
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\ConsentPromptBehaviorAdmin",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\shutdownwithoutlogon",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PushNotifications\\ToastEnabled",
          "SYSTEM\\CurrentControlSet\\Control\\Storage\\Write Protection",
          "SYSTEM\\CurrentControlSet\\Control\\StorageDevicePolicies\\WriteProtect"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "1 of selection_set_*"
    },
    "falsepositives": [
      "Legitimate admin script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Macro Runtime Scan Scope",
    "id": 1974,
    "description": "Detects tampering with the MacroRuntimeScanScope registry key to disable runtime scanning of enabled macros",
    "status": "experimental",
    "date": "2022/10/25",
    "modified": "2023/08/17",
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "references": [
      "https://www.microsoft.com/en-us/security/blog/2018/09/12/office-vba-amsi-parting-the-veil-on-malicious-macros/",
      "https://admx.help/?Category=Office2016&Policy=office16.Office.Microsoft.Policies.Windows::L_MacroRuntimeScanScope",
      "https://github.com/S3cur3Th1sSh1t/OffensiveVBA/blob/28cc6a2802d8176195ac19b3c8e9a749009a82a3/src/AMSIbypasses.vba"
    ],
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\SOFTWARE\\",
          "\\Microsoft\\Office\\",
          "\\Common\\Security"
        ],
        "TargetObject|endswith": "\\MacroRuntimeScanScope",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable Privacy Settings Experience in Registry",
    "id": 1975,
    "status": "experimental",
    "description": "Detects registry modifications that disable Privacy Settings Experience",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/9e5b12c4912c07562aec7500447b11fa3e17e254/atomics/T1562.001/T1562.001.md"
    ],
    "author": "frack113",
    "date": "2022/10/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\SOFTWARE\\Policies\\Microsoft\\Windows\\OOBE\\DisablePrivacyExperience",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate admin script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Windows Security Center Notifications",
    "id": 1976,
    "status": "experimental",
    "description": "Detect set UseActionCenterExperience to 0 to disable the Windows security center notification",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1112/T1112.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "Windows\\CurrentVersion\\ImmersiveShell\\UseActionCenterExperience",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Registry Disable System Restore",
    "id": 1977,
    "status": "experimental",
    "description": "Detects the modification of the registry to disable a system restore on the computer",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-9---disable-system-restore-through-registry"
    ],
    "author": "frack113",
    "date": "2022/04/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Policies\\Microsoft\\Windows NT\\SystemRestore",
          "\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore"
        ],
        "TargetObject|endswith": [
          "DisableConfig",
          "DisableSR"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Disable UAC Using Registry",
    "id": 1978,
    "status": "experimental",
    "description": "Detects when an attacker tries to disable User Account Control (UAC) by changing its registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA from 1 to 0",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.002/T1548.002.md#atomic-test-8---disable-uac-using-regexe"
    ],
    "author": "frack113",
    "date": "2022/01/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Windows Firewall by Registry",
    "id": 1979,
    "status": "experimental",
    "description": "Detect set EnableFirewall to 0 to disable the Windows firewall",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1562.004/T1562.004.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.004"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": [
          "\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\StandardProfile\\EnableFirewall",
          "\\SOFTWARE\\Policies\\Microsoft\\WindowsFirewall\\DomainProfile\\EnableFirewall"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Disable Windows Event Logging Via Registry",
    "id": 1980,
    "status": "experimental",
    "description": "Detects tampering with the \"Enabled\" registry key in order to disable Windows logging of a Windows event channel",
    "references": [
      "https://twitter.com/WhichbufferArda/status/1543900539280293889",
      "https://github.com/DebugPrivilege/CPP/blob/c39d365617dbfbcb01fffad200d52b6239b2918c/Windows%20Defender/RestoreDefenderConfig.cpp"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\",
        "TargetObject|endswith": "\\Enabled",
        "Details": "DWORD (0x00000000)"
      },
      "filter_main_wevutil": {
        "Image|endswith": "\\Windows\\system32\\wevtutil.exe"
      },
      "filter_main_iis": {
        "Image|startswith": "C:\\Windows\\winsxs\\",
        "Image|endswith": "\\TiWorker.exe"
      },
      "filter_main_svchost": {
        "Image": "C:\\Windows\\System32\\svchost.exe",
        "TargetObject|contains": [
          "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-FileInfoMinifilter",
          "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-ASN1\\",
          "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Kernel-AppCompat\\",
          "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Runtime\\Error\\",
          "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-CAPI2/Operational\\"
        ]
      },
      "filter_main_trusted_installer": {
        "Image": "C:\\Windows\\servicing\\TrustedInstaller.exe",
        "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Compat-Appraiser"
      },
      "filter_optional_empty": {
        "Image": ""
      },
      "filter_optional_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Rare falsepositives may occur from legitimate administrators disabling specific event log for troubleshooting"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add DisallowRun Execution to Registry",
    "id": 1981,
    "status": "experimental",
    "description": "Detect set DisallowRun to 1 to prevent user running specific computer program",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1112/T1112.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Persistence Via Disk Cleanup Handler - Autorun",
    "id": 1982,
    "status": "experimental",
    "description": "Detects when an attacker modifies values of the Disk Cleanup Handler in the registry to achieve persistence via autorun.\nThe disk cleanup manager is part of the operating system.\nIt displays the dialog box [\u00e2\u20ac\u00a6] The user has the option of enabling or disabling individual handlers by selecting or clearing their check box in the disk cleanup manager's UI.\nAlthough Windows comes with a number of disk cleanup handlers, they aren't designed to handle files produced by other applications.\nInstead, the disk cleanup manager is designed to be flexible and extensible by enabling any developer to implement and register their own disk cleanup handler.\nAny developer can extend the available disk cleanup services by implementing and registering a disk cleanup handler.\n",
    "references": [
      "https://persistence-info.github.io/Data/diskcleanuphandler.html",
      "https://www.hexacorn.com/blog/2018/09/02/beyond-good-ol-run-key-part-86/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "root": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\VolumeCaches\\"
      },
      "selection_autorun": {
        "TargetObject|contains": "\\Autorun",
        "Details": "DWORD (0x00000001)"
      },
      "selection_pre_after": {
        "TargetObject|contains": [
          "\\CleanupString",
          "\\PreCleanupString"
        ],
        "Details|contains": [
          "cmd",
          "powershell",
          "rundll32",
          "mshta",
          "cscript",
          "wscript",
          "wsl",
          "\\Users\\Public\\",
          "\\Windows\\TEMP\\",
          "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\"
        ]
      },
      "condition": "root and 1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "DNS-over-HTTPS Enabled by Registry",
    "id": 1983,
    "status": "test",
    "description": "Detects when a user enables DNS-over-HTTPS.\nThis can be used to hide internet activity or be used to hide the process of exfiltrating data.\nWith this enabled organization will lose visibility into data such as query type, response and originating IP that are used to determine bad actors.\n",
    "references": [
      "https://www.tenforums.com/tutorials/151318-how-enable-disable-dns-over-https-doh-microsoft-edge.html",
      "https://github.com/elastic/detection-rules/issues/1371",
      "https://chromeenterprise.google/policies/?policy=DnsOverHttpsMode",
      "https://admx.help/HKLM/Software/Policies/Mozilla/Firefox/DNSOverHTTPS"
    ],
    "author": "Austin Songer",
    "date": "2021/07/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1140",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_edge": {
        "TargetObject|endswith": "\\SOFTWARE\\Policies\\Microsoft\\Edge\\BuiltInDnsClientEnabled",
        "Details": "DWORD (0x00000001)"
      },
      "selection_chrome": {
        "TargetObject|endswith": "\\SOFTWARE\\Google\\Chrome\\DnsOverHttpsMode",
        "Details": "secure"
      },
      "selection_firefox": {
        "TargetObject|endswith": "\\SOFTWARE\\Policies\\Mozilla\\Firefox\\DNSOverHTTPS\\Enabled",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New DNS ServerLevelPluginDll Installed",
    "id": 1984,
    "related": [
      {
        "id": "cbe51394-cd93-4473-b555-edf0144952d9",
        "type": "derived"
      },
      {
        "id": "f63b56ee-3f79-4b8a-97fb-5c48007e8573",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the installation of a DNS plugin DLL via ServerLevelPluginDll parameter in registry, which can be used to execute code in context of the DNS server (restart required)",
    "references": [
      "https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83",
      "https://blog.3or.de/hunting-dns-server-level-plugin-dll-injection.html"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/05/08",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1574.002",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\services\\DNS\\Parameters\\ServerLevelPluginDll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ETW Logging Disabled In .NET Processes - Sysmon Registry",
    "id": 1985,
    "related": [
      {
        "id": "a4c90ea1-2634-4ca0-adbb-35eae169b6fc",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Potential adversaries stopping ETW providers recording loaded .NET assemblies.",
    "references": [
      "https://twitter.com/_xpn_/status/1268712093928378368",
      "https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr",
      "https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables",
      "https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38",
      "https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39",
      "https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_",
      "https://bunnyinside.com/?term=f71e8cb9c76a",
      "http://managed670.rssing.com/chan-5590147/all_p1.html",
      "https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code",
      "https://blog.xpnsec.com/hiding-your-dotnet-complus-etwenabled/",
      "https://i.blackhat.com/EU-21/Wednesday/EU-21-Teodorescu-Veni-No-Vidi-No-Vici-Attacks-On-ETW-Blind-EDRs.pdf"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/06/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_etw_enabled": {
        "TargetObject|endswith": "SOFTWARE\\Microsoft\\.NETFramework\\ETWEnabled",
        "Details": "DWORD (0x00000000)"
      },
      "selection_complus": {
        "TargetObject|endswith": [
          "\\COMPlus_ETWEnabled",
          "\\COMPlus_ETWFlags"
        ],
        "Details": [
          0,
          "DWORD (0x00000000)"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Enabling COR Profiler Environment Variables",
    "id": 1986,
    "status": "test",
    "description": "Detects .NET Framework CLR and .NET Core CLR \"cor_enable_profiling\" and \"cor_profiler\" variables being set and configured.",
    "references": [
      "https://twitter.com/jamieantisocial/status/1304520651248668673",
      "https://www.slideshare.net/JamieWilliams130/started-from-the-bottom-exploiting-data-sources-to-uncover-attck-behaviors",
      "https://www.sans.org/cyber-security-summit/archives",
      "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/debugging-profiling"
    ],
    "author": "Jose Rodriguez (@Cyb3rPandaH), OTR (Open Threat Research), Jimmy Bayne (@bohops)",
    "date": "2020/09/10",
    "modified": "2023/11/24",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.defense_evasion",
      "attack.t1574.012"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_1": {
        "TargetObject|endswith": [
          "\\COR_ENABLE_PROFILING",
          "\\COR_PROFILER",
          "\\CORECLR_ENABLE_PROFILING"
        ]
      },
      "selection_2": {
        "TargetObject|contains": "\\CORECLR_PROFILER_PATH"
      },
      "condition": "1 of selection_*"
    },
    "level": "medium",
    "enable": true
  },
  {
    "title": "Scripted Diagnostics Turn Off Check Enabled - Registry",
    "id": 1987,
    "status": "experimental",
    "description": "Detects enabling TurnOffCheck which can be used to bypass defense of MSDT Follina vulnerability",
    "references": [
      "https://twitter.com/wdormann/status/1537075968568877057?s=20&t=0lr18OAnmAGoGpma6grLUw"
    ],
    "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io",
    "date": "2022/06/15",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Policies\\Microsoft\\Windows\\ScriptedDiagnostics\\TurnOffCheck",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrator actions"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential EventLog File Location Tampering",
    "id": 1988,
    "status": "experimental",
    "description": "Detects tampering with EventLog service \"file\" key. In order to change the default location of an Evtx file. This technique is used to tamper with log collection and alerting",
    "references": [
      "https://learn.microsoft.com/en-us/windows/win32/eventlog/eventlog-key"
    ],
    "author": "D3F7A5105",
    "date": "2023/01/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\",
        "TargetObject|endswith": "\\File"
      },
      "filter": {
        "Details|contains": "\\System32\\Winevt\\Logs\\"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Application Allowed Through Exploit Guard",
    "id": 1989,
    "status": "experimental",
    "description": "Detects applications being added to the \"allowed applications\" list of exploit guard in order to bypass controlled folder settings",
    "references": [
      "https://www.microsoft.com/security/blog/2017/10/23/windows-defender-exploit-guard-reduce-the-attack-surface-against-next-generation-malware/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_key": {
        "TargetObject|contains": "SOFTWARE\\Microsoft\\Windows Defender\\Windows Defender Exploit Guard\\Controlled Folder Access\\AllowedApplications"
      },
      "selection_paths": {
        "TargetObject|contains": [
          "\\Users\\Public\\",
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\PerfLogs\\",
          "\\Windows\\Temp\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change User Account Associated with the FAX Service",
    "id": 1990,
    "status": "test",
    "description": "Detect change of the user account associated with the FAX service to avoid the escalation problem.",
    "references": [
      "https://twitter.com/dottor_morte/status/1544652325570191361",
      "https://raw.githubusercontent.com/RiccardoAncarani/talks/master/F-Secure/unorthodox-lateral-movement.pdf"
    ],
    "author": "frack113",
    "date": "2022/07/17",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject": "HKLM\\System\\CurrentControlSet\\Services\\Fax\\ObjectName"
      },
      "filter": {
        "Details|contains": "NetworkService"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Change the Fax Dll",
    "id": 1991,
    "status": "test",
    "description": "Detect possible persistence using Fax DLL load when service restart",
    "references": [
      "https://twitter.com/dottor_morte/status/1544652325570191361",
      "https://raw.githubusercontent.com/RiccardoAncarani/talks/master/F-Secure/unorthodox-lateral-movement.pdf"
    ],
    "author": "frack113",
    "date": "2022/07/17",
    "modified": "2022/12/30",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\Software\\Microsoft\\Fax\\Device Providers\\",
          "\\ImageName"
        ]
      },
      "filter": {
        "Details": "%systemroot%\\system32\\fxst30.dll"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New File Association Using Exefile",
    "id": 1992,
    "status": "test",
    "description": "Detects the abuse of the exefile handler in new file association. Used for bypass of security products.",
    "references": [
      "https://twitter.com/mrd0x/status/1461041276514623491"
    ],
    "author": "Andreas Hunkeler (@Karneades)",
    "date": "2021/11/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "Classes\\.",
        "Details": "exefile"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Add Debugger Entry To Hangs Key For Persistence",
    "id": 1993,
    "status": "experimental",
    "description": "Detects when an attacker adds a new \"Debugger\" value to the \"Hangs\" key in order to achieve persistence which will get invoked when an application crashes",
    "references": [
      "https://persistence-info.github.io/Data/wer_debugger.html",
      "https://www.hexacorn.com/blog/2019/09/20/beyond-good-ol-run-key-part-116/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\Hangs\\Debugger"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "This value is not set by default but could be rarly used by administrators"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Persistence Via Hhctrl.ocx",
    "id": 1994,
    "status": "experimental",
    "description": "Detects when an attacker modifies the registry value of the \"hhctrl\" to point to a custom binary",
    "references": [
      "https://persistence-info.github.io/Data/hhctrl.html",
      "https://www.hexacorn.com/blog/2018/04/23/beyond-good-ol-run-key-part-77/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\CLSID\\{52A2AAAE-085D-4187-97EA-8C30DB990436}\\InprocServer32\\(Default)"
      },
      "filter": {
        "Details": "C:\\Windows\\System32\\hhctrl.ocx"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Registry Modification to Hidden File Extension",
    "id": 1995,
    "status": "test",
    "description": "Hides the file extension through modification of the registry",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-1---modify-registry-of-current-user-profile---cmd",
      "https://unit42.paloaltonetworks.com/ransomware-families/",
      "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=TrojanSpy%3aMSIL%2fHakey.A"
    ],
    "author": "frack113",
    "date": "2022/01/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1137"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_HideFileExt": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt",
        "Details": "DWORD (0x00000001)"
      },
      "selection_Hidden": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden",
        "Details": "DWORD (0x00000002)"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Administrative scripts"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Modification of Explorer Hidden Keys",
    "id": 1996,
    "status": "experimental",
    "description": "Detects modifications to the hidden files keys in registry. This technique is abused by several malware families to hide their files from normal users.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md#atomic-test-8---hide-files-through-registry"
    ],
    "author": "frack113",
    "date": "2022/04/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject": [
          "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden",
          "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Registry Hide Function from User",
    "id": 1997,
    "status": "test",
    "description": "Detects registry modifications that hide internal tools or functions from the user (malware like Agent Tesla, Hermetic Wiper uses this technique)",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.001/T1564.001.md"
    ],
    "author": "frack113",
    "date": "2022/03/18",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_set_1": {
        "TargetObject|endswith": [
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideClock",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCAHealth",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCANetwork",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCAPower",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\HideSCAVolume"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "selection_set_0": {
        "TargetObject|endswith": [
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowInfoTip",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowCompColor"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "1 of selection_set_*"
    },
    "falsepositives": [
      "Legitimate admin script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Hide Schedule Task Via Index Value Tamper",
    "id": 1998,
    "related": [
      {
        "id": "acd74772-5f88-45c7-956b-6a7b36c294d2",
        "type": "similar"
      },
      {
        "id": "526cc8bc-1cdc-48ad-8b26-f19bff969cec",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects when the \"index\" value of a scheduled task is modified from the registry\nWhich effectively hides it from any tooling such as \"schtasks /query\" (Read the referenced link for more information about the effects of this technique)\n",
    "references": [
      "https://blog.qualys.com/vulnerabilities-threat-research/2022/06/20/defending-against-scheduled-task-attacks-in-windows-environments"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/26",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\",
          "Index"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "IE ZoneMap Setting Downgraded To MyComputer Zone For HTTP Protocols",
    "id": 1999,
    "related": [
      {
        "id": "10344bb3-7f65-46c2-b915-2d00d47be5b0",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to Internet Explorer's (IE / Windows Internet properties) ZoneMap configuration of the \"HTTP\" and \"HTTPS\" protocols to point to the \"My Computer\" zone. This allows downloaded files from the Internet to be granted the same level of trust as files stored locally.\n",
    "references": [
      "https://twitter.com/M_haggis/status/1699056847154725107",
      "https://twitter.com/JAMESWT_MHT/status/1699042827261391247",
      "https://learn.microsoft.com/en-us/troubleshoot/developer/browsers/security-privacy/ie-security-zones-registry-entries",
      "https://www.virustotal.com/gui/file/339ff720c74dc44265b917b6d3e3ba0411d61f3cd3c328e9a2bae81592c8a6e5/content"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Michael Haag (idea)",
    "date": "2023/09/05",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\ProtocolDefaults",
        "TargetObject|endswith": [
          "\\http",
          "\\https"
        ],
        "Details|contains": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Uncommon Extension In Keyboard Layout IME File Registry Value",
    "id": 2000,
    "related": [
      {
        "id": "9d8f9bb8-01af-4e15-a3a2-349071530530",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of Windows Input Method Editor (IME) keyboard layout feature, which allows an attacker to load a DLL into the process after sending the WM_INPUTLANGCHANGEREQUEST message.\nBefore doing this, the client needs to register the DLL in a special registry key that is assumed to implement this keyboard layout. This registry key should store a value named \"Ime File\" with a DLL path.\nIMEs are essential for languages that have more characters than can be represented on a standard keyboard, such as Chinese, Japanese, and Korean.\n",
    "references": [
      "https://www.linkedin.com/pulse/guntior-story-advanced-bootkit-doesnt-rely-windows-disk-baranov-wue8e/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/11/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\Control\\Keyboard Layouts\\",
          "Ime File"
        ]
      },
      "filter_main_known_extension": {
        "Details|endswith": ".ime"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "IMEs are essential for languages that have more characters than can be represented on a standard keyboard, such as Chinese, Japanese, and Korean."
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Path In Keyboard Layout IME File Registry Value",
    "id": 2001,
    "related": [
      {
        "id": "b888e3f2-224d-4435-b00b-9dd66e9ea1f1",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects usage of Windows Input Method Editor (IME) keyboard layout feature, which allows an attacker to load a DLL into the process after sending the WM_INPUTLANGCHANGEREQUEST message.\nBefore doing this, the client needs to register the DLL in a special registry key that is assumed to implement this keyboard layout. This registry key should store a value named \"Ime File\" with a DLL path.\nIMEs are essential for languages that have more characters than can be represented on a standard keyboard, such as Chinese, Japanese, and Korean.\n",
    "references": [
      "https://www.linkedin.com/pulse/guntior-story-advanced-bootkit-doesnt-rely-windows-disk-baranov-wue8e/"
    ],
    "author": "X__Junior (Nextron Systems)",
    "date": "2023/11/21",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_registry": {
        "TargetObject|contains|all": [
          "\\Control\\Keyboard Layouts\\",
          "Ime File"
        ]
      },
      "selection_folders_1": {
        "Details|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\",
          "\\Temporary Internet"
        ]
      },
      "selection_folders_2": [
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        }
      ],
      "condition": "selection_registry and 1 of selection_folders_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Root or CA or AuthRoot Certificate to Store",
    "id": 2002,
    "status": "experimental",
    "description": "Detects the addition of new root, CA or AuthRoot certificates to the Windows registry",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.004/T1553.004.md#atomic-test-6---add-root-certificate-to-currentuser-certificate-store",
      "https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec"
    ],
    "author": "frack113",
    "date": "2022/04/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\SystemCertificates\\Root\\Certificates\\",
          "\\SOFTWARE\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\",
          "\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\",
          "\\SOFTWARE\\Microsoft\\SystemCertificates\\CA\\Certificates\\",
          "\\SOFTWARE\\Policies\\Microsoft\\SystemCertificates\\CA\\Certificates\\",
          "\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\CA\\Certificates\\",
          "\\SOFTWARE\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\",
          "\\SOFTWARE\\Policies\\Microsoft\\SystemCertificates\\AuthRoot\\Certificates\\",
          "\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\AuthRoot\\Certificates\\"
        ],
        "TargetObject|endswith": "\\Blob",
        "Details": "Binary Data"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Internet Explorer DisableFirstRunCustomize Enabled",
    "id": 2003,
    "status": "experimental",
    "description": "Detects changes to the Internet Explorer \"DisableFirstRunCustomize\" value, which prevents Internet Explorer from running the first run wizard the first time a user starts the browser after installing Internet Explorer or Windows.\n",
    "references": [
      "https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/devil-bait/NCSC-MAR-Devil-Bait.pdf",
      "https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/",
      "https://admx.help/?Category=InternetExplorer&Policy=Microsoft.Policies.InternetExplorer::NoFirstRunCustomise"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/16",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Microsoft\\Internet Explorer\\Main\\DisableFirstRunCustomize",
        "Details": [
          "DWORD (0x00000001)",
          "DWORD (0x00000002)"
        ]
      },
      "filter_main_generic": {
        "Image": [
          "C:\\Windows\\explorer.exe",
          "C:\\Windows\\System32\\ie4uinit.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "As this is controlled by group policy as well as user settings. Some false positives may occur."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Ransomware Activity Using LegalNotice Message",
    "id": 2004,
    "status": "experimental",
    "description": "Detect changes to the \"LegalNoticeCaption\" or \"LegalNoticeText\" registry values where the message set contains keywords often used in ransomware ransom messages",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/5c1e6f1b4fafd01c8d1ece85f510160fc1275fbf/atomics/T1491.001/T1491.001.md"
    ],
    "author": "frack113",
    "date": "2022/12/11",
    "modified": "2023/08/17",
    "tags": [
      "attack.impact",
      "attack.t1491.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LegalNoticeCaption",
          "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LegalNoticeText"
        ],
        "Details|contains": [
          "encrypted",
          "Unlock-Password",
          "paying"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Lolbas OneDriveStandaloneUpdater.exe Proxy Download",
    "id": 2005,
    "status": "experimental",
    "description": "Detects setting a custom URL for OneDriveStandaloneUpdater.exe to download a file from the Internet without executing any\nanomalous executables with suspicious arguments. The downloaded file will be in C:\\Users\\redacted\\AppData\\Local\\Microsoft\\OneDrive\\StandaloneUpdaterreSignInSettingsConfig.json\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/OneDriveStandaloneUpdater/"
    ],
    "author": "frack113",
    "date": "2022/05/28",
    "modified": "2023/08/17",
    "tags": [
      "attack.command_and_control",
      "attack.t1105"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\OneDrive\\UpdateOfficeConfig\\UpdateRingSettingURLFromOC"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Lsass Full Dump Request Via DumpType Registry Settings",
    "id": 2006,
    "status": "experimental",
    "description": "Detects the setting of the \"DumpType\" registry value to \"2\" which stands for a \"Full Dump\". Technique such as LSASS Shtinkering requires this value to be \"2\" in order to dump LSASS.",
    "references": [
      "https://github.com/deepinstinct/Lsass-Shtinkering",
      "https://learn.microsoft.com/en-us/windows/win32/wer/collecting-user-mode-dumps",
      "https://media.defcon.org/DEF%20CON%2030/DEF%20CON%2030%20presentations/Asaf%20Gilboa%20-%20LSASS%20Shtinkering%20Abusing%20Windows%20Error%20Reporting%20to%20Dump%20LSASS.pdf"
    ],
    "author": "@pbssubhash",
    "date": "2022/12/08",
    "modified": "2023/08/17",
    "tags": [
      "attack.credential_access",
      "attack.t1003.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\DumpType",
          "\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\LocalDumps\\lsass.exe\\DumpType"
        ],
        "Details": "DWORD (0x00000002)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate application that needs to do a full dump of their process"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RestrictedAdminMode Registry Value Tampering",
    "id": 2007,
    "related": [
      {
        "id": "28ac00d6-22d9-4a3c-927f-bbd770104573",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to the \"DisableRestrictedAdmin\" registry value in order to disable or enable RestrictedAdmin mode.\nRestrictedAdmin mode prevents the transmission of reusable credentials to the remote system to which you connect using Remote Desktop.\nThis prevents your credentials from being harvested during the initial connection process if the remote server has been compromise\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/a8e3cf63e97b973a25903d3df9fd55da6252e564/atomics/T1112/T1112.md",
      "https://social.technet.microsoft.com/wiki/contents/articles/32905.remote-desktop-services-enable-restricted-admin-mode.aspx"
    ],
    "author": "frack113",
    "date": "2023/01/13",
    "modified": "2023/12/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "System\\CurrentControlSet\\Control\\Lsa\\DisableRestrictedAdmin"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Adwind RAT / JRAT - Registry",
    "id": 2008,
    "related": [
      {
        "id": "1fac1481-2dbc-48b2-9096-753c49b4ec71",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects javaw.exe in AppData folder as used by Adwind / JRAT",
    "references": [
      "https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100",
      "https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf"
    ],
    "author": "Florian Roth (Nextron Systems), Tom Ueltschi, Jonhnathan Ribeiro, oscd.community",
    "date": "2017/11/10",
    "modified": "2023/08/17",
    "tags": [
      "attack.execution",
      "attack.t1059.005",
      "attack.t1059.007"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run",
        "Details|startswith": "%AppData%\\Roaming\\Oracle\\bin\\"
      },
      "condition": "selection"
    },
    "level": "high",
    "enable": true
  },
  {
    "title": "Blue Mockingbird - Registry",
    "id": 2009,
    "related": [
      {
        "id": "c3198a27-23a0-4c2c-af19-e5328d49680e",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Attempts to detect system changes made by Blue Mockingbird",
    "references": [
      "https://redcanary.com/blog/blue-mockingbird-cryptominer/"
    ],
    "author": "Trent Liffick (@tliffick)",
    "date": "2020/05/14",
    "modified": "2023/08/17",
    "tags": [
      "attack.execution",
      "attack.t1112",
      "attack.t1047"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\CurrentControlSet\\Services\\wercplsupport\\Parameters\\ServiceDll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Netsh Helper DLL - Registry",
    "id": 2010,
    "related": [
      {
        "id": "56321594-9087-49d9-bf10-524fe8479452",
        "type": "similar"
      },
      {
        "id": "e7b18879-676e-4a0e-ae18-27039185a8e7",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to the Netsh registry key to add a new DLL value. This change might be an indication of a potential persistence attempt by adding a malicious Netsh helper\n",
    "references": [
      "https://www.ired.team/offensive-security/persistence/t1128-netsh-helper-dll",
      "https://pentestlab.blog/2019/10/29/persistence-netsh-helper-dll/"
    ],
    "author": "Anish Bogati",
    "date": "2023/11/28",
    "tags": [
      "attack.persistence",
      "attack.t1546.007"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\NetSh",
        "Details|contains": ".dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate helper added by different programs and the OS"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New Netsh Helper DLL Registered From A Suspicious Location",
    "id": 2011,
    "related": [
      {
        "id": "56321594-9087-49d9-bf10-524fe8479452",
        "type": "similar"
      },
      {
        "id": "c90362e0-2df3-4e61-94fe-b37615814cb1",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to the Netsh registry key to add a new DLL value that is located on a suspicious location. This change might be an indication of a potential persistence attempt by adding a malicious Netsh helper\n",
    "references": [
      "https://www.ired.team/offensive-security/persistence/t1128-netsh-helper-dll",
      "https://pentestlab.blog/2019/10/29/persistence-netsh-helper-dll/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/11/28",
    "tags": [
      "attack.persistence",
      "attack.t1546.007"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_target": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\NetSh"
      },
      "selection_folders_1": {
        "Details|contains": [
          ":\\Perflogs\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\",
          "\\Temporary Internet"
        ]
      },
      "selection_folders_2": [
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Favorites\\"
          ]
        },
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Favourites\\"
          ]
        },
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Contacts\\"
          ]
        },
        {
          "Details|contains|all": [
            ":\\Users\\",
            "\\Pictures\\"
          ]
        }
      ],
      "condition": "selection_target and 1 of selection_folders_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "NET NGenAssemblyUsageLog Registry Key Tamper",
    "id": 2012,
    "status": "experimental",
    "description": "Detects changes to the NGenAssemblyUsageLog registry key.\n.NET Usage Log output location can be controlled by setting the NGenAssemblyUsageLog CLR configuration knob in the Registry or by configuring an environment variable (as described in the next section).\nBy simplify specifying an arbitrary value (e.g. fake output location or junk data) for the expected value, a Usage Log file for the .NET execution context will not be created.\n",
    "references": [
      "https://bohops.com/2021/03/16/investigating-net-clr-usage-log-tampering-techniques-for-edr-evasion/"
    ],
    "author": "frack113",
    "date": "2022/11/18",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "SOFTWARE\\Microsoft\\.NETFramework\\NGenAssemblyUsageLog"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New Application in AppCompat",
    "id": 2013,
    "status": "test",
    "description": "A General detection for a new application in AppCompat. This indicates an application executing for the first time on an endpoint.",
    "references": [
      "https://github.com/OTRF/detection-hackathon-apt29/issues/1",
      "https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/1.A.1_DFD6A782-9BDB-4550-AB6B-525E825B095E.md"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2020/05/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.execution",
      "attack.t1204.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\AppCompatFlags\\Compatibility Assistant\\Store\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "This rule is to explore new applications on an endpoint. False positives depends on the organization.",
      "Newly setup system.",
      "Legitimate installation of new application."
    ],
    "level": "informational",
    "enable": true
  },
  {
    "title": "Potential Credential Dumping Attempt Using New NetworkProvider - REG",
    "id": 2014,
    "related": [
      {
        "id": "baef1ec6-2ca9-47a3-97cc-4cf2bda10b77",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects when an attacker tries to add a new network provider in order to dump clear text credentials, similar to how the NPPSpy tool does it",
    "references": [
      "https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/network-provider-settings-removed-in-place-upgrade",
      "https://github.com/gtworek/PSBits/tree/master/PasswordStealing/NPPSpy"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/23",
    "modified": "2023/08/17",
    "tags": [
      "attack.credential_access",
      "attack.t1003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\System\\CurrentControlSet\\Services\\",
          "\\NetworkProvider"
        ]
      },
      "filter": {
        "TargetObject|contains": [
          "\\System\\CurrentControlSet\\Services\\WebClient\\NetworkProvider",
          "\\System\\CurrentControlSet\\Services\\LanmanWorkstation\\NetworkProvider",
          "\\System\\CurrentControlSet\\Services\\RDPNP\\NetworkProvider"
        ]
      },
      "filter_valid_procs": {
        "Image": "C:\\Windows\\System32\\poqexec.exe"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Other legitimate network providers used and not filtred in this rule"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "New ODBC Driver Registered",
    "id": 2015,
    "status": "experimental",
    "description": "Detects the registration of a new ODBC driver.",
    "references": [
      "https://www.hexacorn.com/blog/2020/08/23/odbcconf-lolbin-trifecta/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/23",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\ODBC\\ODBCINST.INI\\",
        "TargetObject|endswith": "\\Driver"
      },
      "filter_main_sqlserver": {
        "TargetObject|contains": "\\SQL Server\\",
        "Details": "%WINDIR%\\System32\\SQLSRV32.dll"
      },
      "filter_optional_office_access": {
        "TargetObject|contains": "\\Microsoft Access ",
        "Details|startswith": "C:\\Progra",
        "Details|endswith": "\\ACEODBC.DLL"
      },
      "filter_optional_office_excel": {
        "TargetObject|contains": "\\Microsoft Excel Driver",
        "Details|startswith": "C:\\Progra",
        "Details|endswith": "\\ACEODBC.DLL"
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potentially Suspicious ODBC Driver Registered",
    "id": 2016,
    "status": "experimental",
    "description": "Detects the registration of a new ODBC driver where the driver is located in a potentially suspicious location",
    "references": [
      "https://www.hexacorn.com/blog/2020/08/23/odbcconf-lolbin-trifecta/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/05/23",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\ODBC\\ODBCINST.INI\\",
        "TargetObject|endswith": [
          "\\Driver",
          "\\Setup"
        ],
        "Details|contains": [
          ":\\PerfLogs\\",
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Registration\\CRMLog",
          ":\\Windows\\System32\\com\\dmp\\",
          ":\\Windows\\System32\\FxsTmp\\",
          ":\\Windows\\System32\\Microsoft\\Crypto\\RSA\\MachineKeys\\",
          ":\\Windows\\System32\\spool\\drivers\\color\\",
          ":\\Windows\\System32\\spool\\PRINTERS\\",
          ":\\Windows\\System32\\spool\\SERVERS\\",
          ":\\Windows\\System32\\Tasks_Migrated\\",
          ":\\Windows\\System32\\Tasks\\Microsoft\\Windows\\SyncCenter\\",
          ":\\Windows\\SysWOW64\\com\\dmp\\",
          ":\\Windows\\SysWOW64\\FxsTmp\\",
          ":\\Windows\\SysWOW64\\Tasks\\Microsoft\\Windows\\PLA\\System\\",
          ":\\Windows\\SysWOW64\\Tasks\\Microsoft\\Windows\\SyncCenter\\",
          ":\\Windows\\Tasks\\",
          ":\\Windows\\Temp\\",
          ":\\Windows\\Tracing\\",
          "\\AppData\\Local\\Temp\\",
          "\\AppData\\Roaming\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Trust Access Disable For VBApplications",
    "id": 2017,
    "related": [
      {
        "id": "a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects registry changes to Microsoft Office \"AccessVBOM\" to a value of \"1\" which disables trust access for VBA on the victim machine and lets attackers execute malicious macros without any Microsoft Office warnings.",
    "references": [
      "https://twitter.com/inversecos/status/1494174785621819397",
      "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/zloader-with-a-new-infection-technique/",
      "https://securelist.com/scarcruft-surveilling-north-korean-defectors-and-human-rights-activists/105074/"
    ],
    "author": "Trent Liffick (@tliffick), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/05/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Security\\AccessVBOM",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Microsoft Office Protected View Disabled",
    "id": 2018,
    "related": [
      {
        "id": "7c637634-c95d-4bbf-b26c-a82510874b34",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects changes to Microsoft Office protected view registry keys with which the attacker disables this feature.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1562.001/T1562.001.md",
      "https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/",
      "https://yoroi.company/research/cyber-criminal-espionage-operation-insists-on-italian-manufacturing/",
      "https://admx.help/HKCU/software/policies/microsoft/office/16.0/excel/security/protectedview"
    ],
    "author": "frack113, Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/06/08",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_path": {
        "TargetObject|contains|all": [
          "\\SOFTWARE\\Microsoft\\Office\\",
          "\\Security\\ProtectedView\\"
        ]
      },
      "selection_values_1": {
        "Details": "DWORD (0x00000001)",
        "TargetObject|endswith": [
          "\\DisableAttachementsInPV",
          "\\DisableInternetFilesInPV",
          "\\DisableIntranetCheck",
          "\\DisableUnsafeLocationsInPV"
        ]
      },
      "selection_values_0": {
        "Details": "DWORD (0x00000000)",
        "TargetObject|endswith": [
          "\\enabledatabasefileprotectedview",
          "\\enableforeigntextfileprotectedview"
        ]
      },
      "condition": "selection_path and 1 of selection_values_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Enable Microsoft Dynamic Data Exchange",
    "id": 2019,
    "status": "test",
    "description": "Enable Dynamic Data Exchange protocol (DDE) in all supported editions of Microsoft Word or Excel.",
    "references": [
      "https://msrc.microsoft.com/update-guide/vulnerability/ADV170021"
    ],
    "author": "frack113",
    "date": "2022/02/26",
    "modified": "2023/08/17",
    "tags": [
      "attack.execution",
      "attack.t1559.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_word": {
        "TargetObject|endswith": "\\Word\\Security\\AllowDDE",
        "Details": [
          "DWORD (0x00000001)",
          "DWORD (0x00000002)"
        ]
      },
      "selection_excel": {
        "TargetObject|endswith": [
          "\\Excel\\Security\\DisableDDEServerLaunch",
          "\\Excel\\Security\\DisableDDEServerLookup"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Outlook LoadMacroProviderOnBoot Setting",
    "id": 2020,
    "status": "experimental",
    "description": "Detects the modification of Outlook setting \"LoadMacroProviderOnBoot\" which if enabled allows the automatic loading of any configured VBA project/module",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=53",
      "https://www.linkedin.com/pulse/outlook-backdoor-using-vba-samir-b-/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2021/04/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.command_and_control",
      "attack.t1137",
      "attack.t1008",
      "attack.t1546"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Outlook\\LoadMacroProviderOnBoot",
        "Details|contains": "0x00000001"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Outlook Macro Execution Without Warning Setting Enabled",
    "id": 2021,
    "status": "test",
    "description": "Detects the modification of Outlook security setting to allow unprompted execution of macros.",
    "references": [
      "https://www.mdsec.co.uk/2020/11/a-fresh-outlook-on-mail-based-persistence/",
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=53"
    ],
    "author": "@ScoubiMtl",
    "date": "2021/04/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.command_and_control",
      "attack.t1137",
      "attack.t1008",
      "attack.t1546"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Outlook\\Security\\Level",
        "Details|contains": "0x00000001"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Outlook EnableUnsafeClientMailRules Setting Enabled - Registry",
    "id": 2022,
    "related": [
      {
        "id": "c3cefdf4-6703-4e1c-bad8-bf422fc5015a",
        "type": "similar"
      },
      {
        "id": "55f0a3a1-846e-40eb-8273-677371b8d912",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects an attacker trying to enable the outlook security setting \"EnableUnsafeClientMailRules\" which allows outlook to run applications or execute macros",
    "references": [
      "https://support.microsoft.com/en-us/topic/how-to-control-the-rule-actions-to-start-an-application-or-run-a-macro-in-outlook-2016-and-outlook-2013-e4964b72-173c-959d-5d7b-ead562979048",
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=44"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/08",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Outlook\\Security\\EnableUnsafeClientMailRules",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Outlook Security Settings Updated - Registry",
    "id": 2023,
    "related": [
      {
        "id": "a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects changes to the registry values related to outlook security settings",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1137/T1137.md",
      "https://docs.microsoft.com/en-us/outlook/troubleshoot/security/information-about-email-security-settings"
    ],
    "author": "frack113",
    "date": "2021/12/28",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1137"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\SOFTWARE\\Microsoft\\Office\\",
          "\\Outlook\\Security\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrative activity"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Uncommon Microsoft Office Trusted Location Added",
    "id": 2024,
    "related": [
      {
        "id": "a0bed973-45fa-4625-adb5-6ecdf9be70ac",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to registry keys related to \"Trusted Location\" of Microsoft Office where the path is set to something uncommon. Attackers might add additional trusted locations to avoid macro security restrictions.",
    "references": [
      "Internal Research",
      "https://admx.help/?Category=Office2016&Policy=excel16.Office.Microsoft.Policies.Windows::L_TrustedLoc01"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/21",
    "modified": "2023/09/29",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "Security\\Trusted Locations\\Location",
        "TargetObject|endswith": "\\Path"
      },
      "filter_exclude_known_paths": {
        "Details|contains": [
          "%APPDATA%\\Microsoft\\Templates",
          "%%APPDATA%%\\Microsoft\\Templates",
          "%APPDATA%\\Microsoft\\Word\\Startup",
          "%%APPDATA%%\\Microsoft\\Word\\Startup",
          ":\\Program Files (x86)\\Microsoft Office\\root\\Templates\\",
          ":\\Program Files\\Microsoft Office (x86)\\Templates",
          ":\\Program Files\\Microsoft Office\\root\\Templates\\",
          ":\\Program Files\\Microsoft Office\\Templates\\"
        ]
      },
      "filter_main_office_click_to_run": {
        "Image|contains": ":\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_main_office_apps": {
        "Image|contains": [
          ":\\Program Files\\Microsoft Office\\",
          ":\\Program Files (x86)\\Microsoft Office\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_exclude_*"
    },
    "falsepositives": [
      "Other unknown legitimate or custom paths need to be filtered to avoid false positives"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Macro Enabled In A Potentially Suspicious Document",
    "id": 2025,
    "related": [
      {
        "id": "295a59c1-7b79-4b47-a930-df12c15fc9c2",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects registry changes to Office trust records where the path is located in a potentially suspicious location",
    "references": [
      "https://twitter.com/inversecos/status/1494174785621819397",
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/06/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_value": {
        "TargetObject|contains": "\\Security\\Trusted Documents\\TrustRecords"
      },
      "selection_paths": {
        "TargetObject|contains": [
          "/AppData/Local/Microsoft/Windows/INetCache/",
          "/AppData/Local/Temp/",
          "/PerfLogs/",
          "C:/Users/Public/",
          "file:///D:/",
          "file:///E:/"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Office Macros Auto-Enabled",
    "id": 2026,
    "related": [
      {
        "id": "a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects registry changes to Microsoft Office \"VBAWarning\" to a value of \"1\" which enables the execution of all macros, whether signed or unsigned.",
    "references": [
      "https://twitter.com/inversecos/status/1494174785621819397",
      "https://www.mcafee.com/blogs/other-blogs/mcafee-labs/zloader-with-a-new-infection-technique/",
      "https://securelist.com/scarcruft-surveilling-north-korean-defectors-and-human-rights-activists/105074/"
    ],
    "author": "Trent Liffick (@tliffick), Nasreddine Bencherchali (Nextron Systems)",
    "date": "2020/05/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Security\\VBAWarnings",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Using DebugPath",
    "id": 2027,
    "status": "experimental",
    "description": "Detects potential persistence using Appx DebugPath",
    "references": [
      "https://oddvar.moe/2018/09/06/persistence-using-universal-windows-platform-apps-appx/",
      "https://github.com/rootm0s/WinPwnage"
    ],
    "author": "frack113",
    "date": "2022/07/27",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_debug": {
        "TargetObject|contains": "Classes\\ActivatableClasses\\Package\\Microsoft.",
        "TargetObject|endswith": "\\DebugPath"
      },
      "selection_default": {
        "TargetObject|contains": "\\Software\\Microsoft\\Windows\\CurrentVersion\\PackagedAppXDebug\\Microsoft.",
        "TargetObject|endswith": "\\(Default)"
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via AppCompat RegisterAppRestart Layer",
    "id": 2028,
    "status": "experimental",
    "description": "Detects the setting of the REGISTERAPPRESTART compatibility layer on an application.\nThis compatibility layer allows an application to register for restart using the \"RegisterApplicationRestart\" API.\nThis can be potentially abused as a persistence mechanism.\n",
    "references": [
      "https://github.com/nasbench/Misc-Research/blob/d114d6a5e0a437d3818e492ef9864367152543e7/Other/Persistence-Via-RegisterAppRestart-Shim.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2024/01/01",
    "tags": [
      "attack.persistence",
      "attack.t1546.011"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\\",
        "Details|contains": "REGISTERAPPRESTART"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate applications making use of this feature for compatibility reasons"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via App Paths Default Property",
    "id": 2029,
    "status": "experimental",
    "description": "Detects changes to the \"Default\" property for keys located in the \\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\ registry. Which might be used as a method of persistence\nThe entries found under App Paths are used primarily for the following purposes.\nFirst, to map an application's executable file name to that file's fully qualified path.\nSecond, to prepend information to the PATH environment variable on a per-application, per-process basis.\n",
    "references": [
      "https://www.hexacorn.com/blog/2013/01/19/beyond-good-ol-run-key-part-3/",
      "https://docs.microsoft.com/en-us/windows/win32/shell/app-registration?redirectedfrom=MSDN"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/10",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.012"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths",
        "TargetObject|endswith": [
          "(Default)",
          "Path"
        ],
        "Details|contains": [
          "\\Users\\Public",
          "\\AppData\\Local\\Temp\\",
          "\\Windows\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "%temp%",
          "%tmp%",
          "iex",
          "Invoke-",
          "rundll32",
          "regsvr32",
          "mshta",
          "cscript",
          "wscript",
          ".bat",
          ".hta",
          ".dll",
          ".ps1"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate applications registering their binary from on of the suspicious locations mentioned above (tune it)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via AutodialDLL",
    "id": 2030,
    "status": "experimental",
    "description": "Detects change the the \"AutodialDLL\" key which could be used as a persistence method to load custom DLL via the \"ws2_32\" library",
    "references": [
      "https://www.hexacorn.com/blog/2015/01/13/beyond-good-ol-run-key-part-24/",
      "https://persistence-info.github.io/Data/autodialdll.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/10",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Services\\WinSock2\\Parameters\\AutodialDLL"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via CHM Helper DLL",
    "id": 2031,
    "status": "experimental",
    "description": "Detects when an attacker modifies the registry key \"HtmlHelp Author\" to achieve persistence",
    "references": [
      "https://persistence-info.github.io/Data/htmlhelpauthor.html",
      "https://www.hexacorn.com/blog/2018/04/22/beyond-good-ol-run-key-part-76/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Software\\Microsoft\\HtmlHelp Author\\Location",
          "\\Software\\WOW6432Node\\Microsoft\\HtmlHelp Author\\Location"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential PSFactoryBuffer COM Hijacking",
    "id": 2032,
    "status": "experimental",
    "description": "Detects changes to the PSFactory COM InProcServer32 registry. This technique was used by RomCom to create persistence storing a malicious DLL.",
    "references": [
      "https://blogs.blackberry.com/en/2023/06/romcom-resurfaces-targeting-ukraine",
      "https://strontic.github.io/xcyclopedia/library/clsid_C90250F3-4D7D-4991-9B69-A5C5BC1C2AE6.html",
      "https://www.virustotal.com/gui/file/6d3ab9e729bb03ae8ae3fcd824474c5052a165de6cb4c27334969a542c7b261d/detection",
      "https://www.trendmicro.com/en_us/research/23/e/void-rabisu-s-use-of-romcom-backdoor-shows-a-growing-shift-in-th.html"
    ],
    "author": "BlackBerry Threat Research and Intelligence Team - @Joseliyo_Jstnk",
    "date": "2023/06/07",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\CLSID\\{c90250f3-4d7d-4991-9b69-a5c5bc1c2ae6}\\InProcServer32\\(Default)"
      },
      "filter_main": {
        "Details": [
          "%windir%\\System32\\ActXPrxy.dll",
          "C:\\Windows\\System32\\ActXPrxy.dll"
        ]
      },
      "condition": "selection and not filter_main"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via COM Hijacking From Suspicious Locations",
    "id": 2033,
    "status": "experimental",
    "description": "Detects potential COM object hijacking where the \"Server\" (In/Out) is pointing to a suspicious or unsuale location",
    "references": [
      "https://www.microsoft.com/security/blog/2022/07/27/untangling-knotweed-european-private-sector-offensive-actor-using-0-day-exploits/ (idea)"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/28",
    "modified": "2023/09/28",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\CLSID\\",
        "TargetObject|endswith": [
          "\\InprocServer32\\(Default)",
          "\\LocalServer32\\(Default)"
        ],
        "Details|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Desktop\\",
          "\\Downloads\\",
          "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\",
          "\\System32\\spool\\drivers\\color\\",
          "\\Users\\Public\\",
          "\\Windows\\Temp\\",
          "%appdata%",
          "%temp%",
          "%tmp%"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Probable legitimate applications. If you find these please add them to an exclusion list"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Custom Protocol Handler",
    "id": 2034,
    "status": "experimental",
    "description": "Detects potential persistence activity via the registering of a new custom protocole handlers. While legitimate applications register protocole handlers often times during installation. And attacker can abuse this by setting a custom handler to be used as a persistence mechanism.",
    "references": [
      "https://ladydebug.com/blog/2019/06/21/custom-protocol-handler-cph/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/05/30",
    "modified": "2023/05/12",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKCR\\",
        "Details|startswith": "URL:"
      },
      "filter_main_ms_trusted": {
        "Details|startswith": "URL:ms-"
      },
      "filter_main_generic_locations": {
        "Image|startswith": [
          "C:\\Program Files (x86)",
          "C:\\Program Files\\",
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Many legitimate applications can register a new custom protocol handler. Additional filters needs to applied according to your environment."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Event Viewer Events.asp",
    "id": 2035,
    "status": "test",
    "description": "Detects potential registry persistence technique using the Event Viewer \"Events.asp\" technique",
    "references": [
      "https://twitter.com/nas_bench/status/1626648985824788480",
      "https://admx.help/?Category=Windows_7_2008R2&Policy=Microsoft.Policies.InternetCommunicationManagement::EventViewer_DisableLinks",
      "https://www.hexacorn.com/blog/2019/02/15/beyond-good-ol-run-key-part-103/",
      "https://github.com/redcanaryco/atomic-red-team/blob/f296668303c29d3f4c07e42bdd2b28d8dd6625f9/atomics/T1112/T1112.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/02/17",
    "modified": "2023/03/05",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionProgram",
          "\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionURL"
        ]
      },
      "filter_default_redirect_program": {
        "Image|endswith": "C:\\WINDOWS\\system32\\svchost.exe",
        "TargetObject|endswith": "\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionProgram",
        "Details": "%%SystemRoot%%\\PCHealth\\HelpCtr\\Binaries\\HelpCtr.exe"
      },
      "filter_default_redirect_program_cli": {
        "Image|endswith": "C:\\WINDOWS\\system32\\svchost.exe",
        "TargetObject|endswith": "\\Microsoft\\Windows NT\\CurrentVersion\\Event Viewer\\MicrosoftRedirectionProgramCommandLineParameters",
        "Details": "-url hcp://services/centers/support?topic=%%s"
      },
      "filter_url": {
        "Details": "http://go.microsoft.com/fwlink/events.asp"
      },
      "filter_cleaner": {
        "Details": "(Empty)"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via GlobalFlags",
    "id": 2036,
    "related": [
      {
        "id": "c81fe886-cac0-4913-a511-2822d72ff505",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects registry persistence technique using the GlobalFlags and SilentProcessExit keys",
    "references": [
      "https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/",
      "https://www.deepinstinct.com/2021/02/16/lsass-memory-dumps-are-stealthier-than-ever-before-part-2/"
    ],
    "author": "Karneades, Jonhnathan Ribeiro, Florian Roth",
    "date": "2018/04/11",
    "modified": "2023/06/05",
    "tags": [
      "attack.privilege_escalation",
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1546.012",
      "car.2013-01-002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_global_flag": {
        "TargetObject|contains|all": [
          "\\Microsoft\\Windows NT\\CurrentVersion\\",
          "\\Image File Execution Options\\",
          "\\GlobalFlag"
        ]
      },
      "selection_silent_process": {
        "TargetObject|contains|all": [
          "\\Microsoft\\Windows NT\\CurrentVersion\\",
          "\\SilentProcessExit\\"
        ],
        "TargetObject|contains": [
          "\\ReportingMode",
          "\\MonitorProcess"
        ]
      },
      "condition": "1 of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Modification of IE Registry Settings",
    "id": 2037,
    "status": "experimental",
    "description": "Detects modification of the registry settings used for Internet Explorer and other Windows components that use these settings. An attacker can abuse this registry key to add a domain to the trusted sites Zone or insert javascript for persistence",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-4---add-domain-to-trusted-sites-zone",
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-5---javascript-in-registry"
    ],
    "author": "frack113",
    "date": "2022/01/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_domains": {
        "TargetObject|contains": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings"
      },
      "filter_dword": {
        "Details|startswith": "DWORD"
      },
      "filter_office": {
        "Details": [
          "Cookie:",
          "Visited:",
          "(Empty)"
        ]
      },
      "filter_path": {
        "TargetObject|contains": [
          "\\Cache",
          "\\ZoneMap",
          "\\WpadDecision"
        ]
      },
      "filter_binary": {
        "Details": "Binary Data"
      },
      "filter_accepted_documents": {
        "TargetObject|contains": "\\Accepted Documents\\"
      },
      "condition": "selection_domains and not 1 of filter_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Register New IFiltre For Persistence",
    "id": 2038,
    "status": "experimental",
    "description": "Detects when an attacker register a new IFilter for an extension. Microsoft Windows Search uses filters to extract the content of items for inclusion in a full-text index. You can extend Windows Search to index new or proprietary file types by writing filters to extract the content, and property handlers to extract the properties of files",
    "references": [
      "https://persistence-info.github.io/Data/ifilters.html",
      "https://twitter.com/0gtweet/status/1468548924600459267",
      "https://github.com/gtworek/PSBits/tree/master/IFilter",
      "https://github.com/gtworek/PSBits/blob/8d767892f3b17eefa4d0668f5d2df78e844f01d8/IFilter/Dll.cpp#L281-L308"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_ext": {
        "TargetObject|startswith": [
          "HKLM\\SOFTWARE\\Classes\\.",
          "HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\."
        ],
        "TargetObject|contains": "\\PersistentHandler"
      },
      "selection_clsid": {
        "TargetObject|startswith": [
          "HKLM\\SOFTWARE\\Classes\\CLSID",
          "HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID"
        ],
        "TargetObject|contains": "\\PersistentAddinsRegistered\\{89BCB740-6119-101A-BCB7-00DD010655AF}"
      },
      "filter_default_targets": {
        "TargetObject|contains": [
          "\\CLSID\\{4F46F75F-199F-4C63-8B7D-86D48FE7970C}\\",
          "\\CLSID\\{4887767F-7ADC-4983-B576-88FB643D6F79}\\",
          "\\CLSID\\{D3B41FA1-01E3-49AF-AA25-1D0D824275AE}\\",
          "\\CLSID\\{72773E1A-B711-4d8d-81FA-B9A43B0650DD}\\",
          "\\CLSID\\{098f2470-bae0-11cd-b579-08002b30bfeb}\\",
          "\\CLSID\\{1AA9BF05-9A97-48c1-BA28-D9DCE795E93C}\\",
          "\\CLSID\\{2e2294a9-50d7-4fe7-a09f-e6492e185884}\\",
          "\\CLSID\\{34CEAC8D-CBC0-4f77-B7B1-8A60CB6DA0F7}\\",
          "\\CLSID\\{3B224B11-9363-407e-850F-C9E1FFACD8FB}\\",
          "\\CLSID\\{3DDEB7A4-8ABF-4D82-B9EE-E1F4552E95BE}\\",
          "\\CLSID\\{5645C8C1-E277-11CF-8FDA-00AA00A14F93}\\",
          "\\CLSID\\{5645C8C4-E277-11CF-8FDA-00AA00A14F93}\\",
          "\\CLSID\\{58A9EBF6-5755-4554-A67E-A2467AD1447B}\\",
          "\\CLSID\\{5e941d80-bf96-11cd-b579-08002b30bfeb}\\",
          "\\CLSID\\{698A4FFC-63A3-4E70-8F00-376AD29363FB}\\",
          "\\CLSID\\{7E9D8D44-6926-426F-AA2B-217A819A5CCE}\\",
          "\\CLSID\\{8CD34779-9F10-4f9b-ADFB-B3FAEABDAB5A}\\",
          "\\CLSID\\{9694E38A-E081-46ac-99A0-8743C909ACB6}\\",
          "\\CLSID\\{98de59a0-d175-11cd-a7bd-00006b827d94}\\",
          "\\CLSID\\{AA10385A-F5AA-4EFF-B3DF-71B701E25E18}\\",
          "\\CLSID\\{B4132098-7A03-423D-9463-163CB07C151F}\\",
          "\\CLSID\\{d044309b-5da6-4633-b085-4ed02522e5a5}\\",
          "\\CLSID\\{D169C14A-5148-4322-92C8-754FC9D018D8}\\",
          "\\CLSID\\{DD75716E-B42E-4978-BB60-1497B92E30C4}\\",
          "\\CLSID\\{E2F83EED-62DE-4A9F-9CD0-A1D40DCD13B6}\\",
          "\\CLSID\\{E772CEB3-E203-4828-ADF1-765713D981B8}\\",
          "\\CLSID\\{eec97550-47a9-11cf-b952-00aa0051fe20}",
          "\\CLSID\\{FB10BD80-A331-4e9e-9EB7-00279903AD99}\\"
        ]
      },
      "filter_generic_paths": {
        "Image|startswith": [
          "C:\\Windows\\System32\\",
          "C:\\Program Files (x86)\\",
          "C:\\Program Files\\"
        ]
      },
      "condition": "1 of selection_* and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate registration of IFilters by the OS or software"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via LSA Extensions",
    "id": 2039,
    "status": "experimental",
    "description": "Detects when an attacker modifies the \"REG_MULTI_SZ\" value named \"Extensions\" to include a custom DLL to achieve persistence via lsass.\nThe \"Extensions\" list contains filenames of DLLs being automatically loaded by lsass.exe. Each DLL has its InitializeLsaExtension() method called after loading.\n",
    "references": [
      "https://persistence-info.github.io/Data/lsaaextension.html",
      "https://twitter.com/0gtweet/status/1476286368385019906"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SYSTEM\\CurrentControlSet\\Control\\LsaExtensionConfig\\LsaSrv\\Extensions"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Mpnotify",
    "id": 2040,
    "status": "experimental",
    "description": "Detects when an attacker register a new SIP provider for persistence and defense evasion",
    "references": [
      "https://persistence-info.github.io/Data/mpnotify.html",
      "https://www.youtube.com/watch?v=ggY3srD9dYs&ab_channel=GrzegorzTworek"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\mpnotify"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Might trigger if a legitimate new SIP provider is registered. But this is not a common occurrence in an environment and should be investigated either way"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via MyComputer Registry Keys",
    "id": 2041,
    "status": "experimental",
    "description": "Detects modification to the \"Default\" value of the \"MyComputer\" key and subkeys to point to a custom binary that will be launched whenever the associated action is executed (see reference section for example)",
    "references": [
      "https://www.hexacorn.com/blog/2017/01/18/beyond-good-ol-run-key-part-55/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/09",
    "modified": "2024/01/11",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer",
        "TargetObject|endswith": "(Default)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unlikely but if you experience FPs add specific processes and locations you would like to monitor for"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via DLLPathOverride",
    "id": 2042,
    "status": "experimental",
    "description": "Detects when an attacker adds a new \"DLLPathOverride\" value to the \"Natural Language\" key in order to achieve persistence which will get invoked by \"SearchIndexer.exe\" process",
    "references": [
      "https://persistence-info.github.io/Data/naturallanguage6.html",
      "https://www.hexacorn.com/blog/2018/12/30/beyond-good-ol-run-key-part-98/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_root": {
        "TargetObject|contains": "\\SYSTEM\\CurrentControlSet\\Control\\ContentIndex\\Language\\"
      },
      "selection_values": {
        "TargetObject|contains": [
          "\\StemmerDLLPathOverride",
          "\\WBDLLPathOverride",
          "\\StemmerClass",
          "\\WBreakerClass"
        ]
      },
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Visual Studio Tools for Office",
    "id": 2043,
    "status": "experimental",
    "description": "Detects persistence via Visual Studio Tools for Office (VSTO) add-ins in Office applications.",
    "references": [
      "https://twitter.com/_vivami/status/1347925307643355138",
      "https://vanmieghem.io/stealth-outlook-persistence/"
    ],
    "author": "Bhabesh Raj",
    "date": "2021/01/10",
    "modified": "2023/08/28",
    "tags": [
      "attack.t1137.006",
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Software\\Microsoft\\Office\\Outlook\\Addins\\",
          "\\Software\\Microsoft\\Office\\Word\\Addins\\",
          "\\Software\\Microsoft\\Office\\Excel\\Addins\\",
          "\\Software\\Microsoft\\Office\\Powerpoint\\Addins\\",
          "\\Software\\Microsoft\\VSTO\\Security\\Inclusion\\"
        ]
      },
      "filter_image": {
        "Image|endswith": [
          "\\msiexec.exe",
          "\\regsvr32.exe"
        ]
      },
      "filter_office": {
        "Image|endswith": [
          "\\excel.exe",
          "\\integrator.exe",
          "\\OfficeClickToRun.exe",
          "\\winword.exe",
          "\\visio.exe"
        ]
      },
      "filter_teams": {
        "Image|endswith": "\\Teams.exe"
      },
      "filter_avg": {
        "Image": "C:\\Program Files\\AVG\\Antivirus\\RegSvr.exe",
        "TargetObject|contains": "\\Microsoft\\Office\\Outlook\\Addins\\Antivirus.AsOutExt\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate Addin Installation"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Outlook Home Page",
    "id": 2044,
    "status": "experimental",
    "description": "Detects potential persistence activity via outlook home pages.",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=70",
      "https://support.microsoft.com/en-us/topic/outlook-home-page-feature-is-missing-in-folder-properties-d207edb7-aa02-46c5-b608-5d9dbed9bd04?ui=en-us&rs=en-us&ad=us"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2021/06/09",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_1": {
        "TargetObject|contains": [
          "\\Software\\Microsoft\\Office\\",
          "\\Outlook\\WebView\\"
        ],
        "TargetObject|endswith": "\\URL"
      },
      "selection_2": {
        "TargetObject|contains": [
          "\\Calendar\\",
          "\\Inbox\\"
        ]
      },
      "condition": "all of selection_*"
    },
    "fields": [
      "Details"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Outlook Today Pages",
    "id": 2045,
    "status": "experimental",
    "description": "Detects potential persistence activity via outlook today pages. An attacker can set a custom page to execute arbitrary code and link to it via the registry key \"UserDefinedUrl\".",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=74"
    ],
    "author": "Tobias Michalski (Nextron Systems)",
    "date": "2021/06/10",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_main": {
        "TargetObject|contains|all": [
          "Software\\Microsoft\\Office\\",
          "\\Outlook\\Today\\"
        ]
      },
      "selection_value_stamp": {
        "TargetObject|endswith": "Stamp",
        "Details": "DWORD (0x00000001)"
      },
      "selection_value_user_defined": {
        "TargetObject|endswith": "UserDefinedUrl"
      },
      "filter_office": {
        "Image|startswith": [
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
          "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\Updates\\"
        ],
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "condition": "selection_main and 1 of selection_value_* and not 1 of filter_*"
    },
    "fields": [
      "Details"
    ],
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential WerFault ReflectDebugger Registry Value Abuse",
    "id": 2046,
    "related": [
      {
        "id": "fabfb3a7-3ce1-4445-9c7c-3c27f1051cdd",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects potential WerFault \"ReflectDebugger\" registry value abuse for persistence.",
    "references": [
      "https://cocomelonc.github.io/malware/2022/11/02/malware-pers-18.html",
      "https://www.hexacorn.com/blog/2018/08/31/beyond-good-ol-run-key-part-85/"
    ],
    "author": "X__Junior",
    "date": "2023/05/18",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "SetValue",
        "TargetObject|endswith": "\\Microsoft\\Windows\\Windows Error Reporting\\Hangs\\ReflectDebugger"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Scrobj.dll COM Hijacking",
    "id": 2047,
    "status": "experimental",
    "description": "Detect use of scrobj.dll as this DLL looks for the ScriptletURL key to get the location of the script to execute",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1546.015/T1546.015.md"
    ],
    "author": "frack113",
    "date": "2022/08/20",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "InprocServer32\\(Default)",
        "Details": "C:\\WINDOWS\\system32\\scrobj.dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the dll."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via COM Search Order Hijacking",
    "id": 2048,
    "status": "experimental",
    "description": "Detects potential COM object hijacking leveraging the COM Search Order",
    "references": [
      "https://www.cyberbit.com/blog/endpoint-security/com-hijacking-windows-overlooked-security-vulnerability/"
    ],
    "author": "Maxime Thiebaut (@0xThiebaut), oscd.community, C\u00c3\u00a9dric Hien",
    "date": "2020/04/14",
    "modified": "2023/09/28",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\CLSID\\",
        "TargetObject|endswith": "\\InprocServer32\\(Default)"
      },
      "filter_main_generic": {
        "Details|contains": [
          "%%systemroot%%\\system32\\",
          "%%systemroot%%\\SysWow64\\"
        ]
      },
      "filter_main_onedrive": {
        "Details|contains": [
          "\\AppData\\Local\\Microsoft\\OneDrive\\",
          "\\FileCoAuthLib64.dll",
          "\\FileSyncShell64.dll",
          "\\FileSyncApi64.dll"
        ]
      },
      "filter_main_health_service": {
        "Image|endswith": ":\\WINDOWS\\system32\\SecurityHealthService.exe"
      },
      "filter_main_teams": {
        "Details|contains|all": [
          "\\AppData\\Local\\Microsoft\\TeamsMeetingAddin\\",
          "\\Microsoft.Teams.AddinLoader.dll"
        ]
      },
      "filter_main_dropbox": {
        "Details|contains|all": [
          "\\AppData\\Roaming\\Dropbox\\",
          "\\DropboxExt64.*.dll"
        ]
      },
      "filter_main_trend_micro": {
        "Details|endswith": "TmopIEPlg.dll"
      },
      "filter_main_update": {
        "Image|endswith": [
          ":\\WINDOWS\\system32\\wuauclt.exe",
          ":\\WINDOWS\\system32\\svchost.exe"
        ]
      },
      "filter_main_defender": {
        "Image|contains": [
          ":\\ProgramData\\Microsoft\\Windows Defender\\Platform\\",
          ":\\Program Files\\Windows Defender\\"
        ],
        "Image|endswith": "\\MsMpEng.exe"
      },
      "filter_main_nvidia": {
        "Details|contains": "\\FileRepository\\nvmdi.inf"
      },
      "filter_main_edge": {
        "Image|endswith": "\\MicrosoftEdgeUpdateComRegisterShell64.exe"
      },
      "filter_main_dx": {
        "Image|endswith": ":\\WINDOWS\\SYSTEM32\\dxdiag.exe"
      },
      "filter_main_python": {
        "Details|endswith": [
          ":\\Windows\\pyshellext.amd64.dll",
          ":\\Windows\\pyshellext.dll"
        ]
      },
      "filter_main_bonjourlib": {
        "Details|endswith": [
          ":\\Windows\\system32\\dnssdX.dll",
          ":\\Windows\\SysWOW64\\dnssdX.dll"
        ]
      },
      "filter_main_printextensionmanager": {
        "Details|endswith": ":\\Windows\\system32\\spool\\drivers\\x64\\3\\PrintConfig.dll"
      },
      "filter_main_programfiles": {
        "Details|contains": [
          ":\\Program Files\\",
          ":\\Program Files (x86)\\"
        ]
      },
      "filter_main_programdata": {
        "Details|contains": ":\\ProgramData\\Microsoft\\"
      },
      "filter_main_gameservice": {
        "Details|contains": ":\\WINDOWS\\system32\\GamingServicesProxy.dll"
      },
      "filter_main_poqexec": {
        "Image|endswith": ":\\Windows\\System32\\poqexec.exe",
        "Details|contains": ":\\Windows\\System32\\Autopilot.dll"
      },
      "filter_main_sec_health_svc": {
        "Image|endswith": ":\\Windows\\system32\\SecurityHealthService.exe",
        "Details|contains": ":\\Windows\\System32\\SecurityHealth"
      },
      "filter_main_inprocserver": {
        "Image|endswith": [
          ":\\Windows\\System32\\poqexec.exe",
          ":\\Windows\\System32\\regsvr32.exe"
        ],
        "TargetObject|endswith": "\\InProcServer32\\(Default)"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Some installed utilities (i.e. OneDrive) may serve new COM objects at user-level"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Shim Database Modification",
    "id": 2049,
    "status": "experimental",
    "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.\nThe Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.011/T1546.011.md#atomic-test-3---registry-key-creation-andor-modification-events-for-sdb",
      "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html",
      "https://andreafortuna.org/2018/11/12/process-injection-and-persistence-using-application-shimming/"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.011"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\",
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\"
        ]
      },
      "filter_main_empty": {
        "Details": ""
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Legitimate custom SHIM installations will also trigger this rule"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Shim Database Patching Activity",
    "id": 2050,
    "status": "experimental",
    "description": "Detects installation of new shim databases that try to patch sections of known processes for potential process injection or persistence.",
    "references": [
      "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/pillowmint-fin7s-monkey-thief/",
      "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/01",
    "modified": "2023/12/06",
    "tags": [
      "attack.persistence",
      "attack.t1546.011"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\\",
        "TargetObject|endswith": [
          "\\csrss.exe",
          "\\dllhost.exe",
          "\\explorer.exe",
          "\\RuntimeBroker.exe",
          "\\services.exe",
          "\\sihost.exe",
          "\\svchost.exe",
          "\\taskhostw.exe",
          "\\winlogon.exe",
          "\\WmiPrvSe.exe"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Shim Database In Uncommon Location",
    "id": 2051,
    "status": "experimental",
    "description": "Detects the installation of a new shim database where the file is located in a non-default location",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html",
      "https://andreafortuna.org/2018/11/12/process-injection-and-persistence-using-application-shimming/",
      "https://www.blackhat.com/docs/asia-14/materials/Erickson/Asia-14-Erickson-Persist-It-Using-And-Abusing-Microsofts-Fix-It-Patches.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/08/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.011"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\\",
          "\\DatabasePath"
        ]
      },
      "filter_main_known_locations": {
        "Details|contains": ":\\Windows\\AppPatch\\Custom"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via TypedPaths",
    "id": 2052,
    "status": "experimental",
    "description": "Detects modification addition to the 'TypedPaths' key in the user or admin registry from a non standard application. Which might indicate persistence attempt",
    "references": [
      "https://twitter.com/dez_/status/1560101453150257154",
      "https://forensafe.com/blogs/typedpaths.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/22",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\TypedPaths\\"
      },
      "filter": {
        "Image": [
          "C:\\Windows\\explorer.exe",
          "C:\\Windows\\SysWOW64\\explorer.exe"
        ]
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Persistence Via Excel Add-in - Registry",
    "id": 2053,
    "status": "experimental",
    "description": "Detect potential persistence via the creation of an excel add-in (XLL) file to make it run automatically when Excel is started.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/4ae9580a1a8772db87a1b6cdb0d03e5af231e966/atomics/T1137.006/T1137.006.md",
      "https://labs.withsecure.com/publications/add-in-opportunities-for-office-persistence"
    ],
    "author": "frack113",
    "date": "2023/01/15",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1137.006"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "Software\\Microsoft\\Office\\",
        "TargetObject|endswith": "\\Excel\\Options",
        "Details|startswith": "/R ",
        "Details|endswith": ".xll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Attachment Manager Settings Associations Tamper",
    "id": 2054,
    "status": "experimental",
    "description": "Detects tampering with attachment manager settings policies associations to lower the default file type risks (See reference for more information)",
    "references": [
      "https://support.microsoft.com/en-us/topic/information-about-the-attachment-manager-in-microsoft-windows-c48a4dcd-8de5-2af5-ee9b-cd795ae42738",
      "https://www.virustotal.com/gui/file/2bcd5702a7565952c44075ac6fb946c7780526640d1264f692c7664c02c68465"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_main": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Associations\\"
      },
      "selection_value_default_file_type_rsik": {
        "TargetObject|endswith": "\\DefaultFileTypeRisk",
        "Details": "DWORD (0x00006152)"
      },
      "selection_value_low_risk_filetypes": {
        "TargetObject|endswith": "\\LowRiskFileTypes",
        "Details|contains": [
          ".zip;",
          ".rar;",
          ".exe;",
          ".bat;",
          ".com;",
          ".cmd;",
          ".reg;",
          ".msi;",
          ".htm;",
          ".html;"
        ]
      },
      "condition": "selection_main and 1 of selection_value_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Attachment Manager Settings Attachments Tamper",
    "id": 2055,
    "status": "experimental",
    "description": "Detects tampering with attachment manager settings policies attachments (See reference for more information)",
    "references": [
      "https://support.microsoft.com/en-us/topic/information-about-the-attachment-manager-in-microsoft-windows-c48a4dcd-8de5-2af5-ee9b-cd795ae42738",
      "https://www.virustotal.com/gui/file/2bcd5702a7565952c44075ac6fb946c7780526640d1264f692c7664c02c68465"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_main": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Attachments\\"
      },
      "selection_value_hide_zone_info": {
        "TargetObject|endswith": "\\HideZoneInfoOnProperties",
        "Details": "DWORD (0x00000001)"
      },
      "selection_value_save_zone_info": {
        "TargetObject|endswith": "\\SaveZoneInformation",
        "Details": "DWORD (0x00000002)"
      },
      "selection_value_scan_with_av": {
        "TargetObject|endswith": "\\ScanWithAntiVirus",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection_main and 1 of selection_value_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell as a Service in Registry",
    "id": 2056,
    "status": "test",
    "description": "Detects that a powershell code is written to the registry as a service.",
    "references": [
      "https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse"
    ],
    "author": "oscd.community, Natalia Shornikova",
    "date": "2020/10/06",
    "modified": "2023/08/17",
    "tags": [
      "attack.execution",
      "attack.t1569.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Services\\",
        "TargetObject|endswith": "\\ImagePath",
        "Details|contains": [
          "powershell",
          "pwsh"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "PowerShell Script Execution Policy Enabled",
    "id": 2057,
    "related": [
      {
        "id": "fad91067-08c5-4d1a-8d8c-d96a21b37814",
        "type": "derived"
      }
    ],
    "status": "experimental",
    "description": "Detects the enabling of the PowerShell script execution policy. Once enabled, this policy allows scripts to be executed.",
    "references": [
      "https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.PowerShell::EnableScripts"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), Thurein Oo",
    "date": "2023/10/18",
    "tags": [
      "attack.execution"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Policies\\Microsoft\\Windows\\PowerShell\\EnableScripts",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Likely"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Potential PowerShell Execution Policy Tampering",
    "id": 2058,
    "related": [
      {
        "id": "cf2e938e-9a3e-4fe8-a347-411642b28a9f",
        "type": "similar"
      },
      {
        "id": "87e3c4e8-a6a8-4ad9-bb4f-46e7ff99a180",
        "type": "similar"
      },
      {
        "id": "61d0475c-173f-4844-86f7-f3eebae1c66b",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to the PowerShell execution policy in order to bypass signing requirements for script execution",
    "references": [
      "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.3"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/11",
    "modified": "2023/12/14",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": [
          "\\ShellIds\\Microsoft.PowerShell\\ExecutionPolicy",
          "\\Policies\\Microsoft\\Windows\\PowerShell\\ExecutionPolicy"
        ],
        "Details|contains": [
          "Bypass",
          "Unrestricted"
        ]
      },
      "filter_main_svchost": {
        "Image|contains": [
          ":\\Windows\\System32\\",
          ":\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Powershell In Registry Run Keys",
    "id": 2059,
    "status": "experimental",
    "description": "Detects potential PowerShell commands or code within registry run keys",
    "references": [
      "https://github.com/frack113/atomic-red-team/blob/a9051c38de8a5320b31c7039efcbd3b56cf2d65a/atomics/T1547.001/T1547.001.md#atomic-test-9---systembc-malware-as-a-service-registry",
      "https://www.trendmicro.com/en_us/research/22/j/lv-ransomware-exploits-proxyshell-in-attack.html"
    ],
    "author": "frack113, Florian Roth (Nextron Systems)",
    "date": "2022/03/17",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Software\\Microsoft\\Windows\\CurrentVersion\\Run",
        "Details|contains": [
          "powershell",
          "pwsh ",
          "FromBase64String",
          ".DownloadFile(",
          ".DownloadString(",
          " -w hidden ",
          " -w 1 ",
          "-windowstyle hidden",
          "-window hidden",
          " -nop ",
          " -encodedcommand ",
          "-ExecutionPolicy Bypass",
          "Invoke-Expression",
          "IEX (",
          "Invoke-Command",
          "ICM -",
          "Invoke-WebRequest",
          "IWR ",
          " -noni ",
          " -noninteractive "
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate admin or third party scripts. Baseline according to your environment"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "PowerShell Logging Disabled Via Registry Key Tampering",
    "id": 2060,
    "status": "experimental",
    "description": "Detects changes to the registry for the currently logged-in user. In order to disable PowerShell module logging, script block logging or transcription and script execution logging",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-32---windows-powershell-logging-disabled"
    ],
    "author": "frack113",
    "date": "2022/04/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Microsoft\\Windows\\PowerShell\\",
          "\\Microsoft\\PowerShellCore\\"
        ],
        "TargetObject|endswith": [
          "\\ModuleLogging\\EnableModuleLogging",
          "\\ScriptBlockLogging\\EnableScriptBlockLogging",
          "\\ScriptBlockLogging\\EnableScriptBlockInvocationLogging",
          "\\Transcription\\EnableTranscripting",
          "\\Transcription\\EnableInvocationHeader",
          "\\EnableScripts"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Provisioning Registry Key Abuse For Binary Proxy Execution - REG",
    "id": 2061,
    "related": [
      {
        "id": "7f5d1c9a-3e83-48df-95a7-2b98aae6c13c",
        "type": "similar"
      },
      {
        "id": "f9999590-1f94-4a34-a91e-951e47bedefd",
        "type": "similar"
      },
      {
        "id": "2a4b3e61-9d22-4e4a-b60f-6e8f0cde6f25",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects potential abuse of the provisioning registry key for indirect command execution through \"Provlaunch.exe\".",
    "references": [
      "https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/",
      "https://twitter.com/0gtweet/status/1674399582162153472"
    ],
    "author": "Swachchhanda Shrawan Poudel",
    "date": "2023/08/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows",
      "definition": "Requirements: The registry key \"\\SOFTWARE\\Microsoft\\Provisioning\\Commands\\\" and its subkey must be monitored"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Provisioning\\Commands\\"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Usage of Renamed Sysinternals Tools - RegistrySet",
    "id": 2062,
    "related": [
      {
        "id": "25ffa65d-76d8-4da5-a832-3f2b0136e133",
        "type": "derived"
      },
      {
        "id": "f50f3c09-557d-492d-81db-9064a8d4e211",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects non-sysinternals tools setting the \"accepteula\" key which normally is set on sysinternals tool execution",
    "references": [
      "Internal Research"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/08/24",
    "modified": "2023/08/17",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\PsExec",
          "\\ProcDump",
          "\\Handle",
          "\\LiveKd",
          "\\Process Explorer",
          "\\PsLoglist",
          "\\PsPasswd",
          "\\Active Directory Explorer"
        ],
        "TargetObject|endswith": "\\EulaAccepted"
      },
      "filter_main_image_names": {
        "Image|endswith": [
          "\\PsExec.exe",
          "\\PsExec64.exe",
          "\\procdump.exe",
          "\\procdump64.exe",
          "\\handle.exe",
          "\\handle64.exe",
          "\\livekd.exe",
          "\\livekd64.exe",
          "\\procexp.exe",
          "\\procexp64.exe",
          "\\psloglist.exe",
          "\\psloglist64.exe",
          "\\pspasswd.exe",
          "\\pspasswd64.exe",
          "\\ADExplorer.exe",
          "\\ADExplorer64.exe"
        ]
      },
      "filter_optional_null": {
        "Image": null
      },
      "condition": "selection and not 1 of filter_main_* and not 1 of filter_optional_*"
    },
    "falsepositives": [
      "Unlikely"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "ETW Logging Disabled For rpcrt4.dll",
    "id": 2063,
    "status": "experimental",
    "description": "Detects changes to the \"ExtErrorInformation\" key in order to disable ETW logging for rpcrt4.dll",
    "references": [
      "http://redplait.blogspot.com/2020/07/whats-wrong-with-etw.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/09",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Microsoft\\Windows NT\\Rpc\\ExtErrorInformation",
        "Details": [
          "DWORD (0x00000000)",
          "DWORD (0x00000002)"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "ScreenSaver Registry Key Set",
    "id": 2064,
    "status": "experimental",
    "description": "Detects registry key established after masqueraded .scr file execution using Rundll32 through desk.cpl",
    "references": [
      "https://twitter.com/VakninHai/status/1517027824984547329",
      "https://twitter.com/pabraeken/status/998627081360695297",
      "https://jstnk9.github.io/jstnk9/research/InstallScreenSaver-SCR-files"
    ],
    "author": "Jose Luis Sanchez Martinez (@Joseliyo_Jstnk)",
    "date": "2022/05/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218.011"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\rundll32.exe"
      },
      "registry": {
        "TargetObject|contains": "\\Control Panel\\Desktop\\SCRNSAVE.EXE",
        "Details|endswith": ".scr"
      },
      "filter": {
        "Details|contains": [
          "C:\\Windows\\System32\\",
          "C:\\Windows\\SysWOW64\\"
        ]
      },
      "condition": "selection and registry and not filter"
    },
    "falsepositives": [
      "Legitimate use of screen saver"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ServiceDll Hijack",
    "id": 2065,
    "status": "experimental",
    "description": "Detects changes to the \"ServiceDLL\" value related to a service in the registry. This is often used as a method of persistence.",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md#atomic-test-4---tinyturla-backdoor-service-w64time",
      "https://www.hexacorn.com/blog/2013/09/19/beyond-good-ol-run-key-part-4/"
    ],
    "author": "frack113",
    "date": "2022/02/04",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1543.003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\",
        "TargetObject|endswith": "\\Parameters\\ServiceDll"
      },
      "filter_printextensionmanger": {
        "Details": "C:\\Windows\\system32\\spool\\drivers\\x64\\3\\PrintConfig.dll"
      },
      "filter_domain_controller": {
        "Image": "C:\\Windows\\system32\\lsass.exe",
        "TargetObject|endswith": "\\CurrentControlSet\\Services\\NTDS\\Parameters\\ServiceDll",
        "Details": "%%systemroot%%\\system32\\ntdsa.dll"
      },
      "filter_poqexec": {
        "Image": "C:\\Windows\\System32\\poqexec.exe"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Administrative scripts",
      "Installation of a service"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "ETW Logging Disabled For SCM",
    "id": 2066,
    "status": "experimental",
    "description": "Detects changes to the \"TracingDisabled\" key in order to disable ETW logging for services.exe (SCM)",
    "references": [
      "http://redplait.blogspot.com/2020/07/whats-wrong-with-etw.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/09",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112",
      "attack.t1562"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "Software\\Microsoft\\Windows NT\\CurrentVersion\\Tracing\\SCM\\Regular\\TracingDisabled",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Registry Explorer Policy Modification",
    "id": 2067,
    "status": "test",
    "description": "Detects registry modifications that disable internal tools or functions in explorer (malware like Agent Tesla uses this technique)",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md"
    ],
    "author": "frack113",
    "date": "2022/03/18",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_set_1": {
        "TargetObject|endswith": [
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoLogOff",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoDesktop",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoRun",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoFind",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoControlPanel",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoFileMenu",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoClose",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoSetTaskbar",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoPropertiesMyDocuments",
          "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoTrayContextMenu"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection_set_1"
    },
    "falsepositives": [
      "Legitimate admin script"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Persistence Via New SIP Provider",
    "id": 2068,
    "status": "experimental",
    "description": "Detects when an attacker register a new SIP provider for persistence and defense evasion",
    "references": [
      "https://persistence-info.github.io/Data/codesigning.html",
      "https://github.com/gtworek/PSBits/tree/master/SIP",
      "https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/07/21",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1553.003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_root": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\",
          "\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType",
          "\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\",
          "\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType"
        ]
      },
      "selection_dll": {
        "TargetObject|contains": [
          "\\Dll",
          "\\$DLL"
        ]
      },
      "filter": {
        "Details": [
          "WINTRUST.DLL",
          "mso.dll"
        ]
      },
      "filter_poqexec": {
        "Image": "C:\\Windows\\System32\\poqexec.exe",
        "TargetObject|contains": "\\CryptSIPDll",
        "Details": "C:\\Windows\\System32\\PsfSip.dll"
      },
      "condition": "all of selection_* and not 1 of filter*"
    },
    "falsepositives": [
      "Legitimate SIP being registered by the OS or different software."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Tamper With Sophos AV Registry Keys",
    "id": 2069,
    "status": "experimental",
    "description": "Detects tamper attempts to sophos av functionality via registry key modification",
    "references": [
      "https://redacted.com/blog/bianlian-ransomware-gang-gives-it-a-go/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/02",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Sophos Endpoint Defense\\TamperProtection\\Config\\SAVEnabled",
          "\\Sophos Endpoint Defense\\TamperProtection\\Config\\SEDEnabled",
          "\\Sophos\\SAVService\\TamperProtection\\Enabled"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Some FP may occur when the feature is disabled by the AV itself, you should always investigate if the action was legitimate"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Hiding User Account Via SpecialAccounts Registry Key",
    "id": 2070,
    "related": [
      {
        "id": "8a58209c-7ae6-4027-afb0-307a78e4589a",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects modifications to the registry key \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\Userlist\" where the value is set to \"0\" in order to hide user account from being listed on the logon screen.",
    "references": [
      "https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/",
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1564.002/T1564.002.md"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems), frack113",
    "date": "2022/07/12",
    "modified": "2023/01/26",
    "tags": [
      "attack.defense_evasion",
      "attack.t1564.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "EventType": "SetValue",
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Activate Suppression of Windows Security Center Notifications",
    "id": 2071,
    "status": "experimental",
    "description": "Detect set Notification_Suppress to 1 to disable the Windows security center notification",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1112/T1112.md"
    ],
    "author": "frack113",
    "date": "2022/08/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "SOFTWARE\\Policies\\Microsoft\\Windows Defender\\UX Configuration\\Notification_Suppress",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Environment Variable Has Been Registered",
    "id": 2072,
    "status": "test",
    "description": "Detects the creation of user-specific or system-wide environment variables via the registry. Which contains suspicious commands and strings",
    "references": [
      "https://infosec.exchange/@sbousseaden/109542254124022664"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/12/20",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection_main": {
        "TargetObject|contains": "\\Environment\\"
      },
      "selection_details": [
        {
          "Details": [
            "powershell",
            "pwsh"
          ]
        },
        {
          "Details|contains": [
            "\\AppData\\Local\\Temp\\",
            "C:\\Users\\Public\\",
            "TVqQAAMAAAAEAAAA",
            "TVpQAAIAAAAEAA8A",
            "TVqAAAEAAAAEABAA",
            "TVoAAAAAAAAAAAAA",
            "TVpTAQEAAAAEAAAA",
            "SW52b2tlL",
            "ludm9rZS",
            "JbnZva2Ut",
            "SQBuAHYAbwBrAGUALQ",
            "kAbgB2AG8AawBlAC0A",
            "JAG4AdgBvAGsAZQAtA"
          ]
        },
        {
          "Details|startswith": [
            "SUVY",
            "SQBFAF",
            "SQBuAH",
            "cwBhA",
            "aWV4",
            "aQBlA",
            "R2V0",
            "dmFy",
            "dgBhA",
            "dXNpbm",
            "H4sIA",
            "Y21k",
            "cABhAH",
            "Qzpc",
            "Yzpc"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Keyboard Layout Load",
    "id": 2073,
    "status": "test",
    "description": "Detects the keyboard preload installation with a suspicious keyboard layout, e.g. Chinese, Iranian or Vietnamese layout load in user session on systems maintained by US staff only",
    "references": [
      "https://renenyffenegger.ch/notes/Windows/registry/tree/HKEY_CURRENT_USER/Keyboard-Layout/Preload/index",
      "https://github.com/SwiftOnSecurity/sysmon-config/pull/92/files"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2019/10/12",
    "modified": "2023/08/17",
    "tags": [
      "attack.resource_development",
      "attack.t1588.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows",
      "definition": "Requirements: Sysmon config that monitors \\Keyboard Layout\\Preload subkey of the HKLU hives - see https://github.com/SwiftOnSecurity/sysmon-config/pull/92/files"
    },
    "detection": {
      "selection_registry": {
        "TargetObject|contains": [
          "\\Keyboard Layout\\Preload\\",
          "\\Keyboard Layout\\Substitutes\\"
        ],
        "Details|contains": [
          "00000429",
          "00050429",
          "0000042a"
        ]
      },
      "condition": "selection_registry"
    },
    "falsepositives": [
      "Administrators or users that actually use the selected keyboard layouts (heavily depends on the organisation's user base)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential PendingFileRenameOperations Tamper",
    "id": 2074,
    "status": "test",
    "description": "Detect changes to the \"PendingFileRenameOperations\" registry key from uncommon or suspicious images lcoations to stage currently used files for rename after reboot.",
    "references": [
      "https://any.run/report/3ecd4763ffc944fdc67a9027e459cd4f448b1a8d1b36147977afaf86bbf2a261/64b0ba45-e7ce-423b-9a1d-5b4ea59521e6",
      "https://devblogs.microsoft.com/scripting/determine-pending-reboot-statuspowershell-style-part-1/",
      "https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc960241(v=technet.10)?redirectedfrom=MSDN",
      "https://www.trendmicro.com/en_us/research/21/j/purplefox-adds-new-backdoor-that-uses-websockets.html",
      "https://www.trendmicro.com/en_us/research/19/i/purple-fox-fileless-malware-with-rookit-component-delivered-by-rig-exploit-kit-now-abuses-powershell.html"
    ],
    "author": "frack113",
    "date": "2023/01/27",
    "tags": [
      "attack.defense_evasion",
      "attack.t1036.003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_main": {
        "EventType": "SetValue",
        "TargetObject|contains": "\\CurrentControlSet\\Control\\Session Manager\\PendingFileRenameOperations"
      },
      "selection_susp_paths": {
        "Image|contains": [
          "\\AppData\\Local\\Temp\\",
          "\\Users\\Public\\"
        ]
      },
      "selection_susp_images": {
        "Image|endswith": [
          "\\reg.exe",
          "\\regedit.exe"
        ]
      },
      "condition": "selection_main and 1 of selection_susp_*"
    },
    "falsepositives": [
      "Installers and updaters may set currently in use files for rename after a reboot."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Suspicious Printer Driver Empty Manufacturer",
    "id": 2075,
    "status": "test",
    "description": "Detects a suspicious printer driver installation with an empty Manufacturer value",
    "references": [
      "https://twitter.com/SBousseaden/status/1410545674773467140"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2020/07/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.privilege_escalation",
      "attack.t1574",
      "cve.2021.1675"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains|all": [
          "\\Control\\Print\\Environments\\Windows x64\\Drivers",
          "\\Manufacturer"
        ],
        "Details": "(Empty)"
      },
      "filter_cutepdf": {
        "TargetObject|contains": "\\CutePDF Writer v4.0\\"
      },
      "filter_vnc": {
        "TargetObject|contains": [
          "\\VNC Printer (PS)\\",
          "\\VNC Printer (UD)\\"
        ]
      },
      "filter_pdf24": {
        "TargetObject|contains": "\\Version-3\\PDF24\\"
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Alerts on legitimate printer drivers that do not set any more details in the Manufacturer value"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Registry Persistence via Explorer Run Key",
    "id": 2076,
    "status": "test",
    "description": "Detects a possible persistence mechanism using RUN key for Windows Explorer and pointing to a suspicious folder",
    "references": [
      "https://researchcenter.paloaltonetworks.com/2018/07/unit42-upatre-continues-evolve-new-anti-analysis-techniques/"
    ],
    "author": "Florian Roth (Nextron Systems), oscd.community",
    "date": "2018/07/18",
    "modified": "2023/12/11",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
        "Details|contains": [
          ":\\$Recycle.bin\\",
          ":\\ProgramData\\",
          ":\\Temp\\",
          ":\\Users\\Default\\",
          ":\\Users\\Public\\",
          ":\\Windows\\Temp\\",
          "\\AppData\\Local\\Temp\\"
        ]
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "New RUN Key Pointing to Suspicious Folder",
    "id": 2077,
    "status": "experimental",
    "description": "Detects suspicious new RUN key element pointing to an executable in a suspicious folder",
    "references": [
      "https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html"
    ],
    "author": "Florian Roth (Nextron Systems), Markus Neis, Sander Wiebing",
    "date": "2018/08/25",
    "modified": "2023/12/11",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_target": {
        "TargetObject|contains": [
          "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\",
          "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\"
        ]
      },
      "selection_details": [
        {
          "Details|contains": [
            ":\\$Recycle.bin\\",
            ":\\Temp\\",
            ":\\Users\\Default\\",
            ":\\Users\\Desktop\\",
            ":\\Users\\Public\\",
            ":\\Windows\\Temp\\",
            "\\AppData\\Local\\Temp\\",
            "%temp%\\",
            "%tmp%\\"
          ]
        },
        {
          "Details|startswith": [
            "%Public%\\",
            "wscript",
            "cscript"
          ]
        }
      ],
      "condition": "all of selection_*"
    },
    "fields": [
      "Image"
    ],
    "falsepositives": [
      "Software using weird folders for updates"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Suspicious Service Installed",
    "id": 2078,
    "status": "test",
    "description": "Detects installation of NalDrv or PROCEXP152 services via registry-keys to non-system32 folders.\nBoth services are used in the tool Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs), which uses KDU (https://github.com/hfiref0x/KDU)\n",
    "references": [
      "https://web.archive.org/web/20200419024230/https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/"
    ],
    "author": "xknow (@xknow_infosec), xorxes (@xor_xes)",
    "date": "2019/04/08",
    "modified": "2023/08/17",
    "tags": [
      "attack.t1562.001",
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject": [
          "HKLM\\System\\CurrentControlSet\\Services\\NalDrv\\ImagePath",
          "HKLM\\System\\CurrentControlSet\\Services\\PROCEXP152\\ImagePath"
        ]
      },
      "filter": {
        "Image|endswith": [
          "\\procexp64.exe",
          "\\procexp.exe",
          "\\procmon64.exe",
          "\\procmon.exe",
          "\\handle.exe",
          "\\handle64.exe"
        ],
        "Details|contains": "\\WINDOWS\\system32\\Drivers\\PROCEXP152.SYS"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Other legimate tools using this service names and drivers. Note - clever attackers may easily bypass this detection by just renaming the services. Therefore just Medium-level and don't rely on it."
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Modify User Shell Folders Startup Value",
    "id": 2079,
    "status": "experimental",
    "description": "Detect modification of the startup key to a path where a payload could be stored to be launched during startup",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/9e5b12c4912c07562aec7500447b11fa3e17e254/atomics/T1547.001/T1547.001.md"
    ],
    "author": "frack113",
    "date": "2022/10/01",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1547.001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders",
        "TargetObject|endswith": "Startup"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Enable LM Hash Storage",
    "id": 2080,
    "related": [
      {
        "id": "98dedfdd-8333-49d4-9f23-d7018cccae53",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects changes to the \"NoLMHash\" registry value in order to allow Windows to store LM Hashes.\nBy setting this registry value to \"0\" (DWORD), Windows will be allowed to store a LAN manager hash of your password in Active Directory and local SAM databases.\n",
    "references": [
      "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a",
      "https://learn.microsoft.com/en-us/troubleshoot/windows-server/windows-security/prevent-windows-store-lm-hash-password",
      "https://www.sans.org/blog/protecting-privileged-domain-accounts-lm-hashes-the-good-the-bad-and-the-ugly/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/12/15",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "System\\CurrentControlSet\\Control\\Lsa\\NoLMHash",
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Scheduled TaskCache Change by Uncommon Program",
    "id": 2081,
    "status": "experimental",
    "description": "Monitor the creation of a new key under 'TaskCache' when a new scheduled task is registered by a process that is not svchost.exe, which is suspicious",
    "references": [
      "https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/",
      "https://labs.f-secure.com/blog/scheduled-task-tampering/"
    ],
    "author": "Syed Hasan (@syedhasan009)",
    "date": "2021/06/18",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1053",
      "attack.t1053.005"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\"
      },
      "filter": {
        "TargetObject|contains": [
          "Microsoft\\Windows\\UpdateOrchestrator",
          "Microsoft\\Windows\\SoftwareProtectionPlatform\\SvcRestartTask\\Index",
          "Microsoft\\Windows\\Flighting\\OneSettings\\RefreshCache\\Index"
        ]
      },
      "filter_tiworker": {
        "Image|startswith": "C:\\Windows\\",
        "Image|endswith": "\\TiWorker.exe"
      },
      "filter_svchost": {
        "Image": "C:\\WINDOWS\\system32\\svchost.exe"
      },
      "filter_ngen": {
        "Image|startswith": "C:\\Windows\\Microsoft.NET\\Framework",
        "Image|endswith": "\\ngen.exe",
        "TargetObject|contains": [
          "\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\{B66B135D-DA06-4FC4-95F8-7458E1D10129}",
          "\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\Microsoft\\Windows\\.NET Framework\\.NET Framework NGEN"
        ]
      },
      "filter_office_click_to_run": {
        "Image": [
          "C:\\Program Files\\Microsoft Office\\root\\Integration\\Integrator.exe",
          "C:\\Program Files (x86)\\Microsoft Office\\root\\Integration\\Integrator.exe"
        ]
      },
      "filter_msiexec": {
        "Image": "C:\\Windows\\System32\\msiexec.exe"
      },
      "filter_dropbox_updater": {
        "Image": [
          "C:\\Program Files (x86)\\Dropbox\\Update\\DropboxUpdate.exe",
          "C:\\Program Files\\Dropbox\\Update\\DropboxUpdate.exe"
        ]
      },
      "filter_explorer": {
        "Image": "C:\\Windows\\explorer.exe",
        "TargetObject|contains": "\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor\\"
      },
      "filter_system": {
        "Image": "System"
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Potential Registry Persistence Attempt Via Windows Telemetry",
    "id": 2082,
    "related": [
      {
        "id": "4e8d5fd3-c959-441f-a941-f73d0cdcdca5",
        "type": "obsoletes"
      }
    ],
    "status": "test",
    "description": "Detects potential persistence behavior using the windows telemetry registry key.\nWindows telemetry makes use of the binary CompatTelRunner.exe to run a variety of commands and perform the actual telemetry collections.\nThis binary was created to be easily extensible, and to that end, it relies on the registry to instruct on which commands to run.\nThe problem is, it will run any arbitrary command without restriction of location or type.\n",
    "references": [
      "https://www.trustedsec.com/blog/abusing-windows-telemetry-for-persistence/"
    ],
    "author": "Lednyov Alexey, oscd.community, Sreeman",
    "date": "2020/10/16",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1053.005"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows",
      "definition": "Requirements: Sysmon config that monitors \\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\TelemetryController subkey of the HKLM hives"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\TelemetryController\\",
        "TargetObject|endswith": "\\Command",
        "Details|contains": [
          ".bat",
          ".bin",
          ".cmd",
          ".dat",
          ".dll",
          ".exe",
          ".hta",
          ".jar",
          ".js",
          ".msi",
          ".ps",
          ".sh",
          ".vb"
        ]
      },
      "filter_main_generic": {
        "Details|contains": [
          "\\system32\\CompatTelRunner.exe",
          "\\system32\\DeviceCensus.exe"
        ]
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "RDP Sensitive Settings Changed to Zero",
    "id": 2083,
    "related": [
      {
        "id": "3f6b7b62-61aa-45db-96bd-9c31b36b653c",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects tampering of RDP Terminal Service/Server sensitive settings.\nSuch as allowing unauthorized users access to a system via the 'fAllowUnsolicited' or enabling RDP via 'fDenyTSConnections', etc.\n",
    "references": [
      "https://web.archive.org/web/20200929062532/https://blog.menasec.net/2019/02/threat-hunting-rdp-hijacking-via.html",
      "http://woshub.com/rds-shadow-how-to-connect-to-a-user-session-in-windows-server-2012-r2/",
      "https://twitter.com/SagieSec/status/1469001618863624194?t=HRf0eA0W1YYzkTSHb-Ky1A&s=03",
      "https://threathunterplaybook.com/hunts/windows/190407-RegModEnableRDPConnections/notebook.html",
      "https://bazaar.abuse.ch/sample/6f3aa9362d72e806490a8abce245331030d1ab5ac77e400dd475748236a6cc81/",
      "http://etutorials.org/Microsoft+Products/microsoft+windows+server+2003+terminal+services/Chapter+6+Registry/Registry+Keys+for+Terminal+Services/",
      "https://admx.help/HKLM/SOFTWARE/Policies/Microsoft/Windows%20NT/Terminal%20Services"
    ],
    "author": "Samir Bousseaden, David ANDRE, Roberto Rodriguez @Cyb3rWard0g, Nasreddine Bencherchali",
    "date": "2022/09/29",
    "modified": "2022/11/26",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": [
          "\\fDenyTSConnections",
          "\\fSingleSessionPerUser",
          "\\UserAuthentication"
        ],
        "Details": "DWORD (0x00000000)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Some of the keys mentioned here could be modified by an administrator while setting group policy (it should be investigated either way)"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "RDP Sensitive Settings Changed",
    "id": 2084,
    "related": [
      {
        "id": "171b67e1-74b4-460e-8d55-b331f3e32d67",
        "type": "obsoletes"
      },
      {
        "id": "41904ebe-d56c-4904-b9ad-7a77bdf154b3",
        "type": "obsoletes"
      },
      {
        "id": "a2863fbc-d5cb-48d5-83fb-d976d4b1743b",
        "type": "similar"
      }
    ],
    "status": "test",
    "description": "Detects tampering of RDP Terminal Service/Server sensitive settings.\nSuch as allowing unauthorized users access to a system via the 'fAllowUnsolicited' or enabling RDP via 'fDenyTSConnections'...etc\n",
    "references": [
      "https://web.archive.org/web/20200929062532/https://blog.menasec.net/2019/02/threat-hunting-rdp-hijacking-via.html",
      "http://woshub.com/rds-shadow-how-to-connect-to-a-user-session-in-windows-server-2012-r2/",
      "https://twitter.com/SagieSec/status/1469001618863624194?t=HRf0eA0W1YYzkTSHb-Ky1A&s=03",
      "https://threathunterplaybook.com/hunts/windows/190407-RegModEnableRDPConnections/notebook.html",
      "https://bazaar.abuse.ch/sample/6f3aa9362d72e806490a8abce245331030d1ab5ac77e400dd475748236a6cc81/",
      "http://etutorials.org/Microsoft+Products/microsoft+windows+server+2003+terminal+services/Chapter+6+Registry/Registry+Keys+for+Terminal+Services/",
      "https://admx.help/HKLM/SOFTWARE/Policies/Microsoft/Windows%20NT/Terminal%20Services",
      "https://blog.sekoia.io/darkgate-internals/",
      "https://github.com/redcanaryco/atomic-red-team/blob/02c7d02fe1f1feb0fc7944550408ea8224273994/atomics/T1112/T1112.md#atomic-test-63---disable-remote-desktop-anti-alias-setting-through-registry",
      "https://github.com/redcanaryco/atomic-red-team/blob/02c7d02fe1f1feb0fc7944550408ea8224273994/atomics/T1112/T1112.md#atomic-test-64---disable-remote-desktop-security-settings-through-registry"
    ],
    "author": "Samir Bousseaden, David ANDRE, Roberto Rodriguez @Cyb3rWard0g, Nasreddine Bencherchali",
    "date": "2022/08/06",
    "modified": "2024/02/08",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection_shadow": {
        "TargetObject|contains": [
          "\\Control\\Terminal Server\\",
          "\\Windows NT\\Terminal Services\\"
        ],
        "TargetObject|endswith": "\\Shadow",
        "Details": [
          "DWORD (0x00000001)",
          "DWORD (0x00000002)",
          "DWORD (0x00000003)",
          "DWORD (0x00000004)"
        ]
      },
      "selection_terminal_services_key": {
        "TargetObject|contains": [
          "\\Control\\Terminal Server\\",
          "\\Windows NT\\Terminal Services\\"
        ],
        "TargetObject|endswith": [
          "\\DisableRemoteDesktopAntiAlias",
          "\\DisableSecuritySettings",
          "\\fAllowUnsolicited",
          "\\fAllowUnsolicitedFullControl"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "selection_tamper_only": {
        "TargetObject|contains": [
          "\\Control\\Terminal Server\\InitialProgram",
          "\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\InitialProgram",
          "\\services\\TermService\\Parameters\\ServiceDll",
          "\\Windows NT\\Terminal Services\\InitialProgram"
        ]
      },
      "condition": "selection_shadow or selection_terminal_services_key or selection_tamper_only"
    },
    "falsepositives": [
      "Some of the keys mentioned here could be modified by an administrator while setting group policy (it should be investigated either way)"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Set TimeProviders DllName",
    "id": 2085,
    "status": "experimental",
    "description": "Detects processes setting a new DLL in DllName in under HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\W32Time\\TimeProvider.\nAdversaries may abuse time providers to execute DLLs when the system boots.\nThe Windows Time service (W32Time) enables time synchronization across and within domains.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.003/T1547.003.md"
    ],
    "author": "frack113",
    "date": "2022/06/19",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.privilege_escalation",
      "attack.t1547.003"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|startswith": "HKLM\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders",
        "TargetObject|endswith": "DllName"
      },
      "filter": {
        "Details": "C:\\Windows\\SYSTEM32\\w32time.DLL"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Old TLS1.0/TLS1.1 Protocol Version Enabled",
    "id": 2086,
    "status": "experimental",
    "description": "Detects applications or users re-enabling old TLS versions by setting the \"Enabled\" value to \"1\" for the \"Protocols\" registry key.",
    "references": [
      "https://techcommunity.microsoft.com/t5/windows-it-pro-blog/tls-1-0-and-tls-1-1-soon-to-be-disabled-in-windows/ba-p/3887947"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/09/05",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.0\\",
          "\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.1\\"
        ],
        "TargetObject|endswith": "\\Enabled",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate enabling of the old tls versions due to incompatibility"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "COM Hijacking via TreatAs",
    "id": 2087,
    "status": "experimental",
    "description": "Detect modification of TreatAs key to enable \"rundll32.exe -sta\" command",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1546.015/T1546.015.md",
      "https://www.youtube.com/watch?v=3gz1QmiMhss&t=1251s"
    ],
    "author": "frack113",
    "date": "2022/08/28",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1546.015"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "TreatAs\\(Default)"
      },
      "filter_office": {
        "Image|startswith": "C:\\Program Files\\Common Files\\Microsoft Shared\\ClickToRun\\",
        "Image|endswith": "\\OfficeClickToRun.exe"
      },
      "filter_office2": {
        "Image": "C:\\Program Files (x86)\\Microsoft Office\\root\\integration\\integrator.exe"
      },
      "filter_svchost": {
        "Image": "C:\\Windows\\system32\\svchost.exe"
      },
      "filter_misexec": {
        "Image": [
          "C:\\Windows\\system32\\msiexec.exe",
          "C:\\Windows\\SysWOW64\\msiexec.exe"
        ]
      },
      "condition": "selection and not 1 of filter_*"
    },
    "falsepositives": [
      "Legitimate use"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Potential Signing Bypass Via Windows Developer Features - Registry",
    "id": 2088,
    "related": [
      {
        "id": "a383dec4-deec-4e6e-913b-ed9249670848",
        "type": "similar"
      }
    ],
    "status": "experimental",
    "description": "Detects when the enablement of developer features such as \"Developer Mode\" or \"Application Sideloading\". Which allows the user to install untrusted packages.",
    "references": [
      "https://twitter.com/malmoeb/status/1560536653709598721",
      "https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/01/12",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": [
          "\\Microsoft\\Windows\\CurrentVersion\\AppModelUnlock",
          "\\Policies\\Microsoft\\Windows\\Appx\\"
        ],
        "TargetObject|endswith": [
          "\\AllowAllTrustedApps",
          "\\AllowDevelopmentWithoutDevLicense"
        ],
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass via Event Viewer",
    "id": 2089,
    "status": "experimental",
    "description": "Detects UAC bypass method using Windows event viewer",
    "references": [
      "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/",
      "https://www.hybrid-analysis.com/sample/e122bc8bf291f15cab182a5d2d27b8db1e7019e4e96bb5cdbd1dfe7446f3f51f?environmentId=100"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2017/03/19",
    "modified": "2023/09/28",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "car.2019-04-001"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\mscfile\\shell\\open\\command"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass via Sdclt",
    "id": 2090,
    "status": "experimental",
    "description": "Detects the pattern of UAC Bypass using registry key manipulation of sdclt.exe (e.g. UACMe 53)",
    "references": [
      "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/",
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Omer Yampel, Christian Burkard (Nextron Systems)",
    "date": "2017/03/17",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002",
      "car.2019-04-001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection1": {
        "TargetObject|endswith": "Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand"
      },
      "selection2": {
        "TargetObject|endswith": "Software\\Classes\\Folder\\shell\\open\\command\\SymbolicLinkValue",
        "Details|re": "-1[0-9]{3}\\\\Software\\\\Classes\\\\"
      },
      "condition": "1 of selection*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Abusing Winsat Path Parsing - Registry",
    "id": 2091,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/30",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "\\Root\\InventoryApplicationFile\\winsat.exe|",
        "TargetObject|endswith": "\\LowerCaseLongPath",
        "Details|startswith": "c:\\users\\",
        "Details|endswith": "\\appdata\\local\\temp\\system32\\winsat.exe"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "UAC Bypass Using Windows Media Player - Registry",
    "id": 2092,
    "status": "test",
    "description": "Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)",
    "references": [
      "https://github.com/hfiref0x/UACME"
    ],
    "author": "Christian Burkard (Nextron Systems)",
    "date": "2021/08/23",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.privilege_escalation",
      "attack.t1548.002"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Compatibility Assistant\\Store\\C:\\Program Files\\Windows Media Player\\osk.exe",
        "Details": "Binary Data"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "VBScript Payload Stored in Registry",
    "id": 2093,
    "status": "experimental",
    "description": "Detects VBScript content stored into registry keys as seen being used by UNC2452 group",
    "references": [
      "https://www.microsoft.com/security/blog/2021/03/04/goldmax-goldfinder-sibot-analyzing-nobelium-malware/"
    ],
    "author": "Florian Roth (Nextron Systems)",
    "date": "2021/03/05",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.001"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|contains": "Software\\Microsoft\\Windows\\CurrentVersion",
        "Details|contains": [
          "vbscript:",
          "jscript:",
          "mshtml,",
          "RunHTMLApplication",
          "Execute(",
          "CreateObject",
          "window.close"
        ]
      },
      "filter": {
        "TargetObject|contains": "Software\\Microsoft\\Windows\\CurrentVersion\\Run"
      },
      "filter_dotnet": {
        "Image|endswith": "\\msiexec.exe",
        "TargetObject|contains": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Installer\\UserData\\",
        "Details|contains": [
          "\\Microsoft.NET\\Primary Interop Assemblies\\Microsoft.mshtml.dll",
          "<\\Microsoft.mshtml,fileVersion=",
          "_mshtml_dll_",
          "<\\Microsoft.mshtml,culture="
        ]
      },
      "condition": "selection and not 1 of filter*"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Execution DLL of Choice Using WAB.EXE",
    "id": 2094,
    "status": "test",
    "description": "This rule detects that the path to the DLL written in the registry is different from the default one. Launched WAB.exe tries to load the DLL from Registry.",
    "references": [
      "https://github.com/LOLBAS-Project/LOLBAS/blob/8283d8d91552213ded165fd36deb6cb9534cb443/yml/OSBinaries/Wab.yml",
      "https://twitter.com/Hexacorn/status/991447379864932352",
      "http://www.hexacorn.com/blog/2018/05/01/wab-exe-as-a-lolbin/"
    ],
    "author": "oscd.community, Natalia Shornikova",
    "date": "2020/10/13",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1218"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Software\\Microsoft\\WAB\\DLLPath"
      },
      "filter": {
        "Details": "%CommonProgramFiles%\\System\\wab32.dll"
      },
      "condition": "selection and not filter"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Wdigest Enable UseLogonCredential",
    "id": 2095,
    "status": "test",
    "description": "Detects potential malicious modification of the property value of UseLogonCredential from HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest to enable clear-text credentials",
    "references": [
      "https://threathunterplaybook.com/hunts/windows/190510-RegModWDigestDowngrade/notebook.html",
      "https://support.microsoft.com/en-us/topic/microsoft-security-advisory-update-to-improve-credentials-protection-and-management-may-13-2014-93434251-04ac-b7f3-52aa-9f951c14b649",
      "https://github.com/redcanaryco/atomic-red-team/blob/73fcfa1d4863f6a4e17f90e54401de6e30a312bb/atomics/T1112/T1112.md#atomic-test-3---modify-registry-to-store-logon-credentials"
    ],
    "author": "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)",
    "date": "2019/09/12",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "WDigest\\UseLogonCredential",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  },
  {
    "title": "Winget Admin Settings Modification",
    "id": 2096,
    "status": "experimental",
    "description": "Detects changes to the AppInstaller (winget) admin settings. Such as enabling local manifest installations or disabling installer hash checks",
    "references": [
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget",
      "https://github.com/microsoft/winget-cli/blob/02d2f93807c9851d73eaacb4d8811a76b64b7b01/src/AppInstallerCommonCore/Public/winget/AdminSettings.h#L13"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/17",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "Image|endswith": "\\winget.exe",
        "TargetObject|startswith": "\\REGISTRY\\A\\",
        "TargetObject|endswith": "\\LocalState\\admin_settings"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "The event doesn't contain information about the type of change. False positives are expected with legitimate changes"
    ],
    "level": "low",
    "enable": true
  },
  {
    "title": "Enable Local Manifest Installation With Winget",
    "id": 2097,
    "status": "experimental",
    "description": "Detects changes to the AppInstaller (winget) policy. Specifically the activation of the local manifest installation, which allows a user to install new packages via custom manifests.",
    "references": [
      "https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2023/04/17",
    "modified": "2023/08/17",
    "tags": [
      "attack.defense_evasion",
      "attack.persistence"
    ],
    "logsource": {
      "product": "windows",
      "category": "registry_set"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\AppInstaller\\EnableLocalManifestFiles",
        "Details": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Administrators or developers might enable this for testing purposes or to install custom private packages"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Winlogon AllowMultipleTSSessions Enable",
    "id": 2098,
    "status": "experimental",
    "description": "Detects when the 'AllowMultipleTSSessions' value is enabled.\nWhich allows for multiple Remote Desktop connection sessions to be opened at once.\nThis is often used by attacker as a way to connect to an RDP session without disconnecting the other users\n",
    "references": [
      "http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html"
    ],
    "author": "Nasreddine Bencherchali (Nextron Systems)",
    "date": "2022/09/09",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.defense_evasion",
      "attack.t1112"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AllowMultipleTSSessions",
        "Details|endswith": "DWORD (0x00000001)"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Legitimate use of the multi session functionality"
    ],
    "level": "medium",
    "enable": true
  },
  {
    "title": "Winlogon Notify Key Logon Persistence",
    "id": 2099,
    "status": "test",
    "description": "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.\nWinlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.\n",
    "references": [
      "https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.004/T1547.004.md#atomic-test-3---winlogon-notify-key-logon-persistence---powershell"
    ],
    "author": "frack113",
    "date": "2021/12/30",
    "modified": "2023/08/17",
    "tags": [
      "attack.persistence",
      "attack.t1547.004"
    ],
    "logsource": {
      "category": "registry_set",
      "product": "windows"
    },
    "detection": {
      "selection": {
        "TargetObject|endswith": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\\logon",
        "Details|endswith": ".dll"
      },
      "condition": "selection"
    },
    "falsepositives": [
      "Unknown"
    ],
    "level": "high",
    "enable": true
  }
]